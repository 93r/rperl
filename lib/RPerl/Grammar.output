Conflicts:
----------
Conflict in state 150 between rule 110 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 150 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 150 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 150 between rule 110 and token OP08_STRING_CAT resolved as shift.
Conflict in state 150 between rule 110 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 150 between rule 110 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 150 between rule 110 and token OP18_TERNARY resolved as reduce.
Conflict in state 150 between rule 110 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 150 between rule 110 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 150 between rule 110 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 150 between rule 110 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 150 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 150 between rule 110 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 150 between rule 110 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 150 between rule 110 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 150 between rule 110 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 150 between rule 110 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 206 between rule 102 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 206 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 206 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 206 between rule 102 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 206 between rule 102 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 206 between rule 102 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 206 between rule 102 and token OP06_REGEX_BIND resolved as reduce.
Conflict in state 206 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 206 between rule 102 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 206 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 206 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 206 between rule 102 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 206 between rule 102 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 206 between rule 102 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 206 between rule 102 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 206 between rule 102 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 206 between rule 102 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 222 between rule 120 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 222 between rule 120 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 222 between rule 120 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 222 between rule 120 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 222 between rule 120 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 222 between rule 120 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 222 between rule 120 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 222 between rule 120 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 222 between rule 120 and token OP08_STRING_CAT resolved as shift.
Conflict in state 222 between rule 120 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 222 between rule 120 and token OP18_TERNARY resolved as shift.
Conflict in state 222 between rule 120 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 222 between rule 120 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 222 between rule 120 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 222 between rule 120 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 222 between rule 120 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 222 between rule 120 and token OP04_MATH_POW resolved as shift.
Conflict in state 251 between rule 94 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 251 between rule 94 and token OP06_REGEX_BIND resolved as reduce.
Conflict in state 251 between rule 94 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 251 between rule 94 and token OP18_TERNARY resolved as reduce.
Conflict in state 251 between rule 94 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 251 between rule 94 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 251 between rule 94 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 251 between rule 94 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 251 between rule 94 and token OP04_MATH_POW resolved as reduce.
Conflict in state 251 between rule 94 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 251 between rule 94 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 251 between rule 94 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 251 between rule 94 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 251 between rule 94 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 251 between rule 94 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 251 between rule 94 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 251 between rule 94 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 260 between rule 94 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 260 between rule 94 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 260 between rule 94 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 260 between rule 94 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 260 between rule 94 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 260 between rule 94 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 260 between rule 94 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 260 between rule 94 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 260 between rule 94 and token OP06_REGEX_BIND resolved as reduce.
Conflict in state 260 between rule 94 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 260 between rule 94 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 260 between rule 94 and token OP18_TERNARY resolved as reduce.
Conflict in state 260 between rule 94 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 260 between rule 94 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 260 between rule 94 and token OP04_MATH_POW resolved as reduce.
Conflict in state 260 between rule 94 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 260 between rule 94 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 294 between rule 106 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 294 between rule 106 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 294 between rule 106 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 294 between rule 106 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 294 between rule 106 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 294 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 294 between rule 106 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 294 between rule 106 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 294 between rule 106 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 294 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 294 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 294 between rule 106 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 294 between rule 106 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 294 between rule 106 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 294 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 294 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 294 between rule 106 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 295 between rule 117 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 295 between rule 117 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 295 between rule 117 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 295 between rule 117 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 295 between rule 117 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 295 between rule 117 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 295 between rule 117 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 295 between rule 117 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 295 between rule 117 and token OP04_MATH_POW resolved as shift.
Conflict in state 295 between rule 117 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 295 between rule 117 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 295 between rule 117 and token OP08_STRING_CAT resolved as shift.
Conflict in state 295 between rule 117 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 295 between rule 117 and token OP18_TERNARY resolved as reduce.
Conflict in state 295 between rule 117 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 295 between rule 117 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 295 between rule 117 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 296 between rule 108 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 296 between rule 108 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 296 between rule 108 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 296 between rule 108 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 296 between rule 108 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 296 between rule 108 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 296 between rule 108 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 296 between rule 108 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 296 between rule 108 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 296 between rule 108 and token OP04_MATH_POW resolved as shift.
Conflict in state 296 between rule 108 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 296 between rule 108 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 296 between rule 108 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 296 between rule 108 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 296 between rule 108 and token OP18_TERNARY resolved as reduce.
Conflict in state 296 between rule 108 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 296 between rule 108 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 297 between rule 115 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 297 between rule 115 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 297 between rule 115 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 297 between rule 115 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 297 between rule 115 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 297 between rule 115 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 297 between rule 115 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 297 between rule 115 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 297 between rule 115 and token OP04_MATH_POW resolved as shift.
Conflict in state 297 between rule 115 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 297 between rule 115 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 297 between rule 115 and token OP18_TERNARY resolved as reduce.
Conflict in state 297 between rule 115 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 297 between rule 115 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 297 between rule 115 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 297 between rule 115 and token OP08_STRING_CAT resolved as shift.
Conflict in state 297 between rule 115 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 302 between rule 114 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 302 between rule 114 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 302 between rule 114 and token OP04_MATH_POW resolved as shift.
Conflict in state 302 between rule 114 and token OP08_STRING_CAT resolved as shift.
Conflict in state 302 between rule 114 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 302 between rule 114 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 302 between rule 114 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 302 between rule 114 and token OP18_TERNARY resolved as reduce.
Conflict in state 302 between rule 114 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 302 between rule 114 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 302 between rule 114 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 302 between rule 114 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 302 between rule 114 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 302 between rule 114 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 302 between rule 114 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 302 between rule 114 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 302 between rule 114 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 303 between rule 100 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 303 between rule 100 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 303 between rule 100 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 303 between rule 100 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 303 between rule 100 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 303 between rule 100 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 303 between rule 100 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 303 between rule 100 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 303 between rule 100 and token OP04_MATH_POW resolved as shift.
Conflict in state 303 between rule 100 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 303 between rule 100 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 303 between rule 100 and token OP06_REGEX_BIND resolved as reduce.
Conflict in state 303 between rule 100 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 303 between rule 100 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 303 between rule 100 and token OP18_TERNARY resolved as reduce.
Conflict in state 303 between rule 100 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 303 between rule 100 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 304 between rule 118 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 304 between rule 118 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 304 between rule 118 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 304 between rule 118 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 304 between rule 118 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 304 between rule 118 and token OP17_LIST_RANGE resolved as error.
Conflict in state 304 between rule 118 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 304 between rule 118 and token OP04_MATH_POW resolved as shift.
Conflict in state 304 between rule 118 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 304 between rule 118 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 304 between rule 118 and token OP18_TERNARY resolved as reduce.
Conflict in state 304 between rule 118 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 304 between rule 118 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 304 between rule 118 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 304 between rule 118 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 304 between rule 118 and token OP08_STRING_CAT resolved as shift.
Conflict in state 304 between rule 118 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 305 between rule 109 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 305 between rule 109 and token OP08_STRING_CAT resolved as shift.
Conflict in state 305 between rule 109 and token OP18_TERNARY resolved as reduce.
Conflict in state 305 between rule 109 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 305 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 305 between rule 109 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 305 between rule 109 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 305 between rule 109 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 305 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 305 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 305 between rule 109 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 305 between rule 109 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 305 between rule 109 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 305 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 305 between rule 109 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 305 between rule 109 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 305 between rule 109 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 306 between rule 116 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 306 between rule 116 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 306 between rule 116 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 306 between rule 116 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 306 between rule 116 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 306 between rule 116 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 306 between rule 116 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 306 between rule 116 and token OP04_MATH_POW resolved as shift.
Conflict in state 306 between rule 116 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 306 between rule 116 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 306 between rule 116 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 306 between rule 116 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 306 between rule 116 and token OP18_TERNARY resolved as reduce.
Conflict in state 306 between rule 116 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 306 between rule 116 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 306 between rule 116 and token OP08_STRING_CAT resolved as shift.
Conflict in state 306 between rule 116 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 307 between rule 105 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 307 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 307 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 307 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 307 between rule 105 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 307 between rule 105 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 307 between rule 105 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 307 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 307 between rule 105 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 307 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 307 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 307 between rule 105 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 307 between rule 105 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 307 between rule 105 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 307 between rule 105 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 307 between rule 105 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 307 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 308 between rule 107 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 308 between rule 107 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 308 between rule 107 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 308 between rule 107 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 308 between rule 107 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 308 between rule 107 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 308 between rule 107 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 308 between rule 107 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 308 between rule 107 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 308 between rule 107 and token OP04_MATH_POW resolved as shift.
Conflict in state 308 between rule 107 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 308 between rule 107 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 308 between rule 107 and token OP18_TERNARY resolved as reduce.
Conflict in state 308 between rule 107 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 308 between rule 107 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 308 between rule 107 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 308 between rule 107 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 309 between rule 112 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 309 between rule 112 and token OP04_MATH_POW resolved as shift.
Conflict in state 309 between rule 112 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 309 between rule 112 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 309 between rule 112 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 309 between rule 112 and token OP18_TERNARY resolved as reduce.
Conflict in state 309 between rule 112 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 309 between rule 112 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 309 between rule 112 and token OP08_STRING_CAT resolved as shift.
Conflict in state 309 between rule 112 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 309 between rule 112 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 309 between rule 112 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 309 between rule 112 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 309 between rule 112 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 309 between rule 112 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 309 between rule 112 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 309 between rule 112 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 310 between rule 113 and token OP04_MATH_POW resolved as shift.
Conflict in state 310 between rule 113 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 310 between rule 113 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 310 between rule 113 and token OP12_COMPARE_EQ_NE resolved as error.
Conflict in state 310 between rule 113 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 310 between rule 113 and token OP18_TERNARY resolved as reduce.
Conflict in state 310 between rule 113 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 310 between rule 113 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 310 between rule 113 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 310 between rule 113 and token OP08_STRING_CAT resolved as shift.
Conflict in state 310 between rule 113 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 310 between rule 113 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 310 between rule 113 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 310 between rule 113 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 310 between rule 113 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 310 between rule 113 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 310 between rule 113 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 311 between rule 121 and token OP08_STRING_CAT resolved as shift.
Conflict in state 311 between rule 121 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 311 between rule 121 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 311 between rule 121 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 311 between rule 121 and token OP18_TERNARY resolved as shift.
Conflict in state 311 between rule 121 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 311 between rule 121 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 311 between rule 121 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 311 between rule 121 and token OP04_MATH_POW resolved as shift.
Conflict in state 311 between rule 121 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 311 between rule 121 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 311 between rule 121 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 311 between rule 121 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 311 between rule 121 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 311 between rule 121 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 311 between rule 121 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 311 between rule 121 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 312 between rule 122 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 312 between rule 122 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 312 between rule 122 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 312 between rule 122 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 312 between rule 122 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 312 between rule 122 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 312 between rule 122 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 312 between rule 122 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 312 between rule 122 and token OP08_STRING_CAT resolved as shift.
Conflict in state 312 between rule 122 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 312 between rule 122 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 312 between rule 122 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 312 between rule 122 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 312 between rule 122 and token OP18_TERNARY resolved as shift.
Conflict in state 312 between rule 122 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 312 between rule 122 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 312 between rule 122 and token OP04_MATH_POW resolved as shift.
Conflict in state 444 between rule 96 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 444 between rule 96 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 444 between rule 96 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 444 between rule 96 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 444 between rule 96 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 444 between rule 96 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 444 between rule 96 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 444 between rule 96 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 444 between rule 96 and token OP18_TERNARY resolved as shift.
Conflict in state 444 between rule 96 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 444 between rule 96 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 444 between rule 96 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 444 between rule 96 and token OP08_STRING_CAT resolved as shift.
Conflict in state 444 between rule 96 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 444 between rule 96 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 444 between rule 96 and token OP04_MATH_POW resolved as shift.
Conflict in state 444 between rule 96 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 462 between rule 118 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 462 between rule 118 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 462 between rule 118 and token OP04_MATH_POW resolved as shift.
Conflict in state 462 between rule 118 and token OP08_STRING_CAT resolved as shift.
Conflict in state 462 between rule 118 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 462 between rule 118 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 462 between rule 118 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 462 between rule 118 and token OP18_TERNARY resolved as reduce.
Conflict in state 462 between rule 118 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 462 between rule 118 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 462 between rule 118 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 462 between rule 118 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 462 between rule 118 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 462 between rule 118 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 462 between rule 118 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 462 between rule 118 and token OP17_LIST_RANGE resolved as error.
Conflict in state 462 between rule 118 and token OP09_BITWISE_SHIFT resolved as shift.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> Critic
20:	OPTIONAL-9 -> /* empty */
21:	OPTIONAL-10 -> USE_RPERL
22:	OPTIONAL-10 -> /* empty */
23:	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped ';' Header
24:	Module -> Package
25:	Module -> Class
26:	STAR-11 -> STAR-11 Critic
27:	STAR-11 -> /* empty */
28:	OPTIONAL-12 -> Exports
29:	OPTIONAL-12 -> /* empty */
30:	STAR-13 -> STAR-13 Include
31:	STAR-13 -> /* empty */
32:	STAR-14 -> STAR-14 Constant
33:	STAR-14 -> /* empty */
34:	PLUS-15 -> PLUS-15 Subroutine
35:	PLUS-15 -> Subroutine
36:	Package -> STAR-11 OPTIONAL-12 STAR-13 STAR-14 PLUS-15 LITERAL_NUMBER ';'
37:	OPTIONAL-16 -> USE_RPERL_AFTER
38:	OPTIONAL-16 -> /* empty */
39:	Header -> 'use strict;' 'use warnings;' OPTIONAL-16 'our' VERSION_NUMBER_ASSIGN
40:	PLUS-17 -> PLUS-17 WORD
41:	PLUS-17 -> WORD
42:	Critic -> '## no critic qw(' PLUS-17 ')'
43:	PAREN-18 -> OUR_EXPORT OP01_QW ';'
44:	OPTIONAL-19 -> PAREN-18
45:	OPTIONAL-19 -> /* empty */
46:	PAREN-20 -> OUR_EXPORT_OK OP01_QW ';'
47:	OPTIONAL-21 -> PAREN-20
48:	OPTIONAL-21 -> /* empty */
49:	Exports -> USE_EXPORTER OPTIONAL-19 OPTIONAL-21
50:	Include -> USE WordScoped ';'
51:	Include -> USE WordScoped OP01_QW ';'
52:	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'
53:	OPTIONAL-22 -> SubroutineArguments
54:	OPTIONAL-22 -> /* empty */
55:	STAR-23 -> STAR-23 Operation
56:	STAR-23 -> /* empty */
57:	Subroutine -> SUB WORD LBRACE LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-22 STAR-23 '}'
58:	PAREN-24 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL
59:	STAR-25 -> STAR-25 PAREN-24
60:	STAR-25 -> /* empty */
61:	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-25 ')' OP19_VARIABLE_ASSIGN '@ARG;'
62:	STAR-26 -> STAR-26 Critic
63:	STAR-26 -> /* empty */
64:	OPTIONAL-27 -> Exports
65:	OPTIONAL-27 -> /* empty */
66:	STAR-28 -> STAR-28 Include
67:	STAR-28 -> /* empty */
68:	STAR-29 -> STAR-29 Constant
69:	STAR-29 -> /* empty */
70:	STAR-30 -> STAR-30 SubroutineOrMethod
71:	STAR-30 -> /* empty */
72:	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-26 OPTIONAL-27 STAR-28 STAR-29 Properties STAR-30 LITERAL_NUMBER ';'
73:	PAREN-31 -> OP21_LIST_COMMA HashEntryProperties
74:	STAR-32 -> STAR-32 PAREN-31
75:	STAR-32 -> /* empty */
76:	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-32 '}' ';'
77:	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';'
78:	OPTIONAL-33 -> MethodArguments
79:	OPTIONAL-33 -> /* empty */
80:	STAR-34 -> STAR-34 Operation
81:	STAR-34 -> /* empty */
82:	Method -> SUB WORD LBRACE LBRACE MY TYPE_METHOD '$RETURN_TYPE' '}' ';' OPTIONAL-33 STAR-34 '}'
83:	PAREN-35 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL
84:	STAR-36 -> STAR-36 PAREN-35
85:	STAR-36 -> /* empty */
86:	MethodArguments -> LPAREN_MY Type SELF STAR-36 ')' OP19_VARIABLE_ASSIGN '@ARG;'
87:	SubroutineOrMethod -> Subroutine
88:	SubroutineOrMethod -> Method
89:	Operation -> Expression ';'
90:	Operation -> OP01_NAMED_SCOLON
91:	Operation -> OP10_NAMED_UNARY_SCOLON
92:	Operation -> Statement
93:	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')'
94:	Operator -> OP01_NAMED SubExpression
95:	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'
96:	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression
97:	Operator -> OP01_CLOSE FHREF_SYMBOL
98:	Operator -> OP03_MATH_INC_DEC Variable
99:	Operator -> Variable OP03_MATH_INC_DEC
100:	Operator -> SubExpression OP04_MATH_POW SubExpression
101:	Operator -> OP05_BITWISE_NEG_LPAREN SubExpression ')'
102:	Operator -> OP05_LOGICAL_NEG SubExpression
103:	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')'
104:	Operator -> SubExpression OP06_REGEX_BIND OP06_REGEX_PATTERN
105:	Operator -> SubExpression OP07_STRING_REPEAT SubExpression
106:	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression
107:	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression
108:	Operator -> SubExpression OP08_STRING_CAT SubExpression
109:	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression
110:	Operator -> OP10_NAMED_UNARY SubExpression
111:	Operator -> OP10_NAMED_UNARY
112:	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression
113:	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression
114:	Operator -> SubExpression OP13_BITWISE_AND SubExpression
115:	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression
116:	Operator -> SubExpression OP15_LOGICAL_AND SubExpression
117:	Operator -> SubExpression OP16_LOGICAL_OR SubExpression
118:	Operator -> SubExpression OP17_LIST_RANGE SubExpression
119:	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral
120:	Operator -> OP22_LOGICAL_NEG SubExpression
121:	Operator -> SubExpression OP23_LOGICAL_AND SubExpression
122:	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression
123:	PAREN-37 -> STDOUT_STDERR
124:	OPTIONAL-38 -> PAREN-37
125:	OPTIONAL-38 -> /* empty */
126:	OPTIONAL-39 -> ListElements
127:	OPTIONAL-39 -> /* empty */
128:	OperatorVoid -> OP01_PRINT OPTIONAL-38 ListElements ';'
129:	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements ';'
130:	OperatorVoid -> OP01_NAMED_VOID_SCOLON
131:	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-39 ')' ';'
132:	OperatorVoid -> OP01_NAMED_VOID ListElements ';'
133:	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';'
134:	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON
135:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
136:	OPTIONAL-40 -> ListElements
137:	OPTIONAL-40 -> /* empty */
138:	OPTIONAL-41 -> ListElements
139:	OPTIONAL-41 -> /* empty */
140:	OPTIONAL-42 -> HashReference
141:	OPTIONAL-42 -> /* empty */
142:	Expression -> Operator
143:	Expression -> WORD_UPPERCASE LPAREN ')'
144:	Expression -> CONSTANT_CALL_SCOPED
145:	Expression -> WordScoped LPAREN OPTIONAL-40 ')'
146:	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-41 ')'
147:	Expression -> WordScoped OP02_METHOD_THINARROW_NEW OPTIONAL-42 ')'
148:	SubExpression -> Expression
149:	SubExpression -> 'undef'
150:	SubExpression -> Literal
151:	SubExpression -> Variable
152:	SubExpression -> ArrayReference
153:	SubExpression -> ArrayDereference
154:	SubExpression -> HashReference
155:	SubExpression -> HashDereference
156:	SubExpression -> LPAREN SubExpression ')'
157:	SubExpressionOrInput -> SubExpression
158:	SubExpressionOrInput -> FHREF_SYMBOL_IN
159:	SubExpressionOrInput -> STDIN
160:	SubExpressionOrVarMod -> SubExpression
161:	SubExpressionOrVarMod -> VariableModification
162:	PAREN-43 -> LoopLabel COLON
163:	OPTIONAL-44 -> PAREN-43
164:	OPTIONAL-44 -> /* empty */
165:	Statement -> Conditional
166:	Statement -> OPTIONAL-44 Loop
167:	Statement -> OperatorVoid
168:	Statement -> VariableDeclaration
169:	Statement -> VariableModification ';'
170:	PAREN-45 -> 'elsif' LPAREN SubExpression ')' CodeBlock
171:	STAR-46 -> STAR-46 PAREN-45
172:	STAR-46 -> /* empty */
173:	PAREN-47 -> 'else' CodeBlock
174:	OPTIONAL-48 -> PAREN-47
175:	OPTIONAL-48 -> /* empty */
176:	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-46 OPTIONAL-48
177:	Loop -> LoopFor
178:	Loop -> LoopForEach
179:	Loop -> LoopWhile
180:	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock
181:	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock
182:	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock
183:	LoopWhile -> 'while' LPAREN SubExpression ')' CodeBlock
184:	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrInput ')' CodeBlock
185:	PLUS-49 -> PLUS-49 Operation
186:	PLUS-49 -> Operation
187:	CodeBlock -> LBRACE PLUS-49 '}'
188:	STAR-50 -> STAR-50 VariableRetrieval
189:	STAR-50 -> /* empty */
190:	Variable -> VariableSymbolOrSelf STAR-50
191:	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']'
192:	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}'
193:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
194:	VariableDeclaration -> MY Type VARIABLE_SYMBOL ';'
195:	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExpIn
196:	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'
197:	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL ';'
198:	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrInput
199:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression
200:	PAREN-51 -> OP21_LIST_COMMA ListElement
201:	STAR-52 -> STAR-52 PAREN-51
202:	STAR-52 -> /* empty */
203:	ListElements -> ListElement STAR-52
204:	ListElement -> SubExpression
205:	ListElement -> TypeInner SubExpression
206:	ListElement -> OP01_QW
207:	ListElement -> ARGV
208:	OPTIONAL-53 -> ListElements
209:	OPTIONAL-53 -> /* empty */
210:	ArrayReference -> LBRACKET OPTIONAL-53 ']'
211:	OPTIONAL-54 -> TypeInner
212:	OPTIONAL-54 -> /* empty */
213:	ArrayDereference -> '@{' Variable '}'
214:	ArrayDereference -> '@{' OPTIONAL-54 ArrayReference '}'
215:	OPTIONAL-55 -> TypeInner
216:	OPTIONAL-55 -> /* empty */
217:	HashEntry -> VarOrLitOrOpStrOrWord OP20_HASH_FATARROW OPTIONAL-55 SubExpression
218:	HashEntry -> HashDereference
219:	HashEntry -> ENV
220:	HashEntryProperties -> OpStringOrWord OP20_HASH_FATARROW TypeInnerProperties
221:	PAREN-56 -> OP21_LIST_COMMA HashEntry
222:	STAR-57 -> STAR-57 PAREN-56
223:	STAR-57 -> /* empty */
224:	HashReference -> LBRACE HashEntry STAR-57 '}'
225:	HashReference -> LBRACE '}'
226:	OPTIONAL-58 -> TypeInner
227:	OPTIONAL-58 -> /* empty */
228:	HashDereference -> '%{' Variable '}'
229:	HashDereference -> '%{' OPTIONAL-58 HashReference '}'
230:	WordScoped -> WORD
231:	WordScoped -> WORD_SCOPED
232:	LoopLabel -> WORD_UPPERCASE
233:	Type -> WORD
234:	Type -> WORD_SCOPED
235:	Type -> TYPE_INTEGER
236:	TypeInner -> MY Type '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN
237:	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN SubExpression
238:	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'
239:	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN
240:	VariableOrLiteral -> Variable
241:	VariableOrLiteral -> Literal
242:	VarOrLitOrOpStrOrWord -> Variable
243:	VarOrLitOrOpStrOrWord -> Literal
244:	VarOrLitOrOpStrOrWord -> OpStringOrWord
245:	VariableSymbolOrSelf -> VARIABLE_SYMBOL
246:	VariableSymbolOrSelf -> SELF
247:	Literal -> LITERAL_NUMBER
248:	Literal -> LITERAL_STRING
249:	OpNamedScolonOrSubExp -> OP01_NAMED_SCOLON
250:	OpNamedScolonOrSubExp -> OP10_NAMED_UNARY_SCOLON
251:	OpNamedScolonOrSubExp -> SubExpression ';'
252:	OpNamedScolonOrSubExpIn -> OP01_NAMED_SCOLON
253:	OpNamedScolonOrSubExpIn -> OP10_NAMED_UNARY_SCOLON
254:	OpNamedScolonOrSubExpIn -> SubExpressionOrInput ';'
255:	OpStringOrWord -> OP24_LOGICAL_OR_XOR
256:	OpStringOrWord -> OP23_LOGICAL_AND
257:	OpStringOrWord -> OP22_LOGICAL_NEG
258:	OpStringOrWord -> OP19_LOOP_CONTROL_SCOLON
259:	OpStringOrWord -> OP19_LOOP_CONTROL
260:	OpStringOrWord -> OP12_COMPARE_EQ_NE
261:	OpStringOrWord -> OP11_COMPARE_LT_GT
262:	OpStringOrWord -> OP10_NAMED_UNARY
263:	OpStringOrWord -> OP08_MATH_ADD_SUB
264:	OpStringOrWord -> OP07_MATH_MULT_DIV_MOD
265:	OpStringOrWord -> OP07_STRING_REPEAT
266:	OpStringOrWord -> OP01_NAMED
267:	OpStringOrWord -> OP01_CLOSE
268:	OpStringOrWord -> OP01_OPEN
269:	OpStringOrWord -> OP01_NAMED_VOID
270:	OpStringOrWord -> OP01_PRINT
271:	OpStringOrWord -> WORD

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'## no critic qw('	shift, and go to state 6
	SHEBANG	shift, and go to state 4

	'package'	reduce using rule 20 (OPTIONAL-9)
	USE_RPERL	reduce using rule 20 (OPTIONAL-9)

	Program	go to state 1
	CompileUnit	go to state 2
	Critic	go to state 3
	PLUS-2	go to state 7
	PAREN-1	go to state 5
	ModuleHeader	go to state 9
	OPTIONAL-9	go to state 8

State 1:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 2:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 10

State 3:

	OPTIONAL-9 -> Critic .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 4:

	Program -> SHEBANG . OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 6

	USE_RPERL	reduce using rule 7 (OPTIONAL-3)

	Critic	go to state 12
	OPTIONAL-3	go to state 11

State 5:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 6:

	Critic -> '## no critic qw(' . PLUS-17 ')'	(Rule 42)

	WORD	shift, and go to state 13

	PLUS-17	go to state 14

State 7:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	'## no critic qw('	shift, and go to state 6

	$end	reduce using rule 5 (CompileUnit)
	'package'	reduce using rule 20 (OPTIONAL-9)
	USE_RPERL	reduce using rule 20 (OPTIONAL-9)

	Critic	go to state 3
	PAREN-1	go to state 15
	OPTIONAL-9	go to state 8
	ModuleHeader	go to state 9

State 8:

	ModuleHeader -> OPTIONAL-9 . OPTIONAL-10 'package' WordScoped ';' Header	(Rule 23)

	USE_RPERL	shift, and go to state 16

	'package'	reduce using rule 22 (OPTIONAL-10)

	OPTIONAL-10	go to state 17

State 9:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent qw('	shift, and go to state 18

	'## no critic qw('	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	SUB	reduce using rule 27 (STAR-11)
	USE	reduce using rule 27 (STAR-11)
	USE_EXPORTER	reduce using rule 27 (STAR-11)

	Module	go to state 20
	STAR-11	go to state 22
	Class	go to state 19
	Package	go to state 21

State 10:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 11:

	Program -> SHEBANG OPTIONAL-3 . USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	USE_RPERL	shift, and go to state 23

State 12:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 13:

	PLUS-17 -> WORD .	(Rule 41)

	$default	reduce using rule 41 (PLUS-17)

State 14:

	PLUS-17 -> PLUS-17 . WORD	(Rule 40)
	Critic -> '## no critic qw(' PLUS-17 . ')'	(Rule 42)

	')'	shift, and go to state 24
	WORD	shift, and go to state 25

State 15:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 16:

	OPTIONAL-10 -> USE_RPERL .	(Rule 21)

	$default	reduce using rule 21 (OPTIONAL-10)

State 17:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 . 'package' WordScoped ';' Header	(Rule 23)

	'package'	shift, and go to state 26

State 18:

	Class -> 'use parent qw(' . WordScoped ')' ';' Include STAR-26 OPTIONAL-27 STAR-28 STAR-29 Properties STAR-30 LITERAL_NUMBER ';'	(Rule 72)

	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27

	WordScoped	go to state 29

State 19:

	Module -> Class .	(Rule 25)

	$default	reduce using rule 25 (Module)

State 20:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 21:

	Module -> Package .	(Rule 24)

	$default	reduce using rule 24 (Module)

State 22:

	STAR-11 -> STAR-11 . Critic	(Rule 26)
	Package -> STAR-11 . OPTIONAL-12 STAR-13 STAR-14 PLUS-15 LITERAL_NUMBER ';'	(Rule 36)

	'## no critic qw('	shift, and go to state 6
	USE_EXPORTER	shift, and go to state 32

	'use constant'	reduce using rule 29 (OPTIONAL-12)
	SUB	reduce using rule 29 (OPTIONAL-12)
	USE	reduce using rule 29 (OPTIONAL-12)

	Critic	go to state 33
	OPTIONAL-12	go to state 31
	Exports	go to state 30

State 23:

	Program -> SHEBANG OPTIONAL-3 USE_RPERL . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 34

	Header	go to state 35

State 24:

	Critic -> '## no critic qw(' PLUS-17 ')' .	(Rule 42)

	$default	reduce using rule 42 (Critic)

State 25:

	PLUS-17 -> PLUS-17 WORD .	(Rule 40)

	$default	reduce using rule 40 (PLUS-17)

State 26:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' . WordScoped ';' Header	(Rule 23)

	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27

	WordScoped	go to state 36

State 27:

	WordScoped -> WORD_SCOPED .	(Rule 231)

	$default	reduce using rule 231 (WordScoped)

State 28:

	WordScoped -> WORD .	(Rule 230)

	$default	reduce using rule 230 (WordScoped)

State 29:

	Class -> 'use parent qw(' WordScoped . ')' ';' Include STAR-26 OPTIONAL-27 STAR-28 STAR-29 Properties STAR-30 LITERAL_NUMBER ';'	(Rule 72)

	')'	shift, and go to state 37

State 30:

	OPTIONAL-12 -> Exports .	(Rule 28)

	$default	reduce using rule 28 (OPTIONAL-12)

State 31:

	Package -> STAR-11 OPTIONAL-12 . STAR-13 STAR-14 PLUS-15 LITERAL_NUMBER ';'	(Rule 36)

	$default	reduce using rule 31 (STAR-13)

	STAR-13	go to state 38

State 32:

	Exports -> USE_EXPORTER . OPTIONAL-19 OPTIONAL-21	(Rule 49)

	OUR_EXPORT	shift, and go to state 39

	'our hashref $properties'	reduce using rule 45 (OPTIONAL-19)
	'use constant'	reduce using rule 45 (OPTIONAL-19)
	OUR_EXPORT_OK	reduce using rule 45 (OPTIONAL-19)
	SUB	reduce using rule 45 (OPTIONAL-19)
	USE	reduce using rule 45 (OPTIONAL-19)

	OPTIONAL-19	go to state 40
	PAREN-18	go to state 41

State 33:

	STAR-11 -> STAR-11 Critic .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 34:

	Header -> 'use strict;' . 'use warnings;' OPTIONAL-16 'our' VERSION_NUMBER_ASSIGN	(Rule 39)

	'use warnings;'	shift, and go to state 42

State 35:

	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 43

State 36:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped . ';' Header	(Rule 23)

	';'	shift, and go to state 44

State 37:

	Class -> 'use parent qw(' WordScoped ')' . ';' Include STAR-26 OPTIONAL-27 STAR-28 STAR-29 Properties STAR-30 LITERAL_NUMBER ';'	(Rule 72)

	';'	shift, and go to state 45

State 38:

	STAR-13 -> STAR-13 . Include	(Rule 30)
	Package -> STAR-11 OPTIONAL-12 STAR-13 . STAR-14 PLUS-15 LITERAL_NUMBER ';'	(Rule 36)

	USE	shift, and go to state 46

	'use constant'	reduce using rule 33 (STAR-14)
	SUB	reduce using rule 33 (STAR-14)

	Include	go to state 48
	STAR-14	go to state 47

State 39:

	PAREN-18 -> OUR_EXPORT . OP01_QW ';'	(Rule 43)

	OP01_QW	shift, and go to state 49

State 40:

	Exports -> USE_EXPORTER OPTIONAL-19 . OPTIONAL-21	(Rule 49)

	OUR_EXPORT_OK	shift, and go to state 51

	'our hashref $properties'	reduce using rule 48 (OPTIONAL-21)
	'use constant'	reduce using rule 48 (OPTIONAL-21)
	SUB	reduce using rule 48 (OPTIONAL-21)
	USE	reduce using rule 48 (OPTIONAL-21)

	PAREN-20	go to state 52
	OPTIONAL-21	go to state 50

State 41:

	OPTIONAL-19 -> PAREN-18 .	(Rule 44)

	$default	reduce using rule 44 (OPTIONAL-19)

State 42:

	Header -> 'use strict;' 'use warnings;' . OPTIONAL-16 'our' VERSION_NUMBER_ASSIGN	(Rule 39)

	USE_RPERL_AFTER	shift, and go to state 54

	'our'	reduce using rule 38 (OPTIONAL-16)

	OPTIONAL-16	go to state 53

State 43:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 6

	'%{'	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'for'	reduce using rule 11 (STAR-5)
	'foreach'	reduce using rule 11 (STAR-5)
	'if'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'while'	reduce using rule 11 (STAR-5)
	CONSTANT_CALL_SCOPED	reduce using rule 11 (STAR-5)
	LBRACE	reduce using rule 11 (STAR-5)
	LBRACKET	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	LPAREN	reduce using rule 11 (STAR-5)
	MY	reduce using rule 11 (STAR-5)
	OP01_CLOSE	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_SCOLON	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_LPAREN	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_SCOLON	reduce using rule 11 (STAR-5)
	OP01_OPEN	reduce using rule 11 (STAR-5)
	OP01_PRINT	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG_LPAREN	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY_SCOLON	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	SELF	reduce using rule 11 (STAR-5)
	SUB	reduce using rule 11 (STAR-5)
	USE	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)
	WORD_UPPERCASE	reduce using rule 11 (STAR-5)

	Critic	go to state 55
	STAR-5	go to state 56

State 44:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped ';' . Header	(Rule 23)

	'use strict;'	shift, and go to state 34

	Header	go to state 57

State 45:

	Class -> 'use parent qw(' WordScoped ')' ';' . Include STAR-26 OPTIONAL-27 STAR-28 STAR-29 Properties STAR-30 LITERAL_NUMBER ';'	(Rule 72)

	USE	shift, and go to state 46

	Include	go to state 58

State 46:

	Include -> USE . WordScoped ';'	(Rule 50)
	Include -> USE . WordScoped OP01_QW ';'	(Rule 51)

	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27

	WordScoped	go to state 59

State 47:

	STAR-14 -> STAR-14 . Constant	(Rule 32)
	Package -> STAR-11 OPTIONAL-12 STAR-13 STAR-14 . PLUS-15 LITERAL_NUMBER ';'	(Rule 36)

	'use constant'	shift, and go to state 63
	SUB	shift, and go to state 61

	Subroutine	go to state 64
	PLUS-15	go to state 62
	Constant	go to state 60

State 48:

	STAR-13 -> STAR-13 Include .	(Rule 30)

	$default	reduce using rule 30 (STAR-13)

State 49:

	PAREN-18 -> OUR_EXPORT OP01_QW . ';'	(Rule 43)

	';'	shift, and go to state 65

State 50:

	Exports -> USE_EXPORTER OPTIONAL-19 OPTIONAL-21 .	(Rule 49)

	$default	reduce using rule 49 (Exports)

State 51:

	PAREN-20 -> OUR_EXPORT_OK . OP01_QW ';'	(Rule 46)

	OP01_QW	shift, and go to state 66

State 52:

	OPTIONAL-21 -> PAREN-20 .	(Rule 47)

	$default	reduce using rule 47 (OPTIONAL-21)

State 53:

	Header -> 'use strict;' 'use warnings;' OPTIONAL-16 . 'our' VERSION_NUMBER_ASSIGN	(Rule 39)

	'our'	shift, and go to state 67

State 54:

	OPTIONAL-16 -> USE_RPERL_AFTER .	(Rule 37)

	$default	reduce using rule 37 (OPTIONAL-16)

State 55:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 56:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	USE	shift, and go to state 46

	'%{'	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'for'	reduce using rule 13 (STAR-6)
	'foreach'	reduce using rule 13 (STAR-6)
	'if'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while'	reduce using rule 13 (STAR-6)
	CONSTANT_CALL_SCOPED	reduce using rule 13 (STAR-6)
	LBRACE	reduce using rule 13 (STAR-6)
	LBRACKET	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	LPAREN	reduce using rule 13 (STAR-6)
	MY	reduce using rule 13 (STAR-6)
	OP01_CLOSE	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_SCOLON	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_LPAREN	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_SCOLON	reduce using rule 13 (STAR-6)
	OP01_OPEN	reduce using rule 13 (STAR-6)
	OP01_PRINT	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG_LPAREN	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY_SCOLON	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	SELF	reduce using rule 13 (STAR-6)
	SUB	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)
	WORD_UPPERCASE	reduce using rule 13 (STAR-6)

	Include	go to state 68
	STAR-6	go to state 69

State 57:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped ';' Header .	(Rule 23)

	$default	reduce using rule 23 (ModuleHeader)

State 58:

	Class -> 'use parent qw(' WordScoped ')' ';' Include . STAR-26 OPTIONAL-27 STAR-28 STAR-29 Properties STAR-30 LITERAL_NUMBER ';'	(Rule 72)

	$default	reduce using rule 63 (STAR-26)

	STAR-26	go to state 70

State 59:

	Include -> USE WordScoped . ';'	(Rule 50)
	Include -> USE WordScoped . OP01_QW ';'	(Rule 51)

	';'	shift, and go to state 71
	OP01_QW	shift, and go to state 72

State 60:

	STAR-14 -> STAR-14 Constant .	(Rule 32)

	$default	reduce using rule 32 (STAR-14)

State 61:

	Subroutine -> SUB . WORD LBRACE LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-22 STAR-23 '}'	(Rule 57)

	WORD	shift, and go to state 73

State 62:

	PLUS-15 -> PLUS-15 . Subroutine	(Rule 34)
	Package -> STAR-11 OPTIONAL-12 STAR-13 STAR-14 PLUS-15 . LITERAL_NUMBER ';'	(Rule 36)

	LITERAL_NUMBER	shift, and go to state 74
	SUB	shift, and go to state 61

	Subroutine	go to state 75

State 63:

	Constant -> 'use constant' . WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 52)

	WORD_UPPERCASE	shift, and go to state 76

State 64:

	PLUS-15 -> Subroutine .	(Rule 35)

	$default	reduce using rule 35 (PLUS-15)

State 65:

	PAREN-18 -> OUR_EXPORT OP01_QW ';' .	(Rule 43)

	$default	reduce using rule 43 (PAREN-18)

State 66:

	PAREN-20 -> OUR_EXPORT_OK OP01_QW . ';'	(Rule 46)

	';'	shift, and go to state 77

State 67:

	Header -> 'use strict;' 'use warnings;' OPTIONAL-16 'our' . VERSION_NUMBER_ASSIGN	(Rule 39)

	VERSION_NUMBER_ASSIGN	shift, and go to state 78

State 68:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 69:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 63

	'%{'	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'for'	reduce using rule 15 (STAR-7)
	'foreach'	reduce using rule 15 (STAR-7)
	'if'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while'	reduce using rule 15 (STAR-7)
	CONSTANT_CALL_SCOPED	reduce using rule 15 (STAR-7)
	LBRACE	reduce using rule 15 (STAR-7)
	LBRACKET	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	LPAREN	reduce using rule 15 (STAR-7)
	MY	reduce using rule 15 (STAR-7)
	OP01_CLOSE	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_SCOLON	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_LPAREN	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_SCOLON	reduce using rule 15 (STAR-7)
	OP01_OPEN	reduce using rule 15 (STAR-7)
	OP01_PRINT	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG_LPAREN	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY_SCOLON	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	SELF	reduce using rule 15 (STAR-7)
	SUB	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)
	WORD_UPPERCASE	reduce using rule 15 (STAR-7)

	Constant	go to state 79
	STAR-7	go to state 80

State 70:

	STAR-26 -> STAR-26 . Critic	(Rule 62)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-26 . OPTIONAL-27 STAR-28 STAR-29 Properties STAR-30 LITERAL_NUMBER ';'	(Rule 72)

	'## no critic qw('	shift, and go to state 6
	USE_EXPORTER	shift, and go to state 32

	'our hashref $properties'	reduce using rule 65 (OPTIONAL-27)
	'use constant'	reduce using rule 65 (OPTIONAL-27)
	USE	reduce using rule 65 (OPTIONAL-27)

	OPTIONAL-27	go to state 81
	Exports	go to state 82
	Critic	go to state 83

State 71:

	Include -> USE WordScoped ';' .	(Rule 50)

	$default	reduce using rule 50 (Include)

State 72:

	Include -> USE WordScoped OP01_QW . ';'	(Rule 51)

	';'	shift, and go to state 84

State 73:

	Subroutine -> SUB WORD . LBRACE LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-22 STAR-23 '}'	(Rule 57)

	LBRACE	shift, and go to state 85

State 74:

	Package -> STAR-11 OPTIONAL-12 STAR-13 STAR-14 PLUS-15 LITERAL_NUMBER . ';'	(Rule 36)

	';'	shift, and go to state 86

State 75:

	PLUS-15 -> PLUS-15 Subroutine .	(Rule 34)

	$default	reduce using rule 34 (PLUS-15)

State 76:

	Constant -> 'use constant' WORD_UPPERCASE . OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 52)

	OP20_HASH_FATARROW	shift, and go to state 87

State 77:

	PAREN-20 -> OUR_EXPORT_OK OP01_QW ';' .	(Rule 46)

	$default	reduce using rule 46 (PAREN-20)

State 78:

	Header -> 'use strict;' 'use warnings;' OPTIONAL-16 'our' VERSION_NUMBER_ASSIGN .	(Rule 39)

	$default	reduce using rule 39 (Header)

State 79:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 80:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'if'	shift, and go to state 115
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	MY	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 139
	OP01_NAMED_SCOLON	shift, and go to state 123
	OP01_NAMED_VOID	shift, and go to state 97
	OP01_NAMED_VOID_LPAREN	shift, and go to state 137
	OP01_NAMED_VOID_SCOLON	shift, and go to state 128
	OP01_OPEN	shift, and go to state 120
	OP01_PRINT	shift, and go to state 134
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 122
	OP19_LOOP_CONTROL	shift, and go to state 121
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 100
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	SUB	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 96

	'for'	reduce using rule 164 (OPTIONAL-44)
	'foreach'	reduce using rule 164 (OPTIONAL-44)
	'while'	reduce using rule 164 (OPTIONAL-44)

	HashReference	go to state 95
	PAREN-43	go to state 92
	VariableDeclaration	go to state 91
	VariableModification	go to state 124
	Subroutine	go to state 125
	Operator	go to state 99
	OPTIONAL-44	go to state 126
	ArrayDereference	go to state 103
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 105
	PLUS-8	go to state 98
	HashDereference	go to state 119
	WordScoped	go to state 107
	Literal	go to state 130
	OperatorVoid	go to state 132
	Conditional	go to state 108
	LoopLabel	go to state 106
	Variable	go to state 136
	SubExpression	go to state 135
	ArrayReference	go to state 138
	Statement	go to state 112
	Operation	go to state 140

State 81:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-26 OPTIONAL-27 . STAR-28 STAR-29 Properties STAR-30 LITERAL_NUMBER ';'	(Rule 72)

	$default	reduce using rule 67 (STAR-28)

	STAR-28	go to state 141

State 82:

	OPTIONAL-27 -> Exports .	(Rule 64)

	$default	reduce using rule 64 (OPTIONAL-27)

State 83:

	STAR-26 -> STAR-26 Critic .	(Rule 62)

	$default	reduce using rule 62 (STAR-26)

State 84:

	Include -> USE WordScoped OP01_QW ';' .	(Rule 51)

	$default	reduce using rule 51 (Include)

State 85:

	Subroutine -> SUB WORD LBRACE . LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-22 STAR-23 '}'	(Rule 57)

	LBRACE	shift, and go to state 142

State 86:

	Package -> STAR-11 OPTIONAL-12 STAR-13 STAR-14 PLUS-15 LITERAL_NUMBER ';' .	(Rule 36)

	$default	reduce using rule 36 (Package)

State 87:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW . TypeInnerConstant Literal ';'	(Rule 52)

	MY	shift, and go to state 143

	TypeInnerConstant	go to state 144

State 88:

	ArrayDereference -> '@{' . Variable '}'	(Rule 213)
	ArrayDereference -> '@{' . OPTIONAL-54 ArrayReference '}'	(Rule 214)

	MY	shift, and go to state 146
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94

	LBRACKET	reduce using rule 212 (OPTIONAL-54)

	VariableSymbolOrSelf	go to state 104
	OPTIONAL-54	go to state 147
	Variable	go to state 145
	TypeInner	go to state 148

State 89:

	Operator -> OP10_NAMED_UNARY . SubExpression	(Rule 110)
	Operator -> OP10_NAMED_UNARY .	(Rule 111)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	')'	reduce using rule 111 (Operator)
	';'	reduce using rule 111 (Operator)
	']'	reduce using rule 111 (Operator)
	'}'	reduce using rule 111 (Operator)
	OP04_MATH_POW	reduce using rule 111 (Operator)
	OP06_REGEX_BIND	reduce using rule 111 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 111 (Operator)
	OP07_STRING_REPEAT	reduce using rule 111 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 111 (Operator)
	OP08_STRING_CAT	reduce using rule 111 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 111 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 111 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 111 (Operator)
	OP13_BITWISE_AND	reduce using rule 111 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 111 (Operator)
	OP15_LOGICAL_AND	reduce using rule 111 (Operator)
	OP16_LOGICAL_OR	reduce using rule 111 (Operator)
	OP17_LIST_RANGE	reduce using rule 111 (Operator)
	OP18_TERNARY	reduce using rule 111 (Operator)
	OP21_LIST_COMMA	reduce using rule 111 (Operator)
	OP23_LOGICAL_AND	reduce using rule 111 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 111 (Operator)

	HashReference	go to state 95
	Literal	go to state 130
	WordScoped	go to state 107
	HashDereference	go to state 119
	Expression	go to state 153
	VariableSymbolOrSelf	go to state 104
	ArrayDereference	go to state 103
	ArrayReference	go to state 138
	Variable	go to state 151
	SubExpression	go to state 150
	Operator	go to state 99

State 90:

	HashReference -> LBRACE . HashEntry STAR-57 '}'	(Rule 224)
	HashReference -> LBRACE . '}'	(Rule 225)

	'%{'	shift, and go to state 101
	'}'	shift, and go to state 173
	ENV	shift, and go to state 167
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 171
	OP01_NAMED	shift, and go to state 161
	OP01_NAMED_VOID	shift, and go to state 175
	OP01_OPEN	shift, and go to state 164
	OP01_PRINT	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 172
	OP07_STRING_REPEAT	shift, and go to state 159
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP10_NAMED_UNARY	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 158
	OP12_COMPARE_EQ_NE	shift, and go to state 169
	OP19_LOOP_CONTROL	shift, and go to state 165
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 176
	OP22_LOGICAL_NEG	shift, and go to state 154
	OP23_LOGICAL_AND	shift, and go to state 170
	OP24_LOGICAL_OR_XOR	shift, and go to state 166
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 178

	Literal	go to state 162
	VariableSymbolOrSelf	go to state 104
	OpStringOrWord	go to state 168
	Variable	go to state 157
	HashDereference	go to state 163
	VarOrLitOrOpStrOrWord	go to state 174
	HashEntry	go to state 155

State 91:

	Statement -> VariableDeclaration .	(Rule 168)

	$default	reduce using rule 168 (Statement)

State 92:

	OPTIONAL-44 -> PAREN-43 .	(Rule 163)

	$default	reduce using rule 163 (OPTIONAL-44)

State 93:

	Operator -> OP05_BITWISE_NEG_LPAREN . SubExpression ')'	(Rule 101)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	HashDereference	go to state 119
	Variable	go to state 151
	SubExpression	go to state 179
	Operator	go to state 99
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 153
	ArrayReference	go to state 138
	ArrayDereference	go to state 103
	WordScoped	go to state 107
	HashReference	go to state 95
	Literal	go to state 130

State 94:

	VariableSymbolOrSelf -> VARIABLE_SYMBOL .	(Rule 245)

	$default	reduce using rule 245 (VariableSymbolOrSelf)

State 95:

	SubExpression -> HashReference .	(Rule 154)

	$default	reduce using rule 154 (SubExpression)

State 96:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 143)
	LoopLabel -> WORD_UPPERCASE .	(Rule 232)

	LPAREN	shift, and go to state 180

	COLON	reduce using rule 232 (LoopLabel)

State 97:

	OperatorVoid -> OP01_NAMED_VOID . ListElements ';'	(Rule 132)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	ARGV	shift, and go to state 186
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	MY	shift, and go to state 146
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP01_QW	shift, and go to state 181
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	ArrayReference	go to state 138
	ArrayDereference	go to state 103
	Expression	go to state 153
	VariableSymbolOrSelf	go to state 104
	Operator	go to state 99
	SubExpression	go to state 182
	Variable	go to state 151
	HashDereference	go to state 119
	TypeInner	go to state 184
	Literal	go to state 130
	HashReference	go to state 95
	WordScoped	go to state 107
	ListElement	go to state 183
	ListElements	go to state 185

State 98:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'if'	shift, and go to state 115
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	MY	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 139
	OP01_NAMED_SCOLON	shift, and go to state 123
	OP01_NAMED_VOID	shift, and go to state 97
	OP01_NAMED_VOID_LPAREN	shift, and go to state 137
	OP01_NAMED_VOID_SCOLON	shift, and go to state 128
	OP01_OPEN	shift, and go to state 120
	OP01_PRINT	shift, and go to state 134
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 122
	OP19_LOOP_CONTROL	shift, and go to state 121
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 100
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 96

	$end	reduce using rule 18 (Program)
	'for'	reduce using rule 164 (OPTIONAL-44)
	'foreach'	reduce using rule 164 (OPTIONAL-44)
	'while'	reduce using rule 164 (OPTIONAL-44)

	WordScoped	go to state 107
	Literal	go to state 130
	OperatorVoid	go to state 132
	Conditional	go to state 108
	LoopLabel	go to state 106
	Variable	go to state 136
	SubExpression	go to state 135
	ArrayReference	go to state 138
	Statement	go to state 112
	Operation	go to state 187
	HashReference	go to state 95
	PAREN-43	go to state 92
	VariableDeclaration	go to state 91
	VariableModification	go to state 124
	Operator	go to state 99
	ArrayDereference	go to state 103
	OPTIONAL-44	go to state 126
	Expression	go to state 105
	VariableSymbolOrSelf	go to state 104
	HashDereference	go to state 119

State 99:

	Expression -> Operator .	(Rule 142)

	$default	reduce using rule 142 (Expression)

State 100:

	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON .	(Rule 134)

	$default	reduce using rule 134 (OperatorVoid)

State 101:

	HashDereference -> '%{' . Variable '}'	(Rule 228)
	HashDereference -> '%{' . OPTIONAL-58 HashReference '}'	(Rule 229)

	MY	shift, and go to state 146
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94

	LBRACE	reduce using rule 227 (OPTIONAL-58)

	TypeInner	go to state 188
	Variable	go to state 190
	OPTIONAL-58	go to state 189
	VariableSymbolOrSelf	go to state 104

State 102:

	Operator -> OP05_MATH_NEG_LPAREN . SubExpression ')'	(Rule 103)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	Expression	go to state 153
	VariableSymbolOrSelf	go to state 104
	ArrayDereference	go to state 103
	ArrayReference	go to state 138
	Variable	go to state 151
	SubExpression	go to state 191
	Operator	go to state 99
	HashDereference	go to state 119
	HashReference	go to state 95
	Literal	go to state 130
	WordScoped	go to state 107

State 103:

	SubExpression -> ArrayDereference .	(Rule 153)

	$default	reduce using rule 153 (SubExpression)

State 104:

	Variable -> VariableSymbolOrSelf . STAR-50	(Rule 190)

	$default	reduce using rule 189 (STAR-50)

	STAR-50	go to state 192

State 105:

	Operation -> Expression . ';'	(Rule 89)
	SubExpression -> Expression .	(Rule 148)

	';'	shift, and go to state 193

	OP04_MATH_POW	reduce using rule 148 (SubExpression)
	OP06_REGEX_BIND	reduce using rule 148 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 148 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 148 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 148 (SubExpression)
	OP08_STRING_CAT	reduce using rule 148 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 148 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 148 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 148 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 148 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 148 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 148 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 148 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 148 (SubExpression)
	OP18_TERNARY	reduce using rule 148 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 148 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 148 (SubExpression)

State 106:

	PAREN-43 -> LoopLabel . COLON	(Rule 162)

	COLON	shift, and go to state 194

State 107:

	Expression -> WordScoped . LPAREN OPTIONAL-40 ')'	(Rule 145)
	Expression -> WordScoped . OP02_METHOD_THINARROW_NEW OPTIONAL-42 ')'	(Rule 147)

	LPAREN	shift, and go to state 196
	OP02_METHOD_THINARROW_NEW	shift, and go to state 195

State 108:

	Statement -> Conditional .	(Rule 165)

	$default	reduce using rule 165 (Statement)

State 109:

	Literal -> LITERAL_NUMBER .	(Rule 247)

	$default	reduce using rule 247 (Literal)

State 110:

	Operator -> LPAREN . OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')'	(Rule 93)
	Operator -> LPAREN . OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'	(Rule 95)
	SubExpression -> LPAREN . SubExpression ')'	(Rule 156)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 197
	OP01_OPEN	shift, and go to state 120
	OP01_PRINT	shift, and go to state 198
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	HashDereference	go to state 119
	ArrayDereference	go to state 103
	ArrayReference	go to state 138
	Expression	go to state 153
	VariableSymbolOrSelf	go to state 104
	Operator	go to state 99
	SubExpression	go to state 199
	Variable	go to state 151
	Literal	go to state 130
	HashReference	go to state 95
	WordScoped	go to state 107

State 111:

	VariableDeclaration -> MY . Type VARIABLE_SYMBOL ';'	(Rule 194)
	VariableDeclaration -> MY . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExpIn	(Rule 195)
	VariableDeclaration -> MY . Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 196)
	VariableDeclaration -> MY . TYPE_FHREF FHREF_SYMBOL ';'	(Rule 197)

	TYPE_FHREF	shift, and go to state 203
	TYPE_INTEGER	shift, and go to state 204
	WORD	shift, and go to state 201
	WORD_SCOPED	shift, and go to state 202

	Type	go to state 200

State 112:

	Operation -> Statement .	(Rule 92)

	$default	reduce using rule 92 (Operation)

State 113:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 98)

	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94

	Variable	go to state 205
	VariableSymbolOrSelf	go to state 104

State 114:

	Operator -> OP05_LOGICAL_NEG . SubExpression	(Rule 102)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	Variable	go to state 151
	SubExpression	go to state 206
	Operator	go to state 99
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 153
	ArrayDereference	go to state 103
	ArrayReference	go to state 138
	HashDereference	go to state 119
	WordScoped	go to state 107
	HashReference	go to state 95
	Literal	go to state 130

State 115:

	Conditional -> 'if' . LPAREN SubExpression ')' CodeBlock STAR-46 OPTIONAL-48	(Rule 176)

	LPAREN	shift, and go to state 207

State 116:

	Operator -> OP01_CLOSE . FHREF_SYMBOL	(Rule 97)

	FHREF_SYMBOL	shift, and go to state 208

State 117:

	ArrayReference -> LBRACKET . OPTIONAL-53 ']'	(Rule 210)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	ARGV	shift, and go to state 186
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	MY	shift, and go to state 146
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP01_QW	shift, and go to state 181
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	']'	reduce using rule 209 (OPTIONAL-53)

	TypeInner	go to state 184
	HashDereference	go to state 119
	Operator	go to state 99
	Variable	go to state 151
	SubExpression	go to state 182
	ArrayDereference	go to state 103
	ArrayReference	go to state 138
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 153
	ListElement	go to state 183
	ListElements	go to state 210
	WordScoped	go to state 107
	Literal	go to state 130
	OPTIONAL-53	go to state 209
	HashReference	go to state 95

State 118:

	Expression -> CONSTANT_CALL_SCOPED .	(Rule 144)

	$default	reduce using rule 144 (Expression)

State 119:

	SubExpression -> HashDereference .	(Rule 155)

	$default	reduce using rule 155 (SubExpression)

State 120:

	Operator -> OP01_OPEN . MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 96)

	MY	shift, and go to state 211

State 121:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 135)

	WORD_UPPERCASE	shift, and go to state 213

	LoopLabel	go to state 212

State 122:

	Operation -> OP10_NAMED_UNARY_SCOLON .	(Rule 91)

	$default	reduce using rule 91 (Operation)

State 123:

	Operation -> OP01_NAMED_SCOLON .	(Rule 90)

	$default	reduce using rule 90 (Operation)

State 124:

	Statement -> VariableModification . ';'	(Rule 169)

	';'	shift, and go to state 214

State 125:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 126:

	Statement -> OPTIONAL-44 . Loop	(Rule 166)

	'for'	shift, and go to state 219
	'foreach'	shift, and go to state 221
	'while'	shift, and go to state 218

	LoopForEach	go to state 216
	LoopFor	go to state 220
	Loop	go to state 215
	LoopWhile	go to state 217

State 127:

	VariableSymbolOrSelf -> SELF .	(Rule 246)

	$default	reduce using rule 246 (VariableSymbolOrSelf)

State 128:

	OperatorVoid -> OP01_NAMED_VOID_SCOLON .	(Rule 130)

	$default	reduce using rule 130 (OperatorVoid)

State 129:

	Literal -> LITERAL_STRING .	(Rule 248)

	$default	reduce using rule 248 (Literal)

State 130:

	SubExpression -> Literal .	(Rule 150)

	$default	reduce using rule 150 (SubExpression)

State 131:

	SubExpression -> 'undef' .	(Rule 149)

	$default	reduce using rule 149 (SubExpression)

State 132:

	Statement -> OperatorVoid .	(Rule 167)

	$default	reduce using rule 167 (Statement)

State 133:

	Operator -> OP22_LOGICAL_NEG . SubExpression	(Rule 120)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	HashReference	go to state 95
	Literal	go to state 130
	WordScoped	go to state 107
	HashDereference	go to state 119
	Expression	go to state 153
	VariableSymbolOrSelf	go to state 104
	ArrayDereference	go to state 103
	ArrayReference	go to state 138
	Variable	go to state 151
	SubExpression	go to state 222
	Operator	go to state 99

State 134:

	OperatorVoid -> OP01_PRINT . OPTIONAL-38 ListElements ';'	(Rule 128)
	OperatorVoid -> OP01_PRINT . FHREF_SYMBOL_BRACES ListElements ';'	(Rule 129)

	FHREF_SYMBOL_BRACES	shift, and go to state 225
	STDOUT_STDERR	shift, and go to state 223

	'%{'	reduce using rule 125 (OPTIONAL-38)
	'@{'	reduce using rule 125 (OPTIONAL-38)
	'undef'	reduce using rule 125 (OPTIONAL-38)
	ARGV	reduce using rule 125 (OPTIONAL-38)
	CONSTANT_CALL_SCOPED	reduce using rule 125 (OPTIONAL-38)
	LBRACE	reduce using rule 125 (OPTIONAL-38)
	LBRACKET	reduce using rule 125 (OPTIONAL-38)
	LITERAL_NUMBER	reduce using rule 125 (OPTIONAL-38)
	LITERAL_STRING	reduce using rule 125 (OPTIONAL-38)
	LPAREN	reduce using rule 125 (OPTIONAL-38)
	MY	reduce using rule 125 (OPTIONAL-38)
	OP01_CLOSE	reduce using rule 125 (OPTIONAL-38)
	OP01_NAMED	reduce using rule 125 (OPTIONAL-38)
	OP01_OPEN	reduce using rule 125 (OPTIONAL-38)
	OP01_QW	reduce using rule 125 (OPTIONAL-38)
	OP03_MATH_INC_DEC	reduce using rule 125 (OPTIONAL-38)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 125 (OPTIONAL-38)
	OP05_LOGICAL_NEG	reduce using rule 125 (OPTIONAL-38)
	OP05_MATH_NEG_LPAREN	reduce using rule 125 (OPTIONAL-38)
	OP10_NAMED_UNARY	reduce using rule 125 (OPTIONAL-38)
	OP22_LOGICAL_NEG	reduce using rule 125 (OPTIONAL-38)
	SELF	reduce using rule 125 (OPTIONAL-38)
	VARIABLE_SYMBOL	reduce using rule 125 (OPTIONAL-38)
	WORD	reduce using rule 125 (OPTIONAL-38)
	WORD_SCOPED	reduce using rule 125 (OPTIONAL-38)
	WORD_UPPERCASE	reduce using rule 125 (OPTIONAL-38)

	PAREN-37	go to state 226
	OPTIONAL-38	go to state 224

State 135:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)

	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233
	OP14_BITWISE_OR_XOR	shift, and go to state 230
	OP15_LOGICAL_AND	shift, and go to state 237
	OP16_LOGICAL_OR	shift, and go to state 228
	OP17_LIST_RANGE	shift, and go to state 235
	OP18_TERNARY	shift, and go to state 232
	OP23_LOGICAL_AND	shift, and go to state 242
	OP24_LOGICAL_OR_XOR	shift, and go to state 243

State 136:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 99)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-41 ')'	(Rule 146)
	SubExpression -> Variable .	(Rule 151)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN SubExpressionOrInput	(Rule 198)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY SubExpression	(Rule 199)

	OP02_METHOD_THINARROW	shift, and go to state 245
	OP03_MATH_INC_DEC	shift, and go to state 244
	OP19_VARIABLE_ASSIGN	shift, and go to state 246
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 247

	')'	reduce using rule 151 (SubExpression)
	OP04_MATH_POW	reduce using rule 151 (SubExpression)
	OP06_REGEX_BIND	reduce using rule 151 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 151 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 151 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 151 (SubExpression)
	OP08_STRING_CAT	reduce using rule 151 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 151 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 151 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 151 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 151 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 151 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 151 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 151 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 151 (SubExpression)
	OP18_TERNARY	reduce using rule 151 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 151 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 151 (SubExpression)

State 137:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN . OPTIONAL-39 ')' ';'	(Rule 131)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	ARGV	shift, and go to state 186
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	MY	shift, and go to state 146
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP01_QW	shift, and go to state 181
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	')'	reduce using rule 127 (OPTIONAL-39)

	TypeInner	go to state 184
	HashDereference	go to state 119
	ArrayDereference	go to state 103
	ArrayReference	go to state 138
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 153
	Operator	go to state 99
	Variable	go to state 151
	SubExpression	go to state 182
	ListElement	go to state 183
	ListElements	go to state 248
	Literal	go to state 130
	OPTIONAL-39	go to state 249
	HashReference	go to state 95
	WordScoped	go to state 107

State 138:

	SubExpression -> ArrayReference .	(Rule 152)

	$default	reduce using rule 152 (SubExpression)

State 139:

	Operator -> OP01_NAMED . SubExpression	(Rule 94)
	OperatorVoid -> OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ';'	(Rule 133)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	ARGV	shift, and go to state 186
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	MY	shift, and go to state 146
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP01_QW	shift, and go to state 181
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	ListElement	go to state 250
	HashReference	go to state 95
	Literal	go to state 130
	WordScoped	go to state 107
	HashDereference	go to state 119
	TypeInner	go to state 184
	Expression	go to state 153
	VariableSymbolOrSelf	go to state 104
	ArrayDereference	go to state 103
	ArrayReference	go to state 138
	Variable	go to state 151
	SubExpression	go to state 251
	Operator	go to state 99

State 140:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 141:

	STAR-28 -> STAR-28 . Include	(Rule 66)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-26 OPTIONAL-27 STAR-28 . STAR-29 Properties STAR-30 LITERAL_NUMBER ';'	(Rule 72)

	USE	shift, and go to state 46

	'our hashref $properties'	reduce using rule 69 (STAR-29)
	'use constant'	reduce using rule 69 (STAR-29)

	Include	go to state 252
	STAR-29	go to state 253

State 142:

	Subroutine -> SUB WORD LBRACE LBRACE . MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-22 STAR-23 '}'	(Rule 57)

	MY	shift, and go to state 254

State 143:

	TypeInnerConstant -> MY . Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 239)

	TYPE_INTEGER	shift, and go to state 204
	WORD	shift, and go to state 201
	WORD_SCOPED	shift, and go to state 202

	Type	go to state 255

State 144:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant . Literal ';'	(Rule 52)

	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129

	Literal	go to state 256

State 145:

	ArrayDereference -> '@{' Variable . '}'	(Rule 213)

	'}'	shift, and go to state 257

State 146:

	TypeInner -> MY . Type '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN	(Rule 236)

	TYPE_INTEGER	shift, and go to state 204
	WORD	shift, and go to state 201
	WORD_SCOPED	shift, and go to state 202

	Type	go to state 258

State 147:

	ArrayDereference -> '@{' OPTIONAL-54 . ArrayReference '}'	(Rule 214)

	LBRACKET	shift, and go to state 117

	ArrayReference	go to state 259

State 148:

	OPTIONAL-54 -> TypeInner .	(Rule 211)

	$default	reduce using rule 211 (OPTIONAL-54)

State 149:

	Operator -> OP01_NAMED . SubExpression	(Rule 94)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	WordScoped	go to state 107
	HashReference	go to state 95
	Literal	go to state 130
	HashDereference	go to state 119
	Variable	go to state 151
	SubExpression	go to state 260
	Operator	go to state 99
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 153
	ArrayDereference	go to state 103
	ArrayReference	go to state 138

State 150:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> OP10_NAMED_UNARY SubExpression .	(Rule 110)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)

	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236

	')'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 110 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 110 (Operator)
	OP13_BITWISE_AND	reduce using rule 110 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 110 (Operator)
	OP15_LOGICAL_AND	reduce using rule 110 (Operator)
	OP16_LOGICAL_OR	reduce using rule 110 (Operator)
	OP17_LIST_RANGE	reduce using rule 110 (Operator)
	OP18_TERNARY	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP23_LOGICAL_AND	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 151:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 99)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-41 ')'	(Rule 146)
	SubExpression -> Variable .	(Rule 151)

	OP02_METHOD_THINARROW	shift, and go to state 245
	OP03_MATH_INC_DEC	shift, and go to state 244

	')'	reduce using rule 151 (SubExpression)
	';'	reduce using rule 151 (SubExpression)
	']'	reduce using rule 151 (SubExpression)
	'}'	reduce using rule 151 (SubExpression)
	OP04_MATH_POW	reduce using rule 151 (SubExpression)
	OP06_REGEX_BIND	reduce using rule 151 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 151 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 151 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 151 (SubExpression)
	OP08_STRING_CAT	reduce using rule 151 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 151 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 151 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 151 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 151 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 151 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 151 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 151 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 151 (SubExpression)
	OP18_TERNARY	reduce using rule 151 (SubExpression)
	OP21_LIST_COMMA	reduce using rule 151 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 151 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 151 (SubExpression)

State 152:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 143)

	LPAREN	shift, and go to state 180

State 153:

	SubExpression -> Expression .	(Rule 148)

	$default	reduce using rule 148 (SubExpression)

State 154:

	OpStringOrWord -> OP22_LOGICAL_NEG .	(Rule 257)

	$default	reduce using rule 257 (OpStringOrWord)

State 155:

	HashReference -> LBRACE HashEntry . STAR-57 '}'	(Rule 224)

	$default	reduce using rule 223 (STAR-57)

	STAR-57	go to state 261

State 156:

	OpStringOrWord -> OP01_PRINT .	(Rule 270)

	$default	reduce using rule 270 (OpStringOrWord)

State 157:

	VarOrLitOrOpStrOrWord -> Variable .	(Rule 242)

	$default	reduce using rule 242 (VarOrLitOrOpStrOrWord)

State 158:

	OpStringOrWord -> OP11_COMPARE_LT_GT .	(Rule 261)

	$default	reduce using rule 261 (OpStringOrWord)

State 159:

	OpStringOrWord -> OP07_STRING_REPEAT .	(Rule 265)

	$default	reduce using rule 265 (OpStringOrWord)

State 160:

	OpStringOrWord -> OP08_MATH_ADD_SUB .	(Rule 263)

	$default	reduce using rule 263 (OpStringOrWord)

State 161:

	OpStringOrWord -> OP01_NAMED .	(Rule 266)

	$default	reduce using rule 266 (OpStringOrWord)

State 162:

	VarOrLitOrOpStrOrWord -> Literal .	(Rule 243)

	$default	reduce using rule 243 (VarOrLitOrOpStrOrWord)

State 163:

	HashEntry -> HashDereference .	(Rule 218)

	$default	reduce using rule 218 (HashEntry)

State 164:

	OpStringOrWord -> OP01_OPEN .	(Rule 268)

	$default	reduce using rule 268 (OpStringOrWord)

State 165:

	OpStringOrWord -> OP19_LOOP_CONTROL .	(Rule 259)

	$default	reduce using rule 259 (OpStringOrWord)

State 166:

	OpStringOrWord -> OP24_LOGICAL_OR_XOR .	(Rule 255)

	$default	reduce using rule 255 (OpStringOrWord)

State 167:

	HashEntry -> ENV .	(Rule 219)

	$default	reduce using rule 219 (HashEntry)

State 168:

	VarOrLitOrOpStrOrWord -> OpStringOrWord .	(Rule 244)

	$default	reduce using rule 244 (VarOrLitOrOpStrOrWord)

State 169:

	OpStringOrWord -> OP12_COMPARE_EQ_NE .	(Rule 260)

	$default	reduce using rule 260 (OpStringOrWord)

State 170:

	OpStringOrWord -> OP23_LOGICAL_AND .	(Rule 256)

	$default	reduce using rule 256 (OpStringOrWord)

State 171:

	OpStringOrWord -> OP01_CLOSE .	(Rule 267)

	$default	reduce using rule 267 (OpStringOrWord)

State 172:

	OpStringOrWord -> OP07_MATH_MULT_DIV_MOD .	(Rule 264)

	$default	reduce using rule 264 (OpStringOrWord)

State 173:

	HashReference -> LBRACE '}' .	(Rule 225)

	$default	reduce using rule 225 (HashReference)

State 174:

	HashEntry -> VarOrLitOrOpStrOrWord . OP20_HASH_FATARROW OPTIONAL-55 SubExpression	(Rule 217)

	OP20_HASH_FATARROW	shift, and go to state 262

State 175:

	OpStringOrWord -> OP01_NAMED_VOID .	(Rule 269)

	$default	reduce using rule 269 (OpStringOrWord)

State 176:

	OpStringOrWord -> OP19_LOOP_CONTROL_SCOLON .	(Rule 258)

	$default	reduce using rule 258 (OpStringOrWord)

State 177:

	OpStringOrWord -> OP10_NAMED_UNARY .	(Rule 262)

	$default	reduce using rule 262 (OpStringOrWord)

State 178:

	OpStringOrWord -> WORD .	(Rule 271)

	$default	reduce using rule 271 (OpStringOrWord)

State 179:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> OP05_BITWISE_NEG_LPAREN SubExpression . ')'	(Rule 101)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)

	')'	shift, and go to state 263
	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233
	OP14_BITWISE_OR_XOR	shift, and go to state 230
	OP15_LOGICAL_AND	shift, and go to state 237
	OP16_LOGICAL_OR	shift, and go to state 228
	OP17_LIST_RANGE	shift, and go to state 235
	OP18_TERNARY	shift, and go to state 232
	OP23_LOGICAL_AND	shift, and go to state 242
	OP24_LOGICAL_OR_XOR	shift, and go to state 243

State 180:

	Expression -> WORD_UPPERCASE LPAREN . ')'	(Rule 143)

	')'	shift, and go to state 264

State 181:

	ListElement -> OP01_QW .	(Rule 206)

	$default	reduce using rule 206 (ListElement)

State 182:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)
	ListElement -> SubExpression .	(Rule 204)

	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233
	OP14_BITWISE_OR_XOR	shift, and go to state 230
	OP15_LOGICAL_AND	shift, and go to state 237
	OP16_LOGICAL_OR	shift, and go to state 228
	OP17_LIST_RANGE	shift, and go to state 235
	OP18_TERNARY	shift, and go to state 232
	OP23_LOGICAL_AND	shift, and go to state 242
	OP24_LOGICAL_OR_XOR	shift, and go to state 243

	')'	reduce using rule 204 (ListElement)
	';'	reduce using rule 204 (ListElement)
	']'	reduce using rule 204 (ListElement)
	OP21_LIST_COMMA	reduce using rule 204 (ListElement)

State 183:

	ListElements -> ListElement . STAR-52	(Rule 203)

	$default	reduce using rule 202 (STAR-52)

	STAR-52	go to state 265

State 184:

	ListElement -> TypeInner . SubExpression	(Rule 205)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	HashDereference	go to state 119
	SubExpression	go to state 266
	Variable	go to state 151
	Operator	go to state 99
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 153
	ArrayReference	go to state 138
	ArrayDereference	go to state 103
	WordScoped	go to state 107
	HashReference	go to state 95
	Literal	go to state 130

State 185:

	OperatorVoid -> OP01_NAMED_VOID ListElements . ';'	(Rule 132)

	';'	shift, and go to state 267

State 186:

	ListElement -> ARGV .	(Rule 207)

	$default	reduce using rule 207 (ListElement)

State 187:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 188:

	OPTIONAL-58 -> TypeInner .	(Rule 226)

	$default	reduce using rule 226 (OPTIONAL-58)

State 189:

	HashDereference -> '%{' OPTIONAL-58 . HashReference '}'	(Rule 229)

	LBRACE	shift, and go to state 90

	HashReference	go to state 268

State 190:

	HashDereference -> '%{' Variable . '}'	(Rule 228)

	'}'	shift, and go to state 269

State 191:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> OP05_MATH_NEG_LPAREN SubExpression . ')'	(Rule 103)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)

	')'	shift, and go to state 270
	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233
	OP14_BITWISE_OR_XOR	shift, and go to state 230
	OP15_LOGICAL_AND	shift, and go to state 237
	OP16_LOGICAL_OR	shift, and go to state 228
	OP17_LIST_RANGE	shift, and go to state 235
	OP18_TERNARY	shift, and go to state 232
	OP23_LOGICAL_AND	shift, and go to state 242
	OP24_LOGICAL_OR_XOR	shift, and go to state 243

State 192:

	STAR-50 -> STAR-50 . VariableRetrieval	(Rule 188)
	Variable -> VariableSymbolOrSelf STAR-50 .	(Rule 190)

	OP02_ARRAY_THINARROW	shift, and go to state 272
	OP02_HASH_THINARROW	shift, and go to state 273

	')'	reduce using rule 190 (Variable)
	';'	reduce using rule 190 (Variable)
	']'	reduce using rule 190 (Variable)
	'}'	reduce using rule 190 (Variable)
	COLON	reduce using rule 190 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 190 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 190 (Variable)
	OP04_MATH_POW	reduce using rule 190 (Variable)
	OP06_REGEX_BIND	reduce using rule 190 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 190 (Variable)
	OP07_STRING_REPEAT	reduce using rule 190 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 190 (Variable)
	OP08_STRING_CAT	reduce using rule 190 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 190 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 190 (Variable)
	OP12_COMPARE_EQ_NE	reduce using rule 190 (Variable)
	OP13_BITWISE_AND	reduce using rule 190 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 190 (Variable)
	OP15_LOGICAL_AND	reduce using rule 190 (Variable)
	OP16_LOGICAL_OR	reduce using rule 190 (Variable)
	OP17_LIST_RANGE	reduce using rule 190 (Variable)
	OP18_TERNARY	reduce using rule 190 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 190 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 190 (Variable)
	OP20_HASH_FATARROW	reduce using rule 190 (Variable)
	OP21_LIST_COMMA	reduce using rule 190 (Variable)
	OP23_LOGICAL_AND	reduce using rule 190 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 190 (Variable)

	VariableRetrieval	go to state 271

State 193:

	Operation -> Expression ';' .	(Rule 89)

	$default	reduce using rule 89 (Operation)

State 194:

	PAREN-43 -> LoopLabel COLON .	(Rule 162)

	$default	reduce using rule 162 (PAREN-43)

State 195:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW . OPTIONAL-42 ')'	(Rule 147)

	LBRACE	shift, and go to state 90

	')'	reduce using rule 141 (OPTIONAL-42)

	OPTIONAL-42	go to state 275
	HashReference	go to state 274

State 196:

	Expression -> WordScoped LPAREN . OPTIONAL-40 ')'	(Rule 145)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	ARGV	shift, and go to state 186
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	MY	shift, and go to state 146
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP01_QW	shift, and go to state 181
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	')'	reduce using rule 137 (OPTIONAL-40)

	ListElement	go to state 183
	ListElements	go to state 276
	Literal	go to state 130
	HashReference	go to state 95
	WordScoped	go to state 107
	TypeInner	go to state 184
	HashDereference	go to state 119
	OPTIONAL-40	go to state 277
	ArrayReference	go to state 138
	ArrayDereference	go to state 103
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 153
	Operator	go to state 99
	SubExpression	go to state 182
	Variable	go to state 151

State 197:

	Operator -> OP01_NAMED . SubExpression	(Rule 94)
	Operator -> LPAREN OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ')'	(Rule 95)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	ARGV	shift, and go to state 186
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	MY	shift, and go to state 146
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP01_QW	shift, and go to state 181
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	HashReference	go to state 95
	Literal	go to state 130
	WordScoped	go to state 107
	ListElement	go to state 278
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 153
	ArrayReference	go to state 138
	ArrayDereference	go to state 103
	Variable	go to state 151
	SubExpression	go to state 251
	Operator	go to state 99
	TypeInner	go to state 184
	HashDereference	go to state 119

State 198:

	Operator -> LPAREN OP01_PRINT . FHREF_SYMBOL_BRACES ListElements ')'	(Rule 93)

	FHREF_SYMBOL_BRACES	shift, and go to state 279

State 199:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)
	SubExpression -> LPAREN SubExpression . ')'	(Rule 156)

	')'	shift, and go to state 280
	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233
	OP14_BITWISE_OR_XOR	shift, and go to state 230
	OP15_LOGICAL_AND	shift, and go to state 237
	OP16_LOGICAL_OR	shift, and go to state 228
	OP17_LIST_RANGE	shift, and go to state 235
	OP18_TERNARY	shift, and go to state 232
	OP23_LOGICAL_AND	shift, and go to state 242
	OP24_LOGICAL_OR_XOR	shift, and go to state 243

State 200:

	VariableDeclaration -> MY Type . VARIABLE_SYMBOL ';'	(Rule 194)
	VariableDeclaration -> MY Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExpIn	(Rule 195)
	VariableDeclaration -> MY Type . VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 196)

	VARIABLE_SYMBOL	shift, and go to state 281

State 201:

	Type -> WORD .	(Rule 233)

	$default	reduce using rule 233 (Type)

State 202:

	Type -> WORD_SCOPED .	(Rule 234)

	$default	reduce using rule 234 (Type)

State 203:

	VariableDeclaration -> MY TYPE_FHREF . FHREF_SYMBOL ';'	(Rule 197)

	FHREF_SYMBOL	shift, and go to state 282

State 204:

	Type -> TYPE_INTEGER .	(Rule 235)

	$default	reduce using rule 235 (Type)

State 205:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 98)

	$default	reduce using rule 98 (Operator)

State 206:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> OP05_LOGICAL_NEG SubExpression .	(Rule 102)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)

	OP04_MATH_POW	shift, and go to state 234

	')'	reduce using rule 102 (Operator)
	';'	reduce using rule 102 (Operator)
	']'	reduce using rule 102 (Operator)
	'}'	reduce using rule 102 (Operator)
	OP06_REGEX_BIND	reduce using rule 102 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 102 (Operator)
	OP07_STRING_REPEAT	reduce using rule 102 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 102 (Operator)
	OP08_STRING_CAT	reduce using rule 102 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 102 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 102 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 102 (Operator)
	OP13_BITWISE_AND	reduce using rule 102 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 102 (Operator)
	OP15_LOGICAL_AND	reduce using rule 102 (Operator)
	OP16_LOGICAL_OR	reduce using rule 102 (Operator)
	OP17_LIST_RANGE	reduce using rule 102 (Operator)
	OP18_TERNARY	reduce using rule 102 (Operator)
	OP21_LIST_COMMA	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 207:

	Conditional -> 'if' LPAREN . SubExpression ')' CodeBlock STAR-46 OPTIONAL-48	(Rule 176)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	WordScoped	go to state 107
	Literal	go to state 130
	HashReference	go to state 95
	HashDereference	go to state 119
	Operator	go to state 99
	SubExpression	go to state 283
	Variable	go to state 151
	ArrayReference	go to state 138
	ArrayDereference	go to state 103
	Expression	go to state 153
	VariableSymbolOrSelf	go to state 104

State 208:

	Operator -> OP01_CLOSE FHREF_SYMBOL .	(Rule 97)

	$default	reduce using rule 97 (Operator)

State 209:

	ArrayReference -> LBRACKET OPTIONAL-53 . ']'	(Rule 210)

	']'	shift, and go to state 284

State 210:

	OPTIONAL-53 -> ListElements .	(Rule 208)

	$default	reduce using rule 208 (OPTIONAL-53)

State 211:

	Operator -> OP01_OPEN MY . TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 96)

	TYPE_FHREF	shift, and go to state 285

State 212:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 135)

	';'	shift, and go to state 286

State 213:

	LoopLabel -> WORD_UPPERCASE .	(Rule 232)

	$default	reduce using rule 232 (LoopLabel)

State 214:

	Statement -> VariableModification ';' .	(Rule 169)

	$default	reduce using rule 169 (Statement)

State 215:

	Statement -> OPTIONAL-44 Loop .	(Rule 166)

	$default	reduce using rule 166 (Statement)

State 216:

	Loop -> LoopForEach .	(Rule 178)

	$default	reduce using rule 178 (Loop)

State 217:

	Loop -> LoopWhile .	(Rule 179)

	$default	reduce using rule 179 (Loop)

State 218:

	LoopWhile -> 'while' . LPAREN SubExpression ')' CodeBlock	(Rule 183)
	LoopWhile -> 'while' . LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrInput ')' CodeBlock	(Rule 184)

	LPAREN	shift, and go to state 287
	LPAREN_MY	shift, and go to state 288

State 219:

	LoopFor -> 'for' . MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 180)
	LoopFor -> 'for' . LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 181)

	LPAREN_MY	shift, and go to state 289
	MY	shift, and go to state 290

State 220:

	Loop -> LoopFor .	(Rule 177)

	$default	reduce using rule 177 (Loop)

State 221:

	LoopForEach -> 'foreach' . MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 182)

	MY	shift, and go to state 291

State 222:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> OP22_LOGICAL_NEG SubExpression .	(Rule 120)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)

	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233
	OP14_BITWISE_OR_XOR	shift, and go to state 230
	OP15_LOGICAL_AND	shift, and go to state 237
	OP16_LOGICAL_OR	shift, and go to state 228
	OP17_LIST_RANGE	shift, and go to state 235
	OP18_TERNARY	shift, and go to state 232

	')'	reduce using rule 120 (Operator)
	';'	reduce using rule 120 (Operator)
	']'	reduce using rule 120 (Operator)
	'}'	reduce using rule 120 (Operator)
	OP21_LIST_COMMA	reduce using rule 120 (Operator)
	OP23_LOGICAL_AND	reduce using rule 120 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 120 (Operator)

State 223:

	PAREN-37 -> STDOUT_STDERR .	(Rule 123)

	$default	reduce using rule 123 (PAREN-37)

State 224:

	OperatorVoid -> OP01_PRINT OPTIONAL-38 . ListElements ';'	(Rule 128)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	ARGV	shift, and go to state 186
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	MY	shift, and go to state 146
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP01_QW	shift, and go to state 181
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	ArrayReference	go to state 138
	ArrayDereference	go to state 103
	Expression	go to state 153
	VariableSymbolOrSelf	go to state 104
	Operator	go to state 99
	SubExpression	go to state 182
	Variable	go to state 151
	HashDereference	go to state 119
	TypeInner	go to state 184
	Literal	go to state 130
	HashReference	go to state 95
	WordScoped	go to state 107
	ListElement	go to state 183
	ListElements	go to state 292

State 225:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES . ListElements ';'	(Rule 129)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	ARGV	shift, and go to state 186
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	MY	shift, and go to state 146
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP01_QW	shift, and go to state 181
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	HashReference	go to state 95
	Literal	go to state 130
	WordScoped	go to state 107
	ListElements	go to state 293
	ListElement	go to state 183
	Expression	go to state 153
	VariableSymbolOrSelf	go to state 104
	ArrayReference	go to state 138
	ArrayDereference	go to state 103
	Variable	go to state 151
	SubExpression	go to state 182
	Operator	go to state 99
	HashDereference	go to state 119
	TypeInner	go to state 184

State 226:

	OPTIONAL-38 -> PAREN-37 .	(Rule 124)

	$default	reduce using rule 124 (OPTIONAL-38)

State 227:

	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD . SubExpression	(Rule 106)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	HashDereference	go to state 119
	Operator	go to state 99
	SubExpression	go to state 294
	Variable	go to state 151
	ArrayReference	go to state 138
	ArrayDereference	go to state 103
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 153
	WordScoped	go to state 107
	Literal	go to state 130
	HashReference	go to state 95

State 228:

	Operator -> SubExpression OP16_LOGICAL_OR . SubExpression	(Rule 117)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	WordScoped	go to state 107
	Literal	go to state 130
	HashReference	go to state 95
	HashDereference	go to state 119
	Operator	go to state 99
	Variable	go to state 151
	SubExpression	go to state 295
	ArrayDereference	go to state 103
	ArrayReference	go to state 138
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 153

State 229:

	Operator -> SubExpression OP08_STRING_CAT . SubExpression	(Rule 108)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	HashDereference	go to state 119
	Operator	go to state 99
	SubExpression	go to state 296
	Variable	go to state 151
	ArrayReference	go to state 138
	ArrayDereference	go to state 103
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 153
	WordScoped	go to state 107
	Literal	go to state 130
	HashReference	go to state 95

State 230:

	Operator -> SubExpression OP14_BITWISE_OR_XOR . SubExpression	(Rule 115)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	WordScoped	go to state 107
	Literal	go to state 130
	HashReference	go to state 95
	Operator	go to state 99
	Variable	go to state 151
	SubExpression	go to state 297
	ArrayDereference	go to state 103
	ArrayReference	go to state 138
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 153
	HashDereference	go to state 119

State 231:

	Operator -> SubExpression OP06_REGEX_BIND . OP06_REGEX_PATTERN	(Rule 104)

	OP06_REGEX_PATTERN	shift, and go to state 298

State 232:

	Operator -> SubExpression OP18_TERNARY . VariableOrLiteral COLON VariableOrLiteral	(Rule 119)

	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94

	Variable	go to state 299
	Literal	go to state 300
	VariableSymbolOrSelf	go to state 104
	VariableOrLiteral	go to state 301

State 233:

	Operator -> SubExpression OP13_BITWISE_AND . SubExpression	(Rule 114)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	HashDereference	go to state 119
	Expression	go to state 153
	VariableSymbolOrSelf	go to state 104
	ArrayReference	go to state 138
	ArrayDereference	go to state 103
	SubExpression	go to state 302
	Variable	go to state 151
	Operator	go to state 99
	HashReference	go to state 95
	Literal	go to state 130
	WordScoped	go to state 107

State 234:

	Operator -> SubExpression OP04_MATH_POW . SubExpression	(Rule 100)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	Operator	go to state 99
	Variable	go to state 151
	SubExpression	go to state 303
	ArrayDereference	go to state 103
	ArrayReference	go to state 138
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 153
	HashDereference	go to state 119
	WordScoped	go to state 107
	Literal	go to state 130
	HashReference	go to state 95

State 235:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 118)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	HashDereference	go to state 119
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 153
	ArrayReference	go to state 138
	ArrayDereference	go to state 103
	SubExpression	go to state 304
	Variable	go to state 151
	Operator	go to state 99
	HashReference	go to state 95
	Literal	go to state 130
	WordScoped	go to state 107

State 236:

	Operator -> SubExpression OP09_BITWISE_SHIFT . SubExpression	(Rule 109)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	Literal	go to state 130
	HashReference	go to state 95
	WordScoped	go to state 107
	HashDereference	go to state 119
	ArrayReference	go to state 138
	ArrayDereference	go to state 103
	Expression	go to state 153
	VariableSymbolOrSelf	go to state 104
	Operator	go to state 99
	Variable	go to state 151
	SubExpression	go to state 305

State 237:

	Operator -> SubExpression OP15_LOGICAL_AND . SubExpression	(Rule 116)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	Literal	go to state 130
	HashReference	go to state 95
	WordScoped	go to state 107
	HashDereference	go to state 119
	ArrayDereference	go to state 103
	ArrayReference	go to state 138
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 153
	Operator	go to state 99
	Variable	go to state 151
	SubExpression	go to state 306

State 238:

	Operator -> SubExpression OP07_STRING_REPEAT . SubExpression	(Rule 105)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	Literal	go to state 130
	HashReference	go to state 95
	WordScoped	go to state 107
	ArrayDereference	go to state 103
	ArrayReference	go to state 138
	Expression	go to state 153
	VariableSymbolOrSelf	go to state 104
	Operator	go to state 99
	Variable	go to state 151
	SubExpression	go to state 307
	HashDereference	go to state 119

State 239:

	Operator -> SubExpression OP08_MATH_ADD_SUB . SubExpression	(Rule 107)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	HashDereference	go to state 119
	Operator	go to state 99
	SubExpression	go to state 308
	Variable	go to state 151
	ArrayDereference	go to state 103
	ArrayReference	go to state 138
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 153
	WordScoped	go to state 107
	Literal	go to state 130
	HashReference	go to state 95

State 240:

	Operator -> SubExpression OP11_COMPARE_LT_GT . SubExpression	(Rule 112)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	HashReference	go to state 95
	Literal	go to state 130
	WordScoped	go to state 107
	Expression	go to state 153
	VariableSymbolOrSelf	go to state 104
	ArrayReference	go to state 138
	ArrayDereference	go to state 103
	Variable	go to state 151
	SubExpression	go to state 309
	Operator	go to state 99
	HashDereference	go to state 119

State 241:

	Operator -> SubExpression OP12_COMPARE_EQ_NE . SubExpression	(Rule 113)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	HashReference	go to state 95
	Literal	go to state 130
	WordScoped	go to state 107
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 153
	ArrayDereference	go to state 103
	ArrayReference	go to state 138
	SubExpression	go to state 310
	Variable	go to state 151
	Operator	go to state 99
	HashDereference	go to state 119

State 242:

	Operator -> SubExpression OP23_LOGICAL_AND . SubExpression	(Rule 121)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	HashDereference	go to state 119
	Variable	go to state 151
	SubExpression	go to state 311
	Operator	go to state 99
	Expression	go to state 153
	VariableSymbolOrSelf	go to state 104
	ArrayDereference	go to state 103
	ArrayReference	go to state 138
	WordScoped	go to state 107
	HashReference	go to state 95
	Literal	go to state 130

State 243:

	Operator -> SubExpression OP24_LOGICAL_OR_XOR . SubExpression	(Rule 122)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	HashDereference	go to state 119
	ArrayDereference	go to state 103
	ArrayReference	go to state 138
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 153
	Operator	go to state 99
	Variable	go to state 151
	SubExpression	go to state 312
	Literal	go to state 130
	HashReference	go to state 95
	WordScoped	go to state 107

State 244:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 99)

	$default	reduce using rule 99 (Operator)

State 245:

	Expression -> Variable OP02_METHOD_THINARROW . LPAREN OPTIONAL-41 ')'	(Rule 146)

	LPAREN	shift, and go to state 313

State 246:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . SubExpressionOrInput	(Rule 198)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	FHREF_SYMBOL_IN	shift, and go to state 316
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	STDIN	shift, and go to state 314
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	WordScoped	go to state 107
	HashReference	go to state 95
	Literal	go to state 130
	HashDereference	go to state 119
	Variable	go to state 151
	SubExpression	go to state 315
	SubExpressionOrInput	go to state 317
	Operator	go to state 99
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 153
	ArrayDereference	go to state 103
	ArrayReference	go to state 138

State 247:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . SubExpression	(Rule 199)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	HashDereference	go to state 119
	Expression	go to state 153
	VariableSymbolOrSelf	go to state 104
	ArrayDereference	go to state 103
	ArrayReference	go to state 138
	SubExpression	go to state 318
	Variable	go to state 151
	Operator	go to state 99
	HashReference	go to state 95
	Literal	go to state 130
	WordScoped	go to state 107

State 248:

	OPTIONAL-39 -> ListElements .	(Rule 126)

	$default	reduce using rule 126 (OPTIONAL-39)

State 249:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-39 . ')' ';'	(Rule 131)

	')'	shift, and go to state 319

State 250:

	OperatorVoid -> OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ';'	(Rule 133)

	OP21_LIST_COMMA	shift, and go to state 320

State 251:

	Operator -> OP01_NAMED SubExpression .	(Rule 94)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)
	ListElement -> SubExpression .	(Rule 204)

	')'	reduce using rule 94 (Operator)
	';'	reduce using rule 94 (Operator)
	OP04_MATH_POW	reduce using rule 94 (Operator)
	OP06_REGEX_BIND	reduce using rule 94 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 94 (Operator)
	OP07_STRING_REPEAT	reduce using rule 94 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 94 (Operator)
	OP08_STRING_CAT	reduce using rule 94 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 94 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 94 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 94 (Operator)
	OP13_BITWISE_AND	reduce using rule 94 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 94 (Operator)
	OP15_LOGICAL_AND	reduce using rule 94 (Operator)
	OP16_LOGICAL_OR	reduce using rule 94 (Operator)
	OP17_LIST_RANGE	reduce using rule 94 (Operator)
	OP18_TERNARY	reduce using rule 94 (Operator)
	OP21_LIST_COMMA	reduce using rule 204 (ListElement)
	OP23_LOGICAL_AND	reduce using rule 94 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 94 (Operator)

State 252:

	STAR-28 -> STAR-28 Include .	(Rule 66)

	$default	reduce using rule 66 (STAR-28)

State 253:

	STAR-29 -> STAR-29 . Constant	(Rule 68)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-26 OPTIONAL-27 STAR-28 STAR-29 . Properties STAR-30 LITERAL_NUMBER ';'	(Rule 72)

	'our hashref $properties'	shift, and go to state 321
	'use constant'	shift, and go to state 63

	Properties	go to state 322
	Constant	go to state 323

State 254:

	Subroutine -> SUB WORD LBRACE LBRACE MY . Type '$RETURN_TYPE' '}' ';' OPTIONAL-22 STAR-23 '}'	(Rule 57)

	TYPE_INTEGER	shift, and go to state 204
	WORD	shift, and go to state 201
	WORD_SCOPED	shift, and go to state 202

	Type	go to state 324

State 255:

	TypeInnerConstant -> MY Type . '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 239)

	'$TYPED_'	shift, and go to state 325

State 256:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal . ';'	(Rule 52)

	';'	shift, and go to state 326

State 257:

	ArrayDereference -> '@{' Variable '}' .	(Rule 213)

	$default	reduce using rule 213 (ArrayDereference)

State 258:

	TypeInner -> MY Type . '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN	(Rule 236)

	'$TYPED_'	shift, and go to state 327

State 259:

	ArrayDereference -> '@{' OPTIONAL-54 ArrayReference . '}'	(Rule 214)

	'}'	shift, and go to state 328

State 260:

	Operator -> OP01_NAMED SubExpression .	(Rule 94)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)

	')'	reduce using rule 94 (Operator)
	';'	reduce using rule 94 (Operator)
	']'	reduce using rule 94 (Operator)
	'}'	reduce using rule 94 (Operator)
	OP04_MATH_POW	reduce using rule 94 (Operator)
	OP06_REGEX_BIND	reduce using rule 94 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 94 (Operator)
	OP07_STRING_REPEAT	reduce using rule 94 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 94 (Operator)
	OP08_STRING_CAT	reduce using rule 94 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 94 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 94 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 94 (Operator)
	OP13_BITWISE_AND	reduce using rule 94 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 94 (Operator)
	OP15_LOGICAL_AND	reduce using rule 94 (Operator)
	OP16_LOGICAL_OR	reduce using rule 94 (Operator)
	OP17_LIST_RANGE	reduce using rule 94 (Operator)
	OP18_TERNARY	reduce using rule 94 (Operator)
	OP21_LIST_COMMA	reduce using rule 94 (Operator)
	OP23_LOGICAL_AND	reduce using rule 94 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 94 (Operator)

State 261:

	STAR-57 -> STAR-57 . PAREN-56	(Rule 222)
	HashReference -> LBRACE HashEntry STAR-57 . '}'	(Rule 224)

	'}'	shift, and go to state 330
	OP21_LIST_COMMA	shift, and go to state 329

	PAREN-56	go to state 331

State 262:

	HashEntry -> VarOrLitOrOpStrOrWord OP20_HASH_FATARROW . OPTIONAL-55 SubExpression	(Rule 217)

	MY	shift, and go to state 146

	'%{'	reduce using rule 216 (OPTIONAL-55)
	'@{'	reduce using rule 216 (OPTIONAL-55)
	'undef'	reduce using rule 216 (OPTIONAL-55)
	CONSTANT_CALL_SCOPED	reduce using rule 216 (OPTIONAL-55)
	LBRACE	reduce using rule 216 (OPTIONAL-55)
	LBRACKET	reduce using rule 216 (OPTIONAL-55)
	LITERAL_NUMBER	reduce using rule 216 (OPTIONAL-55)
	LITERAL_STRING	reduce using rule 216 (OPTIONAL-55)
	LPAREN	reduce using rule 216 (OPTIONAL-55)
	OP01_CLOSE	reduce using rule 216 (OPTIONAL-55)
	OP01_NAMED	reduce using rule 216 (OPTIONAL-55)
	OP01_OPEN	reduce using rule 216 (OPTIONAL-55)
	OP03_MATH_INC_DEC	reduce using rule 216 (OPTIONAL-55)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 216 (OPTIONAL-55)
	OP05_LOGICAL_NEG	reduce using rule 216 (OPTIONAL-55)
	OP05_MATH_NEG_LPAREN	reduce using rule 216 (OPTIONAL-55)
	OP10_NAMED_UNARY	reduce using rule 216 (OPTIONAL-55)
	OP22_LOGICAL_NEG	reduce using rule 216 (OPTIONAL-55)
	SELF	reduce using rule 216 (OPTIONAL-55)
	VARIABLE_SYMBOL	reduce using rule 216 (OPTIONAL-55)
	WORD	reduce using rule 216 (OPTIONAL-55)
	WORD_SCOPED	reduce using rule 216 (OPTIONAL-55)
	WORD_UPPERCASE	reduce using rule 216 (OPTIONAL-55)

	TypeInner	go to state 333
	OPTIONAL-55	go to state 332

State 263:

	Operator -> OP05_BITWISE_NEG_LPAREN SubExpression ')' .	(Rule 101)

	$default	reduce using rule 101 (Operator)

State 264:

	Expression -> WORD_UPPERCASE LPAREN ')' .	(Rule 143)

	$default	reduce using rule 143 (Expression)

State 265:

	STAR-52 -> STAR-52 . PAREN-51	(Rule 201)
	ListElements -> ListElement STAR-52 .	(Rule 203)

	OP21_LIST_COMMA	shift, and go to state 335

	')'	reduce using rule 203 (ListElements)
	';'	reduce using rule 203 (ListElements)
	']'	reduce using rule 203 (ListElements)

	PAREN-51	go to state 334

State 266:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)
	ListElement -> TypeInner SubExpression .	(Rule 205)

	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233
	OP14_BITWISE_OR_XOR	shift, and go to state 230
	OP15_LOGICAL_AND	shift, and go to state 237
	OP16_LOGICAL_OR	shift, and go to state 228
	OP17_LIST_RANGE	shift, and go to state 235
	OP18_TERNARY	shift, and go to state 232
	OP23_LOGICAL_AND	shift, and go to state 242
	OP24_LOGICAL_OR_XOR	shift, and go to state 243

	')'	reduce using rule 205 (ListElement)
	';'	reduce using rule 205 (ListElement)
	']'	reduce using rule 205 (ListElement)
	OP21_LIST_COMMA	reduce using rule 205 (ListElement)

State 267:

	OperatorVoid -> OP01_NAMED_VOID ListElements ';' .	(Rule 132)

	$default	reduce using rule 132 (OperatorVoid)

State 268:

	HashDereference -> '%{' OPTIONAL-58 HashReference . '}'	(Rule 229)

	'}'	shift, and go to state 336

State 269:

	HashDereference -> '%{' Variable '}' .	(Rule 228)

	$default	reduce using rule 228 (HashDereference)

State 270:

	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')' .	(Rule 103)

	$default	reduce using rule 103 (Operator)

State 271:

	STAR-50 -> STAR-50 VariableRetrieval .	(Rule 188)

	$default	reduce using rule 188 (STAR-50)

State 272:

	VariableRetrieval -> OP02_ARRAY_THINARROW . SubExpression ']'	(Rule 191)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	WordScoped	go to state 107
	Literal	go to state 130
	HashReference	go to state 95
	Operator	go to state 99
	Variable	go to state 151
	SubExpression	go to state 337
	ArrayDereference	go to state 103
	ArrayReference	go to state 138
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 153
	HashDereference	go to state 119

State 273:

	VariableRetrieval -> OP02_HASH_THINARROW . SubExpression '}'	(Rule 192)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 193)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 339
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	HashReference	go to state 95
	Literal	go to state 130
	WordScoped	go to state 107
	HashDereference	go to state 119
	Expression	go to state 153
	VariableSymbolOrSelf	go to state 104
	ArrayDereference	go to state 103
	ArrayReference	go to state 138
	SubExpression	go to state 338
	Variable	go to state 151
	Operator	go to state 99

State 274:

	OPTIONAL-42 -> HashReference .	(Rule 140)

	$default	reduce using rule 140 (OPTIONAL-42)

State 275:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW OPTIONAL-42 . ')'	(Rule 147)

	')'	shift, and go to state 340

State 276:

	OPTIONAL-40 -> ListElements .	(Rule 136)

	$default	reduce using rule 136 (OPTIONAL-40)

State 277:

	Expression -> WordScoped LPAREN OPTIONAL-40 . ')'	(Rule 145)

	')'	shift, and go to state 341

State 278:

	Operator -> LPAREN OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ')'	(Rule 95)

	OP21_LIST_COMMA	shift, and go to state 342

State 279:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES . ListElements ')'	(Rule 93)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	ARGV	shift, and go to state 186
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	MY	shift, and go to state 146
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP01_QW	shift, and go to state 181
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	ListElements	go to state 343
	ListElement	go to state 183
	WordScoped	go to state 107
	HashReference	go to state 95
	Literal	go to state 130
	HashDereference	go to state 119
	TypeInner	go to state 184
	SubExpression	go to state 182
	Variable	go to state 151
	Operator	go to state 99
	Expression	go to state 153
	VariableSymbolOrSelf	go to state 104
	ArrayReference	go to state 138
	ArrayDereference	go to state 103

State 280:

	SubExpression -> LPAREN SubExpression ')' .	(Rule 156)

	$default	reduce using rule 156 (SubExpression)

State 281:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL . ';'	(Rule 194)
	VariableDeclaration -> MY Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExpIn	(Rule 195)
	VariableDeclaration -> MY Type VARIABLE_SYMBOL . OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 196)

	';'	shift, and go to state 345
	OP02_ARRAY_THINARROW	shift, and go to state 344
	OP19_VARIABLE_ASSIGN	shift, and go to state 346

State 282:

	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL . ';'	(Rule 197)

	';'	shift, and go to state 347

State 283:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)
	Conditional -> 'if' LPAREN SubExpression . ')' CodeBlock STAR-46 OPTIONAL-48	(Rule 176)

	')'	shift, and go to state 348
	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233
	OP14_BITWISE_OR_XOR	shift, and go to state 230
	OP15_LOGICAL_AND	shift, and go to state 237
	OP16_LOGICAL_OR	shift, and go to state 228
	OP17_LIST_RANGE	shift, and go to state 235
	OP18_TERNARY	shift, and go to state 232
	OP23_LOGICAL_AND	shift, and go to state 242
	OP24_LOGICAL_OR_XOR	shift, and go to state 243

State 284:

	ArrayReference -> LBRACKET OPTIONAL-53 ']' .	(Rule 210)

	$default	reduce using rule 210 (ArrayReference)

State 285:

	Operator -> OP01_OPEN MY TYPE_FHREF . FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 96)

	FHREF_SYMBOL	shift, and go to state 349

State 286:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 135)

	$default	reduce using rule 135 (OperatorVoid)

State 287:

	LoopWhile -> 'while' LPAREN . SubExpression ')' CodeBlock	(Rule 183)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	WordScoped	go to state 107
	HashReference	go to state 95
	Literal	go to state 130
	Variable	go to state 151
	SubExpression	go to state 350
	Operator	go to state 99
	Expression	go to state 153
	VariableSymbolOrSelf	go to state 104
	ArrayDereference	go to state 103
	ArrayReference	go to state 138
	HashDereference	go to state 119

State 288:

	LoopWhile -> 'while' LPAREN_MY . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrInput ')' CodeBlock	(Rule 184)

	TYPE_INTEGER	shift, and go to state 204
	WORD	shift, and go to state 201
	WORD_SCOPED	shift, and go to state 202

	Type	go to state 351

State 289:

	LoopFor -> 'for' LPAREN_MY . TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 181)

	TYPE_INTEGER	shift, and go to state 352

State 290:

	LoopFor -> 'for' MY . TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 180)

	TYPE_INTEGER	shift, and go to state 353

State 291:

	LoopForEach -> 'foreach' MY . Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 182)

	TYPE_INTEGER	shift, and go to state 204
	WORD	shift, and go to state 201
	WORD_SCOPED	shift, and go to state 202

	Type	go to state 354

State 292:

	OperatorVoid -> OP01_PRINT OPTIONAL-38 ListElements . ';'	(Rule 128)

	';'	shift, and go to state 355

State 293:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements . ';'	(Rule 129)

	';'	shift, and go to state 356

State 294:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression .	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)

	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_STRING_REPEAT	shift, and go to state 238

	')'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 106 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 106 (Operator)
	OP08_STRING_CAT	reduce using rule 106 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 106 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 106 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 106 (Operator)
	OP13_BITWISE_AND	reduce using rule 106 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 106 (Operator)
	OP15_LOGICAL_AND	reduce using rule 106 (Operator)
	OP16_LOGICAL_OR	reduce using rule 106 (Operator)
	OP17_LIST_RANGE	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 295:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression OP16_LOGICAL_OR SubExpression .	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)

	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233
	OP14_BITWISE_OR_XOR	shift, and go to state 230
	OP15_LOGICAL_AND	shift, and go to state 237

	')'	reduce using rule 117 (Operator)
	';'	reduce using rule 117 (Operator)
	']'	reduce using rule 117 (Operator)
	'}'	reduce using rule 117 (Operator)
	OP16_LOGICAL_OR	reduce using rule 117 (Operator)
	OP17_LIST_RANGE	reduce using rule 117 (Operator)
	OP18_TERNARY	reduce using rule 117 (Operator)
	OP21_LIST_COMMA	reduce using rule 117 (Operator)
	OP23_LOGICAL_AND	reduce using rule 117 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 117 (Operator)

State 296:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression OP08_STRING_CAT SubExpression .	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)

	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239

	')'	reduce using rule 108 (Operator)
	';'	reduce using rule 108 (Operator)
	']'	reduce using rule 108 (Operator)
	'}'	reduce using rule 108 (Operator)
	OP08_STRING_CAT	reduce using rule 108 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 108 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 108 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 108 (Operator)
	OP13_BITWISE_AND	reduce using rule 108 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 108 (Operator)
	OP15_LOGICAL_AND	reduce using rule 108 (Operator)
	OP16_LOGICAL_OR	reduce using rule 108 (Operator)
	OP17_LIST_RANGE	reduce using rule 108 (Operator)
	OP18_TERNARY	reduce using rule 108 (Operator)
	OP21_LIST_COMMA	reduce using rule 108 (Operator)
	OP23_LOGICAL_AND	reduce using rule 108 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 108 (Operator)

State 297:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression .	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)

	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233

	')'	reduce using rule 115 (Operator)
	';'	reduce using rule 115 (Operator)
	']'	reduce using rule 115 (Operator)
	'}'	reduce using rule 115 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 115 (Operator)
	OP15_LOGICAL_AND	reduce using rule 115 (Operator)
	OP16_LOGICAL_OR	reduce using rule 115 (Operator)
	OP17_LIST_RANGE	reduce using rule 115 (Operator)
	OP18_TERNARY	reduce using rule 115 (Operator)
	OP21_LIST_COMMA	reduce using rule 115 (Operator)
	OP23_LOGICAL_AND	reduce using rule 115 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 115 (Operator)

State 298:

	Operator -> SubExpression OP06_REGEX_BIND OP06_REGEX_PATTERN .	(Rule 104)

	$default	reduce using rule 104 (Operator)

State 299:

	VariableOrLiteral -> Variable .	(Rule 240)

	$default	reduce using rule 240 (VariableOrLiteral)

State 300:

	VariableOrLiteral -> Literal .	(Rule 241)

	$default	reduce using rule 241 (VariableOrLiteral)

State 301:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral . COLON VariableOrLiteral	(Rule 119)

	COLON	shift, and go to state 357

State 302:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression OP13_BITWISE_AND SubExpression .	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)

	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241

	')'	reduce using rule 114 (Operator)
	';'	reduce using rule 114 (Operator)
	']'	reduce using rule 114 (Operator)
	'}'	reduce using rule 114 (Operator)
	OP13_BITWISE_AND	reduce using rule 114 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 114 (Operator)
	OP15_LOGICAL_AND	reduce using rule 114 (Operator)
	OP16_LOGICAL_OR	reduce using rule 114 (Operator)
	OP17_LIST_RANGE	reduce using rule 114 (Operator)
	OP18_TERNARY	reduce using rule 114 (Operator)
	OP21_LIST_COMMA	reduce using rule 114 (Operator)
	OP23_LOGICAL_AND	reduce using rule 114 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 114 (Operator)

State 303:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression OP04_MATH_POW SubExpression .	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)

	OP04_MATH_POW	shift, and go to state 234

	')'	reduce using rule 100 (Operator)
	';'	reduce using rule 100 (Operator)
	']'	reduce using rule 100 (Operator)
	'}'	reduce using rule 100 (Operator)
	OP06_REGEX_BIND	reduce using rule 100 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 100 (Operator)
	OP07_STRING_REPEAT	reduce using rule 100 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 100 (Operator)
	OP08_STRING_CAT	reduce using rule 100 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 100 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 100 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 100 (Operator)
	OP13_BITWISE_AND	reduce using rule 100 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 100 (Operator)
	OP15_LOGICAL_AND	reduce using rule 100 (Operator)
	OP16_LOGICAL_OR	reduce using rule 100 (Operator)
	OP17_LIST_RANGE	reduce using rule 100 (Operator)
	OP18_TERNARY	reduce using rule 100 (Operator)
	OP21_LIST_COMMA	reduce using rule 100 (Operator)
	OP23_LOGICAL_AND	reduce using rule 100 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 100 (Operator)

State 304:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)

	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233
	OP14_BITWISE_OR_XOR	shift, and go to state 230
	OP15_LOGICAL_AND	shift, and go to state 237
	OP16_LOGICAL_OR	shift, and go to state 228

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 118 (Operator)
	';'	reduce using rule 118 (Operator)
	']'	reduce using rule 118 (Operator)
	'}'	reduce using rule 118 (Operator)
	OP18_TERNARY	reduce using rule 118 (Operator)
	OP21_LIST_COMMA	reduce using rule 118 (Operator)
	OP23_LOGICAL_AND	reduce using rule 118 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 118 (Operator)

State 305:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression .	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)

	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229

	')'	reduce using rule 109 (Operator)
	';'	reduce using rule 109 (Operator)
	']'	reduce using rule 109 (Operator)
	'}'	reduce using rule 109 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 109 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 109 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 109 (Operator)
	OP13_BITWISE_AND	reduce using rule 109 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 109 (Operator)
	OP15_LOGICAL_AND	reduce using rule 109 (Operator)
	OP16_LOGICAL_OR	reduce using rule 109 (Operator)
	OP17_LIST_RANGE	reduce using rule 109 (Operator)
	OP18_TERNARY	reduce using rule 109 (Operator)
	OP21_LIST_COMMA	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 306:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression OP15_LOGICAL_AND SubExpression .	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)

	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233
	OP14_BITWISE_OR_XOR	shift, and go to state 230

	')'	reduce using rule 116 (Operator)
	';'	reduce using rule 116 (Operator)
	']'	reduce using rule 116 (Operator)
	'}'	reduce using rule 116 (Operator)
	OP15_LOGICAL_AND	reduce using rule 116 (Operator)
	OP16_LOGICAL_OR	reduce using rule 116 (Operator)
	OP17_LIST_RANGE	reduce using rule 116 (Operator)
	OP18_TERNARY	reduce using rule 116 (Operator)
	OP21_LIST_COMMA	reduce using rule 116 (Operator)
	OP23_LOGICAL_AND	reduce using rule 116 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 116 (Operator)

State 307:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression OP07_STRING_REPEAT SubExpression .	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)

	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231

	')'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 105 (Operator)
	OP07_STRING_REPEAT	reduce using rule 105 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 105 (Operator)
	OP08_STRING_CAT	reduce using rule 105 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 105 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 105 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 105 (Operator)
	OP13_BITWISE_AND	reduce using rule 105 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 105 (Operator)
	OP15_LOGICAL_AND	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 308:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression .	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)

	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238

	')'	reduce using rule 107 (Operator)
	';'	reduce using rule 107 (Operator)
	']'	reduce using rule 107 (Operator)
	'}'	reduce using rule 107 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 107 (Operator)
	OP08_STRING_CAT	reduce using rule 107 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 107 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 107 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 107 (Operator)
	OP13_BITWISE_AND	reduce using rule 107 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 107 (Operator)
	OP15_LOGICAL_AND	reduce using rule 107 (Operator)
	OP16_LOGICAL_OR	reduce using rule 107 (Operator)
	OP17_LIST_RANGE	reduce using rule 107 (Operator)
	OP18_TERNARY	reduce using rule 107 (Operator)
	OP21_LIST_COMMA	reduce using rule 107 (Operator)
	OP23_LOGICAL_AND	reduce using rule 107 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 107 (Operator)

State 309:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression .	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)

	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 112 (Operator)
	';'	reduce using rule 112 (Operator)
	']'	reduce using rule 112 (Operator)
	'}'	reduce using rule 112 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 112 (Operator)
	OP13_BITWISE_AND	reduce using rule 112 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 112 (Operator)
	OP15_LOGICAL_AND	reduce using rule 112 (Operator)
	OP16_LOGICAL_OR	reduce using rule 112 (Operator)
	OP17_LIST_RANGE	reduce using rule 112 (Operator)
	OP18_TERNARY	reduce using rule 112 (Operator)
	OP21_LIST_COMMA	reduce using rule 112 (Operator)
	OP23_LOGICAL_AND	reduce using rule 112 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 112 (Operator)

State 310:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression .	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)

	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240

	OP12_COMPARE_EQ_NE	error (nonassociative)

	')'	reduce using rule 113 (Operator)
	';'	reduce using rule 113 (Operator)
	']'	reduce using rule 113 (Operator)
	'}'	reduce using rule 113 (Operator)
	OP13_BITWISE_AND	reduce using rule 113 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 113 (Operator)
	OP15_LOGICAL_AND	reduce using rule 113 (Operator)
	OP16_LOGICAL_OR	reduce using rule 113 (Operator)
	OP17_LIST_RANGE	reduce using rule 113 (Operator)
	OP18_TERNARY	reduce using rule 113 (Operator)
	OP21_LIST_COMMA	reduce using rule 113 (Operator)
	OP23_LOGICAL_AND	reduce using rule 113 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 113 (Operator)

State 311:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression OP23_LOGICAL_AND SubExpression .	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)

	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233
	OP14_BITWISE_OR_XOR	shift, and go to state 230
	OP15_LOGICAL_AND	shift, and go to state 237
	OP16_LOGICAL_OR	shift, and go to state 228
	OP17_LIST_RANGE	shift, and go to state 235
	OP18_TERNARY	shift, and go to state 232

	')'	reduce using rule 121 (Operator)
	';'	reduce using rule 121 (Operator)
	']'	reduce using rule 121 (Operator)
	'}'	reduce using rule 121 (Operator)
	OP21_LIST_COMMA	reduce using rule 121 (Operator)
	OP23_LOGICAL_AND	reduce using rule 121 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 121 (Operator)

State 312:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)
	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression .	(Rule 122)

	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233
	OP14_BITWISE_OR_XOR	shift, and go to state 230
	OP15_LOGICAL_AND	shift, and go to state 237
	OP16_LOGICAL_OR	shift, and go to state 228
	OP17_LIST_RANGE	shift, and go to state 235
	OP18_TERNARY	shift, and go to state 232
	OP23_LOGICAL_AND	shift, and go to state 242

	')'	reduce using rule 122 (Operator)
	';'	reduce using rule 122 (Operator)
	']'	reduce using rule 122 (Operator)
	'}'	reduce using rule 122 (Operator)
	OP21_LIST_COMMA	reduce using rule 122 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 122 (Operator)

State 313:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN . OPTIONAL-41 ')'	(Rule 146)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	ARGV	shift, and go to state 186
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	MY	shift, and go to state 146
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP01_QW	shift, and go to state 181
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	')'	reduce using rule 139 (OPTIONAL-41)

	HashDereference	go to state 119
	TypeInner	go to state 184
	SubExpression	go to state 182
	Variable	go to state 151
	Operator	go to state 99
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 153
	ArrayReference	go to state 138
	ArrayDereference	go to state 103
	ListElements	go to state 359
	OPTIONAL-41	go to state 358
	ListElement	go to state 183
	WordScoped	go to state 107
	HashReference	go to state 95
	Literal	go to state 130

State 314:

	SubExpressionOrInput -> STDIN .	(Rule 159)

	$default	reduce using rule 159 (SubExpressionOrInput)

State 315:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)
	SubExpressionOrInput -> SubExpression .	(Rule 157)

	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233
	OP14_BITWISE_OR_XOR	shift, and go to state 230
	OP15_LOGICAL_AND	shift, and go to state 237
	OP16_LOGICAL_OR	shift, and go to state 228
	OP17_LIST_RANGE	shift, and go to state 235
	OP18_TERNARY	shift, and go to state 232
	OP23_LOGICAL_AND	shift, and go to state 242
	OP24_LOGICAL_OR_XOR	shift, and go to state 243

	')'	reduce using rule 157 (SubExpressionOrInput)
	';'	reduce using rule 157 (SubExpressionOrInput)

State 316:

	SubExpressionOrInput -> FHREF_SYMBOL_IN .	(Rule 158)

	$default	reduce using rule 158 (SubExpressionOrInput)

State 317:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrInput .	(Rule 198)

	$default	reduce using rule 198 (VariableModification)

State 318:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression .	(Rule 199)

	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233
	OP14_BITWISE_OR_XOR	shift, and go to state 230
	OP15_LOGICAL_AND	shift, and go to state 237
	OP16_LOGICAL_OR	shift, and go to state 228
	OP17_LIST_RANGE	shift, and go to state 235
	OP18_TERNARY	shift, and go to state 232
	OP23_LOGICAL_AND	shift, and go to state 242
	OP24_LOGICAL_OR_XOR	shift, and go to state 243

	')'	reduce using rule 199 (VariableModification)
	';'	reduce using rule 199 (VariableModification)

State 319:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-39 ')' . ';'	(Rule 131)

	';'	shift, and go to state 360

State 320:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ';'	(Rule 133)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	ARGV	shift, and go to state 186
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	MY	shift, and go to state 146
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP01_QW	shift, and go to state 181
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	ListElement	go to state 183
	ListElements	go to state 361
	WordScoped	go to state 107
	Literal	go to state 130
	HashReference	go to state 95
	TypeInner	go to state 184
	HashDereference	go to state 119
	Operator	go to state 99
	Variable	go to state 151
	SubExpression	go to state 182
	ArrayDereference	go to state 103
	ArrayReference	go to state 138
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 153

State 321:

	Properties -> 'our hashref $properties' . OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-32 '}' ';'	(Rule 76)
	Properties -> 'our hashref $properties' . OP19_VARIABLE_ASSIGN LBRACE '}' ';'	(Rule 77)

	OP19_VARIABLE_ASSIGN	shift, and go to state 362

State 322:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-26 OPTIONAL-27 STAR-28 STAR-29 Properties . STAR-30 LITERAL_NUMBER ';'	(Rule 72)

	$default	reduce using rule 71 (STAR-30)

	STAR-30	go to state 363

State 323:

	STAR-29 -> STAR-29 Constant .	(Rule 68)

	$default	reduce using rule 68 (STAR-29)

State 324:

	Subroutine -> SUB WORD LBRACE LBRACE MY Type . '$RETURN_TYPE' '}' ';' OPTIONAL-22 STAR-23 '}'	(Rule 57)

	'$RETURN_TYPE'	shift, and go to state 364

State 325:

	TypeInnerConstant -> MY Type '$TYPED_' . WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 239)

	WORD_UPPERCASE	shift, and go to state 365

State 326:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';' .	(Rule 52)

	$default	reduce using rule 52 (Constant)

State 327:

	TypeInner -> MY Type '$TYPED_' . OpStringOrWord OP19_VARIABLE_ASSIGN	(Rule 236)

	OP01_CLOSE	shift, and go to state 171
	OP01_NAMED	shift, and go to state 161
	OP01_NAMED_VOID	shift, and go to state 175
	OP01_OPEN	shift, and go to state 164
	OP01_PRINT	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 172
	OP07_STRING_REPEAT	shift, and go to state 159
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP10_NAMED_UNARY	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 158
	OP12_COMPARE_EQ_NE	shift, and go to state 169
	OP19_LOOP_CONTROL	shift, and go to state 165
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 176
	OP22_LOGICAL_NEG	shift, and go to state 154
	OP23_LOGICAL_AND	shift, and go to state 170
	OP24_LOGICAL_OR_XOR	shift, and go to state 166
	WORD	shift, and go to state 178

	OpStringOrWord	go to state 366

State 328:

	ArrayDereference -> '@{' OPTIONAL-54 ArrayReference '}' .	(Rule 214)

	$default	reduce using rule 214 (ArrayDereference)

State 329:

	PAREN-56 -> OP21_LIST_COMMA . HashEntry	(Rule 221)

	'%{'	shift, and go to state 101
	ENV	shift, and go to state 167
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 171
	OP01_NAMED	shift, and go to state 161
	OP01_NAMED_VOID	shift, and go to state 175
	OP01_OPEN	shift, and go to state 164
	OP01_PRINT	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 172
	OP07_STRING_REPEAT	shift, and go to state 159
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP10_NAMED_UNARY	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 158
	OP12_COMPARE_EQ_NE	shift, and go to state 169
	OP19_LOOP_CONTROL	shift, and go to state 165
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 176
	OP22_LOGICAL_NEG	shift, and go to state 154
	OP23_LOGICAL_AND	shift, and go to state 170
	OP24_LOGICAL_OR_XOR	shift, and go to state 166
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 178

	Literal	go to state 162
	VariableSymbolOrSelf	go to state 104
	Variable	go to state 157
	OpStringOrWord	go to state 168
	VarOrLitOrOpStrOrWord	go to state 174
	HashEntry	go to state 367
	HashDereference	go to state 163

State 330:

	HashReference -> LBRACE HashEntry STAR-57 '}' .	(Rule 224)

	$default	reduce using rule 224 (HashReference)

State 331:

	STAR-57 -> STAR-57 PAREN-56 .	(Rule 222)

	$default	reduce using rule 222 (STAR-57)

State 332:

	HashEntry -> VarOrLitOrOpStrOrWord OP20_HASH_FATARROW OPTIONAL-55 . SubExpression	(Rule 217)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	Literal	go to state 130
	HashReference	go to state 95
	WordScoped	go to state 107
	HashDereference	go to state 119
	ArrayReference	go to state 138
	ArrayDereference	go to state 103
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 153
	Operator	go to state 99
	SubExpression	go to state 368
	Variable	go to state 151

State 333:

	OPTIONAL-55 -> TypeInner .	(Rule 215)

	$default	reduce using rule 215 (OPTIONAL-55)

State 334:

	STAR-52 -> STAR-52 PAREN-51 .	(Rule 201)

	$default	reduce using rule 201 (STAR-52)

State 335:

	PAREN-51 -> OP21_LIST_COMMA . ListElement	(Rule 200)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	ARGV	shift, and go to state 186
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	MY	shift, and go to state 146
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP01_QW	shift, and go to state 181
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	Literal	go to state 130
	HashReference	go to state 95
	WordScoped	go to state 107
	ListElement	go to state 369
	ArrayDereference	go to state 103
	ArrayReference	go to state 138
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 153
	Operator	go to state 99
	SubExpression	go to state 182
	Variable	go to state 151
	HashDereference	go to state 119
	TypeInner	go to state 184

State 336:

	HashDereference -> '%{' OPTIONAL-58 HashReference '}' .	(Rule 229)

	$default	reduce using rule 229 (HashDereference)

State 337:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)
	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression . ']'	(Rule 191)

	']'	shift, and go to state 370
	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233
	OP14_BITWISE_OR_XOR	shift, and go to state 230
	OP15_LOGICAL_AND	shift, and go to state 237
	OP16_LOGICAL_OR	shift, and go to state 228
	OP17_LIST_RANGE	shift, and go to state 235
	OP18_TERNARY	shift, and go to state 232
	OP23_LOGICAL_AND	shift, and go to state 242
	OP24_LOGICAL_OR_XOR	shift, and go to state 243

State 338:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)
	VariableRetrieval -> OP02_HASH_THINARROW SubExpression . '}'	(Rule 192)

	'}'	shift, and go to state 371
	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233
	OP14_BITWISE_OR_XOR	shift, and go to state 230
	OP15_LOGICAL_AND	shift, and go to state 237
	OP16_LOGICAL_OR	shift, and go to state 228
	OP17_LIST_RANGE	shift, and go to state 235
	OP18_TERNARY	shift, and go to state 232
	OP23_LOGICAL_AND	shift, and go to state 242
	OP24_LOGICAL_OR_XOR	shift, and go to state 243

State 339:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 193)
	WordScoped -> WORD .	(Rule 230)

	'}'	shift, and go to state 372

	LPAREN	reduce using rule 230 (WordScoped)
	OP02_METHOD_THINARROW_NEW	reduce using rule 230 (WordScoped)

State 340:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW OPTIONAL-42 ')' .	(Rule 147)

	$default	reduce using rule 147 (Expression)

State 341:

	Expression -> WordScoped LPAREN OPTIONAL-40 ')' .	(Rule 145)

	$default	reduce using rule 145 (Expression)

State 342:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ')'	(Rule 95)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	ARGV	shift, and go to state 186
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	MY	shift, and go to state 146
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP01_QW	shift, and go to state 181
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	TypeInner	go to state 184
	HashDereference	go to state 119
	Operator	go to state 99
	SubExpression	go to state 182
	Variable	go to state 151
	ArrayReference	go to state 138
	ArrayDereference	go to state 103
	Expression	go to state 153
	VariableSymbolOrSelf	go to state 104
	ListElement	go to state 183
	ListElements	go to state 373
	WordScoped	go to state 107
	Literal	go to state 130
	HashReference	go to state 95

State 343:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements . ')'	(Rule 93)

	')'	shift, and go to state 374

State 344:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW . SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 196)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	Literal	go to state 130
	HashReference	go to state 95
	WordScoped	go to state 107
	HashDereference	go to state 119
	ArrayReference	go to state 138
	ArrayDereference	go to state 103
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 153
	Operator	go to state 99
	SubExpression	go to state 375
	Variable	go to state 151

State 345:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL ';' .	(Rule 194)

	$default	reduce using rule 194 (VariableDeclaration)

State 346:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . OpNamedScolonOrSubExpIn	(Rule 195)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	FHREF_SYMBOL_IN	shift, and go to state 316
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_NAMED_SCOLON	shift, and go to state 377
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 376
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	STDIN	shift, and go to state 314
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	Operator	go to state 99
	SubExpressionOrInput	go to state 379
	Variable	go to state 151
	SubExpression	go to state 315
	ArrayDereference	go to state 103
	ArrayReference	go to state 138
	Expression	go to state 153
	VariableSymbolOrSelf	go to state 104
	HashDereference	go to state 119
	WordScoped	go to state 107
	Literal	go to state 130
	HashReference	go to state 95
	OpNamedScolonOrSubExpIn	go to state 378

State 347:

	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL ';' .	(Rule 197)

	$default	reduce using rule 197 (VariableDeclaration)

State 348:

	Conditional -> 'if' LPAREN SubExpression ')' . CodeBlock STAR-46 OPTIONAL-48	(Rule 176)

	LBRACE	shift, and go to state 380

	CodeBlock	go to state 381

State 349:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL . OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 96)

	OP21_LIST_COMMA	shift, and go to state 382

State 350:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)
	LoopWhile -> 'while' LPAREN SubExpression . ')' CodeBlock	(Rule 183)

	')'	shift, and go to state 383
	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233
	OP14_BITWISE_OR_XOR	shift, and go to state 230
	OP15_LOGICAL_AND	shift, and go to state 237
	OP16_LOGICAL_OR	shift, and go to state 228
	OP17_LIST_RANGE	shift, and go to state 235
	OP18_TERNARY	shift, and go to state 232
	OP23_LOGICAL_AND	shift, and go to state 242
	OP24_LOGICAL_OR_XOR	shift, and go to state 243

State 351:

	LoopWhile -> 'while' LPAREN_MY Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrInput ')' CodeBlock	(Rule 184)

	VARIABLE_SYMBOL	shift, and go to state 384

State 352:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 181)

	VARIABLE_SYMBOL	shift, and go to state 385

State 353:

	LoopFor -> 'for' MY TYPE_INTEGER . VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 180)

	VARIABLE_SYMBOL	shift, and go to state 386

State 354:

	LoopForEach -> 'foreach' MY Type . VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 182)

	VARIABLE_SYMBOL	shift, and go to state 387

State 355:

	OperatorVoid -> OP01_PRINT OPTIONAL-38 ListElements ';' .	(Rule 128)

	$default	reduce using rule 128 (OperatorVoid)

State 356:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements ';' .	(Rule 129)

	$default	reduce using rule 129 (OperatorVoid)

State 357:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON . VariableOrLiteral	(Rule 119)

	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94

	Variable	go to state 299
	Literal	go to state 300
	VariableSymbolOrSelf	go to state 104
	VariableOrLiteral	go to state 388

State 358:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-41 . ')'	(Rule 146)

	')'	shift, and go to state 389

State 359:

	OPTIONAL-41 -> ListElements .	(Rule 138)

	$default	reduce using rule 138 (OPTIONAL-41)

State 360:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-39 ')' ';' .	(Rule 131)

	$default	reduce using rule 131 (OperatorVoid)

State 361:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ';'	(Rule 133)

	';'	shift, and go to state 390

State 362:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN . LBRACE HashEntryProperties STAR-32 '}' ';'	(Rule 76)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN . LBRACE '}' ';'	(Rule 77)

	LBRACE	shift, and go to state 391

State 363:

	STAR-30 -> STAR-30 . SubroutineOrMethod	(Rule 70)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-26 OPTIONAL-27 STAR-28 STAR-29 Properties STAR-30 . LITERAL_NUMBER ';'	(Rule 72)

	LITERAL_NUMBER	shift, and go to state 396
	SUB	shift, and go to state 393

	SubroutineOrMethod	go to state 395
	Method	go to state 394
	Subroutine	go to state 392

State 364:

	Subroutine -> SUB WORD LBRACE LBRACE MY Type '$RETURN_TYPE' . '}' ';' OPTIONAL-22 STAR-23 '}'	(Rule 57)

	'}'	shift, and go to state 397

State 365:

	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE . OP19_VARIABLE_ASSIGN	(Rule 239)

	OP19_VARIABLE_ASSIGN	shift, and go to state 398

State 366:

	TypeInner -> MY Type '$TYPED_' OpStringOrWord . OP19_VARIABLE_ASSIGN	(Rule 236)

	OP19_VARIABLE_ASSIGN	shift, and go to state 399

State 367:

	PAREN-56 -> OP21_LIST_COMMA HashEntry .	(Rule 221)

	$default	reduce using rule 221 (PAREN-56)

State 368:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)
	HashEntry -> VarOrLitOrOpStrOrWord OP20_HASH_FATARROW OPTIONAL-55 SubExpression .	(Rule 217)

	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233
	OP14_BITWISE_OR_XOR	shift, and go to state 230
	OP15_LOGICAL_AND	shift, and go to state 237
	OP16_LOGICAL_OR	shift, and go to state 228
	OP17_LIST_RANGE	shift, and go to state 235
	OP18_TERNARY	shift, and go to state 232
	OP23_LOGICAL_AND	shift, and go to state 242
	OP24_LOGICAL_OR_XOR	shift, and go to state 243

	'}'	reduce using rule 217 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 217 (HashEntry)

State 369:

	PAREN-51 -> OP21_LIST_COMMA ListElement .	(Rule 200)

	$default	reduce using rule 200 (PAREN-51)

State 370:

	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']' .	(Rule 191)

	$default	reduce using rule 191 (VariableRetrieval)

State 371:

	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}' .	(Rule 192)

	$default	reduce using rule 192 (VariableRetrieval)

State 372:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 193)

	$default	reduce using rule 193 (VariableRetrieval)

State 373:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ')'	(Rule 95)

	')'	shift, and go to state 400

State 374:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')' .	(Rule 93)

	$default	reduce using rule 93 (Operator)

State 375:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)
	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression . ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 196)

	']'	shift, and go to state 401
	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233
	OP14_BITWISE_OR_XOR	shift, and go to state 230
	OP15_LOGICAL_AND	shift, and go to state 237
	OP16_LOGICAL_OR	shift, and go to state 228
	OP17_LIST_RANGE	shift, and go to state 235
	OP18_TERNARY	shift, and go to state 232
	OP23_LOGICAL_AND	shift, and go to state 242
	OP24_LOGICAL_OR_XOR	shift, and go to state 243

State 376:

	OpNamedScolonOrSubExpIn -> OP10_NAMED_UNARY_SCOLON .	(Rule 253)

	$default	reduce using rule 253 (OpNamedScolonOrSubExpIn)

State 377:

	OpNamedScolonOrSubExpIn -> OP01_NAMED_SCOLON .	(Rule 252)

	$default	reduce using rule 252 (OpNamedScolonOrSubExpIn)

State 378:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExpIn .	(Rule 195)

	$default	reduce using rule 195 (VariableDeclaration)

State 379:

	OpNamedScolonOrSubExpIn -> SubExpressionOrInput . ';'	(Rule 254)

	';'	shift, and go to state 402

State 380:

	CodeBlock -> LBRACE . PLUS-49 '}'	(Rule 187)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'if'	shift, and go to state 115
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	MY	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 139
	OP01_NAMED_SCOLON	shift, and go to state 123
	OP01_NAMED_VOID	shift, and go to state 97
	OP01_NAMED_VOID_LPAREN	shift, and go to state 137
	OP01_NAMED_VOID_SCOLON	shift, and go to state 128
	OP01_OPEN	shift, and go to state 120
	OP01_PRINT	shift, and go to state 134
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 122
	OP19_LOOP_CONTROL	shift, and go to state 121
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 100
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 96

	'for'	reduce using rule 164 (OPTIONAL-44)
	'foreach'	reduce using rule 164 (OPTIONAL-44)
	'while'	reduce using rule 164 (OPTIONAL-44)

	ArrayReference	go to state 138
	Operation	go to state 403
	Statement	go to state 112
	PLUS-49	go to state 404
	Variable	go to state 136
	SubExpression	go to state 135
	LoopLabel	go to state 106
	Literal	go to state 130
	Conditional	go to state 108
	OperatorVoid	go to state 132
	WordScoped	go to state 107
	HashDereference	go to state 119
	ArrayDereference	go to state 103
	OPTIONAL-44	go to state 126
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 105
	Operator	go to state 99
	VariableModification	go to state 124
	VariableDeclaration	go to state 91
	PAREN-43	go to state 92
	HashReference	go to state 95

State 381:

	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock . STAR-46 OPTIONAL-48	(Rule 176)

	$default	reduce using rule 172 (STAR-46)

	STAR-46	go to state 405

State 382:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA . LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 96)

	LITERAL_STRING	shift, and go to state 406

State 383:

	LoopWhile -> 'while' LPAREN SubExpression ')' . CodeBlock	(Rule 183)

	LBRACE	shift, and go to state 380

	CodeBlock	go to state 407

State 384:

	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN SubExpressionOrInput ')' CodeBlock	(Rule 184)

	OP19_VARIABLE_ASSIGN	shift, and go to state 408

State 385:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 181)

	OP19_VARIABLE_ASSIGN	shift, and go to state 409

State 386:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL . LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 180)

	LPAREN	shift, and go to state 410

State 387:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL . LPAREN ListElements ')' CodeBlock	(Rule 182)

	LPAREN	shift, and go to state 411

State 388:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral .	(Rule 119)

	$default	reduce using rule 119 (Operator)

State 389:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-41 ')' .	(Rule 146)

	$default	reduce using rule 146 (Expression)

State 390:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';' .	(Rule 133)

	$default	reduce using rule 133 (OperatorVoid)

State 391:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE . HashEntryProperties STAR-32 '}' ';'	(Rule 76)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE . '}' ';'	(Rule 77)

	'}'	shift, and go to state 414
	OP01_CLOSE	shift, and go to state 171
	OP01_NAMED	shift, and go to state 161
	OP01_NAMED_VOID	shift, and go to state 175
	OP01_OPEN	shift, and go to state 164
	OP01_PRINT	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 172
	OP07_STRING_REPEAT	shift, and go to state 159
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP10_NAMED_UNARY	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 158
	OP12_COMPARE_EQ_NE	shift, and go to state 169
	OP19_LOOP_CONTROL	shift, and go to state 165
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 176
	OP22_LOGICAL_NEG	shift, and go to state 154
	OP23_LOGICAL_AND	shift, and go to state 170
	OP24_LOGICAL_OR_XOR	shift, and go to state 166
	WORD	shift, and go to state 178

	HashEntryProperties	go to state 412
	OpStringOrWord	go to state 413

State 392:

	SubroutineOrMethod -> Subroutine .	(Rule 87)

	$default	reduce using rule 87 (SubroutineOrMethod)

State 393:

	Subroutine -> SUB . WORD LBRACE LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-22 STAR-23 '}'	(Rule 57)
	Method -> SUB . WORD LBRACE LBRACE MY TYPE_METHOD '$RETURN_TYPE' '}' ';' OPTIONAL-33 STAR-34 '}'	(Rule 82)

	WORD	shift, and go to state 415

State 394:

	SubroutineOrMethod -> Method .	(Rule 88)

	$default	reduce using rule 88 (SubroutineOrMethod)

State 395:

	STAR-30 -> STAR-30 SubroutineOrMethod .	(Rule 70)

	$default	reduce using rule 70 (STAR-30)

State 396:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-26 OPTIONAL-27 STAR-28 STAR-29 Properties STAR-30 LITERAL_NUMBER . ';'	(Rule 72)

	';'	shift, and go to state 416

State 397:

	Subroutine -> SUB WORD LBRACE LBRACE MY Type '$RETURN_TYPE' '}' . ';' OPTIONAL-22 STAR-23 '}'	(Rule 57)

	';'	shift, and go to state 417

State 398:

	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN .	(Rule 239)

	$default	reduce using rule 239 (TypeInnerConstant)

State 399:

	TypeInner -> MY Type '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN .	(Rule 236)

	$default	reduce using rule 236 (TypeInner)

State 400:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' .	(Rule 95)

	$default	reduce using rule 95 (Operator)

State 401:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' . OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 196)

	OP19_VARIABLE_ASSIGN	shift, and go to state 418

State 402:

	OpNamedScolonOrSubExpIn -> SubExpressionOrInput ';' .	(Rule 254)

	$default	reduce using rule 254 (OpNamedScolonOrSubExpIn)

State 403:

	PLUS-49 -> Operation .	(Rule 186)

	$default	reduce using rule 186 (PLUS-49)

State 404:

	PLUS-49 -> PLUS-49 . Operation	(Rule 185)
	CodeBlock -> LBRACE PLUS-49 . '}'	(Rule 187)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'if'	shift, and go to state 115
	'undef'	shift, and go to state 131
	'}'	shift, and go to state 420
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	MY	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 139
	OP01_NAMED_SCOLON	shift, and go to state 123
	OP01_NAMED_VOID	shift, and go to state 97
	OP01_NAMED_VOID_LPAREN	shift, and go to state 137
	OP01_NAMED_VOID_SCOLON	shift, and go to state 128
	OP01_OPEN	shift, and go to state 120
	OP01_PRINT	shift, and go to state 134
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 122
	OP19_LOOP_CONTROL	shift, and go to state 121
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 100
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 96

	'for'	reduce using rule 164 (OPTIONAL-44)
	'foreach'	reduce using rule 164 (OPTIONAL-44)
	'while'	reduce using rule 164 (OPTIONAL-44)

	VariableDeclaration	go to state 91
	PAREN-43	go to state 92
	HashReference	go to state 95
	HashDereference	go to state 119
	ArrayDereference	go to state 103
	OPTIONAL-44	go to state 126
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 105
	VariableModification	go to state 124
	Operator	go to state 99
	LoopLabel	go to state 106
	Literal	go to state 130
	OperatorVoid	go to state 132
	Conditional	go to state 108
	WordScoped	go to state 107
	ArrayReference	go to state 138
	Operation	go to state 419
	Statement	go to state 112
	Variable	go to state 136
	SubExpression	go to state 135

State 405:

	STAR-46 -> STAR-46 . PAREN-45	(Rule 171)
	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-46 . OPTIONAL-48	(Rule 176)

	'else'	shift, and go to state 425
	'elsif'	shift, and go to state 422

	$end	reduce using rule 175 (OPTIONAL-48)
	'%{'	reduce using rule 175 (OPTIONAL-48)
	'@{'	reduce using rule 175 (OPTIONAL-48)
	'for'	reduce using rule 175 (OPTIONAL-48)
	'foreach'	reduce using rule 175 (OPTIONAL-48)
	'if'	reduce using rule 175 (OPTIONAL-48)
	'undef'	reduce using rule 175 (OPTIONAL-48)
	'while'	reduce using rule 175 (OPTIONAL-48)
	'}'	reduce using rule 175 (OPTIONAL-48)
	CONSTANT_CALL_SCOPED	reduce using rule 175 (OPTIONAL-48)
	LBRACE	reduce using rule 175 (OPTIONAL-48)
	LBRACKET	reduce using rule 175 (OPTIONAL-48)
	LITERAL_NUMBER	reduce using rule 175 (OPTIONAL-48)
	LITERAL_STRING	reduce using rule 175 (OPTIONAL-48)
	LPAREN	reduce using rule 175 (OPTIONAL-48)
	MY	reduce using rule 175 (OPTIONAL-48)
	OP01_CLOSE	reduce using rule 175 (OPTIONAL-48)
	OP01_NAMED	reduce using rule 175 (OPTIONAL-48)
	OP01_NAMED_SCOLON	reduce using rule 175 (OPTIONAL-48)
	OP01_NAMED_VOID	reduce using rule 175 (OPTIONAL-48)
	OP01_NAMED_VOID_LPAREN	reduce using rule 175 (OPTIONAL-48)
	OP01_NAMED_VOID_SCOLON	reduce using rule 175 (OPTIONAL-48)
	OP01_OPEN	reduce using rule 175 (OPTIONAL-48)
	OP01_PRINT	reduce using rule 175 (OPTIONAL-48)
	OP03_MATH_INC_DEC	reduce using rule 175 (OPTIONAL-48)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 175 (OPTIONAL-48)
	OP05_LOGICAL_NEG	reduce using rule 175 (OPTIONAL-48)
	OP05_MATH_NEG_LPAREN	reduce using rule 175 (OPTIONAL-48)
	OP10_NAMED_UNARY	reduce using rule 175 (OPTIONAL-48)
	OP10_NAMED_UNARY_SCOLON	reduce using rule 175 (OPTIONAL-48)
	OP19_LOOP_CONTROL	reduce using rule 175 (OPTIONAL-48)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 175 (OPTIONAL-48)
	OP22_LOGICAL_NEG	reduce using rule 175 (OPTIONAL-48)
	SELF	reduce using rule 175 (OPTIONAL-48)
	VARIABLE_SYMBOL	reduce using rule 175 (OPTIONAL-48)
	WORD	reduce using rule 175 (OPTIONAL-48)
	WORD_SCOPED	reduce using rule 175 (OPTIONAL-48)
	WORD_UPPERCASE	reduce using rule 175 (OPTIONAL-48)

	PAREN-45	go to state 424
	OPTIONAL-48	go to state 423
	PAREN-47	go to state 421

State 406:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING . OP21_LIST_COMMA SubExpression	(Rule 96)

	OP21_LIST_COMMA	shift, and go to state 426

State 407:

	LoopWhile -> 'while' LPAREN SubExpression ')' CodeBlock .	(Rule 183)

	$default	reduce using rule 183 (LoopWhile)

State 408:

	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . SubExpressionOrInput ')' CodeBlock	(Rule 184)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	FHREF_SYMBOL_IN	shift, and go to state 316
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	STDIN	shift, and go to state 314
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	Literal	go to state 130
	HashReference	go to state 95
	WordScoped	go to state 107
	ArrayDereference	go to state 103
	ArrayReference	go to state 138
	Expression	go to state 153
	VariableSymbolOrSelf	go to state 104
	Operator	go to state 99
	SubExpressionOrInput	go to state 427
	SubExpression	go to state 315
	Variable	go to state 151
	HashDereference	go to state 119

State 409:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 181)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_NAMED_SCOLON	shift, and go to state 430
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 429
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	VariableSymbolOrSelf	go to state 104
	Expression	go to state 153
	ArrayReference	go to state 138
	ArrayDereference	go to state 103
	SubExpression	go to state 428
	Variable	go to state 151
	Operator	go to state 99
	HashDereference	go to state 119
	OpNamedScolonOrSubExp	go to state 431
	HashReference	go to state 95
	Literal	go to state 130
	WordScoped	go to state 107

State 410:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN . SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 180)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	Variable	go to state 151
	SubExpression	go to state 432
	Operator	go to state 99
	Expression	go to state 153
	VariableSymbolOrSelf	go to state 104
	ArrayReference	go to state 138
	ArrayDereference	go to state 103
	HashDereference	go to state 119
	WordScoped	go to state 107
	HashReference	go to state 95
	Literal	go to state 130

State 411:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN . ListElements ')' CodeBlock	(Rule 182)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	ARGV	shift, and go to state 186
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	MY	shift, and go to state 146
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP01_QW	shift, and go to state 181
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	ListElement	go to state 183
	ListElements	go to state 433
	WordScoped	go to state 107
	Literal	go to state 130
	HashReference	go to state 95
	TypeInner	go to state 184
	HashDereference	go to state 119
	Operator	go to state 99
	SubExpression	go to state 182
	Variable	go to state 151
	ArrayDereference	go to state 103
	ArrayReference	go to state 138
	Expression	go to state 153
	VariableSymbolOrSelf	go to state 104

State 412:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties . STAR-32 '}' ';'	(Rule 76)

	$default	reduce using rule 75 (STAR-32)

	STAR-32	go to state 434

State 413:

	HashEntryProperties -> OpStringOrWord . OP20_HASH_FATARROW TypeInnerProperties	(Rule 220)

	OP20_HASH_FATARROW	shift, and go to state 435

State 414:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' . ';'	(Rule 77)

	';'	shift, and go to state 436

State 415:

	Subroutine -> SUB WORD . LBRACE LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-22 STAR-23 '}'	(Rule 57)
	Method -> SUB WORD . LBRACE LBRACE MY TYPE_METHOD '$RETURN_TYPE' '}' ';' OPTIONAL-33 STAR-34 '}'	(Rule 82)

	LBRACE	shift, and go to state 437

State 416:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-26 OPTIONAL-27 STAR-28 STAR-29 Properties STAR-30 LITERAL_NUMBER ';' .	(Rule 72)

	$default	reduce using rule 72 (Class)

State 417:

	Subroutine -> SUB WORD LBRACE LBRACE MY Type '$RETURN_TYPE' '}' ';' . OPTIONAL-22 STAR-23 '}'	(Rule 57)

	LPAREN_MY	shift, and go to state 438

	'%{'	reduce using rule 54 (OPTIONAL-22)
	'@{'	reduce using rule 54 (OPTIONAL-22)
	'for'	reduce using rule 54 (OPTIONAL-22)
	'foreach'	reduce using rule 54 (OPTIONAL-22)
	'if'	reduce using rule 54 (OPTIONAL-22)
	'undef'	reduce using rule 54 (OPTIONAL-22)
	'while'	reduce using rule 54 (OPTIONAL-22)
	'}'	reduce using rule 54 (OPTIONAL-22)
	CONSTANT_CALL_SCOPED	reduce using rule 54 (OPTIONAL-22)
	LBRACE	reduce using rule 54 (OPTIONAL-22)
	LBRACKET	reduce using rule 54 (OPTIONAL-22)
	LITERAL_NUMBER	reduce using rule 54 (OPTIONAL-22)
	LITERAL_STRING	reduce using rule 54 (OPTIONAL-22)
	LPAREN	reduce using rule 54 (OPTIONAL-22)
	MY	reduce using rule 54 (OPTIONAL-22)
	OP01_CLOSE	reduce using rule 54 (OPTIONAL-22)
	OP01_NAMED	reduce using rule 54 (OPTIONAL-22)
	OP01_NAMED_SCOLON	reduce using rule 54 (OPTIONAL-22)
	OP01_NAMED_VOID	reduce using rule 54 (OPTIONAL-22)
	OP01_NAMED_VOID_LPAREN	reduce using rule 54 (OPTIONAL-22)
	OP01_NAMED_VOID_SCOLON	reduce using rule 54 (OPTIONAL-22)
	OP01_OPEN	reduce using rule 54 (OPTIONAL-22)
	OP01_PRINT	reduce using rule 54 (OPTIONAL-22)
	OP03_MATH_INC_DEC	reduce using rule 54 (OPTIONAL-22)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 54 (OPTIONAL-22)
	OP05_LOGICAL_NEG	reduce using rule 54 (OPTIONAL-22)
	OP05_MATH_NEG_LPAREN	reduce using rule 54 (OPTIONAL-22)
	OP10_NAMED_UNARY	reduce using rule 54 (OPTIONAL-22)
	OP10_NAMED_UNARY_SCOLON	reduce using rule 54 (OPTIONAL-22)
	OP19_LOOP_CONTROL	reduce using rule 54 (OPTIONAL-22)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 54 (OPTIONAL-22)
	OP22_LOGICAL_NEG	reduce using rule 54 (OPTIONAL-22)
	SELF	reduce using rule 54 (OPTIONAL-22)
	VARIABLE_SYMBOL	reduce using rule 54 (OPTIONAL-22)
	WORD	reduce using rule 54 (OPTIONAL-22)
	WORD_SCOPED	reduce using rule 54 (OPTIONAL-22)
	WORD_UPPERCASE	reduce using rule 54 (OPTIONAL-22)

	SubroutineArguments	go to state 439
	OPTIONAL-22	go to state 440

State 418:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN . 'undef' ';'	(Rule 196)

	'undef'	shift, and go to state 441

State 419:

	PLUS-49 -> PLUS-49 Operation .	(Rule 185)

	$default	reduce using rule 185 (PLUS-49)

State 420:

	CodeBlock -> LBRACE PLUS-49 '}' .	(Rule 187)

	$default	reduce using rule 187 (CodeBlock)

State 421:

	OPTIONAL-48 -> PAREN-47 .	(Rule 174)

	$default	reduce using rule 174 (OPTIONAL-48)

State 422:

	PAREN-45 -> 'elsif' . LPAREN SubExpression ')' CodeBlock	(Rule 170)

	LPAREN	shift, and go to state 442

State 423:

	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-46 OPTIONAL-48 .	(Rule 176)

	$default	reduce using rule 176 (Conditional)

State 424:

	STAR-46 -> STAR-46 PAREN-45 .	(Rule 171)

	$default	reduce using rule 171 (STAR-46)

State 425:

	PAREN-47 -> 'else' . CodeBlock	(Rule 173)

	LBRACE	shift, and go to state 380

	CodeBlock	go to state 443

State 426:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA . SubExpression	(Rule 96)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	HashDereference	go to state 119
	Expression	go to state 153
	VariableSymbolOrSelf	go to state 104
	ArrayReference	go to state 138
	ArrayDereference	go to state 103
	SubExpression	go to state 444
	Variable	go to state 151
	Operator	go to state 99
	HashReference	go to state 95
	Literal	go to state 130
	WordScoped	go to state 107

State 427:

	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrInput . ')' CodeBlock	(Rule 184)

	')'	shift, and go to state 445

State 428:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)
	OpNamedScolonOrSubExp -> SubExpression . ';'	(Rule 251)

	';'	shift, and go to state 446
	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233
	OP14_BITWISE_OR_XOR	shift, and go to state 230
	OP15_LOGICAL_AND	shift, and go to state 237
	OP16_LOGICAL_OR	shift, and go to state 228
	OP17_LIST_RANGE	shift, and go to state 235
	OP18_TERNARY	shift, and go to state 232
	OP23_LOGICAL_AND	shift, and go to state 242
	OP24_LOGICAL_OR_XOR	shift, and go to state 243

State 429:

	OpNamedScolonOrSubExp -> OP10_NAMED_UNARY_SCOLON .	(Rule 250)

	$default	reduce using rule 250 (OpNamedScolonOrSubExp)

State 430:

	OpNamedScolonOrSubExp -> OP01_NAMED_SCOLON .	(Rule 249)

	$default	reduce using rule 249 (OpNamedScolonOrSubExp)

State 431:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp . VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 181)

	VARIABLE_SYMBOL	shift, and go to state 447

State 432:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression . OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 180)

	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233
	OP14_BITWISE_OR_XOR	shift, and go to state 230
	OP15_LOGICAL_AND	shift, and go to state 237
	OP16_LOGICAL_OR	shift, and go to state 228
	OP17_LIST_RANGE	shift, and go to state 448
	OP18_TERNARY	shift, and go to state 232
	OP23_LOGICAL_AND	shift, and go to state 242
	OP24_LOGICAL_OR_XOR	shift, and go to state 243

State 433:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements . ')' CodeBlock	(Rule 182)

	')'	shift, and go to state 449

State 434:

	STAR-32 -> STAR-32 . PAREN-31	(Rule 74)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-32 . '}' ';'	(Rule 76)

	'}'	shift, and go to state 450
	OP21_LIST_COMMA	shift, and go to state 451

	PAREN-31	go to state 452

State 435:

	HashEntryProperties -> OpStringOrWord OP20_HASH_FATARROW . TypeInnerProperties	(Rule 220)

	MY	shift, and go to state 454

	TypeInnerProperties	go to state 453

State 436:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';' .	(Rule 77)

	$default	reduce using rule 77 (Properties)

State 437:

	Subroutine -> SUB WORD LBRACE . LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-22 STAR-23 '}'	(Rule 57)
	Method -> SUB WORD LBRACE . LBRACE MY TYPE_METHOD '$RETURN_TYPE' '}' ';' OPTIONAL-33 STAR-34 '}'	(Rule 82)

	LBRACE	shift, and go to state 455

State 438:

	SubroutineArguments -> LPAREN_MY . Type VARIABLE_SYMBOL STAR-25 ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 61)

	TYPE_INTEGER	shift, and go to state 204
	WORD	shift, and go to state 201
	WORD_SCOPED	shift, and go to state 202

	Type	go to state 456

State 439:

	OPTIONAL-22 -> SubroutineArguments .	(Rule 53)

	$default	reduce using rule 53 (OPTIONAL-22)

State 440:

	Subroutine -> SUB WORD LBRACE LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-22 . STAR-23 '}'	(Rule 57)

	$default	reduce using rule 56 (STAR-23)

	STAR-23	go to state 457

State 441:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' . ';'	(Rule 196)

	';'	shift, and go to state 458

State 442:

	PAREN-45 -> 'elsif' LPAREN . SubExpression ')' CodeBlock	(Rule 170)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	WordScoped	go to state 107
	HashReference	go to state 95
	Literal	go to state 130
	HashDereference	go to state 119
	Variable	go to state 151
	SubExpression	go to state 459
	Operator	go to state 99
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 153
	ArrayDereference	go to state 103
	ArrayReference	go to state 138

State 443:

	PAREN-47 -> 'else' CodeBlock .	(Rule 173)

	$default	reduce using rule 173 (PAREN-47)

State 444:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression .	(Rule 96)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)

	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233
	OP14_BITWISE_OR_XOR	shift, and go to state 230
	OP15_LOGICAL_AND	shift, and go to state 237
	OP16_LOGICAL_OR	shift, and go to state 228
	OP17_LIST_RANGE	shift, and go to state 235
	OP18_TERNARY	shift, and go to state 232

	')'	reduce using rule 96 (Operator)
	';'	reduce using rule 96 (Operator)
	']'	reduce using rule 96 (Operator)
	'}'	reduce using rule 96 (Operator)
	OP21_LIST_COMMA	reduce using rule 96 (Operator)
	OP23_LOGICAL_AND	reduce using rule 96 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 96 (Operator)

State 445:

	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrInput ')' . CodeBlock	(Rule 184)

	LBRACE	shift, and go to state 380

	CodeBlock	go to state 460

State 446:

	OpNamedScolonOrSubExp -> SubExpression ';' .	(Rule 251)

	$default	reduce using rule 251 (OpNamedScolonOrSubExp)

State 447:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL . OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 181)

	OP11_COMPARE_LT_GT	shift, and go to state 461

State 448:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 118)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE . SubExpression ')' CodeBlock	(Rule 180)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	Literal	go to state 130
	HashReference	go to state 95
	WordScoped	go to state 107
	HashDereference	go to state 119
	ArrayReference	go to state 138
	ArrayDereference	go to state 103
	Expression	go to state 153
	VariableSymbolOrSelf	go to state 104
	Operator	go to state 99
	Variable	go to state 151
	SubExpression	go to state 462

State 449:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' . CodeBlock	(Rule 182)

	LBRACE	shift, and go to state 380

	CodeBlock	go to state 463

State 450:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-32 '}' . ';'	(Rule 76)

	';'	shift, and go to state 464

State 451:

	PAREN-31 -> OP21_LIST_COMMA . HashEntryProperties	(Rule 73)

	OP01_CLOSE	shift, and go to state 171
	OP01_NAMED	shift, and go to state 161
	OP01_NAMED_VOID	shift, and go to state 175
	OP01_OPEN	shift, and go to state 164
	OP01_PRINT	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 172
	OP07_STRING_REPEAT	shift, and go to state 159
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP10_NAMED_UNARY	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 158
	OP12_COMPARE_EQ_NE	shift, and go to state 169
	OP19_LOOP_CONTROL	shift, and go to state 165
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 176
	OP22_LOGICAL_NEG	shift, and go to state 154
	OP23_LOGICAL_AND	shift, and go to state 170
	OP24_LOGICAL_OR_XOR	shift, and go to state 166
	WORD	shift, and go to state 178

	HashEntryProperties	go to state 465
	OpStringOrWord	go to state 413

State 452:

	STAR-32 -> STAR-32 PAREN-31 .	(Rule 74)

	$default	reduce using rule 74 (STAR-32)

State 453:

	HashEntryProperties -> OpStringOrWord OP20_HASH_FATARROW TypeInnerProperties .	(Rule 220)

	$default	reduce using rule 220 (HashEntryProperties)

State 454:

	TypeInnerProperties -> MY . Type '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN SubExpression	(Rule 237)
	TypeInnerProperties -> MY . Type '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 238)

	TYPE_INTEGER	shift, and go to state 204
	WORD	shift, and go to state 201
	WORD_SCOPED	shift, and go to state 202

	Type	go to state 466

State 455:

	Subroutine -> SUB WORD LBRACE LBRACE . MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-22 STAR-23 '}'	(Rule 57)
	Method -> SUB WORD LBRACE LBRACE . MY TYPE_METHOD '$RETURN_TYPE' '}' ';' OPTIONAL-33 STAR-34 '}'	(Rule 82)

	MY	shift, and go to state 467

State 456:

	SubroutineArguments -> LPAREN_MY Type . VARIABLE_SYMBOL STAR-25 ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 61)

	VARIABLE_SYMBOL	shift, and go to state 468

State 457:

	STAR-23 -> STAR-23 . Operation	(Rule 55)
	Subroutine -> SUB WORD LBRACE LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-22 STAR-23 . '}'	(Rule 57)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'if'	shift, and go to state 115
	'undef'	shift, and go to state 131
	'}'	shift, and go to state 470
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	MY	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 139
	OP01_NAMED_SCOLON	shift, and go to state 123
	OP01_NAMED_VOID	shift, and go to state 97
	OP01_NAMED_VOID_LPAREN	shift, and go to state 137
	OP01_NAMED_VOID_SCOLON	shift, and go to state 128
	OP01_OPEN	shift, and go to state 120
	OP01_PRINT	shift, and go to state 134
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 122
	OP19_LOOP_CONTROL	shift, and go to state 121
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 100
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 96

	'for'	reduce using rule 164 (OPTIONAL-44)
	'foreach'	reduce using rule 164 (OPTIONAL-44)
	'while'	reduce using rule 164 (OPTIONAL-44)

	Variable	go to state 136
	SubExpression	go to state 135
	ArrayReference	go to state 138
	Operation	go to state 469
	Statement	go to state 112
	WordScoped	go to state 107
	Literal	go to state 130
	OperatorVoid	go to state 132
	Conditional	go to state 108
	LoopLabel	go to state 106
	Operator	go to state 99
	VariableModification	go to state 124
	ArrayDereference	go to state 103
	OPTIONAL-44	go to state 126
	Expression	go to state 105
	VariableSymbolOrSelf	go to state 104
	HashDereference	go to state 119
	HashReference	go to state 95
	VariableDeclaration	go to state 91
	PAREN-43	go to state 92

State 458:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';' .	(Rule 196)

	$default	reduce using rule 196 (VariableDeclaration)

State 459:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)
	PAREN-45 -> 'elsif' LPAREN SubExpression . ')' CodeBlock	(Rule 170)

	')'	shift, and go to state 471
	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233
	OP14_BITWISE_OR_XOR	shift, and go to state 230
	OP15_LOGICAL_AND	shift, and go to state 237
	OP16_LOGICAL_OR	shift, and go to state 228
	OP17_LIST_RANGE	shift, and go to state 235
	OP18_TERNARY	shift, and go to state 232
	OP23_LOGICAL_AND	shift, and go to state 242
	OP24_LOGICAL_OR_XOR	shift, and go to state 243

State 460:

	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrInput ')' CodeBlock .	(Rule 184)

	$default	reduce using rule 184 (LoopWhile)

State 461:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT . OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 181)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_NAMED_SCOLON	shift, and go to state 430
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 429
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	HashReference	go to state 95
	Literal	go to state 130
	WordScoped	go to state 107
	Expression	go to state 153
	VariableSymbolOrSelf	go to state 104
	ArrayReference	go to state 138
	ArrayDereference	go to state 103
	SubExpression	go to state 428
	Variable	go to state 151
	Operator	go to state 99
	HashDereference	go to state 119
	OpNamedScolonOrSubExp	go to state 472

State 462:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression . ')' CodeBlock	(Rule 180)

	')'	shift, and go to state 473
	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233
	OP14_BITWISE_OR_XOR	shift, and go to state 230
	OP15_LOGICAL_AND	shift, and go to state 237
	OP16_LOGICAL_OR	shift, and go to state 228

	OP17_LIST_RANGE	error (nonassociative)

	OP18_TERNARY	reduce using rule 118 (Operator)
	OP23_LOGICAL_AND	reduce using rule 118 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 118 (Operator)

State 463:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock .	(Rule 182)

	$default	reduce using rule 182 (LoopForEach)

State 464:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-32 '}' ';' .	(Rule 76)

	$default	reduce using rule 76 (Properties)

State 465:

	PAREN-31 -> OP21_LIST_COMMA HashEntryProperties .	(Rule 73)

	$default	reduce using rule 73 (PAREN-31)

State 466:

	TypeInnerProperties -> MY Type . '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN SubExpression	(Rule 237)
	TypeInnerProperties -> MY Type . '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 238)

	'$TYPED_'	shift, and go to state 474

State 467:

	Subroutine -> SUB WORD LBRACE LBRACE MY . Type '$RETURN_TYPE' '}' ';' OPTIONAL-22 STAR-23 '}'	(Rule 57)
	Method -> SUB WORD LBRACE LBRACE MY . TYPE_METHOD '$RETURN_TYPE' '}' ';' OPTIONAL-33 STAR-34 '}'	(Rule 82)

	TYPE_INTEGER	shift, and go to state 204
	TYPE_METHOD	shift, and go to state 475
	WORD	shift, and go to state 201
	WORD_SCOPED	shift, and go to state 202

	Type	go to state 324

State 468:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL . STAR-25 ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 61)

	$default	reduce using rule 60 (STAR-25)

	STAR-25	go to state 476

State 469:

	STAR-23 -> STAR-23 Operation .	(Rule 55)

	$default	reduce using rule 55 (STAR-23)

State 470:

	Subroutine -> SUB WORD LBRACE LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-22 STAR-23 '}' .	(Rule 57)

	$default	reduce using rule 57 (Subroutine)

State 471:

	PAREN-45 -> 'elsif' LPAREN SubExpression ')' . CodeBlock	(Rule 170)

	LBRACE	shift, and go to state 380

	CodeBlock	go to state 477

State 472:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp . SubExpressionOrVarMod ')' CodeBlock	(Rule 181)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	HashReference	go to state 95
	Literal	go to state 130
	WordScoped	go to state 107
	SubExpressionOrVarMod	go to state 479
	VariableSymbolOrSelf	go to state 104
	Expression	go to state 153
	ArrayDereference	go to state 103
	ArrayReference	go to state 138
	SubExpression	go to state 478
	Variable	go to state 136
	Operator	go to state 99
	VariableModification	go to state 480
	HashDereference	go to state 119

State 473:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' . CodeBlock	(Rule 180)

	LBRACE	shift, and go to state 380

	CodeBlock	go to state 481

State 474:

	TypeInnerProperties -> MY Type '$TYPED_' . OpStringOrWord OP19_VARIABLE_ASSIGN SubExpression	(Rule 237)
	TypeInnerProperties -> MY Type '$TYPED_' . OpStringOrWord OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 238)

	OP01_CLOSE	shift, and go to state 171
	OP01_NAMED	shift, and go to state 161
	OP01_NAMED_VOID	shift, and go to state 175
	OP01_OPEN	shift, and go to state 164
	OP01_PRINT	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 172
	OP07_STRING_REPEAT	shift, and go to state 159
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP10_NAMED_UNARY	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 158
	OP12_COMPARE_EQ_NE	shift, and go to state 169
	OP19_LOOP_CONTROL	shift, and go to state 165
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 176
	OP22_LOGICAL_NEG	shift, and go to state 154
	OP23_LOGICAL_AND	shift, and go to state 170
	OP24_LOGICAL_OR_XOR	shift, and go to state 166
	WORD	shift, and go to state 178

	OpStringOrWord	go to state 482

State 475:

	Method -> SUB WORD LBRACE LBRACE MY TYPE_METHOD . '$RETURN_TYPE' '}' ';' OPTIONAL-33 STAR-34 '}'	(Rule 82)

	'$RETURN_TYPE'	shift, and go to state 483

State 476:

	STAR-25 -> STAR-25 . PAREN-24	(Rule 59)
	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-25 . ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 61)

	')'	shift, and go to state 484
	OP21_LIST_COMMA	shift, and go to state 486

	PAREN-24	go to state 485

State 477:

	PAREN-45 -> 'elsif' LPAREN SubExpression ')' CodeBlock .	(Rule 170)

	$default	reduce using rule 170 (PAREN-45)

State 478:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)
	SubExpressionOrVarMod -> SubExpression .	(Rule 160)

	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233
	OP14_BITWISE_OR_XOR	shift, and go to state 230
	OP15_LOGICAL_AND	shift, and go to state 237
	OP16_LOGICAL_OR	shift, and go to state 228
	OP17_LIST_RANGE	shift, and go to state 235
	OP18_TERNARY	shift, and go to state 232
	OP23_LOGICAL_AND	shift, and go to state 242
	OP24_LOGICAL_OR_XOR	shift, and go to state 243

	')'	reduce using rule 160 (SubExpressionOrVarMod)

State 479:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod . ')' CodeBlock	(Rule 181)

	')'	shift, and go to state 487

State 480:

	SubExpressionOrVarMod -> VariableModification .	(Rule 161)

	$default	reduce using rule 161 (SubExpressionOrVarMod)

State 481:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock .	(Rule 180)

	$default	reduce using rule 180 (LoopFor)

State 482:

	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord . OP19_VARIABLE_ASSIGN SubExpression	(Rule 237)
	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord . OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 238)

	OP02_ARRAY_THINARROW	shift, and go to state 489
	OP19_VARIABLE_ASSIGN	shift, and go to state 488

State 483:

	Method -> SUB WORD LBRACE LBRACE MY TYPE_METHOD '$RETURN_TYPE' . '}' ';' OPTIONAL-33 STAR-34 '}'	(Rule 82)

	'}'	shift, and go to state 490

State 484:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-25 ')' . OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 61)

	OP19_VARIABLE_ASSIGN	shift, and go to state 491

State 485:

	STAR-25 -> STAR-25 PAREN-24 .	(Rule 59)

	$default	reduce using rule 59 (STAR-25)

State 486:

	PAREN-24 -> OP21_LIST_COMMA . MY Type VARIABLE_SYMBOL	(Rule 58)

	MY	shift, and go to state 492

State 487:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' . CodeBlock	(Rule 181)

	LBRACE	shift, and go to state 380

	CodeBlock	go to state 493

State 488:

	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN . SubExpression	(Rule 237)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	WordScoped	go to state 107
	Literal	go to state 130
	HashReference	go to state 95
	Operator	go to state 99
	Variable	go to state 151
	SubExpression	go to state 494
	ArrayReference	go to state 138
	ArrayDereference	go to state 103
	Expression	go to state 153
	VariableSymbolOrSelf	go to state 104
	HashDereference	go to state 119

State 489:

	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW . SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 238)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'undef'	shift, and go to state 131
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 152

	HashReference	go to state 95
	Literal	go to state 130
	WordScoped	go to state 107
	Expression	go to state 153
	VariableSymbolOrSelf	go to state 104
	ArrayReference	go to state 138
	ArrayDereference	go to state 103
	Variable	go to state 151
	SubExpression	go to state 495
	Operator	go to state 99
	HashDereference	go to state 119

State 490:

	Method -> SUB WORD LBRACE LBRACE MY TYPE_METHOD '$RETURN_TYPE' '}' . ';' OPTIONAL-33 STAR-34 '}'	(Rule 82)

	';'	shift, and go to state 496

State 491:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-25 ')' OP19_VARIABLE_ASSIGN . '@ARG;'	(Rule 61)

	'@ARG;'	shift, and go to state 497

State 492:

	PAREN-24 -> OP21_LIST_COMMA MY . Type VARIABLE_SYMBOL	(Rule 58)

	TYPE_INTEGER	shift, and go to state 204
	WORD	shift, and go to state 201
	WORD_SCOPED	shift, and go to state 202

	Type	go to state 498

State 493:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock .	(Rule 181)

	$default	reduce using rule 181 (LoopFor)

State 494:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)
	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN SubExpression .	(Rule 237)

	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233
	OP14_BITWISE_OR_XOR	shift, and go to state 230
	OP15_LOGICAL_AND	shift, and go to state 237
	OP16_LOGICAL_OR	shift, and go to state 228
	OP17_LIST_RANGE	shift, and go to state 235
	OP18_TERNARY	shift, and go to state 232
	OP23_LOGICAL_AND	shift, and go to state 242
	OP24_LOGICAL_OR_XOR	shift, and go to state 243

	'}'	reduce using rule 237 (TypeInnerProperties)
	OP21_LIST_COMMA	reduce using rule 237 (TypeInnerProperties)

State 495:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 122)
	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW SubExpression . ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 238)

	']'	shift, and go to state 499
	OP04_MATH_POW	shift, and go to state 234
	OP06_REGEX_BIND	shift, and go to state 231
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 227
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 239
	OP08_STRING_CAT	shift, and go to state 229
	OP09_BITWISE_SHIFT	shift, and go to state 236
	OP11_COMPARE_LT_GT	shift, and go to state 240
	OP12_COMPARE_EQ_NE	shift, and go to state 241
	OP13_BITWISE_AND	shift, and go to state 233
	OP14_BITWISE_OR_XOR	shift, and go to state 230
	OP15_LOGICAL_AND	shift, and go to state 237
	OP16_LOGICAL_OR	shift, and go to state 228
	OP17_LIST_RANGE	shift, and go to state 235
	OP18_TERNARY	shift, and go to state 232
	OP23_LOGICAL_AND	shift, and go to state 242
	OP24_LOGICAL_OR_XOR	shift, and go to state 243

State 496:

	Method -> SUB WORD LBRACE LBRACE MY TYPE_METHOD '$RETURN_TYPE' '}' ';' . OPTIONAL-33 STAR-34 '}'	(Rule 82)

	LPAREN_MY	shift, and go to state 502

	'%{'	reduce using rule 79 (OPTIONAL-33)
	'@{'	reduce using rule 79 (OPTIONAL-33)
	'for'	reduce using rule 79 (OPTIONAL-33)
	'foreach'	reduce using rule 79 (OPTIONAL-33)
	'if'	reduce using rule 79 (OPTIONAL-33)
	'undef'	reduce using rule 79 (OPTIONAL-33)
	'while'	reduce using rule 79 (OPTIONAL-33)
	'}'	reduce using rule 79 (OPTIONAL-33)
	CONSTANT_CALL_SCOPED	reduce using rule 79 (OPTIONAL-33)
	LBRACE	reduce using rule 79 (OPTIONAL-33)
	LBRACKET	reduce using rule 79 (OPTIONAL-33)
	LITERAL_NUMBER	reduce using rule 79 (OPTIONAL-33)
	LITERAL_STRING	reduce using rule 79 (OPTIONAL-33)
	LPAREN	reduce using rule 79 (OPTIONAL-33)
	MY	reduce using rule 79 (OPTIONAL-33)
	OP01_CLOSE	reduce using rule 79 (OPTIONAL-33)
	OP01_NAMED	reduce using rule 79 (OPTIONAL-33)
	OP01_NAMED_SCOLON	reduce using rule 79 (OPTIONAL-33)
	OP01_NAMED_VOID	reduce using rule 79 (OPTIONAL-33)
	OP01_NAMED_VOID_LPAREN	reduce using rule 79 (OPTIONAL-33)
	OP01_NAMED_VOID_SCOLON	reduce using rule 79 (OPTIONAL-33)
	OP01_OPEN	reduce using rule 79 (OPTIONAL-33)
	OP01_PRINT	reduce using rule 79 (OPTIONAL-33)
	OP03_MATH_INC_DEC	reduce using rule 79 (OPTIONAL-33)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 79 (OPTIONAL-33)
	OP05_LOGICAL_NEG	reduce using rule 79 (OPTIONAL-33)
	OP05_MATH_NEG_LPAREN	reduce using rule 79 (OPTIONAL-33)
	OP10_NAMED_UNARY	reduce using rule 79 (OPTIONAL-33)
	OP10_NAMED_UNARY_SCOLON	reduce using rule 79 (OPTIONAL-33)
	OP19_LOOP_CONTROL	reduce using rule 79 (OPTIONAL-33)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 79 (OPTIONAL-33)
	OP22_LOGICAL_NEG	reduce using rule 79 (OPTIONAL-33)
	SELF	reduce using rule 79 (OPTIONAL-33)
	VARIABLE_SYMBOL	reduce using rule 79 (OPTIONAL-33)
	WORD	reduce using rule 79 (OPTIONAL-33)
	WORD_SCOPED	reduce using rule 79 (OPTIONAL-33)
	WORD_UPPERCASE	reduce using rule 79 (OPTIONAL-33)

	OPTIONAL-33	go to state 501
	MethodArguments	go to state 500

State 497:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-25 ')' OP19_VARIABLE_ASSIGN '@ARG;' .	(Rule 61)

	$default	reduce using rule 61 (SubroutineArguments)

State 498:

	PAREN-24 -> OP21_LIST_COMMA MY Type . VARIABLE_SYMBOL	(Rule 58)

	VARIABLE_SYMBOL	shift, and go to state 503

State 499:

	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW SubExpression ']' . OP19_VARIABLE_ASSIGN 'undef'	(Rule 238)

	OP19_VARIABLE_ASSIGN	shift, and go to state 504

State 500:

	OPTIONAL-33 -> MethodArguments .	(Rule 78)

	$default	reduce using rule 78 (OPTIONAL-33)

State 501:

	Method -> SUB WORD LBRACE LBRACE MY TYPE_METHOD '$RETURN_TYPE' '}' ';' OPTIONAL-33 . STAR-34 '}'	(Rule 82)

	$default	reduce using rule 81 (STAR-34)

	STAR-34	go to state 505

State 502:

	MethodArguments -> LPAREN_MY . Type SELF STAR-36 ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 86)

	TYPE_INTEGER	shift, and go to state 204
	WORD	shift, and go to state 201
	WORD_SCOPED	shift, and go to state 202

	Type	go to state 506

State 503:

	PAREN-24 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL .	(Rule 58)

	$default	reduce using rule 58 (PAREN-24)

State 504:

	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN . 'undef'	(Rule 238)

	'undef'	shift, and go to state 507

State 505:

	STAR-34 -> STAR-34 . Operation	(Rule 80)
	Method -> SUB WORD LBRACE LBRACE MY TYPE_METHOD '$RETURN_TYPE' '}' ';' OPTIONAL-33 STAR-34 . '}'	(Rule 82)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 88
	'if'	shift, and go to state 115
	'undef'	shift, and go to state 131
	'}'	shift, and go to state 509
	CONSTANT_CALL_SCOPED	shift, and go to state 118
	LBRACE	shift, and go to state 90
	LBRACKET	shift, and go to state 117
	LITERAL_NUMBER	shift, and go to state 109
	LITERAL_STRING	shift, and go to state 129
	LPAREN	shift, and go to state 110
	MY	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 116
	OP01_NAMED	shift, and go to state 139
	OP01_NAMED_SCOLON	shift, and go to state 123
	OP01_NAMED_VOID	shift, and go to state 97
	OP01_NAMED_VOID_LPAREN	shift, and go to state 137
	OP01_NAMED_VOID_SCOLON	shift, and go to state 128
	OP01_OPEN	shift, and go to state 120
	OP01_PRINT	shift, and go to state 134
	OP03_MATH_INC_DEC	shift, and go to state 113
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 114
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 89
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 122
	OP19_LOOP_CONTROL	shift, and go to state 121
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 100
	OP22_LOGICAL_NEG	shift, and go to state 133
	SELF	shift, and go to state 127
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 27
	WORD_UPPERCASE	shift, and go to state 96

	'for'	reduce using rule 164 (OPTIONAL-44)
	'foreach'	reduce using rule 164 (OPTIONAL-44)
	'while'	reduce using rule 164 (OPTIONAL-44)

	LoopLabel	go to state 106
	WordScoped	go to state 107
	Literal	go to state 130
	OperatorVoid	go to state 132
	Conditional	go to state 108
	Variable	go to state 136
	SubExpression	go to state 135
	ArrayReference	go to state 138
	Operation	go to state 508
	Statement	go to state 112
	PAREN-43	go to state 92
	VariableDeclaration	go to state 91
	HashReference	go to state 95
	HashDereference	go to state 119
	VariableModification	go to state 124
	Operator	go to state 99
	ArrayDereference	go to state 103
	OPTIONAL-44	go to state 126
	Expression	go to state 105
	VariableSymbolOrSelf	go to state 104

State 506:

	MethodArguments -> LPAREN_MY Type . SELF STAR-36 ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 86)

	SELF	shift, and go to state 510

State 507:

	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' .	(Rule 238)

	$default	reduce using rule 238 (TypeInnerProperties)

State 508:

	STAR-34 -> STAR-34 Operation .	(Rule 80)

	$default	reduce using rule 80 (STAR-34)

State 509:

	Method -> SUB WORD LBRACE LBRACE MY TYPE_METHOD '$RETURN_TYPE' '}' ';' OPTIONAL-33 STAR-34 '}' .	(Rule 82)

	$default	reduce using rule 82 (Method)

State 510:

	MethodArguments -> LPAREN_MY Type SELF . STAR-36 ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 86)

	$default	reduce using rule 85 (STAR-36)

	STAR-36	go to state 511

State 511:

	STAR-36 -> STAR-36 . PAREN-35	(Rule 84)
	MethodArguments -> LPAREN_MY Type SELF STAR-36 . ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 86)

	')'	shift, and go to state 512
	OP21_LIST_COMMA	shift, and go to state 514

	PAREN-35	go to state 513

State 512:

	MethodArguments -> LPAREN_MY Type SELF STAR-36 ')' . OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 86)

	OP19_VARIABLE_ASSIGN	shift, and go to state 515

State 513:

	STAR-36 -> STAR-36 PAREN-35 .	(Rule 84)

	$default	reduce using rule 84 (STAR-36)

State 514:

	PAREN-35 -> OP21_LIST_COMMA . MY Type VARIABLE_SYMBOL	(Rule 83)

	MY	shift, and go to state 516

State 515:

	MethodArguments -> LPAREN_MY Type SELF STAR-36 ')' OP19_VARIABLE_ASSIGN . '@ARG;'	(Rule 86)

	'@ARG;'	shift, and go to state 517

State 516:

	PAREN-35 -> OP21_LIST_COMMA MY . Type VARIABLE_SYMBOL	(Rule 83)

	TYPE_INTEGER	shift, and go to state 204
	WORD	shift, and go to state 201
	WORD_SCOPED	shift, and go to state 202

	Type	go to state 518

State 517:

	MethodArguments -> LPAREN_MY Type SELF STAR-36 ')' OP19_VARIABLE_ASSIGN '@ARG;' .	(Rule 86)

	$default	reduce using rule 86 (MethodArguments)

State 518:

	PAREN-35 -> OP21_LIST_COMMA MY Type . VARIABLE_SYMBOL	(Rule 83)

	VARIABLE_SYMBOL	shift, and go to state 519

State 519:

	PAREN-35 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL .	(Rule 83)

	$default	reduce using rule 83 (PAREN-35)


Summary:
--------
Number of rules         : 272
Number of terminals     : 102
Number of non-terminals : 115
Number of states        : 520
