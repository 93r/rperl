Conflicts:
----------
Conflict in state 144 between rule 90 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 144 between rule 90 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 144 between rule 90 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 144 between rule 90 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 144 between rule 90 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 144 between rule 90 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 144 between rule 90 and token OP04_MATH_POW resolved as shift.
Conflict in state 144 between rule 90 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 144 between rule 90 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 144 between rule 90 and token OP18_TERNARY resolved as reduce.
Conflict in state 144 between rule 90 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 144 between rule 90 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 144 between rule 90 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 144 between rule 90 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 144 between rule 90 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 144 between rule 90 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 144 between rule 90 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 175 between rule 98 and token OP08_STRING_CAT resolved as shift.
Conflict in state 175 between rule 98 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 175 between rule 98 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 175 between rule 98 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 175 between rule 98 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 175 between rule 98 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 175 between rule 98 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 175 between rule 98 and token OP04_MATH_POW resolved as shift.
Conflict in state 175 between rule 98 and token OP18_TERNARY resolved as reduce.
Conflict in state 175 between rule 98 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 175 between rule 98 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 175 between rule 98 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 175 between rule 98 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 175 between rule 98 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 175 between rule 98 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 175 between rule 98 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 175 between rule 98 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 179 between rule 108 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 179 between rule 108 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 179 between rule 108 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 179 between rule 108 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 179 between rule 108 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 179 between rule 108 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 179 between rule 108 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 179 between rule 108 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 179 between rule 108 and token OP18_TERNARY resolved as shift.
Conflict in state 179 between rule 108 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 179 between rule 108 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 179 between rule 108 and token OP04_MATH_POW resolved as shift.
Conflict in state 179 between rule 108 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 179 between rule 108 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 179 between rule 108 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 179 between rule 108 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 179 between rule 108 and token OP08_STRING_CAT resolved as shift.
Conflict in state 181 between rule 83 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 181 between rule 83 and token OP18_TERNARY resolved as reduce.
Conflict in state 181 between rule 83 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 181 between rule 83 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 181 between rule 83 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 181 between rule 83 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 181 between rule 83 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 181 between rule 83 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 181 between rule 83 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 181 between rule 83 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 181 between rule 83 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 181 between rule 83 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 181 between rule 83 and token OP04_MATH_POW resolved as reduce.
Conflict in state 181 between rule 83 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 181 between rule 83 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 181 between rule 83 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 181 between rule 83 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 231 between rule 83 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 231 between rule 83 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 231 between rule 83 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 231 between rule 83 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 231 between rule 83 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 231 between rule 83 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 231 between rule 83 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 231 between rule 83 and token OP18_TERNARY resolved as reduce.
Conflict in state 231 between rule 83 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 231 between rule 83 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 231 between rule 83 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 231 between rule 83 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 231 between rule 83 and token OP04_MATH_POW resolved as reduce.
Conflict in state 231 between rule 83 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 231 between rule 83 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 231 between rule 83 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 231 between rule 83 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 274 between rule 94 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 274 between rule 94 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 274 between rule 94 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 274 between rule 94 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 274 between rule 94 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 274 between rule 94 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 274 between rule 94 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 274 between rule 94 and token OP18_TERNARY resolved as reduce.
Conflict in state 274 between rule 94 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 274 between rule 94 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 274 between rule 94 and token OP04_MATH_POW resolved as shift.
Conflict in state 274 between rule 94 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 274 between rule 94 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 274 between rule 94 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 274 between rule 94 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 274 between rule 94 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 274 between rule 94 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 275 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 275 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 275 between rule 102 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 275 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 275 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 275 between rule 102 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 275 between rule 102 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 275 between rule 102 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 275 between rule 102 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 275 between rule 102 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 275 between rule 102 and token OP08_STRING_CAT resolved as shift.
Conflict in state 275 between rule 102 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 275 between rule 102 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 275 between rule 102 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 275 between rule 102 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 275 between rule 102 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 275 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 276 between rule 100 and token OP18_TERNARY resolved as reduce.
Conflict in state 276 between rule 100 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 276 between rule 100 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 276 between rule 100 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 276 between rule 100 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 276 between rule 100 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 276 between rule 100 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 276 between rule 100 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 276 between rule 100 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 276 between rule 100 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 276 between rule 100 and token OP08_STRING_CAT resolved as shift.
Conflict in state 276 between rule 100 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 276 between rule 100 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 276 between rule 100 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 276 between rule 100 and token OP04_MATH_POW resolved as shift.
Conflict in state 276 between rule 100 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 276 between rule 100 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 278 between rule 101 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 278 between rule 101 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 278 between rule 101 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 278 between rule 101 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 278 between rule 101 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 278 between rule 101 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 278 between rule 101 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 278 between rule 101 and token OP18_TERNARY resolved as reduce.
Conflict in state 278 between rule 101 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 278 between rule 101 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 278 between rule 101 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 278 between rule 101 and token OP12_COMPARE_EQ_NE resolved as error.
Conflict in state 278 between rule 101 and token OP04_MATH_POW resolved as shift.
Conflict in state 278 between rule 101 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 278 between rule 101 and token OP08_STRING_CAT resolved as shift.
Conflict in state 278 between rule 101 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 278 between rule 101 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 279 between rule 97 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 279 between rule 97 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 279 between rule 97 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 279 between rule 97 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 279 between rule 97 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 279 between rule 97 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 279 between rule 97 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 279 between rule 97 and token OP18_TERNARY resolved as reduce.
Conflict in state 279 between rule 97 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 279 between rule 97 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 279 between rule 97 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 279 between rule 97 and token OP04_MATH_POW resolved as shift.
Conflict in state 279 between rule 97 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 279 between rule 97 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 279 between rule 97 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 279 between rule 97 and token OP08_STRING_CAT resolved as shift.
Conflict in state 279 between rule 97 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 280 between rule 109 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 280 between rule 109 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 280 between rule 109 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 280 between rule 109 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 280 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 280 between rule 109 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 280 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 280 between rule 109 and token OP18_TERNARY resolved as shift.
Conflict in state 280 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 280 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 280 between rule 109 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 280 between rule 109 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 280 between rule 109 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 280 between rule 109 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 280 between rule 109 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 280 between rule 109 and token OP08_STRING_CAT resolved as shift.
Conflict in state 280 between rule 109 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 281 between rule 95 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 281 between rule 95 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 281 between rule 95 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 281 between rule 95 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 281 between rule 95 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 281 between rule 95 and token OP04_MATH_POW resolved as shift.
Conflict in state 281 between rule 95 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 281 between rule 95 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 281 between rule 95 and token OP18_TERNARY resolved as reduce.
Conflict in state 281 between rule 95 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 281 between rule 95 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 281 between rule 95 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 281 between rule 95 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 281 between rule 95 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 281 between rule 95 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 281 between rule 95 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 281 between rule 95 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 282 between rule 104 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 282 between rule 104 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 282 between rule 104 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 282 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 282 between rule 104 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 282 between rule 104 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 282 between rule 104 and token OP08_STRING_CAT resolved as shift.
Conflict in state 282 between rule 104 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 282 between rule 104 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 282 between rule 104 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 282 between rule 104 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 282 between rule 104 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 282 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 282 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 282 between rule 104 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 282 between rule 104 and token OP18_TERNARY resolved as reduce.
Conflict in state 282 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 283 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 283 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 283 between rule 105 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 283 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 283 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 283 between rule 105 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 283 between rule 105 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 283 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 283 between rule 105 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 283 between rule 105 and token OP08_STRING_CAT resolved as shift.
Conflict in state 283 between rule 105 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 283 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 283 between rule 105 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 283 between rule 105 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 283 between rule 105 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 283 between rule 105 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 283 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 284 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 284 between rule 110 and token OP18_TERNARY resolved as shift.
Conflict in state 284 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 284 between rule 110 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 284 between rule 110 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 284 between rule 110 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 284 between rule 110 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 284 between rule 110 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 284 between rule 110 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 284 between rule 110 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 284 between rule 110 and token OP08_STRING_CAT resolved as shift.
Conflict in state 284 between rule 110 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 284 between rule 110 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 284 between rule 110 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 284 between rule 110 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 284 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 284 between rule 110 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 288 between rule 103 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 288 between rule 103 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 288 between rule 103 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 288 between rule 103 and token OP04_MATH_POW resolved as shift.
Conflict in state 288 between rule 103 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 288 between rule 103 and token OP08_STRING_CAT resolved as shift.
Conflict in state 288 between rule 103 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 288 between rule 103 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 288 between rule 103 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 288 between rule 103 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 288 between rule 103 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 288 between rule 103 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 288 between rule 103 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 288 between rule 103 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 288 between rule 103 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 288 between rule 103 and token OP18_TERNARY resolved as reduce.
Conflict in state 288 between rule 103 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 289 between rule 93 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 289 between rule 93 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 289 between rule 93 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 289 between rule 93 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 289 between rule 93 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 289 between rule 93 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 289 between rule 93 and token OP04_MATH_POW resolved as shift.
Conflict in state 289 between rule 93 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 289 between rule 93 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 289 between rule 93 and token OP18_TERNARY resolved as reduce.
Conflict in state 289 between rule 93 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 289 between rule 93 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 289 between rule 93 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 289 between rule 93 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 289 between rule 93 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 289 between rule 93 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 289 between rule 93 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 290 between rule 89 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 290 between rule 89 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 290 between rule 89 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 290 between rule 89 and token OP04_MATH_POW resolved as shift.
Conflict in state 290 between rule 89 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 290 between rule 89 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 290 between rule 89 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 290 between rule 89 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 290 between rule 89 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 290 between rule 89 and token OP18_TERNARY resolved as reduce.
Conflict in state 290 between rule 89 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 290 between rule 89 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 290 between rule 89 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 290 between rule 89 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 290 between rule 89 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 290 between rule 89 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 290 between rule 89 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 291 between rule 96 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 291 between rule 96 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 291 between rule 96 and token OP04_MATH_POW resolved as shift.
Conflict in state 291 between rule 96 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 291 between rule 96 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 291 between rule 96 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 291 between rule 96 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 291 between rule 96 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 291 between rule 96 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 291 between rule 96 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 291 between rule 96 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 291 between rule 96 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 291 between rule 96 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 291 between rule 96 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 291 between rule 96 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 291 between rule 96 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 291 between rule 96 and token OP18_TERNARY resolved as reduce.
Conflict in state 292 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 292 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 292 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 292 between rule 106 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 292 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 292 between rule 106 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 292 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 292 between rule 106 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 292 between rule 106 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 292 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 292 between rule 106 and token OP08_STRING_CAT resolved as shift.
Conflict in state 292 between rule 106 and token OP17_LIST_RANGE resolved as error.
Conflict in state 292 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 292 between rule 106 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 292 between rule 106 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 292 between rule 106 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 292 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 406 between rule 85 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 406 between rule 85 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 406 between rule 85 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 406 between rule 85 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 406 between rule 85 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 406 between rule 85 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 406 between rule 85 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 406 between rule 85 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 406 between rule 85 and token OP18_TERNARY resolved as shift.
Conflict in state 406 between rule 85 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 406 between rule 85 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 406 between rule 85 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 406 between rule 85 and token OP04_MATH_POW resolved as shift.
Conflict in state 406 between rule 85 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 406 between rule 85 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 406 between rule 85 and token OP08_STRING_CAT resolved as shift.
Conflict in state 406 between rule 85 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 419 between rule 106 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 419 between rule 106 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 419 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 419 between rule 106 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 419 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 419 between rule 106 and token OP17_LIST_RANGE resolved as error.
Conflict in state 419 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 419 between rule 106 and token OP08_STRING_CAT resolved as shift.
Conflict in state 419 between rule 106 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 419 between rule 106 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 419 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 419 between rule 106 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 419 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 419 between rule 106 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 419 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 419 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 419 between rule 106 and token OP18_TERNARY resolved as reduce.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> Critic
20:	OPTIONAL-9 -> /* empty */
21:	OPTIONAL-10 -> USE_RPERL
22:	OPTIONAL-10 -> /* empty */
23:	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped ';' Header
24:	Module -> Package
25:	Module -> Class
26:	STAR-11 -> STAR-11 Critic
27:	STAR-11 -> /* empty */
28:	STAR-12 -> STAR-12 Include
29:	STAR-12 -> /* empty */
30:	STAR-13 -> STAR-13 Constant
31:	STAR-13 -> /* empty */
32:	PLUS-14 -> PLUS-14 Subroutine
33:	PLUS-14 -> Subroutine
34:	Package -> STAR-11 STAR-12 STAR-13 PLUS-14 LITERAL_NUMBER ';'
35:	OPTIONAL-15 -> USE_RPERL_AFTER
36:	OPTIONAL-15 -> /* empty */
37:	Header -> 'use strict;' 'use warnings;' OPTIONAL-15 'our' VERSION_NUMBER_ASSIGN
38:	PLUS-16 -> PLUS-16 WORD
39:	PLUS-16 -> WORD
40:	Critic -> '## no critic qw(' PLUS-16 ')'
41:	PLUS-17 -> PLUS-17 WORD
42:	PLUS-17 -> WORD
43:	Include -> USE WordScoped ';'
44:	Include -> USE WordScoped OP01_QW PLUS-17 ')' ';'
45:	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'
46:	OPTIONAL-18 -> SubroutineArguments
47:	OPTIONAL-18 -> /* empty */
48:	STAR-19 -> STAR-19 Operation
49:	STAR-19 -> /* empty */
50:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 STAR-19 '}' ';'
51:	PAREN-20 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL
52:	STAR-21 -> STAR-21 PAREN-20
53:	STAR-21 -> /* empty */
54:	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;'
55:	STAR-22 -> STAR-22 Critic
56:	STAR-22 -> /* empty */
57:	STAR-23 -> STAR-23 Include
58:	STAR-23 -> /* empty */
59:	STAR-24 -> STAR-24 Constant
60:	STAR-24 -> /* empty */
61:	STAR-25 -> STAR-25 MethodOrSubroutine
62:	STAR-25 -> /* empty */
63:	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';'
64:	PAREN-26 -> OP21_LIST_COMMA HashEntryTyped
65:	STAR-27 -> STAR-27 PAREN-26
66:	STAR-27 -> /* empty */
67:	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-27 '}' ';'
68:	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';'
69:	OPTIONAL-28 -> MethodArguments
70:	OPTIONAL-28 -> /* empty */
71:	STAR-29 -> STAR-29 Operation
72:	STAR-29 -> /* empty */
73:	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-28 STAR-29 '}' ';'
74:	PAREN-30 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL
75:	STAR-31 -> STAR-31 PAREN-30
76:	STAR-31 -> /* empty */
77:	MethodArguments -> LPAREN_MY Type SELF STAR-31 ')' OP19_VARIABLE_ASSIGN '@_;'
78:	MethodOrSubroutine -> Method
79:	MethodOrSubroutine -> Subroutine
80:	Operation -> Expression ';'
81:	Operation -> Statement
82:	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')'
83:	Operator -> OP01_NAMED SubExpression
84:	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'
85:	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression
86:	Operator -> OP01_CLOSE FHREF_SYMBOL
87:	Operator -> OP03_MATH_INC_DEC Variable
88:	Operator -> Variable OP03_MATH_INC_DEC
89:	Operator -> SubExpression OP04_MATH_POW SubExpression
90:	Operator -> OP05_LOGICAL_NEG SubExpression
91:	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')'
92:	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN
93:	Operator -> SubExpression OP07_STRING_REPEAT SubExpression
94:	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression
95:	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression
96:	Operator -> SubExpression OP08_STRING_CAT SubExpression
97:	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression
98:	Operator -> OP10_NAMED_UNARY SubExpression
99:	Operator -> OP10_NAMED_UNARY
100:	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression
101:	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression
102:	Operator -> SubExpression OP13_BITWISE_AND SubExpression
103:	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression
104:	Operator -> SubExpression OP15_LOGICAL_AND SubExpression
105:	Operator -> SubExpression OP16_LOGICAL_OR SubExpression
106:	Operator -> SubExpression OP17_LIST_RANGE SubExpression
107:	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral
108:	Operator -> OP22_LOGICAL_NEG SubExpression
109:	Operator -> SubExpression OP23_LOGICAL_AND SubExpression
110:	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression
111:	PAREN-32 -> STDOUT_STDERR
112:	OPTIONAL-33 -> PAREN-32
113:	OPTIONAL-33 -> /* empty */
114:	OPTIONAL-34 -> ListElements
115:	OPTIONAL-34 -> /* empty */
116:	OperatorVoid -> OP01_PRINT OPTIONAL-33 ListElements ';'
117:	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements ';'
118:	OperatorVoid -> OP01_NAMED_VOID_SCOLON
119:	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-34 ')' ';'
120:	OperatorVoid -> OP01_NAMED_VOID ListElements ';'
121:	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';'
122:	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON
123:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
124:	OPTIONAL-35 -> ListElements
125:	OPTIONAL-35 -> /* empty */
126:	OPTIONAL-36 -> ListElements
127:	OPTIONAL-36 -> /* empty */
128:	Expression -> Operator
129:	Expression -> WordScoped LPAREN OPTIONAL-35 ')'
130:	Expression -> WORD_UPPERCASE LPAREN ')'
131:	Expression -> WordScoped SCOPE WORD_UPPERCASE LPAREN ')'
132:	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-36 ')'
133:	Expression -> WordScoped OP02_METHOD_THINARROW_NEW ')'
134:	SubExpression -> Expression
135:	SubExpression -> 'undef'
136:	SubExpression -> Literal
137:	SubExpression -> Variable
138:	SubExpression -> ArrayReference
139:	SubExpression -> ArrayDereference
140:	SubExpression -> HashReference
141:	SubExpression -> HashDereference
142:	SubExpression -> LPAREN SubExpression ')'
143:	SubExpressionOrStdin -> SubExpression
144:	SubExpressionOrStdin -> STDIN
145:	PAREN-37 -> LoopLabel COLON
146:	OPTIONAL-38 -> PAREN-37
147:	OPTIONAL-38 -> /* empty */
148:	Statement -> Conditional
149:	Statement -> OPTIONAL-38 Loop
150:	Statement -> OperatorVoid
151:	Statement -> VariableDeclaration
152:	Statement -> VariableModification
153:	PAREN-39 -> 'elsif' LPAREN SubExpression ')' CodeBlock
154:	STAR-40 -> STAR-40 PAREN-39
155:	STAR-40 -> /* empty */
156:	PAREN-41 -> 'else' CodeBlock
157:	OPTIONAL-42 -> PAREN-41
158:	OPTIONAL-42 -> /* empty */
159:	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-40 OPTIONAL-42
160:	Loop -> LoopFor
161:	Loop -> LoopForEach
162:	Loop -> LoopWhile
163:	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock
164:	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock
165:	LoopWhile -> 'while' LPAREN SubExpression ')' CodeBlock
166:	PLUS-43 -> PLUS-43 Operation
167:	PLUS-43 -> Operation
168:	CodeBlock -> LBRACE PLUS-43 '}'
169:	STAR-44 -> STAR-44 VariableRetrieval
170:	STAR-44 -> /* empty */
171:	Variable -> VariableSymbolOrSelf STAR-44
172:	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']'
173:	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}'
174:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
175:	VariableDeclaration -> MY Type VARIABLE_SYMBOL ';'
176:	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
177:	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL ';'
178:	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
179:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';'
180:	PAREN-45 -> OP21_LIST_COMMA ListElement
181:	STAR-46 -> STAR-46 PAREN-45
182:	STAR-46 -> /* empty */
183:	ListElements -> ListElement STAR-46
184:	PLUS-47 -> PLUS-47 WORD
185:	PLUS-47 -> WORD
186:	ListElement -> SubExpression
187:	ListElement -> TypeInner SubExpression
188:	ListElement -> OP01_QW PLUS-47 ')'
189:	OPTIONAL-48 -> ListElements
190:	OPTIONAL-48 -> /* empty */
191:	ArrayReference -> LBRACKET OPTIONAL-48 ']'
192:	OPTIONAL-49 -> TypeInner
193:	OPTIONAL-49 -> /* empty */
194:	ArrayDereference -> '@{' Variable '}'
195:	ArrayDereference -> '@{' OPTIONAL-49 ArrayReference '}'
196:	OPTIONAL-50 -> TypeInner
197:	OPTIONAL-50 -> /* empty */
198:	HashEntry -> VariableOrLiteralOrWord OP20_HASH_FATARROW OPTIONAL-50 SubExpression
199:	HashEntry -> HashDereference
200:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression
201:	HashEntryTyped -> HashDereference
202:	PAREN-51 -> OP21_LIST_COMMA HashEntry
203:	STAR-52 -> STAR-52 PAREN-51
204:	STAR-52 -> /* empty */
205:	HashReference -> LBRACE HashEntry STAR-52 '}'
206:	HashReference -> LBRACE '}'
207:	OPTIONAL-53 -> TypeInner
208:	OPTIONAL-53 -> /* empty */
209:	HashDereference -> '%{' Variable '}'
210:	HashDereference -> '%{' OPTIONAL-53 HashReference '}'
211:	WordScoped -> WORD
212:	WordScoped -> WORD_SCOPED
213:	LoopLabel -> WORD_UPPERCASE
214:	Type -> WORD
215:	Type -> WORD_SCOPED
216:	Type -> TYPE_INTEGER
217:	TypeInner -> MY Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
218:	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN
219:	VariableOrLiteral -> Variable
220:	VariableOrLiteral -> Literal
221:	VariableOrLiteralOrWord -> Variable
222:	VariableOrLiteralOrWord -> Literal
223:	VariableOrLiteralOrWord -> WORD
224:	VariableSymbolOrSelf -> VARIABLE_SYMBOL
225:	VariableSymbolOrSelf -> SELF
226:	Literal -> LITERAL_NUMBER
227:	Literal -> LITERAL_STRING

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'## no critic qw('	shift, and go to state 2
	SHEBANG	shift, and go to state 3

	'package'	reduce using rule 20 (OPTIONAL-9)
	USE_RPERL	reduce using rule 20 (OPTIONAL-9)

	Program	go to state 1
	CompileUnit	go to state 7
	OPTIONAL-9	go to state 4
	ModuleHeader	go to state 5
	PAREN-1	go to state 9
	Critic	go to state 8
	PLUS-2	go to state 6

State 1:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 2:

	Critic -> '## no critic qw(' . PLUS-16 ')'	(Rule 40)

	WORD	shift, and go to state 11

	PLUS-16	go to state 10

State 3:

	Program -> SHEBANG . OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 2

	USE_RPERL	reduce using rule 7 (OPTIONAL-3)

	Critic	go to state 12
	OPTIONAL-3	go to state 13

State 4:

	ModuleHeader -> OPTIONAL-9 . OPTIONAL-10 'package' WordScoped ';' Header	(Rule 23)

	USE_RPERL	shift, and go to state 14

	'package'	reduce using rule 22 (OPTIONAL-10)

	OPTIONAL-10	go to state 15

State 5:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent qw('	shift, and go to state 20

	'## no critic qw('	reduce using rule 27 (STAR-11)
	'our'	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	USE	reduce using rule 27 (STAR-11)

	Module	go to state 16
	STAR-11	go to state 18
	Class	go to state 17
	Package	go to state 19

State 6:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	'## no critic qw('	shift, and go to state 2

	$end	reduce using rule 5 (CompileUnit)
	'package'	reduce using rule 20 (OPTIONAL-9)
	USE_RPERL	reduce using rule 20 (OPTIONAL-9)

	PAREN-1	go to state 21
	Critic	go to state 8
	ModuleHeader	go to state 5
	OPTIONAL-9	go to state 4

State 7:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 22

State 8:

	OPTIONAL-9 -> Critic .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 9:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 10:

	PLUS-16 -> PLUS-16 . WORD	(Rule 38)
	Critic -> '## no critic qw(' PLUS-16 . ')'	(Rule 40)

	')'	shift, and go to state 24
	WORD	shift, and go to state 23

State 11:

	PLUS-16 -> WORD .	(Rule 39)

	$default	reduce using rule 39 (PLUS-16)

State 12:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 13:

	Program -> SHEBANG OPTIONAL-3 . USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	USE_RPERL	shift, and go to state 25

State 14:

	OPTIONAL-10 -> USE_RPERL .	(Rule 21)

	$default	reduce using rule 21 (OPTIONAL-10)

State 15:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 . 'package' WordScoped ';' Header	(Rule 23)

	'package'	shift, and go to state 26

State 16:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 17:

	Module -> Class .	(Rule 25)

	$default	reduce using rule 25 (Module)

State 18:

	STAR-11 -> STAR-11 . Critic	(Rule 26)
	Package -> STAR-11 . STAR-12 STAR-13 PLUS-14 LITERAL_NUMBER ';'	(Rule 34)

	'## no critic qw('	shift, and go to state 2

	'our'	reduce using rule 29 (STAR-12)
	'use constant'	reduce using rule 29 (STAR-12)
	USE	reduce using rule 29 (STAR-12)

	Critic	go to state 28
	STAR-12	go to state 27

State 19:

	Module -> Package .	(Rule 24)

	$default	reduce using rule 24 (Module)

State 20:

	Class -> 'use parent qw(' . WordScoped ')' ';' Include STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29

	WordScoped	go to state 31

State 21:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 22:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 23:

	PLUS-16 -> PLUS-16 WORD .	(Rule 38)

	$default	reduce using rule 38 (PLUS-16)

State 24:

	Critic -> '## no critic qw(' PLUS-16 ')' .	(Rule 40)

	$default	reduce using rule 40 (Critic)

State 25:

	Program -> SHEBANG OPTIONAL-3 USE_RPERL . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 32

	Header	go to state 33

State 26:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' . WordScoped ';' Header	(Rule 23)

	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29

	WordScoped	go to state 34

State 27:

	STAR-12 -> STAR-12 . Include	(Rule 28)
	Package -> STAR-11 STAR-12 . STAR-13 PLUS-14 LITERAL_NUMBER ';'	(Rule 34)

	USE	shift, and go to state 37

	'our'	reduce using rule 31 (STAR-13)
	'use constant'	reduce using rule 31 (STAR-13)

	Include	go to state 36
	STAR-13	go to state 35

State 28:

	STAR-11 -> STAR-11 Critic .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 29:

	WordScoped -> WORD_SCOPED .	(Rule 212)

	$default	reduce using rule 212 (WordScoped)

State 30:

	WordScoped -> WORD .	(Rule 211)

	$default	reduce using rule 211 (WordScoped)

State 31:

	Class -> 'use parent qw(' WordScoped . ')' ';' Include STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	')'	shift, and go to state 38

State 32:

	Header -> 'use strict;' . 'use warnings;' OPTIONAL-15 'our' VERSION_NUMBER_ASSIGN	(Rule 37)

	'use warnings;'	shift, and go to state 39

State 33:

	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 40

State 34:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped . ';' Header	(Rule 23)

	';'	shift, and go to state 41

State 35:

	STAR-13 -> STAR-13 . Constant	(Rule 30)
	Package -> STAR-11 STAR-12 STAR-13 . PLUS-14 LITERAL_NUMBER ';'	(Rule 34)

	'our'	shift, and go to state 43
	'use constant'	shift, and go to state 44

	PLUS-14	go to state 45
	Constant	go to state 46
	Subroutine	go to state 42

State 36:

	STAR-12 -> STAR-12 Include .	(Rule 28)

	$default	reduce using rule 28 (STAR-12)

State 37:

	Include -> USE . WordScoped ';'	(Rule 43)
	Include -> USE . WordScoped OP01_QW PLUS-17 ')' ';'	(Rule 44)

	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29

	WordScoped	go to state 47

State 38:

	Class -> 'use parent qw(' WordScoped ')' . ';' Include STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	';'	shift, and go to state 48

State 39:

	Header -> 'use strict;' 'use warnings;' . OPTIONAL-15 'our' VERSION_NUMBER_ASSIGN	(Rule 37)

	USE_RPERL_AFTER	shift, and go to state 50

	'our'	reduce using rule 36 (OPTIONAL-15)

	OPTIONAL-15	go to state 49

State 40:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 2

	'%{'	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'for'	reduce using rule 11 (STAR-5)
	'foreach'	reduce using rule 11 (STAR-5)
	'if'	reduce using rule 11 (STAR-5)
	'our'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'while'	reduce using rule 11 (STAR-5)
	LBRACE	reduce using rule 11 (STAR-5)
	LBRACKET	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	LPAREN	reduce using rule 11 (STAR-5)
	MY	reduce using rule 11 (STAR-5)
	OP01_CLOSE	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_LPAREN	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_SCOLON	reduce using rule 11 (STAR-5)
	OP01_OPEN	reduce using rule 11 (STAR-5)
	OP01_PRINT	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG_LPAREN	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	SELF	reduce using rule 11 (STAR-5)
	USE	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)
	WORD_UPPERCASE	reduce using rule 11 (STAR-5)

	Critic	go to state 52
	STAR-5	go to state 51

State 41:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped ';' . Header	(Rule 23)

	'use strict;'	shift, and go to state 32

	Header	go to state 53

State 42:

	PLUS-14 -> Subroutine .	(Rule 33)

	$default	reduce using rule 33 (PLUS-14)

State 43:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 STAR-19 '}' ';'	(Rule 50)

	TYPE_INTEGER	shift, and go to state 55
	WORD	shift, and go to state 56
	WORD_SCOPED	shift, and go to state 57

	Type	go to state 54

State 44:

	Constant -> 'use constant' . WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 45)

	WORD_UPPERCASE	shift, and go to state 58

State 45:

	PLUS-14 -> PLUS-14 . Subroutine	(Rule 32)
	Package -> STAR-11 STAR-12 STAR-13 PLUS-14 . LITERAL_NUMBER ';'	(Rule 34)

	'our'	shift, and go to state 43
	LITERAL_NUMBER	shift, and go to state 59

	Subroutine	go to state 60

State 46:

	STAR-13 -> STAR-13 Constant .	(Rule 30)

	$default	reduce using rule 30 (STAR-13)

State 47:

	Include -> USE WordScoped . ';'	(Rule 43)
	Include -> USE WordScoped . OP01_QW PLUS-17 ')' ';'	(Rule 44)

	';'	shift, and go to state 61
	OP01_QW	shift, and go to state 62

State 48:

	Class -> 'use parent qw(' WordScoped ')' ';' . Include STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	USE	shift, and go to state 37

	Include	go to state 63

State 49:

	Header -> 'use strict;' 'use warnings;' OPTIONAL-15 . 'our' VERSION_NUMBER_ASSIGN	(Rule 37)

	'our'	shift, and go to state 64

State 50:

	OPTIONAL-15 -> USE_RPERL_AFTER .	(Rule 35)

	$default	reduce using rule 35 (OPTIONAL-15)

State 51:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	USE	shift, and go to state 37

	'%{'	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'for'	reduce using rule 13 (STAR-6)
	'foreach'	reduce using rule 13 (STAR-6)
	'if'	reduce using rule 13 (STAR-6)
	'our'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while'	reduce using rule 13 (STAR-6)
	LBRACE	reduce using rule 13 (STAR-6)
	LBRACKET	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	LPAREN	reduce using rule 13 (STAR-6)
	MY	reduce using rule 13 (STAR-6)
	OP01_CLOSE	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_LPAREN	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_SCOLON	reduce using rule 13 (STAR-6)
	OP01_OPEN	reduce using rule 13 (STAR-6)
	OP01_PRINT	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG_LPAREN	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	SELF	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)
	WORD_UPPERCASE	reduce using rule 13 (STAR-6)

	Include	go to state 65
	STAR-6	go to state 66

State 52:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 53:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped ';' Header .	(Rule 23)

	$default	reduce using rule 23 (ModuleHeader)

State 54:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-18 STAR-19 '}' ';'	(Rule 50)

	VARIABLE_SYMBOL	shift, and go to state 67

State 55:

	Type -> TYPE_INTEGER .	(Rule 216)

	$default	reduce using rule 216 (Type)

State 56:

	Type -> WORD .	(Rule 214)

	$default	reduce using rule 214 (Type)

State 57:

	Type -> WORD_SCOPED .	(Rule 215)

	$default	reduce using rule 215 (Type)

State 58:

	Constant -> 'use constant' WORD_UPPERCASE . OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 45)

	OP20_HASH_FATARROW	shift, and go to state 68

State 59:

	Package -> STAR-11 STAR-12 STAR-13 PLUS-14 LITERAL_NUMBER . ';'	(Rule 34)

	';'	shift, and go to state 69

State 60:

	PLUS-14 -> PLUS-14 Subroutine .	(Rule 32)

	$default	reduce using rule 32 (PLUS-14)

State 61:

	Include -> USE WordScoped ';' .	(Rule 43)

	$default	reduce using rule 43 (Include)

State 62:

	Include -> USE WordScoped OP01_QW . PLUS-17 ')' ';'	(Rule 44)

	WORD	shift, and go to state 71

	PLUS-17	go to state 70

State 63:

	Class -> 'use parent qw(' WordScoped ')' ';' Include . STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	$default	reduce using rule 56 (STAR-22)

	STAR-22	go to state 72

State 64:

	Header -> 'use strict;' 'use warnings;' OPTIONAL-15 'our' . VERSION_NUMBER_ASSIGN	(Rule 37)

	VERSION_NUMBER_ASSIGN	shift, and go to state 73

State 65:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 66:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 44

	'%{'	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'for'	reduce using rule 15 (STAR-7)
	'foreach'	reduce using rule 15 (STAR-7)
	'if'	reduce using rule 15 (STAR-7)
	'our'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while'	reduce using rule 15 (STAR-7)
	LBRACE	reduce using rule 15 (STAR-7)
	LBRACKET	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	LPAREN	reduce using rule 15 (STAR-7)
	MY	reduce using rule 15 (STAR-7)
	OP01_CLOSE	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_LPAREN	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_SCOLON	reduce using rule 15 (STAR-7)
	OP01_OPEN	reduce using rule 15 (STAR-7)
	OP01_PRINT	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG_LPAREN	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	SELF	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)
	WORD_UPPERCASE	reduce using rule 15 (STAR-7)

	Constant	go to state 74
	STAR-7	go to state 75

State 67:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-18 STAR-19 '}' ';'	(Rule 50)

	'= sub {'	shift, and go to state 76

State 68:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW . TypeInnerConstant Literal ';'	(Rule 45)

	MY	shift, and go to state 78

	TypeInnerConstant	go to state 77

State 69:

	Package -> STAR-11 STAR-12 STAR-13 PLUS-14 LITERAL_NUMBER ';' .	(Rule 34)

	$default	reduce using rule 34 (Package)

State 70:

	PLUS-17 -> PLUS-17 . WORD	(Rule 41)
	Include -> USE WordScoped OP01_QW PLUS-17 . ')' ';'	(Rule 44)

	')'	shift, and go to state 79
	WORD	shift, and go to state 80

State 71:

	PLUS-17 -> WORD .	(Rule 42)

	$default	reduce using rule 42 (PLUS-17)

State 72:

	STAR-22 -> STAR-22 . Critic	(Rule 55)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 . STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	'## no critic qw('	shift, and go to state 2

	'our hashref $properties'	reduce using rule 58 (STAR-23)
	'use constant'	reduce using rule 58 (STAR-23)
	USE	reduce using rule 58 (STAR-23)

	Critic	go to state 81
	STAR-23	go to state 82

State 73:

	Header -> 'use strict;' 'use warnings;' OPTIONAL-15 'our' VERSION_NUMBER_ASSIGN .	(Rule 37)

	$default	reduce using rule 37 (Header)

State 74:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 75:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'if'	shift, and go to state 124
	'our'	shift, and go to state 43
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	MY	shift, and go to state 127
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 114
	OP01_NAMED_VOID	shift, and go to state 95
	OP01_NAMED_VOID_LPAREN	shift, and go to state 117
	OP01_NAMED_VOID_SCOLON	shift, and go to state 105
	OP01_OPEN	shift, and go to state 110
	OP01_PRINT	shift, and go to state 98
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP19_LOOP_CONTROL	shift, and go to state 102
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 90
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 128

	'for'	reduce using rule 147 (OPTIONAL-38)
	'foreach'	reduce using rule 147 (OPTIONAL-38)
	'while'	reduce using rule 147 (OPTIONAL-38)

	Variable	go to state 119
	OPTIONAL-38	go to state 120
	VariableDeclaration	go to state 118
	Conditional	go to state 93
	VariableSymbolOrSelf	go to state 121
	HashDereference	go to state 100
	VariableModification	go to state 99
	Operator	go to state 96
	SubExpression	go to state 131
	WordScoped	go to state 130
	Subroutine	go to state 101
	PAREN-37	go to state 129
	Operation	go to state 85
	HashReference	go to state 83
	Statement	go to state 84
	PLUS-8	go to state 87
	Expression	go to state 109
	Literal	go to state 86
	ArrayReference	go to state 108
	OperatorVoid	go to state 113
	LoopLabel	go to state 89
	ArrayDereference	go to state 116

State 76:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-18 STAR-19 '}' ';'	(Rule 50)

	LPAREN_MY	shift, and go to state 132

	'%{'	reduce using rule 47 (OPTIONAL-18)
	'@{'	reduce using rule 47 (OPTIONAL-18)
	'for'	reduce using rule 47 (OPTIONAL-18)
	'foreach'	reduce using rule 47 (OPTIONAL-18)
	'if'	reduce using rule 47 (OPTIONAL-18)
	'undef'	reduce using rule 47 (OPTIONAL-18)
	'while'	reduce using rule 47 (OPTIONAL-18)
	'}'	reduce using rule 47 (OPTIONAL-18)
	LBRACE	reduce using rule 47 (OPTIONAL-18)
	LBRACKET	reduce using rule 47 (OPTIONAL-18)
	LITERAL_NUMBER	reduce using rule 47 (OPTIONAL-18)
	LITERAL_STRING	reduce using rule 47 (OPTIONAL-18)
	LPAREN	reduce using rule 47 (OPTIONAL-18)
	MY	reduce using rule 47 (OPTIONAL-18)
	OP01_CLOSE	reduce using rule 47 (OPTIONAL-18)
	OP01_NAMED	reduce using rule 47 (OPTIONAL-18)
	OP01_NAMED_VOID	reduce using rule 47 (OPTIONAL-18)
	OP01_NAMED_VOID_LPAREN	reduce using rule 47 (OPTIONAL-18)
	OP01_NAMED_VOID_SCOLON	reduce using rule 47 (OPTIONAL-18)
	OP01_OPEN	reduce using rule 47 (OPTIONAL-18)
	OP01_PRINT	reduce using rule 47 (OPTIONAL-18)
	OP03_MATH_INC_DEC	reduce using rule 47 (OPTIONAL-18)
	OP05_LOGICAL_NEG	reduce using rule 47 (OPTIONAL-18)
	OP05_MATH_NEG_LPAREN	reduce using rule 47 (OPTIONAL-18)
	OP10_NAMED_UNARY	reduce using rule 47 (OPTIONAL-18)
	OP19_LOOP_CONTROL	reduce using rule 47 (OPTIONAL-18)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 47 (OPTIONAL-18)
	OP22_LOGICAL_NEG	reduce using rule 47 (OPTIONAL-18)
	SELF	reduce using rule 47 (OPTIONAL-18)
	VARIABLE_SYMBOL	reduce using rule 47 (OPTIONAL-18)
	WORD	reduce using rule 47 (OPTIONAL-18)
	WORD_SCOPED	reduce using rule 47 (OPTIONAL-18)
	WORD_UPPERCASE	reduce using rule 47 (OPTIONAL-18)

	OPTIONAL-18	go to state 133
	SubroutineArguments	go to state 134

State 77:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant . Literal ';'	(Rule 45)

	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106

	Literal	go to state 135

State 78:

	TypeInnerConstant -> MY . Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 218)

	TYPE_INTEGER	shift, and go to state 55
	WORD	shift, and go to state 56
	WORD_SCOPED	shift, and go to state 57

	Type	go to state 136

State 79:

	Include -> USE WordScoped OP01_QW PLUS-17 ')' . ';'	(Rule 44)

	';'	shift, and go to state 137

State 80:

	PLUS-17 -> PLUS-17 WORD .	(Rule 41)

	$default	reduce using rule 41 (PLUS-17)

State 81:

	STAR-22 -> STAR-22 Critic .	(Rule 55)

	$default	reduce using rule 55 (STAR-22)

State 82:

	STAR-23 -> STAR-23 . Include	(Rule 57)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 STAR-23 . STAR-24 Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	USE	shift, and go to state 37

	'our hashref $properties'	reduce using rule 60 (STAR-24)
	'use constant'	reduce using rule 60 (STAR-24)

	STAR-24	go to state 138
	Include	go to state 139

State 83:

	SubExpression -> HashReference .	(Rule 140)

	$default	reduce using rule 140 (SubExpression)

State 84:

	Operation -> Statement .	(Rule 81)

	$default	reduce using rule 81 (Operation)

State 85:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 86:

	SubExpression -> Literal .	(Rule 136)

	$default	reduce using rule 136 (SubExpression)

State 87:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'if'	shift, and go to state 124
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	MY	shift, and go to state 127
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 114
	OP01_NAMED_VOID	shift, and go to state 95
	OP01_NAMED_VOID_LPAREN	shift, and go to state 117
	OP01_NAMED_VOID_SCOLON	shift, and go to state 105
	OP01_OPEN	shift, and go to state 110
	OP01_PRINT	shift, and go to state 98
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP19_LOOP_CONTROL	shift, and go to state 102
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 90
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 128

	$end	reduce using rule 18 (Program)
	'for'	reduce using rule 147 (OPTIONAL-38)
	'foreach'	reduce using rule 147 (OPTIONAL-38)
	'while'	reduce using rule 147 (OPTIONAL-38)

	Operator	go to state 96
	VariableModification	go to state 99
	HashDereference	go to state 100
	PAREN-37	go to state 129
	SubExpression	go to state 131
	WordScoped	go to state 130
	VariableDeclaration	go to state 118
	OPTIONAL-38	go to state 120
	Variable	go to state 119
	Conditional	go to state 93
	VariableSymbolOrSelf	go to state 121
	LoopLabel	go to state 89
	OperatorVoid	go to state 113
	ArrayDereference	go to state 116
	Operation	go to state 140
	Statement	go to state 84
	HashReference	go to state 83
	ArrayReference	go to state 108
	Literal	go to state 86
	Expression	go to state 109

State 88:

	Operator -> OP05_LOGICAL_NEG . SubExpression	(Rule 90)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	Operator	go to state 96
	HashDereference	go to state 100
	ArrayDereference	go to state 116
	SubExpression	go to state 144
	WordScoped	go to state 130
	HashReference	go to state 83
	Variable	go to state 143
	Literal	go to state 86
	ArrayReference	go to state 108
	VariableSymbolOrSelf	go to state 121
	Expression	go to state 141

State 89:

	PAREN-37 -> LoopLabel . COLON	(Rule 145)

	COLON	shift, and go to state 146

State 90:

	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON .	(Rule 122)

	$default	reduce using rule 122 (OperatorVoid)

State 91:

	Operator -> LPAREN . OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')'	(Rule 82)
	Operator -> LPAREN . OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'	(Rule 84)
	SubExpression -> LPAREN . SubExpression ')'	(Rule 142)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 149
	OP01_OPEN	shift, and go to state 110
	OP01_PRINT	shift, and go to state 147
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	HashDereference	go to state 100
	Operator	go to state 96
	ArrayDereference	go to state 116
	SubExpression	go to state 148
	WordScoped	go to state 130
	Variable	go to state 143
	HashReference	go to state 83
	Expression	go to state 141
	Literal	go to state 86
	ArrayReference	go to state 108
	VariableSymbolOrSelf	go to state 121

State 92:

	HashDereference -> '%{' . Variable '}'	(Rule 209)
	HashDereference -> '%{' . OPTIONAL-53 HashReference '}'	(Rule 210)

	MY	shift, and go to state 151
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94

	LBRACE	reduce using rule 208 (OPTIONAL-53)

	Variable	go to state 152
	TypeInner	go to state 153
	OPTIONAL-53	go to state 150
	VariableSymbolOrSelf	go to state 121

State 93:

	Statement -> Conditional .	(Rule 148)

	$default	reduce using rule 148 (Statement)

State 94:

	VariableSymbolOrSelf -> VARIABLE_SYMBOL .	(Rule 224)

	$default	reduce using rule 224 (VariableSymbolOrSelf)

State 95:

	OperatorVoid -> OP01_NAMED_VOID . ListElements ';'	(Rule 120)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	MY	shift, and go to state 151
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP01_QW	shift, and go to state 158
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	Variable	go to state 143
	ListElements	go to state 157
	HashReference	go to state 83
	TypeInner	go to state 154
	Expression	go to state 141
	Literal	go to state 86
	VariableSymbolOrSelf	go to state 121
	ArrayReference	go to state 108
	HashDereference	go to state 100
	Operator	go to state 96
	ArrayDereference	go to state 116
	ListElement	go to state 156
	WordScoped	go to state 130
	SubExpression	go to state 155

State 96:

	Expression -> Operator .	(Rule 128)

	$default	reduce using rule 128 (Expression)

State 97:

	ArrayDereference -> '@{' . Variable '}'	(Rule 194)
	ArrayDereference -> '@{' . OPTIONAL-49 ArrayReference '}'	(Rule 195)

	MY	shift, and go to state 151
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94

	LBRACKET	reduce using rule 193 (OPTIONAL-49)

	Variable	go to state 160
	OPTIONAL-49	go to state 161
	TypeInner	go to state 159
	VariableSymbolOrSelf	go to state 121

State 98:

	OperatorVoid -> OP01_PRINT . OPTIONAL-33 ListElements ';'	(Rule 116)
	OperatorVoid -> OP01_PRINT . FHREF_SYMBOL_BRACES ListElements ';'	(Rule 117)

	FHREF_SYMBOL_BRACES	shift, and go to state 164
	STDOUT_STDERR	shift, and go to state 162

	'%{'	reduce using rule 113 (OPTIONAL-33)
	'@{'	reduce using rule 113 (OPTIONAL-33)
	'undef'	reduce using rule 113 (OPTIONAL-33)
	LBRACE	reduce using rule 113 (OPTIONAL-33)
	LBRACKET	reduce using rule 113 (OPTIONAL-33)
	LITERAL_NUMBER	reduce using rule 113 (OPTIONAL-33)
	LITERAL_STRING	reduce using rule 113 (OPTIONAL-33)
	LPAREN	reduce using rule 113 (OPTIONAL-33)
	MY	reduce using rule 113 (OPTIONAL-33)
	OP01_CLOSE	reduce using rule 113 (OPTIONAL-33)
	OP01_NAMED	reduce using rule 113 (OPTIONAL-33)
	OP01_OPEN	reduce using rule 113 (OPTIONAL-33)
	OP01_QW	reduce using rule 113 (OPTIONAL-33)
	OP03_MATH_INC_DEC	reduce using rule 113 (OPTIONAL-33)
	OP05_LOGICAL_NEG	reduce using rule 113 (OPTIONAL-33)
	OP05_MATH_NEG_LPAREN	reduce using rule 113 (OPTIONAL-33)
	OP10_NAMED_UNARY	reduce using rule 113 (OPTIONAL-33)
	OP22_LOGICAL_NEG	reduce using rule 113 (OPTIONAL-33)
	SELF	reduce using rule 113 (OPTIONAL-33)
	VARIABLE_SYMBOL	reduce using rule 113 (OPTIONAL-33)
	WORD	reduce using rule 113 (OPTIONAL-33)
	WORD_SCOPED	reduce using rule 113 (OPTIONAL-33)
	WORD_UPPERCASE	reduce using rule 113 (OPTIONAL-33)

	PAREN-32	go to state 163
	OPTIONAL-33	go to state 165

State 99:

	Statement -> VariableModification .	(Rule 152)

	$default	reduce using rule 152 (Statement)

State 100:

	SubExpression -> HashDereference .	(Rule 141)

	$default	reduce using rule 141 (SubExpression)

State 101:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 102:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 123)

	WORD_UPPERCASE	shift, and go to state 166

	LoopLabel	go to state 167

State 103:

	HashReference -> LBRACE . HashEntry STAR-52 '}'	(Rule 205)
	HashReference -> LBRACE . '}'	(Rule 206)

	'%{'	shift, and go to state 92
	'}'	shift, and go to state 173
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 172

	VariableSymbolOrSelf	go to state 121
	Literal	go to state 168
	HashEntry	go to state 169
	VariableOrLiteralOrWord	go to state 171
	Variable	go to state 174
	HashDereference	go to state 170

State 104:

	Operator -> OP10_NAMED_UNARY . SubExpression	(Rule 98)
	Operator -> OP10_NAMED_UNARY .	(Rule 99)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	')'	reduce using rule 99 (Operator)
	';'	reduce using rule 99 (Operator)
	']'	reduce using rule 99 (Operator)
	'}'	reduce using rule 99 (Operator)
	OP04_MATH_POW	reduce using rule 99 (Operator)
	OP06_REGEX_MATCH	reduce using rule 99 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 99 (Operator)
	OP07_STRING_REPEAT	reduce using rule 99 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 99 (Operator)
	OP08_STRING_CAT	reduce using rule 99 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 99 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 99 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 99 (Operator)
	OP13_BITWISE_AND	reduce using rule 99 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 99 (Operator)
	OP15_LOGICAL_AND	reduce using rule 99 (Operator)
	OP16_LOGICAL_OR	reduce using rule 99 (Operator)
	OP17_LIST_RANGE	reduce using rule 99 (Operator)
	OP18_TERNARY	reduce using rule 99 (Operator)
	OP21_LIST_COMMA	reduce using rule 99 (Operator)
	OP23_LOGICAL_AND	reduce using rule 99 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 99 (Operator)

	Literal	go to state 86
	ArrayReference	go to state 108
	VariableSymbolOrSelf	go to state 121
	Expression	go to state 141
	HashReference	go to state 83
	Variable	go to state 143
	ArrayDereference	go to state 116
	WordScoped	go to state 130
	SubExpression	go to state 175
	Operator	go to state 96
	HashDereference	go to state 100

State 105:

	OperatorVoid -> OP01_NAMED_VOID_SCOLON .	(Rule 118)

	$default	reduce using rule 118 (OperatorVoid)

State 106:

	Literal -> LITERAL_STRING .	(Rule 227)

	$default	reduce using rule 227 (Literal)

State 107:

	SubExpression -> 'undef' .	(Rule 135)

	$default	reduce using rule 135 (SubExpression)

State 108:

	SubExpression -> ArrayReference .	(Rule 138)

	$default	reduce using rule 138 (SubExpression)

State 109:

	Operation -> Expression . ';'	(Rule 80)
	SubExpression -> Expression .	(Rule 134)

	';'	shift, and go to state 176

	OP04_MATH_POW	reduce using rule 134 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 134 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 134 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 134 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 134 (SubExpression)
	OP08_STRING_CAT	reduce using rule 134 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 134 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 134 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 134 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 134 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 134 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 134 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 134 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 134 (SubExpression)
	OP18_TERNARY	reduce using rule 134 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 134 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 134 (SubExpression)

State 110:

	Operator -> OP01_OPEN . MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 85)

	MY	shift, and go to state 177

State 111:

	Operator -> OP05_MATH_NEG_LPAREN . SubExpression ')'	(Rule 91)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	ArrayReference	go to state 108
	VariableSymbolOrSelf	go to state 121
	Literal	go to state 86
	Expression	go to state 141
	HashReference	go to state 83
	Variable	go to state 143
	SubExpression	go to state 178
	ArrayDereference	go to state 116
	WordScoped	go to state 130
	Operator	go to state 96
	HashDereference	go to state 100

State 112:

	Operator -> OP22_LOGICAL_NEG . SubExpression	(Rule 108)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	Variable	go to state 143
	HashReference	go to state 83
	Expression	go to state 141
	Literal	go to state 86
	VariableSymbolOrSelf	go to state 121
	ArrayReference	go to state 108
	HashDereference	go to state 100
	Operator	go to state 96
	ArrayDereference	go to state 116
	WordScoped	go to state 130
	SubExpression	go to state 179

State 113:

	Statement -> OperatorVoid .	(Rule 150)

	$default	reduce using rule 150 (Statement)

State 114:

	Operator -> OP01_NAMED . SubExpression	(Rule 83)
	OperatorVoid -> OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ';'	(Rule 121)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	MY	shift, and go to state 151
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP01_QW	shift, and go to state 158
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	ListElement	go to state 180
	ArrayDereference	go to state 116
	SubExpression	go to state 181
	WordScoped	go to state 130
	Operator	go to state 96
	HashDereference	go to state 100
	Literal	go to state 86
	VariableSymbolOrSelf	go to state 121
	ArrayReference	go to state 108
	Expression	go to state 141
	TypeInner	go to state 154
	HashReference	go to state 83
	Variable	go to state 143

State 115:

	ArrayReference -> LBRACKET . OPTIONAL-48 ']'	(Rule 191)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	MY	shift, and go to state 151
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP01_QW	shift, and go to state 158
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	']'	reduce using rule 190 (OPTIONAL-48)

	OPTIONAL-48	go to state 183
	ListElement	go to state 156
	SubExpression	go to state 155
	ArrayDereference	go to state 116
	WordScoped	go to state 130
	HashDereference	go to state 100
	Operator	go to state 96
	Expression	go to state 141
	Literal	go to state 86
	VariableSymbolOrSelf	go to state 121
	ArrayReference	go to state 108
	Variable	go to state 143
	ListElements	go to state 182
	HashReference	go to state 83
	TypeInner	go to state 154

State 116:

	SubExpression -> ArrayDereference .	(Rule 139)

	$default	reduce using rule 139 (SubExpression)

State 117:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN . OPTIONAL-34 ')' ';'	(Rule 119)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	MY	shift, and go to state 151
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP01_QW	shift, and go to state 158
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	')'	reduce using rule 115 (OPTIONAL-34)

	WordScoped	go to state 130
	SubExpression	go to state 155
	ListElement	go to state 156
	ArrayDereference	go to state 116
	HashDereference	go to state 100
	Operator	go to state 96
	Expression	go to state 141
	ArrayReference	go to state 108
	VariableSymbolOrSelf	go to state 121
	OPTIONAL-34	go to state 185
	Literal	go to state 86
	Variable	go to state 143
	TypeInner	go to state 154
	HashReference	go to state 83
	ListElements	go to state 184

State 118:

	Statement -> VariableDeclaration .	(Rule 151)

	$default	reduce using rule 151 (Statement)

State 119:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 88)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-36 ')'	(Rule 132)
	SubExpression -> Variable .	(Rule 137)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 178)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY SubExpression ';'	(Rule 179)

	OP02_METHOD_THINARROW	shift, and go to state 188
	OP03_MATH_INC_DEC	shift, and go to state 189
	OP19_VARIABLE_ASSIGN	shift, and go to state 186
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 187

	OP04_MATH_POW	reduce using rule 137 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 137 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 137 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 137 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 137 (SubExpression)
	OP08_STRING_CAT	reduce using rule 137 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 137 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 137 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 137 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 137 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 137 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 137 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 137 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 137 (SubExpression)
	OP18_TERNARY	reduce using rule 137 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 137 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 137 (SubExpression)

State 120:

	Statement -> OPTIONAL-38 . Loop	(Rule 149)

	'for'	shift, and go to state 196
	'foreach'	shift, and go to state 195
	'while'	shift, and go to state 192

	LoopForEach	go to state 190
	LoopWhile	go to state 193
	LoopFor	go to state 194
	Loop	go to state 191

State 121:

	Variable -> VariableSymbolOrSelf . STAR-44	(Rule 171)

	$default	reduce using rule 170 (STAR-44)

	STAR-44	go to state 197

State 122:

	Operator -> OP01_CLOSE . FHREF_SYMBOL	(Rule 86)

	FHREF_SYMBOL	shift, and go to state 198

State 123:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 87)

	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94

	Variable	go to state 199
	VariableSymbolOrSelf	go to state 121

State 124:

	Conditional -> 'if' . LPAREN SubExpression ')' CodeBlock STAR-40 OPTIONAL-42	(Rule 159)

	LPAREN	shift, and go to state 200

State 125:

	Literal -> LITERAL_NUMBER .	(Rule 226)

	$default	reduce using rule 226 (Literal)

State 126:

	VariableSymbolOrSelf -> SELF .	(Rule 225)

	$default	reduce using rule 225 (VariableSymbolOrSelf)

State 127:

	VariableDeclaration -> MY . Type VARIABLE_SYMBOL ';'	(Rule 175)
	VariableDeclaration -> MY . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 176)
	VariableDeclaration -> MY . TYPE_FHREF FHREF_SYMBOL ';'	(Rule 177)

	TYPE_FHREF	shift, and go to state 201
	TYPE_INTEGER	shift, and go to state 55
	WORD	shift, and go to state 56
	WORD_SCOPED	shift, and go to state 57

	Type	go to state 202

State 128:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 130)
	LoopLabel -> WORD_UPPERCASE .	(Rule 213)

	LPAREN	shift, and go to state 203

	COLON	reduce using rule 213 (LoopLabel)

State 129:

	OPTIONAL-38 -> PAREN-37 .	(Rule 146)

	$default	reduce using rule 146 (OPTIONAL-38)

State 130:

	Expression -> WordScoped . LPAREN OPTIONAL-35 ')'	(Rule 129)
	Expression -> WordScoped . SCOPE WORD_UPPERCASE LPAREN ')'	(Rule 131)
	Expression -> WordScoped . OP02_METHOD_THINARROW_NEW ')'	(Rule 133)

	LPAREN	shift, and go to state 204
	OP02_METHOD_THINARROW_NEW	shift, and go to state 206
	SCOPE	shift, and go to state 205

State 131:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222
	OP09_BITWISE_SHIFT	shift, and go to state 212
	OP11_COMPARE_LT_GT	shift, and go to state 209
	OP12_COMPARE_EQ_NE	shift, and go to state 211
	OP13_BITWISE_AND	shift, and go to state 208
	OP14_BITWISE_OR_XOR	shift, and go to state 219
	OP15_LOGICAL_AND	shift, and go to state 215
	OP16_LOGICAL_OR	shift, and go to state 216
	OP17_LIST_RANGE	shift, and go to state 223
	OP18_TERNARY	shift, and go to state 218
	OP23_LOGICAL_AND	shift, and go to state 213
	OP24_LOGICAL_OR_XOR	shift, and go to state 217

State 132:

	SubroutineArguments -> LPAREN_MY . Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 54)

	TYPE_INTEGER	shift, and go to state 55
	WORD	shift, and go to state 56
	WORD_SCOPED	shift, and go to state 57

	Type	go to state 224

State 133:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 . STAR-19 '}' ';'	(Rule 50)

	$default	reduce using rule 49 (STAR-19)

	STAR-19	go to state 225

State 134:

	OPTIONAL-18 -> SubroutineArguments .	(Rule 46)

	$default	reduce using rule 46 (OPTIONAL-18)

State 135:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal . ';'	(Rule 45)

	';'	shift, and go to state 226

State 136:

	TypeInnerConstant -> MY Type . '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 218)

	'$TYPED_'	shift, and go to state 227

State 137:

	Include -> USE WordScoped OP01_QW PLUS-17 ')' ';' .	(Rule 44)

	$default	reduce using rule 44 (Include)

State 138:

	STAR-24 -> STAR-24 . Constant	(Rule 59)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 STAR-23 STAR-24 . Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	'our hashref $properties'	shift, and go to state 229
	'use constant'	shift, and go to state 44

	Constant	go to state 228
	Properties	go to state 230

State 139:

	STAR-23 -> STAR-23 Include .	(Rule 57)

	$default	reduce using rule 57 (STAR-23)

State 140:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 141:

	SubExpression -> Expression .	(Rule 134)

	$default	reduce using rule 134 (SubExpression)

State 142:

	Operator -> OP01_NAMED . SubExpression	(Rule 83)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	WordScoped	go to state 130
	SubExpression	go to state 231
	ArrayDereference	go to state 116
	HashDereference	go to state 100
	Operator	go to state 96
	Expression	go to state 141
	VariableSymbolOrSelf	go to state 121
	ArrayReference	go to state 108
	Literal	go to state 86
	Variable	go to state 143
	HashReference	go to state 83

State 143:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 88)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-36 ')'	(Rule 132)
	SubExpression -> Variable .	(Rule 137)

	OP02_METHOD_THINARROW	shift, and go to state 188
	OP03_MATH_INC_DEC	shift, and go to state 189

	')'	reduce using rule 137 (SubExpression)
	';'	reduce using rule 137 (SubExpression)
	']'	reduce using rule 137 (SubExpression)
	'}'	reduce using rule 137 (SubExpression)
	OP04_MATH_POW	reduce using rule 137 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 137 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 137 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 137 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 137 (SubExpression)
	OP08_STRING_CAT	reduce using rule 137 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 137 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 137 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 137 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 137 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 137 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 137 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 137 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 137 (SubExpression)
	OP18_TERNARY	reduce using rule 137 (SubExpression)
	OP21_LIST_COMMA	reduce using rule 137 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 137 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 137 (SubExpression)

State 144:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> OP05_LOGICAL_NEG SubExpression .	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 221

	')'	reduce using rule 90 (Operator)
	';'	reduce using rule 90 (Operator)
	']'	reduce using rule 90 (Operator)
	'}'	reduce using rule 90 (Operator)
	OP06_REGEX_MATCH	reduce using rule 90 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 90 (Operator)
	OP07_STRING_REPEAT	reduce using rule 90 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 90 (Operator)
	OP08_STRING_CAT	reduce using rule 90 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 90 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 90 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 90 (Operator)
	OP13_BITWISE_AND	reduce using rule 90 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 90 (Operator)
	OP15_LOGICAL_AND	reduce using rule 90 (Operator)
	OP16_LOGICAL_OR	reduce using rule 90 (Operator)
	OP17_LIST_RANGE	reduce using rule 90 (Operator)
	OP18_TERNARY	reduce using rule 90 (Operator)
	OP21_LIST_COMMA	reduce using rule 90 (Operator)
	OP23_LOGICAL_AND	reduce using rule 90 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 90 (Operator)

State 145:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 130)

	LPAREN	shift, and go to state 203

State 146:

	PAREN-37 -> LoopLabel COLON .	(Rule 145)

	$default	reduce using rule 145 (PAREN-37)

State 147:

	Operator -> LPAREN OP01_PRINT . FHREF_SYMBOL_BRACES ListElements ')'	(Rule 82)

	FHREF_SYMBOL_BRACES	shift, and go to state 232

State 148:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	SubExpression -> LPAREN SubExpression . ')'	(Rule 142)

	')'	shift, and go to state 233
	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222
	OP09_BITWISE_SHIFT	shift, and go to state 212
	OP11_COMPARE_LT_GT	shift, and go to state 209
	OP12_COMPARE_EQ_NE	shift, and go to state 211
	OP13_BITWISE_AND	shift, and go to state 208
	OP14_BITWISE_OR_XOR	shift, and go to state 219
	OP15_LOGICAL_AND	shift, and go to state 215
	OP16_LOGICAL_OR	shift, and go to state 216
	OP17_LIST_RANGE	shift, and go to state 223
	OP18_TERNARY	shift, and go to state 218
	OP23_LOGICAL_AND	shift, and go to state 213
	OP24_LOGICAL_OR_XOR	shift, and go to state 217

State 149:

	Operator -> OP01_NAMED . SubExpression	(Rule 83)
	Operator -> LPAREN OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ')'	(Rule 84)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	MY	shift, and go to state 151
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP01_QW	shift, and go to state 158
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	Expression	go to state 141
	Literal	go to state 86
	ArrayReference	go to state 108
	VariableSymbolOrSelf	go to state 121
	Variable	go to state 143
	HashReference	go to state 83
	TypeInner	go to state 154
	ArrayDereference	go to state 116
	WordScoped	go to state 130
	SubExpression	go to state 181
	ListElement	go to state 234
	HashDereference	go to state 100
	Operator	go to state 96

State 150:

	HashDereference -> '%{' OPTIONAL-53 . HashReference '}'	(Rule 210)

	LBRACE	shift, and go to state 103

	HashReference	go to state 235

State 151:

	TypeInner -> MY . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 217)

	TYPE_INTEGER	shift, and go to state 55
	WORD	shift, and go to state 56
	WORD_SCOPED	shift, and go to state 57

	Type	go to state 236

State 152:

	HashDereference -> '%{' Variable . '}'	(Rule 209)

	'}'	shift, and go to state 237

State 153:

	OPTIONAL-53 -> TypeInner .	(Rule 207)

	$default	reduce using rule 207 (OPTIONAL-53)

State 154:

	ListElement -> TypeInner . SubExpression	(Rule 187)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	Operator	go to state 96
	HashDereference	go to state 100
	ArrayDereference	go to state 116
	SubExpression	go to state 238
	WordScoped	go to state 130
	HashReference	go to state 83
	Variable	go to state 143
	Literal	go to state 86
	VariableSymbolOrSelf	go to state 121
	ArrayReference	go to state 108
	Expression	go to state 141

State 155:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	ListElement -> SubExpression .	(Rule 186)

	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222
	OP09_BITWISE_SHIFT	shift, and go to state 212
	OP11_COMPARE_LT_GT	shift, and go to state 209
	OP12_COMPARE_EQ_NE	shift, and go to state 211
	OP13_BITWISE_AND	shift, and go to state 208
	OP14_BITWISE_OR_XOR	shift, and go to state 219
	OP15_LOGICAL_AND	shift, and go to state 215
	OP16_LOGICAL_OR	shift, and go to state 216
	OP17_LIST_RANGE	shift, and go to state 223
	OP18_TERNARY	shift, and go to state 218
	OP23_LOGICAL_AND	shift, and go to state 213
	OP24_LOGICAL_OR_XOR	shift, and go to state 217

	')'	reduce using rule 186 (ListElement)
	';'	reduce using rule 186 (ListElement)
	']'	reduce using rule 186 (ListElement)
	OP21_LIST_COMMA	reduce using rule 186 (ListElement)

State 156:

	ListElements -> ListElement . STAR-46	(Rule 183)

	$default	reduce using rule 182 (STAR-46)

	STAR-46	go to state 239

State 157:

	OperatorVoid -> OP01_NAMED_VOID ListElements . ';'	(Rule 120)

	';'	shift, and go to state 240

State 158:

	ListElement -> OP01_QW . PLUS-47 ')'	(Rule 188)

	WORD	shift, and go to state 242

	PLUS-47	go to state 241

State 159:

	OPTIONAL-49 -> TypeInner .	(Rule 192)

	$default	reduce using rule 192 (OPTIONAL-49)

State 160:

	ArrayDereference -> '@{' Variable . '}'	(Rule 194)

	'}'	shift, and go to state 243

State 161:

	ArrayDereference -> '@{' OPTIONAL-49 . ArrayReference '}'	(Rule 195)

	LBRACKET	shift, and go to state 115

	ArrayReference	go to state 244

State 162:

	PAREN-32 -> STDOUT_STDERR .	(Rule 111)

	$default	reduce using rule 111 (PAREN-32)

State 163:

	OPTIONAL-33 -> PAREN-32 .	(Rule 112)

	$default	reduce using rule 112 (OPTIONAL-33)

State 164:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES . ListElements ';'	(Rule 117)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	MY	shift, and go to state 151
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP01_QW	shift, and go to state 158
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	Variable	go to state 143
	ListElements	go to state 245
	TypeInner	go to state 154
	HashReference	go to state 83
	Expression	go to state 141
	Literal	go to state 86
	VariableSymbolOrSelf	go to state 121
	ArrayReference	go to state 108
	HashDereference	go to state 100
	Operator	go to state 96
	SubExpression	go to state 155
	ListElement	go to state 156
	ArrayDereference	go to state 116
	WordScoped	go to state 130

State 165:

	OperatorVoid -> OP01_PRINT OPTIONAL-33 . ListElements ';'	(Rule 116)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	MY	shift, and go to state 151
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP01_QW	shift, and go to state 158
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	SubExpression	go to state 155
	WordScoped	go to state 130
	ListElement	go to state 156
	ArrayDereference	go to state 116
	HashDereference	go to state 100
	Operator	go to state 96
	Expression	go to state 141
	ArrayReference	go to state 108
	VariableSymbolOrSelf	go to state 121
	Literal	go to state 86
	Variable	go to state 143
	HashReference	go to state 83
	TypeInner	go to state 154
	ListElements	go to state 246

State 166:

	LoopLabel -> WORD_UPPERCASE .	(Rule 213)

	$default	reduce using rule 213 (LoopLabel)

State 167:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 123)

	';'	shift, and go to state 247

State 168:

	VariableOrLiteralOrWord -> Literal .	(Rule 222)

	$default	reduce using rule 222 (VariableOrLiteralOrWord)

State 169:

	HashReference -> LBRACE HashEntry . STAR-52 '}'	(Rule 205)

	$default	reduce using rule 204 (STAR-52)

	STAR-52	go to state 248

State 170:

	HashEntry -> HashDereference .	(Rule 199)

	$default	reduce using rule 199 (HashEntry)

State 171:

	HashEntry -> VariableOrLiteralOrWord . OP20_HASH_FATARROW OPTIONAL-50 SubExpression	(Rule 198)

	OP20_HASH_FATARROW	shift, and go to state 249

State 172:

	VariableOrLiteralOrWord -> WORD .	(Rule 223)

	$default	reduce using rule 223 (VariableOrLiteralOrWord)

State 173:

	HashReference -> LBRACE '}' .	(Rule 206)

	$default	reduce using rule 206 (HashReference)

State 174:

	VariableOrLiteralOrWord -> Variable .	(Rule 221)

	$default	reduce using rule 221 (VariableOrLiteralOrWord)

State 175:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> OP10_NAMED_UNARY SubExpression .	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222
	OP09_BITWISE_SHIFT	shift, and go to state 212

	')'	reduce using rule 98 (Operator)
	';'	reduce using rule 98 (Operator)
	']'	reduce using rule 98 (Operator)
	'}'	reduce using rule 98 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 98 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 98 (Operator)
	OP13_BITWISE_AND	reduce using rule 98 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 98 (Operator)
	OP15_LOGICAL_AND	reduce using rule 98 (Operator)
	OP16_LOGICAL_OR	reduce using rule 98 (Operator)
	OP17_LIST_RANGE	reduce using rule 98 (Operator)
	OP18_TERNARY	reduce using rule 98 (Operator)
	OP21_LIST_COMMA	reduce using rule 98 (Operator)
	OP23_LOGICAL_AND	reduce using rule 98 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 98 (Operator)

State 176:

	Operation -> Expression ';' .	(Rule 80)

	$default	reduce using rule 80 (Operation)

State 177:

	Operator -> OP01_OPEN MY . TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 85)

	TYPE_FHREF	shift, and go to state 250

State 178:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> OP05_MATH_NEG_LPAREN SubExpression . ')'	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	')'	shift, and go to state 251
	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222
	OP09_BITWISE_SHIFT	shift, and go to state 212
	OP11_COMPARE_LT_GT	shift, and go to state 209
	OP12_COMPARE_EQ_NE	shift, and go to state 211
	OP13_BITWISE_AND	shift, and go to state 208
	OP14_BITWISE_OR_XOR	shift, and go to state 219
	OP15_LOGICAL_AND	shift, and go to state 215
	OP16_LOGICAL_OR	shift, and go to state 216
	OP17_LIST_RANGE	shift, and go to state 223
	OP18_TERNARY	shift, and go to state 218
	OP23_LOGICAL_AND	shift, and go to state 213
	OP24_LOGICAL_OR_XOR	shift, and go to state 217

State 179:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> OP22_LOGICAL_NEG SubExpression .	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222
	OP09_BITWISE_SHIFT	shift, and go to state 212
	OP11_COMPARE_LT_GT	shift, and go to state 209
	OP12_COMPARE_EQ_NE	shift, and go to state 211
	OP13_BITWISE_AND	shift, and go to state 208
	OP14_BITWISE_OR_XOR	shift, and go to state 219
	OP15_LOGICAL_AND	shift, and go to state 215
	OP16_LOGICAL_OR	shift, and go to state 216
	OP17_LIST_RANGE	shift, and go to state 223
	OP18_TERNARY	shift, and go to state 218

	')'	reduce using rule 108 (Operator)
	';'	reduce using rule 108 (Operator)
	']'	reduce using rule 108 (Operator)
	'}'	reduce using rule 108 (Operator)
	OP21_LIST_COMMA	reduce using rule 108 (Operator)
	OP23_LOGICAL_AND	reduce using rule 108 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 108 (Operator)

State 180:

	OperatorVoid -> OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ';'	(Rule 121)

	OP21_LIST_COMMA	shift, and go to state 252

State 181:

	Operator -> OP01_NAMED SubExpression .	(Rule 83)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	ListElement -> SubExpression .	(Rule 186)

	')'	reduce using rule 83 (Operator)
	';'	reduce using rule 83 (Operator)
	OP04_MATH_POW	reduce using rule 83 (Operator)
	OP06_REGEX_MATCH	reduce using rule 83 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 83 (Operator)
	OP07_STRING_REPEAT	reduce using rule 83 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 83 (Operator)
	OP08_STRING_CAT	reduce using rule 83 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 83 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 83 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 83 (Operator)
	OP13_BITWISE_AND	reduce using rule 83 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 83 (Operator)
	OP15_LOGICAL_AND	reduce using rule 83 (Operator)
	OP16_LOGICAL_OR	reduce using rule 83 (Operator)
	OP17_LIST_RANGE	reduce using rule 83 (Operator)
	OP18_TERNARY	reduce using rule 83 (Operator)
	OP21_LIST_COMMA	reduce using rule 186 (ListElement)
	OP23_LOGICAL_AND	reduce using rule 83 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 83 (Operator)

State 182:

	OPTIONAL-48 -> ListElements .	(Rule 189)

	$default	reduce using rule 189 (OPTIONAL-48)

State 183:

	ArrayReference -> LBRACKET OPTIONAL-48 . ']'	(Rule 191)

	']'	shift, and go to state 253

State 184:

	OPTIONAL-34 -> ListElements .	(Rule 114)

	$default	reduce using rule 114 (OPTIONAL-34)

State 185:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-34 . ')' ';'	(Rule 119)

	')'	shift, and go to state 254

State 186:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 178)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	STDIN	shift, and go to state 255
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	VariableSymbolOrSelf	go to state 121
	ArrayReference	go to state 108
	Literal	go to state 86
	Expression	go to state 141
	SubExpressionOrStdin	go to state 256
	HashReference	go to state 83
	Variable	go to state 143
	ArrayDereference	go to state 116
	WordScoped	go to state 130
	SubExpression	go to state 257
	Operator	go to state 96
	HashDereference	go to state 100

State 187:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . SubExpression ';'	(Rule 179)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	Variable	go to state 143
	HashReference	go to state 83
	Expression	go to state 141
	ArrayReference	go to state 108
	VariableSymbolOrSelf	go to state 121
	Literal	go to state 86
	HashDereference	go to state 100
	Operator	go to state 96
	ArrayDereference	go to state 116
	WordScoped	go to state 130
	SubExpression	go to state 258

State 188:

	Expression -> Variable OP02_METHOD_THINARROW . LPAREN OPTIONAL-36 ')'	(Rule 132)

	LPAREN	shift, and go to state 259

State 189:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 88)

	$default	reduce using rule 88 (Operator)

State 190:

	Loop -> LoopForEach .	(Rule 161)

	$default	reduce using rule 161 (Loop)

State 191:

	Statement -> OPTIONAL-38 Loop .	(Rule 149)

	$default	reduce using rule 149 (Statement)

State 192:

	LoopWhile -> 'while' . LPAREN SubExpression ')' CodeBlock	(Rule 165)

	LPAREN	shift, and go to state 260

State 193:

	Loop -> LoopWhile .	(Rule 162)

	$default	reduce using rule 162 (Loop)

State 194:

	Loop -> LoopFor .	(Rule 160)

	$default	reduce using rule 160 (Loop)

State 195:

	LoopForEach -> 'foreach' . MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 164)

	MY	shift, and go to state 261

State 196:

	LoopFor -> 'for' . MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 163)

	MY	shift, and go to state 262

State 197:

	STAR-44 -> STAR-44 . VariableRetrieval	(Rule 169)
	Variable -> VariableSymbolOrSelf STAR-44 .	(Rule 171)

	OP02_ARRAY_THINARROW	shift, and go to state 265
	OP02_HASH_THINARROW	shift, and go to state 263

	')'	reduce using rule 171 (Variable)
	';'	reduce using rule 171 (Variable)
	']'	reduce using rule 171 (Variable)
	'}'	reduce using rule 171 (Variable)
	COLON	reduce using rule 171 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 171 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 171 (Variable)
	OP04_MATH_POW	reduce using rule 171 (Variable)
	OP06_REGEX_MATCH	reduce using rule 171 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 171 (Variable)
	OP07_STRING_REPEAT	reduce using rule 171 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 171 (Variable)
	OP08_STRING_CAT	reduce using rule 171 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 171 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 171 (Variable)
	OP12_COMPARE_EQ_NE	reduce using rule 171 (Variable)
	OP13_BITWISE_AND	reduce using rule 171 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 171 (Variable)
	OP15_LOGICAL_AND	reduce using rule 171 (Variable)
	OP16_LOGICAL_OR	reduce using rule 171 (Variable)
	OP17_LIST_RANGE	reduce using rule 171 (Variable)
	OP18_TERNARY	reduce using rule 171 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 171 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 171 (Variable)
	OP20_HASH_FATARROW	reduce using rule 171 (Variable)
	OP21_LIST_COMMA	reduce using rule 171 (Variable)
	OP23_LOGICAL_AND	reduce using rule 171 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 171 (Variable)

	VariableRetrieval	go to state 264

State 198:

	Operator -> OP01_CLOSE FHREF_SYMBOL .	(Rule 86)

	$default	reduce using rule 86 (Operator)

State 199:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 87)

	$default	reduce using rule 87 (Operator)

State 200:

	Conditional -> 'if' LPAREN . SubExpression ')' CodeBlock STAR-40 OPTIONAL-42	(Rule 159)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	ArrayDereference	go to state 116
	WordScoped	go to state 130
	SubExpression	go to state 266
	HashDereference	go to state 100
	Operator	go to state 96
	Expression	go to state 141
	Literal	go to state 86
	ArrayReference	go to state 108
	VariableSymbolOrSelf	go to state 121
	Variable	go to state 143
	HashReference	go to state 83

State 201:

	VariableDeclaration -> MY TYPE_FHREF . FHREF_SYMBOL ';'	(Rule 177)

	FHREF_SYMBOL	shift, and go to state 267

State 202:

	VariableDeclaration -> MY Type . VARIABLE_SYMBOL ';'	(Rule 175)
	VariableDeclaration -> MY Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 176)

	VARIABLE_SYMBOL	shift, and go to state 268

State 203:

	Expression -> WORD_UPPERCASE LPAREN . ')'	(Rule 130)

	')'	shift, and go to state 269

State 204:

	Expression -> WordScoped LPAREN . OPTIONAL-35 ')'	(Rule 129)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	MY	shift, and go to state 151
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP01_QW	shift, and go to state 158
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	')'	reduce using rule 125 (OPTIONAL-35)

	ListElements	go to state 271
	HashReference	go to state 83
	TypeInner	go to state 154
	Variable	go to state 143
	Literal	go to state 86
	VariableSymbolOrSelf	go to state 121
	ArrayReference	go to state 108
	Expression	go to state 141
	Operator	go to state 96
	HashDereference	go to state 100
	OPTIONAL-35	go to state 270
	SubExpression	go to state 155
	ListElement	go to state 156
	ArrayDereference	go to state 116
	WordScoped	go to state 130

State 205:

	Expression -> WordScoped SCOPE . WORD_UPPERCASE LPAREN ')'	(Rule 131)

	WORD_UPPERCASE	shift, and go to state 272

State 206:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW . ')'	(Rule 133)

	')'	shift, and go to state 273

State 207:

	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD . SubExpression	(Rule 94)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	WordScoped	go to state 130
	SubExpression	go to state 274
	ArrayDereference	go to state 116
	Operator	go to state 96
	HashDereference	go to state 100
	Literal	go to state 86
	ArrayReference	go to state 108
	VariableSymbolOrSelf	go to state 121
	Expression	go to state 141
	HashReference	go to state 83
	Variable	go to state 143

State 208:

	Operator -> SubExpression OP13_BITWISE_AND . SubExpression	(Rule 102)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	WordScoped	go to state 130
	ArrayDereference	go to state 116
	SubExpression	go to state 275
	HashDereference	go to state 100
	Operator	go to state 96
	Expression	go to state 141
	Literal	go to state 86
	ArrayReference	go to state 108
	VariableSymbolOrSelf	go to state 121
	Variable	go to state 143
	HashReference	go to state 83

State 209:

	Operator -> SubExpression OP11_COMPARE_LT_GT . SubExpression	(Rule 100)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	Expression	go to state 141
	ArrayReference	go to state 108
	VariableSymbolOrSelf	go to state 121
	Literal	go to state 86
	Variable	go to state 143
	HashReference	go to state 83
	WordScoped	go to state 130
	SubExpression	go to state 276
	ArrayDereference	go to state 116
	HashDereference	go to state 100
	Operator	go to state 96

State 210:

	Operator -> SubExpression OP06_REGEX_MATCH . OP06_REGEX_PATTERN	(Rule 92)

	OP06_REGEX_PATTERN	shift, and go to state 277

State 211:

	Operator -> SubExpression OP12_COMPARE_EQ_NE . SubExpression	(Rule 101)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	Literal	go to state 86
	VariableSymbolOrSelf	go to state 121
	ArrayReference	go to state 108
	Expression	go to state 141
	HashReference	go to state 83
	Variable	go to state 143
	SubExpression	go to state 278
	WordScoped	go to state 130
	ArrayDereference	go to state 116
	Operator	go to state 96
	HashDereference	go to state 100

State 212:

	Operator -> SubExpression OP09_BITWISE_SHIFT . SubExpression	(Rule 97)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	Literal	go to state 86
	VariableSymbolOrSelf	go to state 121
	ArrayReference	go to state 108
	Expression	go to state 141
	HashReference	go to state 83
	Variable	go to state 143
	WordScoped	go to state 130
	SubExpression	go to state 279
	ArrayDereference	go to state 116
	Operator	go to state 96
	HashDereference	go to state 100

State 213:

	Operator -> SubExpression OP23_LOGICAL_AND . SubExpression	(Rule 109)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	HashDereference	go to state 100
	Operator	go to state 96
	ArrayDereference	go to state 116
	WordScoped	go to state 130
	SubExpression	go to state 280
	Variable	go to state 143
	HashReference	go to state 83
	Expression	go to state 141
	Literal	go to state 86
	VariableSymbolOrSelf	go to state 121
	ArrayReference	go to state 108

State 214:

	Operator -> SubExpression OP08_MATH_ADD_SUB . SubExpression	(Rule 95)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	SubExpression	go to state 281
	WordScoped	go to state 130
	ArrayDereference	go to state 116
	HashDereference	go to state 100
	Operator	go to state 96
	Expression	go to state 141
	ArrayReference	go to state 108
	VariableSymbolOrSelf	go to state 121
	Literal	go to state 86
	Variable	go to state 143
	HashReference	go to state 83

State 215:

	Operator -> SubExpression OP15_LOGICAL_AND . SubExpression	(Rule 104)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	HashReference	go to state 83
	Variable	go to state 143
	Literal	go to state 86
	ArrayReference	go to state 108
	VariableSymbolOrSelf	go to state 121
	Expression	go to state 141
	Operator	go to state 96
	HashDereference	go to state 100
	SubExpression	go to state 282
	ArrayDereference	go to state 116
	WordScoped	go to state 130

State 216:

	Operator -> SubExpression OP16_LOGICAL_OR . SubExpression	(Rule 105)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	ArrayReference	go to state 108
	VariableSymbolOrSelf	go to state 121
	Literal	go to state 86
	Expression	go to state 141
	HashReference	go to state 83
	Variable	go to state 143
	WordScoped	go to state 130
	ArrayDereference	go to state 116
	SubExpression	go to state 283
	Operator	go to state 96
	HashDereference	go to state 100

State 217:

	Operator -> SubExpression OP24_LOGICAL_OR_XOR . SubExpression	(Rule 110)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	Operator	go to state 96
	HashDereference	go to state 100
	WordScoped	go to state 130
	ArrayDereference	go to state 116
	SubExpression	go to state 284
	HashReference	go to state 83
	Variable	go to state 143
	ArrayReference	go to state 108
	VariableSymbolOrSelf	go to state 121
	Literal	go to state 86
	Expression	go to state 141

State 218:

	Operator -> SubExpression OP18_TERNARY . VariableOrLiteral COLON VariableOrLiteral	(Rule 107)

	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94

	Variable	go to state 285
	VariableSymbolOrSelf	go to state 121
	VariableOrLiteral	go to state 287
	Literal	go to state 286

State 219:

	Operator -> SubExpression OP14_BITWISE_OR_XOR . SubExpression	(Rule 103)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	Operator	go to state 96
	HashDereference	go to state 100
	WordScoped	go to state 130
	SubExpression	go to state 288
	ArrayDereference	go to state 116
	HashReference	go to state 83
	Variable	go to state 143
	Literal	go to state 86
	VariableSymbolOrSelf	go to state 121
	ArrayReference	go to state 108
	Expression	go to state 141

State 220:

	Operator -> SubExpression OP07_STRING_REPEAT . SubExpression	(Rule 93)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	SubExpression	go to state 289
	WordScoped	go to state 130
	ArrayDereference	go to state 116
	Operator	go to state 96
	HashDereference	go to state 100
	VariableSymbolOrSelf	go to state 121
	ArrayReference	go to state 108
	Literal	go to state 86
	Expression	go to state 141
	HashReference	go to state 83
	Variable	go to state 143

State 221:

	Operator -> SubExpression OP04_MATH_POW . SubExpression	(Rule 89)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	HashReference	go to state 83
	Variable	go to state 143
	ArrayReference	go to state 108
	VariableSymbolOrSelf	go to state 121
	Literal	go to state 86
	Expression	go to state 141
	Operator	go to state 96
	HashDereference	go to state 100
	SubExpression	go to state 290
	WordScoped	go to state 130
	ArrayDereference	go to state 116

State 222:

	Operator -> SubExpression OP08_STRING_CAT . SubExpression	(Rule 96)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	ArrayReference	go to state 108
	VariableSymbolOrSelf	go to state 121
	Literal	go to state 86
	Expression	go to state 141
	HashReference	go to state 83
	Variable	go to state 143
	SubExpression	go to state 291
	WordScoped	go to state 130
	ArrayDereference	go to state 116
	Operator	go to state 96
	HashDereference	go to state 100

State 223:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 106)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	Expression	go to state 141
	Literal	go to state 86
	VariableSymbolOrSelf	go to state 121
	ArrayReference	go to state 108
	Variable	go to state 143
	HashReference	go to state 83
	SubExpression	go to state 292
	WordScoped	go to state 130
	ArrayDereference	go to state 116
	HashDereference	go to state 100
	Operator	go to state 96

State 224:

	SubroutineArguments -> LPAREN_MY Type . VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 54)

	VARIABLE_SYMBOL	shift, and go to state 293

State 225:

	STAR-19 -> STAR-19 . Operation	(Rule 48)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 STAR-19 . '}' ';'	(Rule 50)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'if'	shift, and go to state 124
	'undef'	shift, and go to state 107
	'}'	shift, and go to state 294
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	MY	shift, and go to state 127
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 114
	OP01_NAMED_VOID	shift, and go to state 95
	OP01_NAMED_VOID_LPAREN	shift, and go to state 117
	OP01_NAMED_VOID_SCOLON	shift, and go to state 105
	OP01_OPEN	shift, and go to state 110
	OP01_PRINT	shift, and go to state 98
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP19_LOOP_CONTROL	shift, and go to state 102
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 90
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 128

	'for'	reduce using rule 147 (OPTIONAL-38)
	'foreach'	reduce using rule 147 (OPTIONAL-38)
	'while'	reduce using rule 147 (OPTIONAL-38)

	Operator	go to state 96
	VariableModification	go to state 99
	HashDereference	go to state 100
	PAREN-37	go to state 129
	WordScoped	go to state 130
	SubExpression	go to state 131
	VariableDeclaration	go to state 118
	OPTIONAL-38	go to state 120
	Variable	go to state 119
	VariableSymbolOrSelf	go to state 121
	Conditional	go to state 93
	LoopLabel	go to state 89
	OperatorVoid	go to state 113
	ArrayDereference	go to state 116
	Operation	go to state 295
	Statement	go to state 84
	HashReference	go to state 83
	ArrayReference	go to state 108
	Literal	go to state 86
	Expression	go to state 109

State 226:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';' .	(Rule 45)

	$default	reduce using rule 45 (Constant)

State 227:

	TypeInnerConstant -> MY Type '$TYPED_' . WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 218)

	WORD_UPPERCASE	shift, and go to state 296

State 228:

	STAR-24 -> STAR-24 Constant .	(Rule 59)

	$default	reduce using rule 59 (STAR-24)

State 229:

	Properties -> 'our hashref $properties' . OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-27 '}' ';'	(Rule 67)
	Properties -> 'our hashref $properties' . OP19_VARIABLE_ASSIGN LBRACE '}' ';'	(Rule 68)

	OP19_VARIABLE_ASSIGN	shift, and go to state 297

State 230:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 STAR-23 STAR-24 Properties . STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	$default	reduce using rule 62 (STAR-25)

	STAR-25	go to state 298

State 231:

	Operator -> OP01_NAMED SubExpression .	(Rule 83)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	')'	reduce using rule 83 (Operator)
	';'	reduce using rule 83 (Operator)
	']'	reduce using rule 83 (Operator)
	'}'	reduce using rule 83 (Operator)
	OP04_MATH_POW	reduce using rule 83 (Operator)
	OP06_REGEX_MATCH	reduce using rule 83 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 83 (Operator)
	OP07_STRING_REPEAT	reduce using rule 83 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 83 (Operator)
	OP08_STRING_CAT	reduce using rule 83 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 83 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 83 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 83 (Operator)
	OP13_BITWISE_AND	reduce using rule 83 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 83 (Operator)
	OP15_LOGICAL_AND	reduce using rule 83 (Operator)
	OP16_LOGICAL_OR	reduce using rule 83 (Operator)
	OP17_LIST_RANGE	reduce using rule 83 (Operator)
	OP18_TERNARY	reduce using rule 83 (Operator)
	OP21_LIST_COMMA	reduce using rule 83 (Operator)
	OP23_LOGICAL_AND	reduce using rule 83 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 83 (Operator)

State 232:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES . ListElements ')'	(Rule 82)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	MY	shift, and go to state 151
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP01_QW	shift, and go to state 158
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	Literal	go to state 86
	VariableSymbolOrSelf	go to state 121
	ArrayReference	go to state 108
	Expression	go to state 141
	ListElements	go to state 299
	HashReference	go to state 83
	TypeInner	go to state 154
	Variable	go to state 143
	WordScoped	go to state 130
	ListElement	go to state 156
	SubExpression	go to state 155
	ArrayDereference	go to state 116
	Operator	go to state 96
	HashDereference	go to state 100

State 233:

	SubExpression -> LPAREN SubExpression ')' .	(Rule 142)

	$default	reduce using rule 142 (SubExpression)

State 234:

	Operator -> LPAREN OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ')'	(Rule 84)

	OP21_LIST_COMMA	shift, and go to state 300

State 235:

	HashDereference -> '%{' OPTIONAL-53 HashReference . '}'	(Rule 210)

	'}'	shift, and go to state 301

State 236:

	TypeInner -> MY Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 217)

	'$TYPED_'	shift, and go to state 302

State 237:

	HashDereference -> '%{' Variable '}' .	(Rule 209)

	$default	reduce using rule 209 (HashDereference)

State 238:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	ListElement -> TypeInner SubExpression .	(Rule 187)

	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222
	OP09_BITWISE_SHIFT	shift, and go to state 212
	OP11_COMPARE_LT_GT	shift, and go to state 209
	OP12_COMPARE_EQ_NE	shift, and go to state 211
	OP13_BITWISE_AND	shift, and go to state 208
	OP14_BITWISE_OR_XOR	shift, and go to state 219
	OP15_LOGICAL_AND	shift, and go to state 215
	OP16_LOGICAL_OR	shift, and go to state 216
	OP17_LIST_RANGE	shift, and go to state 223
	OP18_TERNARY	shift, and go to state 218
	OP23_LOGICAL_AND	shift, and go to state 213
	OP24_LOGICAL_OR_XOR	shift, and go to state 217

	')'	reduce using rule 187 (ListElement)
	';'	reduce using rule 187 (ListElement)
	']'	reduce using rule 187 (ListElement)
	OP21_LIST_COMMA	reduce using rule 187 (ListElement)

State 239:

	STAR-46 -> STAR-46 . PAREN-45	(Rule 181)
	ListElements -> ListElement STAR-46 .	(Rule 183)

	OP21_LIST_COMMA	shift, and go to state 303

	')'	reduce using rule 183 (ListElements)
	';'	reduce using rule 183 (ListElements)
	']'	reduce using rule 183 (ListElements)

	PAREN-45	go to state 304

State 240:

	OperatorVoid -> OP01_NAMED_VOID ListElements ';' .	(Rule 120)

	$default	reduce using rule 120 (OperatorVoid)

State 241:

	PLUS-47 -> PLUS-47 . WORD	(Rule 184)
	ListElement -> OP01_QW PLUS-47 . ')'	(Rule 188)

	')'	shift, and go to state 305
	WORD	shift, and go to state 306

State 242:

	PLUS-47 -> WORD .	(Rule 185)

	$default	reduce using rule 185 (PLUS-47)

State 243:

	ArrayDereference -> '@{' Variable '}' .	(Rule 194)

	$default	reduce using rule 194 (ArrayDereference)

State 244:

	ArrayDereference -> '@{' OPTIONAL-49 ArrayReference . '}'	(Rule 195)

	'}'	shift, and go to state 307

State 245:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements . ';'	(Rule 117)

	';'	shift, and go to state 308

State 246:

	OperatorVoid -> OP01_PRINT OPTIONAL-33 ListElements . ';'	(Rule 116)

	';'	shift, and go to state 309

State 247:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 123)

	$default	reduce using rule 123 (OperatorVoid)

State 248:

	STAR-52 -> STAR-52 . PAREN-51	(Rule 203)
	HashReference -> LBRACE HashEntry STAR-52 . '}'	(Rule 205)

	'}'	shift, and go to state 312
	OP21_LIST_COMMA	shift, and go to state 310

	PAREN-51	go to state 311

State 249:

	HashEntry -> VariableOrLiteralOrWord OP20_HASH_FATARROW . OPTIONAL-50 SubExpression	(Rule 198)

	MY	shift, and go to state 151

	'%{'	reduce using rule 197 (OPTIONAL-50)
	'@{'	reduce using rule 197 (OPTIONAL-50)
	'undef'	reduce using rule 197 (OPTIONAL-50)
	LBRACE	reduce using rule 197 (OPTIONAL-50)
	LBRACKET	reduce using rule 197 (OPTIONAL-50)
	LITERAL_NUMBER	reduce using rule 197 (OPTIONAL-50)
	LITERAL_STRING	reduce using rule 197 (OPTIONAL-50)
	LPAREN	reduce using rule 197 (OPTIONAL-50)
	OP01_CLOSE	reduce using rule 197 (OPTIONAL-50)
	OP01_NAMED	reduce using rule 197 (OPTIONAL-50)
	OP01_OPEN	reduce using rule 197 (OPTIONAL-50)
	OP03_MATH_INC_DEC	reduce using rule 197 (OPTIONAL-50)
	OP05_LOGICAL_NEG	reduce using rule 197 (OPTIONAL-50)
	OP05_MATH_NEG_LPAREN	reduce using rule 197 (OPTIONAL-50)
	OP10_NAMED_UNARY	reduce using rule 197 (OPTIONAL-50)
	OP22_LOGICAL_NEG	reduce using rule 197 (OPTIONAL-50)
	SELF	reduce using rule 197 (OPTIONAL-50)
	VARIABLE_SYMBOL	reduce using rule 197 (OPTIONAL-50)
	WORD	reduce using rule 197 (OPTIONAL-50)
	WORD_SCOPED	reduce using rule 197 (OPTIONAL-50)
	WORD_UPPERCASE	reduce using rule 197 (OPTIONAL-50)

	OPTIONAL-50	go to state 314
	TypeInner	go to state 313

State 250:

	Operator -> OP01_OPEN MY TYPE_FHREF . FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 85)

	FHREF_SYMBOL	shift, and go to state 315

State 251:

	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')' .	(Rule 91)

	$default	reduce using rule 91 (Operator)

State 252:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ';'	(Rule 121)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	MY	shift, and go to state 151
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP01_QW	shift, and go to state 158
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	ListElement	go to state 156
	WordScoped	go to state 130
	SubExpression	go to state 155
	ArrayDereference	go to state 116
	Operator	go to state 96
	HashDereference	go to state 100
	ArrayReference	go to state 108
	VariableSymbolOrSelf	go to state 121
	Literal	go to state 86
	Expression	go to state 141
	HashReference	go to state 83
	TypeInner	go to state 154
	ListElements	go to state 316
	Variable	go to state 143

State 253:

	ArrayReference -> LBRACKET OPTIONAL-48 ']' .	(Rule 191)

	$default	reduce using rule 191 (ArrayReference)

State 254:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-34 ')' . ';'	(Rule 119)

	';'	shift, and go to state 317

State 255:

	SubExpressionOrStdin -> STDIN .	(Rule 144)

	$default	reduce using rule 144 (SubExpressionOrStdin)

State 256:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 178)

	';'	shift, and go to state 318

State 257:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	SubExpressionOrStdin -> SubExpression .	(Rule 143)

	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222
	OP09_BITWISE_SHIFT	shift, and go to state 212
	OP11_COMPARE_LT_GT	shift, and go to state 209
	OP12_COMPARE_EQ_NE	shift, and go to state 211
	OP13_BITWISE_AND	shift, and go to state 208
	OP14_BITWISE_OR_XOR	shift, and go to state 219
	OP15_LOGICAL_AND	shift, and go to state 215
	OP16_LOGICAL_OR	shift, and go to state 216
	OP17_LIST_RANGE	shift, and go to state 223
	OP18_TERNARY	shift, and go to state 218
	OP23_LOGICAL_AND	shift, and go to state 213
	OP24_LOGICAL_OR_XOR	shift, and go to state 217

	';'	reduce using rule 143 (SubExpressionOrStdin)

State 258:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression . ';'	(Rule 179)

	';'	shift, and go to state 319
	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222
	OP09_BITWISE_SHIFT	shift, and go to state 212
	OP11_COMPARE_LT_GT	shift, and go to state 209
	OP12_COMPARE_EQ_NE	shift, and go to state 211
	OP13_BITWISE_AND	shift, and go to state 208
	OP14_BITWISE_OR_XOR	shift, and go to state 219
	OP15_LOGICAL_AND	shift, and go to state 215
	OP16_LOGICAL_OR	shift, and go to state 216
	OP17_LIST_RANGE	shift, and go to state 223
	OP18_TERNARY	shift, and go to state 218
	OP23_LOGICAL_AND	shift, and go to state 213
	OP24_LOGICAL_OR_XOR	shift, and go to state 217

State 259:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN . OPTIONAL-36 ')'	(Rule 132)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	MY	shift, and go to state 151
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP01_QW	shift, and go to state 158
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	')'	reduce using rule 127 (OPTIONAL-36)

	Operator	go to state 96
	HashDereference	go to state 100
	ListElement	go to state 156
	WordScoped	go to state 130
	SubExpression	go to state 155
	ArrayDereference	go to state 116
	ListElements	go to state 320
	TypeInner	go to state 154
	HashReference	go to state 83
	Variable	go to state 143
	Literal	go to state 86
	OPTIONAL-36	go to state 321
	VariableSymbolOrSelf	go to state 121
	ArrayReference	go to state 108
	Expression	go to state 141

State 260:

	LoopWhile -> 'while' LPAREN . SubExpression ')' CodeBlock	(Rule 165)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	Operator	go to state 96
	HashDereference	go to state 100
	WordScoped	go to state 130
	SubExpression	go to state 322
	ArrayDereference	go to state 116
	HashReference	go to state 83
	Variable	go to state 143
	VariableSymbolOrSelf	go to state 121
	ArrayReference	go to state 108
	Literal	go to state 86
	Expression	go to state 141

State 261:

	LoopForEach -> 'foreach' MY . Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 164)

	TYPE_INTEGER	shift, and go to state 55
	WORD	shift, and go to state 56
	WORD_SCOPED	shift, and go to state 57

	Type	go to state 323

State 262:

	LoopFor -> 'for' MY . TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 163)

	TYPE_INTEGER	shift, and go to state 324

State 263:

	VariableRetrieval -> OP02_HASH_THINARROW . SubExpression '}'	(Rule 173)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 174)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 325
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	HashReference	go to state 83
	Variable	go to state 143
	Literal	go to state 86
	ArrayReference	go to state 108
	VariableSymbolOrSelf	go to state 121
	Expression	go to state 141
	Operator	go to state 96
	HashDereference	go to state 100
	WordScoped	go to state 130
	SubExpression	go to state 326
	ArrayDereference	go to state 116

State 264:

	STAR-44 -> STAR-44 VariableRetrieval .	(Rule 169)

	$default	reduce using rule 169 (STAR-44)

State 265:

	VariableRetrieval -> OP02_ARRAY_THINARROW . SubExpression ']'	(Rule 172)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	SubExpression	go to state 327
	ArrayDereference	go to state 116
	WordScoped	go to state 130
	Operator	go to state 96
	HashDereference	go to state 100
	VariableSymbolOrSelf	go to state 121
	ArrayReference	go to state 108
	Literal	go to state 86
	Expression	go to state 141
	HashReference	go to state 83
	Variable	go to state 143

State 266:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	Conditional -> 'if' LPAREN SubExpression . ')' CodeBlock STAR-40 OPTIONAL-42	(Rule 159)

	')'	shift, and go to state 328
	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222
	OP09_BITWISE_SHIFT	shift, and go to state 212
	OP11_COMPARE_LT_GT	shift, and go to state 209
	OP12_COMPARE_EQ_NE	shift, and go to state 211
	OP13_BITWISE_AND	shift, and go to state 208
	OP14_BITWISE_OR_XOR	shift, and go to state 219
	OP15_LOGICAL_AND	shift, and go to state 215
	OP16_LOGICAL_OR	shift, and go to state 216
	OP17_LIST_RANGE	shift, and go to state 223
	OP18_TERNARY	shift, and go to state 218
	OP23_LOGICAL_AND	shift, and go to state 213
	OP24_LOGICAL_OR_XOR	shift, and go to state 217

State 267:

	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL . ';'	(Rule 177)

	';'	shift, and go to state 329

State 268:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL . ';'	(Rule 175)
	VariableDeclaration -> MY Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 176)

	';'	shift, and go to state 330
	OP19_VARIABLE_ASSIGN	shift, and go to state 331

State 269:

	Expression -> WORD_UPPERCASE LPAREN ')' .	(Rule 130)

	$default	reduce using rule 130 (Expression)

State 270:

	Expression -> WordScoped LPAREN OPTIONAL-35 . ')'	(Rule 129)

	')'	shift, and go to state 332

State 271:

	OPTIONAL-35 -> ListElements .	(Rule 124)

	$default	reduce using rule 124 (OPTIONAL-35)

State 272:

	Expression -> WordScoped SCOPE WORD_UPPERCASE . LPAREN ')'	(Rule 131)

	LPAREN	shift, and go to state 333

State 273:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW ')' .	(Rule 133)

	$default	reduce using rule 133 (Expression)

State 274:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression .	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_STRING_REPEAT	shift, and go to state 220

	')'	reduce using rule 94 (Operator)
	';'	reduce using rule 94 (Operator)
	']'	reduce using rule 94 (Operator)
	'}'	reduce using rule 94 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 94 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 94 (Operator)
	OP08_STRING_CAT	reduce using rule 94 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 94 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 94 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 94 (Operator)
	OP13_BITWISE_AND	reduce using rule 94 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 94 (Operator)
	OP15_LOGICAL_AND	reduce using rule 94 (Operator)
	OP16_LOGICAL_OR	reduce using rule 94 (Operator)
	OP17_LIST_RANGE	reduce using rule 94 (Operator)
	OP18_TERNARY	reduce using rule 94 (Operator)
	OP21_LIST_COMMA	reduce using rule 94 (Operator)
	OP23_LOGICAL_AND	reduce using rule 94 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 94 (Operator)

State 275:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression OP13_BITWISE_AND SubExpression .	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222
	OP09_BITWISE_SHIFT	shift, and go to state 212
	OP11_COMPARE_LT_GT	shift, and go to state 209
	OP12_COMPARE_EQ_NE	shift, and go to state 211

	')'	reduce using rule 102 (Operator)
	';'	reduce using rule 102 (Operator)
	']'	reduce using rule 102 (Operator)
	'}'	reduce using rule 102 (Operator)
	OP13_BITWISE_AND	reduce using rule 102 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 102 (Operator)
	OP15_LOGICAL_AND	reduce using rule 102 (Operator)
	OP16_LOGICAL_OR	reduce using rule 102 (Operator)
	OP17_LIST_RANGE	reduce using rule 102 (Operator)
	OP18_TERNARY	reduce using rule 102 (Operator)
	OP21_LIST_COMMA	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 276:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression .	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222
	OP09_BITWISE_SHIFT	shift, and go to state 212

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 100 (Operator)
	';'	reduce using rule 100 (Operator)
	']'	reduce using rule 100 (Operator)
	'}'	reduce using rule 100 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 100 (Operator)
	OP13_BITWISE_AND	reduce using rule 100 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 100 (Operator)
	OP15_LOGICAL_AND	reduce using rule 100 (Operator)
	OP16_LOGICAL_OR	reduce using rule 100 (Operator)
	OP17_LIST_RANGE	reduce using rule 100 (Operator)
	OP18_TERNARY	reduce using rule 100 (Operator)
	OP21_LIST_COMMA	reduce using rule 100 (Operator)
	OP23_LOGICAL_AND	reduce using rule 100 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 100 (Operator)

State 277:

	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN .	(Rule 92)

	$default	reduce using rule 92 (Operator)

State 278:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression .	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222
	OP09_BITWISE_SHIFT	shift, and go to state 212
	OP11_COMPARE_LT_GT	shift, and go to state 209

	OP12_COMPARE_EQ_NE	error (nonassociative)

	')'	reduce using rule 101 (Operator)
	';'	reduce using rule 101 (Operator)
	']'	reduce using rule 101 (Operator)
	'}'	reduce using rule 101 (Operator)
	OP13_BITWISE_AND	reduce using rule 101 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 101 (Operator)
	OP15_LOGICAL_AND	reduce using rule 101 (Operator)
	OP16_LOGICAL_OR	reduce using rule 101 (Operator)
	OP17_LIST_RANGE	reduce using rule 101 (Operator)
	OP18_TERNARY	reduce using rule 101 (Operator)
	OP21_LIST_COMMA	reduce using rule 101 (Operator)
	OP23_LOGICAL_AND	reduce using rule 101 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 101 (Operator)

State 279:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression .	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222

	')'	reduce using rule 97 (Operator)
	';'	reduce using rule 97 (Operator)
	']'	reduce using rule 97 (Operator)
	'}'	reduce using rule 97 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 97 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 97 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 97 (Operator)
	OP13_BITWISE_AND	reduce using rule 97 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 97 (Operator)
	OP15_LOGICAL_AND	reduce using rule 97 (Operator)
	OP16_LOGICAL_OR	reduce using rule 97 (Operator)
	OP17_LIST_RANGE	reduce using rule 97 (Operator)
	OP18_TERNARY	reduce using rule 97 (Operator)
	OP21_LIST_COMMA	reduce using rule 97 (Operator)
	OP23_LOGICAL_AND	reduce using rule 97 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 97 (Operator)

State 280:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression OP23_LOGICAL_AND SubExpression .	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222
	OP09_BITWISE_SHIFT	shift, and go to state 212
	OP11_COMPARE_LT_GT	shift, and go to state 209
	OP12_COMPARE_EQ_NE	shift, and go to state 211
	OP13_BITWISE_AND	shift, and go to state 208
	OP14_BITWISE_OR_XOR	shift, and go to state 219
	OP15_LOGICAL_AND	shift, and go to state 215
	OP16_LOGICAL_OR	shift, and go to state 216
	OP17_LIST_RANGE	shift, and go to state 223
	OP18_TERNARY	shift, and go to state 218

	')'	reduce using rule 109 (Operator)
	';'	reduce using rule 109 (Operator)
	']'	reduce using rule 109 (Operator)
	'}'	reduce using rule 109 (Operator)
	OP21_LIST_COMMA	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 281:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression .	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220

	')'	reduce using rule 95 (Operator)
	';'	reduce using rule 95 (Operator)
	']'	reduce using rule 95 (Operator)
	'}'	reduce using rule 95 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 95 (Operator)
	OP08_STRING_CAT	reduce using rule 95 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 95 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 95 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 95 (Operator)
	OP13_BITWISE_AND	reduce using rule 95 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 95 (Operator)
	OP15_LOGICAL_AND	reduce using rule 95 (Operator)
	OP16_LOGICAL_OR	reduce using rule 95 (Operator)
	OP17_LIST_RANGE	reduce using rule 95 (Operator)
	OP18_TERNARY	reduce using rule 95 (Operator)
	OP21_LIST_COMMA	reduce using rule 95 (Operator)
	OP23_LOGICAL_AND	reduce using rule 95 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 95 (Operator)

State 282:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression OP15_LOGICAL_AND SubExpression .	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222
	OP09_BITWISE_SHIFT	shift, and go to state 212
	OP11_COMPARE_LT_GT	shift, and go to state 209
	OP12_COMPARE_EQ_NE	shift, and go to state 211
	OP13_BITWISE_AND	shift, and go to state 208
	OP14_BITWISE_OR_XOR	shift, and go to state 219

	')'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP15_LOGICAL_AND	reduce using rule 104 (Operator)
	OP16_LOGICAL_OR	reduce using rule 104 (Operator)
	OP17_LIST_RANGE	reduce using rule 104 (Operator)
	OP18_TERNARY	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 283:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression OP16_LOGICAL_OR SubExpression .	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222
	OP09_BITWISE_SHIFT	shift, and go to state 212
	OP11_COMPARE_LT_GT	shift, and go to state 209
	OP12_COMPARE_EQ_NE	shift, and go to state 211
	OP13_BITWISE_AND	shift, and go to state 208
	OP14_BITWISE_OR_XOR	shift, and go to state 219
	OP15_LOGICAL_AND	shift, and go to state 215

	')'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 284:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression .	(Rule 110)

	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222
	OP09_BITWISE_SHIFT	shift, and go to state 212
	OP11_COMPARE_LT_GT	shift, and go to state 209
	OP12_COMPARE_EQ_NE	shift, and go to state 211
	OP13_BITWISE_AND	shift, and go to state 208
	OP14_BITWISE_OR_XOR	shift, and go to state 219
	OP15_LOGICAL_AND	shift, and go to state 215
	OP16_LOGICAL_OR	shift, and go to state 216
	OP17_LIST_RANGE	shift, and go to state 223
	OP18_TERNARY	shift, and go to state 218
	OP23_LOGICAL_AND	shift, and go to state 213

	')'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 285:

	VariableOrLiteral -> Variable .	(Rule 219)

	$default	reduce using rule 219 (VariableOrLiteral)

State 286:

	VariableOrLiteral -> Literal .	(Rule 220)

	$default	reduce using rule 220 (VariableOrLiteral)

State 287:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral . COLON VariableOrLiteral	(Rule 107)

	COLON	shift, and go to state 334

State 288:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression .	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222
	OP09_BITWISE_SHIFT	shift, and go to state 212
	OP11_COMPARE_LT_GT	shift, and go to state 209
	OP12_COMPARE_EQ_NE	shift, and go to state 211
	OP13_BITWISE_AND	shift, and go to state 208

	')'	reduce using rule 103 (Operator)
	';'	reduce using rule 103 (Operator)
	']'	reduce using rule 103 (Operator)
	'}'	reduce using rule 103 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 103 (Operator)
	OP15_LOGICAL_AND	reduce using rule 103 (Operator)
	OP16_LOGICAL_OR	reduce using rule 103 (Operator)
	OP17_LIST_RANGE	reduce using rule 103 (Operator)
	OP18_TERNARY	reduce using rule 103 (Operator)
	OP21_LIST_COMMA	reduce using rule 103 (Operator)
	OP23_LOGICAL_AND	reduce using rule 103 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 103 (Operator)

State 289:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression OP07_STRING_REPEAT SubExpression .	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210

	')'	reduce using rule 93 (Operator)
	';'	reduce using rule 93 (Operator)
	']'	reduce using rule 93 (Operator)
	'}'	reduce using rule 93 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 93 (Operator)
	OP07_STRING_REPEAT	reduce using rule 93 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 93 (Operator)
	OP08_STRING_CAT	reduce using rule 93 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 93 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 93 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 93 (Operator)
	OP13_BITWISE_AND	reduce using rule 93 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 93 (Operator)
	OP15_LOGICAL_AND	reduce using rule 93 (Operator)
	OP16_LOGICAL_OR	reduce using rule 93 (Operator)
	OP17_LIST_RANGE	reduce using rule 93 (Operator)
	OP18_TERNARY	reduce using rule 93 (Operator)
	OP21_LIST_COMMA	reduce using rule 93 (Operator)
	OP23_LOGICAL_AND	reduce using rule 93 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 93 (Operator)

State 290:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression OP04_MATH_POW SubExpression .	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 221

	')'	reduce using rule 89 (Operator)
	';'	reduce using rule 89 (Operator)
	']'	reduce using rule 89 (Operator)
	'}'	reduce using rule 89 (Operator)
	OP06_REGEX_MATCH	reduce using rule 89 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 89 (Operator)
	OP07_STRING_REPEAT	reduce using rule 89 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 89 (Operator)
	OP08_STRING_CAT	reduce using rule 89 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 89 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 89 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 89 (Operator)
	OP13_BITWISE_AND	reduce using rule 89 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 89 (Operator)
	OP15_LOGICAL_AND	reduce using rule 89 (Operator)
	OP16_LOGICAL_OR	reduce using rule 89 (Operator)
	OP17_LIST_RANGE	reduce using rule 89 (Operator)
	OP18_TERNARY	reduce using rule 89 (Operator)
	OP21_LIST_COMMA	reduce using rule 89 (Operator)
	OP23_LOGICAL_AND	reduce using rule 89 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 89 (Operator)

State 291:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression OP08_STRING_CAT SubExpression .	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214

	')'	reduce using rule 96 (Operator)
	';'	reduce using rule 96 (Operator)
	']'	reduce using rule 96 (Operator)
	'}'	reduce using rule 96 (Operator)
	OP08_STRING_CAT	reduce using rule 96 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 96 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 96 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 96 (Operator)
	OP13_BITWISE_AND	reduce using rule 96 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 96 (Operator)
	OP15_LOGICAL_AND	reduce using rule 96 (Operator)
	OP16_LOGICAL_OR	reduce using rule 96 (Operator)
	OP17_LIST_RANGE	reduce using rule 96 (Operator)
	OP18_TERNARY	reduce using rule 96 (Operator)
	OP21_LIST_COMMA	reduce using rule 96 (Operator)
	OP23_LOGICAL_AND	reduce using rule 96 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 96 (Operator)

State 292:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222
	OP09_BITWISE_SHIFT	shift, and go to state 212
	OP11_COMPARE_LT_GT	shift, and go to state 209
	OP12_COMPARE_EQ_NE	shift, and go to state 211
	OP13_BITWISE_AND	shift, and go to state 208
	OP14_BITWISE_OR_XOR	shift, and go to state 219
	OP15_LOGICAL_AND	shift, and go to state 215
	OP16_LOGICAL_OR	shift, and go to state 216

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 293:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL . STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 54)

	$default	reduce using rule 53 (STAR-21)

	STAR-21	go to state 335

State 294:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 STAR-19 '}' . ';'	(Rule 50)

	';'	shift, and go to state 336

State 295:

	STAR-19 -> STAR-19 Operation .	(Rule 48)

	$default	reduce using rule 48 (STAR-19)

State 296:

	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE . OP19_VARIABLE_ASSIGN	(Rule 218)

	OP19_VARIABLE_ASSIGN	shift, and go to state 337

State 297:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN . LBRACE HashEntryTyped STAR-27 '}' ';'	(Rule 67)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN . LBRACE '}' ';'	(Rule 68)

	LBRACE	shift, and go to state 338

State 298:

	STAR-25 -> STAR-25 . MethodOrSubroutine	(Rule 61)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 STAR-23 STAR-24 Properties STAR-25 . LITERAL_NUMBER ';'	(Rule 63)

	'our'	shift, and go to state 340
	LITERAL_NUMBER	shift, and go to state 339

	MethodOrSubroutine	go to state 343
	Subroutine	go to state 342
	Method	go to state 341

State 299:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements . ')'	(Rule 82)

	')'	shift, and go to state 344

State 300:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ')'	(Rule 84)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	MY	shift, and go to state 151
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP01_QW	shift, and go to state 158
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	Expression	go to state 141
	VariableSymbolOrSelf	go to state 121
	ArrayReference	go to state 108
	Literal	go to state 86
	Variable	go to state 143
	TypeInner	go to state 154
	HashReference	go to state 83
	ListElements	go to state 345
	WordScoped	go to state 130
	ArrayDereference	go to state 116
	SubExpression	go to state 155
	ListElement	go to state 156
	HashDereference	go to state 100
	Operator	go to state 96

State 301:

	HashDereference -> '%{' OPTIONAL-53 HashReference '}' .	(Rule 210)

	$default	reduce using rule 210 (HashDereference)

State 302:

	TypeInner -> MY Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 217)

	WORD	shift, and go to state 346

State 303:

	PAREN-45 -> OP21_LIST_COMMA . ListElement	(Rule 180)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	MY	shift, and go to state 151
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP01_QW	shift, and go to state 158
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	Operator	go to state 96
	HashDereference	go to state 100
	ArrayDereference	go to state 116
	ListElement	go to state 347
	SubExpression	go to state 155
	WordScoped	go to state 130
	TypeInner	go to state 154
	HashReference	go to state 83
	Variable	go to state 143
	Literal	go to state 86
	VariableSymbolOrSelf	go to state 121
	ArrayReference	go to state 108
	Expression	go to state 141

State 304:

	STAR-46 -> STAR-46 PAREN-45 .	(Rule 181)

	$default	reduce using rule 181 (STAR-46)

State 305:

	ListElement -> OP01_QW PLUS-47 ')' .	(Rule 188)

	$default	reduce using rule 188 (ListElement)

State 306:

	PLUS-47 -> PLUS-47 WORD .	(Rule 184)

	$default	reduce using rule 184 (PLUS-47)

State 307:

	ArrayDereference -> '@{' OPTIONAL-49 ArrayReference '}' .	(Rule 195)

	$default	reduce using rule 195 (ArrayDereference)

State 308:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements ';' .	(Rule 117)

	$default	reduce using rule 117 (OperatorVoid)

State 309:

	OperatorVoid -> OP01_PRINT OPTIONAL-33 ListElements ';' .	(Rule 116)

	$default	reduce using rule 116 (OperatorVoid)

State 310:

	PAREN-51 -> OP21_LIST_COMMA . HashEntry	(Rule 202)

	'%{'	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 172

	Literal	go to state 168
	VariableSymbolOrSelf	go to state 121
	Variable	go to state 174
	HashDereference	go to state 170
	VariableOrLiteralOrWord	go to state 171
	HashEntry	go to state 348

State 311:

	STAR-52 -> STAR-52 PAREN-51 .	(Rule 203)

	$default	reduce using rule 203 (STAR-52)

State 312:

	HashReference -> LBRACE HashEntry STAR-52 '}' .	(Rule 205)

	$default	reduce using rule 205 (HashReference)

State 313:

	OPTIONAL-50 -> TypeInner .	(Rule 196)

	$default	reduce using rule 196 (OPTIONAL-50)

State 314:

	HashEntry -> VariableOrLiteralOrWord OP20_HASH_FATARROW OPTIONAL-50 . SubExpression	(Rule 198)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	Variable	go to state 143
	HashReference	go to state 83
	Expression	go to state 141
	VariableSymbolOrSelf	go to state 121
	ArrayReference	go to state 108
	Literal	go to state 86
	HashDereference	go to state 100
	Operator	go to state 96
	ArrayDereference	go to state 116
	WordScoped	go to state 130
	SubExpression	go to state 349

State 315:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL . OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 85)

	OP21_LIST_COMMA	shift, and go to state 350

State 316:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ';'	(Rule 121)

	';'	shift, and go to state 351

State 317:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-34 ')' ';' .	(Rule 119)

	$default	reduce using rule 119 (OperatorVoid)

State 318:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 178)

	$default	reduce using rule 178 (VariableModification)

State 319:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';' .	(Rule 179)

	$default	reduce using rule 179 (VariableModification)

State 320:

	OPTIONAL-36 -> ListElements .	(Rule 126)

	$default	reduce using rule 126 (OPTIONAL-36)

State 321:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-36 . ')'	(Rule 132)

	')'	shift, and go to state 352

State 322:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	LoopWhile -> 'while' LPAREN SubExpression . ')' CodeBlock	(Rule 165)

	')'	shift, and go to state 353
	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222
	OP09_BITWISE_SHIFT	shift, and go to state 212
	OP11_COMPARE_LT_GT	shift, and go to state 209
	OP12_COMPARE_EQ_NE	shift, and go to state 211
	OP13_BITWISE_AND	shift, and go to state 208
	OP14_BITWISE_OR_XOR	shift, and go to state 219
	OP15_LOGICAL_AND	shift, and go to state 215
	OP16_LOGICAL_OR	shift, and go to state 216
	OP17_LIST_RANGE	shift, and go to state 223
	OP18_TERNARY	shift, and go to state 218
	OP23_LOGICAL_AND	shift, and go to state 213
	OP24_LOGICAL_OR_XOR	shift, and go to state 217

State 323:

	LoopForEach -> 'foreach' MY Type . VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 164)

	VARIABLE_SYMBOL	shift, and go to state 354

State 324:

	LoopFor -> 'for' MY TYPE_INTEGER . VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 163)

	VARIABLE_SYMBOL	shift, and go to state 355

State 325:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 174)
	WordScoped -> WORD .	(Rule 211)

	'}'	shift, and go to state 356

	LPAREN	reduce using rule 211 (WordScoped)
	OP02_METHOD_THINARROW_NEW	reduce using rule 211 (WordScoped)
	SCOPE	reduce using rule 211 (WordScoped)

State 326:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	VariableRetrieval -> OP02_HASH_THINARROW SubExpression . '}'	(Rule 173)

	'}'	shift, and go to state 357
	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222
	OP09_BITWISE_SHIFT	shift, and go to state 212
	OP11_COMPARE_LT_GT	shift, and go to state 209
	OP12_COMPARE_EQ_NE	shift, and go to state 211
	OP13_BITWISE_AND	shift, and go to state 208
	OP14_BITWISE_OR_XOR	shift, and go to state 219
	OP15_LOGICAL_AND	shift, and go to state 215
	OP16_LOGICAL_OR	shift, and go to state 216
	OP17_LIST_RANGE	shift, and go to state 223
	OP18_TERNARY	shift, and go to state 218
	OP23_LOGICAL_AND	shift, and go to state 213
	OP24_LOGICAL_OR_XOR	shift, and go to state 217

State 327:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression . ']'	(Rule 172)

	']'	shift, and go to state 358
	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222
	OP09_BITWISE_SHIFT	shift, and go to state 212
	OP11_COMPARE_LT_GT	shift, and go to state 209
	OP12_COMPARE_EQ_NE	shift, and go to state 211
	OP13_BITWISE_AND	shift, and go to state 208
	OP14_BITWISE_OR_XOR	shift, and go to state 219
	OP15_LOGICAL_AND	shift, and go to state 215
	OP16_LOGICAL_OR	shift, and go to state 216
	OP17_LIST_RANGE	shift, and go to state 223
	OP18_TERNARY	shift, and go to state 218
	OP23_LOGICAL_AND	shift, and go to state 213
	OP24_LOGICAL_OR_XOR	shift, and go to state 217

State 328:

	Conditional -> 'if' LPAREN SubExpression ')' . CodeBlock STAR-40 OPTIONAL-42	(Rule 159)

	LBRACE	shift, and go to state 360

	CodeBlock	go to state 359

State 329:

	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL ';' .	(Rule 177)

	$default	reduce using rule 177 (VariableDeclaration)

State 330:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL ';' .	(Rule 175)

	$default	reduce using rule 175 (VariableDeclaration)

State 331:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 176)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	STDIN	shift, and go to state 255
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	SubExpression	go to state 257
	WordScoped	go to state 130
	ArrayDereference	go to state 116
	HashDereference	go to state 100
	Operator	go to state 96
	Expression	go to state 141
	SubExpressionOrStdin	go to state 361
	ArrayReference	go to state 108
	VariableSymbolOrSelf	go to state 121
	Literal	go to state 86
	Variable	go to state 143
	HashReference	go to state 83

State 332:

	Expression -> WordScoped LPAREN OPTIONAL-35 ')' .	(Rule 129)

	$default	reduce using rule 129 (Expression)

State 333:

	Expression -> WordScoped SCOPE WORD_UPPERCASE LPAREN . ')'	(Rule 131)

	')'	shift, and go to state 362

State 334:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON . VariableOrLiteral	(Rule 107)

	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94

	Variable	go to state 285
	Literal	go to state 286
	VariableSymbolOrSelf	go to state 121
	VariableOrLiteral	go to state 363

State 335:

	STAR-21 -> STAR-21 . PAREN-20	(Rule 52)
	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-21 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 54)

	')'	shift, and go to state 364
	OP21_LIST_COMMA	shift, and go to state 366

	PAREN-20	go to state 365

State 336:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 STAR-19 '}' ';' .	(Rule 50)

	$default	reduce using rule 50 (Subroutine)

State 337:

	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN .	(Rule 218)

	$default	reduce using rule 218 (TypeInnerConstant)

State 338:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE . HashEntryTyped STAR-27 '}' ';'	(Rule 67)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE . '}' ';'	(Rule 68)

	'%{'	shift, and go to state 92
	'}'	shift, and go to state 369
	WORD	shift, and go to state 370

	HashEntryTyped	go to state 368
	HashDereference	go to state 367

State 339:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER . ';'	(Rule 63)

	';'	shift, and go to state 371

State 340:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 STAR-19 '}' ';'	(Rule 50)
	Method -> 'our' . TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-28 STAR-29 '}' ';'	(Rule 73)

	TYPE_INTEGER	shift, and go to state 55
	TYPE_METHOD	shift, and go to state 372
	WORD	shift, and go to state 56
	WORD_SCOPED	shift, and go to state 57

	Type	go to state 54

State 341:

	MethodOrSubroutine -> Method .	(Rule 78)

	$default	reduce using rule 78 (MethodOrSubroutine)

State 342:

	MethodOrSubroutine -> Subroutine .	(Rule 79)

	$default	reduce using rule 79 (MethodOrSubroutine)

State 343:

	STAR-25 -> STAR-25 MethodOrSubroutine .	(Rule 61)

	$default	reduce using rule 61 (STAR-25)

State 344:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')' .	(Rule 82)

	$default	reduce using rule 82 (Operator)

State 345:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ')'	(Rule 84)

	')'	shift, and go to state 373

State 346:

	TypeInner -> MY Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 217)

	OP19_VARIABLE_ASSIGN	shift, and go to state 374

State 347:

	PAREN-45 -> OP21_LIST_COMMA ListElement .	(Rule 180)

	$default	reduce using rule 180 (PAREN-45)

State 348:

	PAREN-51 -> OP21_LIST_COMMA HashEntry .	(Rule 202)

	$default	reduce using rule 202 (PAREN-51)

State 349:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	HashEntry -> VariableOrLiteralOrWord OP20_HASH_FATARROW OPTIONAL-50 SubExpression .	(Rule 198)

	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222
	OP09_BITWISE_SHIFT	shift, and go to state 212
	OP11_COMPARE_LT_GT	shift, and go to state 209
	OP12_COMPARE_EQ_NE	shift, and go to state 211
	OP13_BITWISE_AND	shift, and go to state 208
	OP14_BITWISE_OR_XOR	shift, and go to state 219
	OP15_LOGICAL_AND	shift, and go to state 215
	OP16_LOGICAL_OR	shift, and go to state 216
	OP17_LIST_RANGE	shift, and go to state 223
	OP18_TERNARY	shift, and go to state 218
	OP23_LOGICAL_AND	shift, and go to state 213
	OP24_LOGICAL_OR_XOR	shift, and go to state 217

	'}'	reduce using rule 198 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 198 (HashEntry)

State 350:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA . LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 85)

	LITERAL_STRING	shift, and go to state 375

State 351:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';' .	(Rule 121)

	$default	reduce using rule 121 (OperatorVoid)

State 352:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-36 ')' .	(Rule 132)

	$default	reduce using rule 132 (Expression)

State 353:

	LoopWhile -> 'while' LPAREN SubExpression ')' . CodeBlock	(Rule 165)

	LBRACE	shift, and go to state 360

	CodeBlock	go to state 376

State 354:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL . LPAREN ListElements ')' CodeBlock	(Rule 164)

	LPAREN	shift, and go to state 377

State 355:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL . LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 163)

	LPAREN	shift, and go to state 378

State 356:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 174)

	$default	reduce using rule 174 (VariableRetrieval)

State 357:

	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}' .	(Rule 173)

	$default	reduce using rule 173 (VariableRetrieval)

State 358:

	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']' .	(Rule 172)

	$default	reduce using rule 172 (VariableRetrieval)

State 359:

	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock . STAR-40 OPTIONAL-42	(Rule 159)

	$default	reduce using rule 155 (STAR-40)

	STAR-40	go to state 379

State 360:

	CodeBlock -> LBRACE . PLUS-43 '}'	(Rule 168)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'if'	shift, and go to state 124
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	MY	shift, and go to state 127
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 114
	OP01_NAMED_VOID	shift, and go to state 95
	OP01_NAMED_VOID_LPAREN	shift, and go to state 117
	OP01_NAMED_VOID_SCOLON	shift, and go to state 105
	OP01_OPEN	shift, and go to state 110
	OP01_PRINT	shift, and go to state 98
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP19_LOOP_CONTROL	shift, and go to state 102
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 90
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 128

	'for'	reduce using rule 147 (OPTIONAL-38)
	'foreach'	reduce using rule 147 (OPTIONAL-38)
	'while'	reduce using rule 147 (OPTIONAL-38)

	VariableModification	go to state 99
	HashDereference	go to state 100
	Operator	go to state 96
	SubExpression	go to state 131
	WordScoped	go to state 130
	PAREN-37	go to state 129
	OPTIONAL-38	go to state 120
	Variable	go to state 119
	VariableDeclaration	go to state 118
	VariableSymbolOrSelf	go to state 121
	Conditional	go to state 93
	OperatorVoid	go to state 113
	LoopLabel	go to state 89
	ArrayDereference	go to state 116
	Operation	go to state 381
	HashReference	go to state 83
	Statement	go to state 84
	Expression	go to state 109
	ArrayReference	go to state 108
	PLUS-43	go to state 380
	Literal	go to state 86

State 361:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 176)

	';'	shift, and go to state 382

State 362:

	Expression -> WordScoped SCOPE WORD_UPPERCASE LPAREN ')' .	(Rule 131)

	$default	reduce using rule 131 (Expression)

State 363:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral .	(Rule 107)

	$default	reduce using rule 107 (Operator)

State 364:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-21 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 54)

	OP19_VARIABLE_ASSIGN	shift, and go to state 383

State 365:

	STAR-21 -> STAR-21 PAREN-20 .	(Rule 52)

	$default	reduce using rule 52 (STAR-21)

State 366:

	PAREN-20 -> OP21_LIST_COMMA . MY Type VARIABLE_SYMBOL	(Rule 51)

	MY	shift, and go to state 384

State 367:

	HashEntryTyped -> HashDereference .	(Rule 201)

	$default	reduce using rule 201 (HashEntryTyped)

State 368:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped . STAR-27 '}' ';'	(Rule 67)

	$default	reduce using rule 66 (STAR-27)

	STAR-27	go to state 385

State 369:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' . ';'	(Rule 68)

	';'	shift, and go to state 386

State 370:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner SubExpression	(Rule 200)

	OP20_HASH_FATARROW	shift, and go to state 387

State 371:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';' .	(Rule 63)

	$default	reduce using rule 63 (Class)

State 372:

	Method -> 'our' TYPE_METHOD . VARIABLE_SYMBOL '= sub {' OPTIONAL-28 STAR-29 '}' ';'	(Rule 73)

	VARIABLE_SYMBOL	shift, and go to state 388

State 373:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' .	(Rule 84)

	$default	reduce using rule 84 (Operator)

State 374:

	TypeInner -> MY Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 217)

	$default	reduce using rule 217 (TypeInner)

State 375:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING . OP21_LIST_COMMA SubExpression	(Rule 85)

	OP21_LIST_COMMA	shift, and go to state 389

State 376:

	LoopWhile -> 'while' LPAREN SubExpression ')' CodeBlock .	(Rule 165)

	$default	reduce using rule 165 (LoopWhile)

State 377:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN . ListElements ')' CodeBlock	(Rule 164)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	MY	shift, and go to state 151
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP01_QW	shift, and go to state 158
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	Operator	go to state 96
	HashDereference	go to state 100
	ArrayDereference	go to state 116
	WordScoped	go to state 130
	SubExpression	go to state 155
	ListElement	go to state 156
	HashReference	go to state 83
	TypeInner	go to state 154
	ListElements	go to state 390
	Variable	go to state 143
	VariableSymbolOrSelf	go to state 121
	ArrayReference	go to state 108
	Literal	go to state 86
	Expression	go to state 141

State 378:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN . SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 163)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	Operator	go to state 96
	HashDereference	go to state 100
	SubExpression	go to state 391
	ArrayDereference	go to state 116
	WordScoped	go to state 130
	HashReference	go to state 83
	Variable	go to state 143
	ArrayReference	go to state 108
	VariableSymbolOrSelf	go to state 121
	Literal	go to state 86
	Expression	go to state 141

State 379:

	STAR-40 -> STAR-40 . PAREN-39	(Rule 154)
	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-40 . OPTIONAL-42	(Rule 159)

	'else'	shift, and go to state 393
	'elsif'	shift, and go to state 394

	$end	reduce using rule 158 (OPTIONAL-42)
	'%{'	reduce using rule 158 (OPTIONAL-42)
	'@{'	reduce using rule 158 (OPTIONAL-42)
	'for'	reduce using rule 158 (OPTIONAL-42)
	'foreach'	reduce using rule 158 (OPTIONAL-42)
	'if'	reduce using rule 158 (OPTIONAL-42)
	'undef'	reduce using rule 158 (OPTIONAL-42)
	'while'	reduce using rule 158 (OPTIONAL-42)
	'}'	reduce using rule 158 (OPTIONAL-42)
	LBRACE	reduce using rule 158 (OPTIONAL-42)
	LBRACKET	reduce using rule 158 (OPTIONAL-42)
	LITERAL_NUMBER	reduce using rule 158 (OPTIONAL-42)
	LITERAL_STRING	reduce using rule 158 (OPTIONAL-42)
	LPAREN	reduce using rule 158 (OPTIONAL-42)
	MY	reduce using rule 158 (OPTIONAL-42)
	OP01_CLOSE	reduce using rule 158 (OPTIONAL-42)
	OP01_NAMED	reduce using rule 158 (OPTIONAL-42)
	OP01_NAMED_VOID	reduce using rule 158 (OPTIONAL-42)
	OP01_NAMED_VOID_LPAREN	reduce using rule 158 (OPTIONAL-42)
	OP01_NAMED_VOID_SCOLON	reduce using rule 158 (OPTIONAL-42)
	OP01_OPEN	reduce using rule 158 (OPTIONAL-42)
	OP01_PRINT	reduce using rule 158 (OPTIONAL-42)
	OP03_MATH_INC_DEC	reduce using rule 158 (OPTIONAL-42)
	OP05_LOGICAL_NEG	reduce using rule 158 (OPTIONAL-42)
	OP05_MATH_NEG_LPAREN	reduce using rule 158 (OPTIONAL-42)
	OP10_NAMED_UNARY	reduce using rule 158 (OPTIONAL-42)
	OP19_LOOP_CONTROL	reduce using rule 158 (OPTIONAL-42)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 158 (OPTIONAL-42)
	OP22_LOGICAL_NEG	reduce using rule 158 (OPTIONAL-42)
	SELF	reduce using rule 158 (OPTIONAL-42)
	VARIABLE_SYMBOL	reduce using rule 158 (OPTIONAL-42)
	WORD	reduce using rule 158 (OPTIONAL-42)
	WORD_SCOPED	reduce using rule 158 (OPTIONAL-42)
	WORD_UPPERCASE	reduce using rule 158 (OPTIONAL-42)

	PAREN-41	go to state 396
	OPTIONAL-42	go to state 392
	PAREN-39	go to state 395

State 380:

	PLUS-43 -> PLUS-43 . Operation	(Rule 166)
	CodeBlock -> LBRACE PLUS-43 . '}'	(Rule 168)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'if'	shift, and go to state 124
	'undef'	shift, and go to state 107
	'}'	shift, and go to state 397
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	MY	shift, and go to state 127
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 114
	OP01_NAMED_VOID	shift, and go to state 95
	OP01_NAMED_VOID_LPAREN	shift, and go to state 117
	OP01_NAMED_VOID_SCOLON	shift, and go to state 105
	OP01_OPEN	shift, and go to state 110
	OP01_PRINT	shift, and go to state 98
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP19_LOOP_CONTROL	shift, and go to state 102
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 90
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 128

	'for'	reduce using rule 147 (OPTIONAL-38)
	'foreach'	reduce using rule 147 (OPTIONAL-38)
	'while'	reduce using rule 147 (OPTIONAL-38)

	Expression	go to state 109
	Literal	go to state 86
	ArrayReference	go to state 108
	HashReference	go to state 83
	Operation	go to state 398
	Statement	go to state 84
	ArrayDereference	go to state 116
	OperatorVoid	go to state 113
	LoopLabel	go to state 89
	VariableSymbolOrSelf	go to state 121
	Conditional	go to state 93
	OPTIONAL-38	go to state 120
	Variable	go to state 119
	VariableDeclaration	go to state 118
	SubExpression	go to state 131
	WordScoped	go to state 130
	PAREN-37	go to state 129
	VariableModification	go to state 99
	HashDereference	go to state 100
	Operator	go to state 96

State 381:

	PLUS-43 -> Operation .	(Rule 167)

	$default	reduce using rule 167 (PLUS-43)

State 382:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 176)

	$default	reduce using rule 176 (VariableDeclaration)

State 383:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 54)

	'@_;'	shift, and go to state 399

State 384:

	PAREN-20 -> OP21_LIST_COMMA MY . Type VARIABLE_SYMBOL	(Rule 51)

	TYPE_INTEGER	shift, and go to state 55
	WORD	shift, and go to state 56
	WORD_SCOPED	shift, and go to state 57

	Type	go to state 400

State 385:

	STAR-27 -> STAR-27 . PAREN-26	(Rule 65)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-27 . '}' ';'	(Rule 67)

	'}'	shift, and go to state 403
	OP21_LIST_COMMA	shift, and go to state 401

	PAREN-26	go to state 402

State 386:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';' .	(Rule 68)

	$default	reduce using rule 68 (Properties)

State 387:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner SubExpression	(Rule 200)

	MY	shift, and go to state 151

	TypeInner	go to state 404

State 388:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL . '= sub {' OPTIONAL-28 STAR-29 '}' ';'	(Rule 73)

	'= sub {'	shift, and go to state 405

State 389:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA . SubExpression	(Rule 85)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	HashReference	go to state 83
	Variable	go to state 143
	Literal	go to state 86
	ArrayReference	go to state 108
	VariableSymbolOrSelf	go to state 121
	Expression	go to state 141
	Operator	go to state 96
	HashDereference	go to state 100
	SubExpression	go to state 406
	WordScoped	go to state 130
	ArrayDereference	go to state 116

State 390:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements . ')' CodeBlock	(Rule 164)

	')'	shift, and go to state 407

State 391:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression . OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 163)

	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222
	OP09_BITWISE_SHIFT	shift, and go to state 212
	OP11_COMPARE_LT_GT	shift, and go to state 209
	OP12_COMPARE_EQ_NE	shift, and go to state 211
	OP13_BITWISE_AND	shift, and go to state 208
	OP14_BITWISE_OR_XOR	shift, and go to state 219
	OP15_LOGICAL_AND	shift, and go to state 215
	OP16_LOGICAL_OR	shift, and go to state 216
	OP17_LIST_RANGE	shift, and go to state 408
	OP18_TERNARY	shift, and go to state 218
	OP23_LOGICAL_AND	shift, and go to state 213
	OP24_LOGICAL_OR_XOR	shift, and go to state 217

State 392:

	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-40 OPTIONAL-42 .	(Rule 159)

	$default	reduce using rule 159 (Conditional)

State 393:

	PAREN-41 -> 'else' . CodeBlock	(Rule 156)

	LBRACE	shift, and go to state 360

	CodeBlock	go to state 409

State 394:

	PAREN-39 -> 'elsif' . LPAREN SubExpression ')' CodeBlock	(Rule 153)

	LPAREN	shift, and go to state 410

State 395:

	STAR-40 -> STAR-40 PAREN-39 .	(Rule 154)

	$default	reduce using rule 154 (STAR-40)

State 396:

	OPTIONAL-42 -> PAREN-41 .	(Rule 157)

	$default	reduce using rule 157 (OPTIONAL-42)

State 397:

	CodeBlock -> LBRACE PLUS-43 '}' .	(Rule 168)

	$default	reduce using rule 168 (CodeBlock)

State 398:

	PLUS-43 -> PLUS-43 Operation .	(Rule 166)

	$default	reduce using rule 166 (PLUS-43)

State 399:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 54)

	$default	reduce using rule 54 (SubroutineArguments)

State 400:

	PAREN-20 -> OP21_LIST_COMMA MY Type . VARIABLE_SYMBOL	(Rule 51)

	VARIABLE_SYMBOL	shift, and go to state 411

State 401:

	PAREN-26 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 64)

	'%{'	shift, and go to state 92
	WORD	shift, and go to state 370

	HashDereference	go to state 367
	HashEntryTyped	go to state 412

State 402:

	STAR-27 -> STAR-27 PAREN-26 .	(Rule 65)

	$default	reduce using rule 65 (STAR-27)

State 403:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-27 '}' . ';'	(Rule 67)

	';'	shift, and go to state 413

State 404:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . SubExpression	(Rule 200)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	Operator	go to state 96
	HashDereference	go to state 100
	WordScoped	go to state 130
	SubExpression	go to state 414
	ArrayDereference	go to state 116
	HashReference	go to state 83
	Variable	go to state 143
	Literal	go to state 86
	VariableSymbolOrSelf	go to state 121
	ArrayReference	go to state 108
	Expression	go to state 141

State 405:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' . OPTIONAL-28 STAR-29 '}' ';'	(Rule 73)

	LPAREN_MY	shift, and go to state 416

	'%{'	reduce using rule 70 (OPTIONAL-28)
	'@{'	reduce using rule 70 (OPTIONAL-28)
	'for'	reduce using rule 70 (OPTIONAL-28)
	'foreach'	reduce using rule 70 (OPTIONAL-28)
	'if'	reduce using rule 70 (OPTIONAL-28)
	'undef'	reduce using rule 70 (OPTIONAL-28)
	'while'	reduce using rule 70 (OPTIONAL-28)
	'}'	reduce using rule 70 (OPTIONAL-28)
	LBRACE	reduce using rule 70 (OPTIONAL-28)
	LBRACKET	reduce using rule 70 (OPTIONAL-28)
	LITERAL_NUMBER	reduce using rule 70 (OPTIONAL-28)
	LITERAL_STRING	reduce using rule 70 (OPTIONAL-28)
	LPAREN	reduce using rule 70 (OPTIONAL-28)
	MY	reduce using rule 70 (OPTIONAL-28)
	OP01_CLOSE	reduce using rule 70 (OPTIONAL-28)
	OP01_NAMED	reduce using rule 70 (OPTIONAL-28)
	OP01_NAMED_VOID	reduce using rule 70 (OPTIONAL-28)
	OP01_NAMED_VOID_LPAREN	reduce using rule 70 (OPTIONAL-28)
	OP01_NAMED_VOID_SCOLON	reduce using rule 70 (OPTIONAL-28)
	OP01_OPEN	reduce using rule 70 (OPTIONAL-28)
	OP01_PRINT	reduce using rule 70 (OPTIONAL-28)
	OP03_MATH_INC_DEC	reduce using rule 70 (OPTIONAL-28)
	OP05_LOGICAL_NEG	reduce using rule 70 (OPTIONAL-28)
	OP05_MATH_NEG_LPAREN	reduce using rule 70 (OPTIONAL-28)
	OP10_NAMED_UNARY	reduce using rule 70 (OPTIONAL-28)
	OP19_LOOP_CONTROL	reduce using rule 70 (OPTIONAL-28)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 70 (OPTIONAL-28)
	OP22_LOGICAL_NEG	reduce using rule 70 (OPTIONAL-28)
	SELF	reduce using rule 70 (OPTIONAL-28)
	VARIABLE_SYMBOL	reduce using rule 70 (OPTIONAL-28)
	WORD	reduce using rule 70 (OPTIONAL-28)
	WORD_SCOPED	reduce using rule 70 (OPTIONAL-28)
	WORD_UPPERCASE	reduce using rule 70 (OPTIONAL-28)

	MethodArguments	go to state 417
	OPTIONAL-28	go to state 415

State 406:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression .	(Rule 85)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222
	OP09_BITWISE_SHIFT	shift, and go to state 212
	OP11_COMPARE_LT_GT	shift, and go to state 209
	OP12_COMPARE_EQ_NE	shift, and go to state 211
	OP13_BITWISE_AND	shift, and go to state 208
	OP14_BITWISE_OR_XOR	shift, and go to state 219
	OP15_LOGICAL_AND	shift, and go to state 215
	OP16_LOGICAL_OR	shift, and go to state 216
	OP17_LIST_RANGE	shift, and go to state 223
	OP18_TERNARY	shift, and go to state 218

	')'	reduce using rule 85 (Operator)
	';'	reduce using rule 85 (Operator)
	']'	reduce using rule 85 (Operator)
	'}'	reduce using rule 85 (Operator)
	OP21_LIST_COMMA	reduce using rule 85 (Operator)
	OP23_LOGICAL_AND	reduce using rule 85 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 85 (Operator)

State 407:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' . CodeBlock	(Rule 164)

	LBRACE	shift, and go to state 360

	CodeBlock	go to state 418

State 408:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 106)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE . SubExpression ')' CodeBlock	(Rule 163)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	SubExpression	go to state 419
	ArrayDereference	go to state 116
	WordScoped	go to state 130
	HashDereference	go to state 100
	Operator	go to state 96
	Expression	go to state 141
	ArrayReference	go to state 108
	VariableSymbolOrSelf	go to state 121
	Literal	go to state 86
	Variable	go to state 143
	HashReference	go to state 83

State 409:

	PAREN-41 -> 'else' CodeBlock .	(Rule 156)

	$default	reduce using rule 156 (PAREN-41)

State 410:

	PAREN-39 -> 'elsif' LPAREN . SubExpression ')' CodeBlock	(Rule 153)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'undef'	shift, and go to state 107
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 110
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 145

	Variable	go to state 143
	HashReference	go to state 83
	Expression	go to state 141
	VariableSymbolOrSelf	go to state 121
	ArrayReference	go to state 108
	Literal	go to state 86
	HashDereference	go to state 100
	Operator	go to state 96
	SubExpression	go to state 420
	ArrayDereference	go to state 116
	WordScoped	go to state 130

State 411:

	PAREN-20 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL .	(Rule 51)

	$default	reduce using rule 51 (PAREN-20)

State 412:

	PAREN-26 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 64)

	$default	reduce using rule 64 (PAREN-26)

State 413:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-27 '}' ';' .	(Rule 67)

	$default	reduce using rule 67 (Properties)

State 414:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression .	(Rule 200)

	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222
	OP09_BITWISE_SHIFT	shift, and go to state 212
	OP11_COMPARE_LT_GT	shift, and go to state 209
	OP12_COMPARE_EQ_NE	shift, and go to state 211
	OP13_BITWISE_AND	shift, and go to state 208
	OP14_BITWISE_OR_XOR	shift, and go to state 219
	OP15_LOGICAL_AND	shift, and go to state 215
	OP16_LOGICAL_OR	shift, and go to state 216
	OP17_LIST_RANGE	shift, and go to state 223
	OP18_TERNARY	shift, and go to state 218
	OP23_LOGICAL_AND	shift, and go to state 213
	OP24_LOGICAL_OR_XOR	shift, and go to state 217

	'}'	reduce using rule 200 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 200 (HashEntryTyped)

State 415:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-28 . STAR-29 '}' ';'	(Rule 73)

	$default	reduce using rule 72 (STAR-29)

	STAR-29	go to state 421

State 416:

	MethodArguments -> LPAREN_MY . Type SELF STAR-31 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 77)

	TYPE_INTEGER	shift, and go to state 55
	WORD	shift, and go to state 56
	WORD_SCOPED	shift, and go to state 57

	Type	go to state 422

State 417:

	OPTIONAL-28 -> MethodArguments .	(Rule 69)

	$default	reduce using rule 69 (OPTIONAL-28)

State 418:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock .	(Rule 164)

	$default	reduce using rule 164 (LoopForEach)

State 419:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression . ')' CodeBlock	(Rule 163)

	')'	shift, and go to state 423
	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222
	OP09_BITWISE_SHIFT	shift, and go to state 212
	OP11_COMPARE_LT_GT	shift, and go to state 209
	OP12_COMPARE_EQ_NE	shift, and go to state 211
	OP13_BITWISE_AND	shift, and go to state 208
	OP14_BITWISE_OR_XOR	shift, and go to state 219
	OP15_LOGICAL_AND	shift, and go to state 215
	OP16_LOGICAL_OR	shift, and go to state 216

	OP17_LIST_RANGE	error (nonassociative)

	OP18_TERNARY	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 420:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	PAREN-39 -> 'elsif' LPAREN SubExpression . ')' CodeBlock	(Rule 153)

	')'	shift, and go to state 424
	OP04_MATH_POW	shift, and go to state 221
	OP06_REGEX_MATCH	shift, and go to state 210
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 207
	OP07_STRING_REPEAT	shift, and go to state 220
	OP08_MATH_ADD_SUB	shift, and go to state 214
	OP08_STRING_CAT	shift, and go to state 222
	OP09_BITWISE_SHIFT	shift, and go to state 212
	OP11_COMPARE_LT_GT	shift, and go to state 209
	OP12_COMPARE_EQ_NE	shift, and go to state 211
	OP13_BITWISE_AND	shift, and go to state 208
	OP14_BITWISE_OR_XOR	shift, and go to state 219
	OP15_LOGICAL_AND	shift, and go to state 215
	OP16_LOGICAL_OR	shift, and go to state 216
	OP17_LIST_RANGE	shift, and go to state 223
	OP18_TERNARY	shift, and go to state 218
	OP23_LOGICAL_AND	shift, and go to state 213
	OP24_LOGICAL_OR_XOR	shift, and go to state 217

State 421:

	STAR-29 -> STAR-29 . Operation	(Rule 71)
	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-28 STAR-29 . '}' ';'	(Rule 73)

	'%{'	shift, and go to state 92
	'@{'	shift, and go to state 97
	'if'	shift, and go to state 124
	'undef'	shift, and go to state 107
	'}'	shift, and go to state 426
	LBRACE	shift, and go to state 103
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 125
	LITERAL_STRING	shift, and go to state 106
	LPAREN	shift, and go to state 91
	MY	shift, and go to state 127
	OP01_CLOSE	shift, and go to state 122
	OP01_NAMED	shift, and go to state 114
	OP01_NAMED_VOID	shift, and go to state 95
	OP01_NAMED_VOID_LPAREN	shift, and go to state 117
	OP01_NAMED_VOID_SCOLON	shift, and go to state 105
	OP01_OPEN	shift, and go to state 110
	OP01_PRINT	shift, and go to state 98
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP05_LOGICAL_NEG	shift, and go to state 88
	OP05_MATH_NEG_LPAREN	shift, and go to state 111
	OP10_NAMED_UNARY	shift, and go to state 104
	OP19_LOOP_CONTROL	shift, and go to state 102
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 90
	OP22_LOGICAL_NEG	shift, and go to state 112
	SELF	shift, and go to state 126
	VARIABLE_SYMBOL	shift, and go to state 94
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 128

	'for'	reduce using rule 147 (OPTIONAL-38)
	'foreach'	reduce using rule 147 (OPTIONAL-38)
	'while'	reduce using rule 147 (OPTIONAL-38)

	LoopLabel	go to state 89
	OperatorVoid	go to state 113
	ArrayDereference	go to state 116
	HashReference	go to state 83
	Statement	go to state 84
	Operation	go to state 425
	Literal	go to state 86
	ArrayReference	go to state 108
	Expression	go to state 109
	Operator	go to state 96
	HashDereference	go to state 100
	VariableModification	go to state 99
	PAREN-37	go to state 129
	SubExpression	go to state 131
	WordScoped	go to state 130
	VariableDeclaration	go to state 118
	OPTIONAL-38	go to state 120
	Variable	go to state 119
	VariableSymbolOrSelf	go to state 121
	Conditional	go to state 93

State 422:

	MethodArguments -> LPAREN_MY Type . SELF STAR-31 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 77)

	SELF	shift, and go to state 427

State 423:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' . CodeBlock	(Rule 163)

	LBRACE	shift, and go to state 360

	CodeBlock	go to state 428

State 424:

	PAREN-39 -> 'elsif' LPAREN SubExpression ')' . CodeBlock	(Rule 153)

	LBRACE	shift, and go to state 360

	CodeBlock	go to state 429

State 425:

	STAR-29 -> STAR-29 Operation .	(Rule 71)

	$default	reduce using rule 71 (STAR-29)

State 426:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-28 STAR-29 '}' . ';'	(Rule 73)

	';'	shift, and go to state 430

State 427:

	MethodArguments -> LPAREN_MY Type SELF . STAR-31 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 77)

	$default	reduce using rule 76 (STAR-31)

	STAR-31	go to state 431

State 428:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock .	(Rule 163)

	$default	reduce using rule 163 (LoopFor)

State 429:

	PAREN-39 -> 'elsif' LPAREN SubExpression ')' CodeBlock .	(Rule 153)

	$default	reduce using rule 153 (PAREN-39)

State 430:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-28 STAR-29 '}' ';' .	(Rule 73)

	$default	reduce using rule 73 (Method)

State 431:

	STAR-31 -> STAR-31 . PAREN-30	(Rule 75)
	MethodArguments -> LPAREN_MY Type SELF STAR-31 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 77)

	')'	shift, and go to state 434
	OP21_LIST_COMMA	shift, and go to state 433

	PAREN-30	go to state 432

State 432:

	STAR-31 -> STAR-31 PAREN-30 .	(Rule 75)

	$default	reduce using rule 75 (STAR-31)

State 433:

	PAREN-30 -> OP21_LIST_COMMA . MY Type VARIABLE_SYMBOL	(Rule 74)

	MY	shift, and go to state 435

State 434:

	MethodArguments -> LPAREN_MY Type SELF STAR-31 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 77)

	OP19_VARIABLE_ASSIGN	shift, and go to state 436

State 435:

	PAREN-30 -> OP21_LIST_COMMA MY . Type VARIABLE_SYMBOL	(Rule 74)

	TYPE_INTEGER	shift, and go to state 55
	WORD	shift, and go to state 56
	WORD_SCOPED	shift, and go to state 57

	Type	go to state 437

State 436:

	MethodArguments -> LPAREN_MY Type SELF STAR-31 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 77)

	'@_;'	shift, and go to state 438

State 437:

	PAREN-30 -> OP21_LIST_COMMA MY Type . VARIABLE_SYMBOL	(Rule 74)

	VARIABLE_SYMBOL	shift, and go to state 439

State 438:

	MethodArguments -> LPAREN_MY Type SELF STAR-31 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 77)

	$default	reduce using rule 77 (MethodArguments)

State 439:

	PAREN-30 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL .	(Rule 74)

	$default	reduce using rule 74 (PAREN-30)


Summary:
--------
Number of rules         : 228
Number of terminals     : 92
Number of non-terminals : 104
Number of states        : 440
