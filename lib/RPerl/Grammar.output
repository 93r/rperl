Conflicts:
----------
Conflict in state 138 between rule 94 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 138 between rule 94 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 138 between rule 94 and token OP18_TERNARY resolved as reduce.
Conflict in state 138 between rule 94 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 138 between rule 94 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 138 between rule 94 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 138 between rule 94 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 138 between rule 94 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 138 between rule 94 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 138 between rule 94 and token OP04_MATH_POW resolved as shift.
Conflict in state 138 between rule 94 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 138 between rule 94 and token OP08_STRING_CAT resolved as shift.
Conflict in state 138 between rule 94 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 138 between rule 94 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 138 between rule 94 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 138 between rule 94 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 138 between rule 94 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 160 between rule 86 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 160 between rule 86 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 160 between rule 86 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 160 between rule 86 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 160 between rule 86 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 160 between rule 86 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 160 between rule 86 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 160 between rule 86 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 160 between rule 86 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 160 between rule 86 and token OP04_MATH_POW resolved as shift.
Conflict in state 160 between rule 86 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 160 between rule 86 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 160 between rule 86 and token OP18_TERNARY resolved as reduce.
Conflict in state 160 between rule 86 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 160 between rule 86 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 160 between rule 86 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 160 between rule 86 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 180 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 180 between rule 104 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 180 between rule 104 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 180 between rule 104 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 180 between rule 104 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 180 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 180 between rule 104 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 180 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 180 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 180 between rule 104 and token OP08_STRING_CAT resolved as shift.
Conflict in state 180 between rule 104 and token OP18_TERNARY resolved as shift.
Conflict in state 180 between rule 104 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 180 between rule 104 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 180 between rule 104 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 180 between rule 104 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 180 between rule 104 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 180 between rule 104 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 195 between rule 79 and token OP18_TERNARY resolved as reduce.
Conflict in state 195 between rule 79 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 195 between rule 79 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 195 between rule 79 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 195 between rule 79 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 195 between rule 79 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 195 between rule 79 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 195 between rule 79 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 195 between rule 79 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 195 between rule 79 and token OP04_MATH_POW resolved as reduce.
Conflict in state 195 between rule 79 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 195 between rule 79 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 195 between rule 79 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 195 between rule 79 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 195 between rule 79 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 195 between rule 79 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 195 between rule 79 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 224 between rule 79 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 224 between rule 79 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 224 between rule 79 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 224 between rule 79 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 224 between rule 79 and token OP04_MATH_POW resolved as reduce.
Conflict in state 224 between rule 79 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 224 between rule 79 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 224 between rule 79 and token OP18_TERNARY resolved as reduce.
Conflict in state 224 between rule 79 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 224 between rule 79 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 224 between rule 79 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 224 between rule 79 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 224 between rule 79 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 224 between rule 79 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 224 between rule 79 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 224 between rule 79 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 224 between rule 79 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 242 between rule 90 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 242 between rule 90 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 242 between rule 90 and token OP04_MATH_POW resolved as shift.
Conflict in state 242 between rule 90 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 242 between rule 90 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 242 between rule 90 and token OP18_TERNARY resolved as reduce.
Conflict in state 242 between rule 90 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 242 between rule 90 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 242 between rule 90 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 242 between rule 90 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 242 between rule 90 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 242 between rule 90 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 242 between rule 90 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 242 between rule 90 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 242 between rule 90 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 242 between rule 90 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 242 between rule 90 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 243 between rule 92 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 243 between rule 92 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 243 between rule 92 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 243 between rule 92 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 243 between rule 92 and token OP04_MATH_POW resolved as shift.
Conflict in state 243 between rule 92 and token OP18_TERNARY resolved as reduce.
Conflict in state 243 between rule 92 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 243 between rule 92 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 243 between rule 92 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 243 between rule 92 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 243 between rule 92 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 243 between rule 92 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 243 between rule 92 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 243 between rule 92 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 243 between rule 92 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 243 between rule 92 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 243 between rule 92 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 244 between rule 85 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 244 between rule 85 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 244 between rule 85 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 244 between rule 85 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 244 between rule 85 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 244 between rule 85 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 244 between rule 85 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 244 between rule 85 and token OP18_TERNARY resolved as reduce.
Conflict in state 244 between rule 85 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 244 between rule 85 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 244 between rule 85 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 244 between rule 85 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 244 between rule 85 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 244 between rule 85 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 244 between rule 85 and token OP04_MATH_POW resolved as shift.
Conflict in state 244 between rule 85 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 244 between rule 85 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 245 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 245 between rule 106 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 245 between rule 106 and token OP18_TERNARY resolved as shift.
Conflict in state 245 between rule 106 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 245 between rule 106 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 245 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 245 between rule 106 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 245 between rule 106 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 245 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 245 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 245 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 245 between rule 106 and token OP08_STRING_CAT resolved as shift.
Conflict in state 245 between rule 106 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 245 between rule 106 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 245 between rule 106 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 245 between rule 106 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 245 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 246 between rule 102 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 246 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 246 between rule 102 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 246 between rule 102 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 246 between rule 102 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 246 between rule 102 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 246 between rule 102 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 246 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 246 between rule 102 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 246 between rule 102 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 246 between rule 102 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 246 between rule 102 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 246 between rule 102 and token OP17_LIST_RANGE resolved as error.
Conflict in state 246 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 246 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 246 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 246 between rule 102 and token OP08_STRING_CAT resolved as shift.
Conflict in state 247 between rule 91 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 247 between rule 91 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 247 between rule 91 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 247 between rule 91 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 247 between rule 91 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 247 between rule 91 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 247 between rule 91 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 247 between rule 91 and token OP04_MATH_POW resolved as shift.
Conflict in state 247 between rule 91 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 247 between rule 91 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 247 between rule 91 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 247 between rule 91 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 247 between rule 91 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 247 between rule 91 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 247 between rule 91 and token OP18_TERNARY resolved as reduce.
Conflict in state 247 between rule 91 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 247 between rule 91 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 252 between rule 101 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 252 between rule 101 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 252 between rule 101 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 252 between rule 101 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 252 between rule 101 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 252 between rule 101 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 252 between rule 101 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 252 between rule 101 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 252 between rule 101 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 252 between rule 101 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 252 between rule 101 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 252 between rule 101 and token OP18_TERNARY resolved as reduce.
Conflict in state 252 between rule 101 and token OP04_MATH_POW resolved as shift.
Conflict in state 252 between rule 101 and token OP08_STRING_CAT resolved as shift.
Conflict in state 252 between rule 101 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 252 between rule 101 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 252 between rule 101 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 253 between rule 96 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 253 between rule 96 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 253 between rule 96 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 253 between rule 96 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 253 between rule 96 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 253 between rule 96 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 253 between rule 96 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 253 between rule 96 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 253 between rule 96 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 253 between rule 96 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 253 between rule 96 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 253 between rule 96 and token OP18_TERNARY resolved as reduce.
Conflict in state 253 between rule 96 and token OP04_MATH_POW resolved as shift.
Conflict in state 253 between rule 96 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 253 between rule 96 and token OP08_STRING_CAT resolved as shift.
Conflict in state 253 between rule 96 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 253 between rule 96 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 254 between rule 97 and token OP12_COMPARE_EQ_NE resolved as error.
Conflict in state 254 between rule 97 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 254 between rule 97 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 254 between rule 97 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 254 between rule 97 and token OP18_TERNARY resolved as reduce.
Conflict in state 254 between rule 97 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 254 between rule 97 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 254 between rule 97 and token OP04_MATH_POW resolved as shift.
Conflict in state 254 between rule 97 and token OP08_STRING_CAT resolved as shift.
Conflict in state 254 between rule 97 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 254 between rule 97 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 254 between rule 97 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 254 between rule 97 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 254 between rule 97 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 254 between rule 97 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 254 between rule 97 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 254 between rule 97 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 255 between rule 99 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 255 between rule 99 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 255 between rule 99 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 255 between rule 99 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 255 between rule 99 and token OP18_TERNARY resolved as reduce.
Conflict in state 255 between rule 99 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 255 between rule 99 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 255 between rule 99 and token OP04_MATH_POW resolved as shift.
Conflict in state 255 between rule 99 and token OP08_STRING_CAT resolved as shift.
Conflict in state 255 between rule 99 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 255 between rule 99 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 255 between rule 99 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 255 between rule 99 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 255 between rule 99 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 255 between rule 99 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 255 between rule 99 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 255 between rule 99 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 256 between rule 98 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 256 between rule 98 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 256 between rule 98 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 256 between rule 98 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 256 between rule 98 and token OP18_TERNARY resolved as reduce.
Conflict in state 256 between rule 98 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 256 between rule 98 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 256 between rule 98 and token OP08_STRING_CAT resolved as shift.
Conflict in state 256 between rule 98 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 256 between rule 98 and token OP04_MATH_POW resolved as shift.
Conflict in state 256 between rule 98 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 256 between rule 98 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 256 between rule 98 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 256 between rule 98 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 256 between rule 98 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 256 between rule 98 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 256 between rule 98 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 257 between rule 100 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 257 between rule 100 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 257 between rule 100 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 257 between rule 100 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 257 between rule 100 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 257 between rule 100 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 257 between rule 100 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 257 between rule 100 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 257 between rule 100 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 257 between rule 100 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 257 between rule 100 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 257 between rule 100 and token OP18_TERNARY resolved as reduce.
Conflict in state 257 between rule 100 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 257 between rule 100 and token OP08_STRING_CAT resolved as shift.
Conflict in state 257 between rule 100 and token OP04_MATH_POW resolved as shift.
Conflict in state 257 between rule 100 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 257 between rule 100 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 258 between rule 93 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 258 between rule 93 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 258 between rule 93 and token OP18_TERNARY resolved as reduce.
Conflict in state 258 between rule 93 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 258 between rule 93 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 258 between rule 93 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 258 between rule 93 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 258 between rule 93 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 258 between rule 93 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 258 between rule 93 and token OP08_STRING_CAT resolved as shift.
Conflict in state 258 between rule 93 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 258 between rule 93 and token OP04_MATH_POW resolved as shift.
Conflict in state 258 between rule 93 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 258 between rule 93 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 258 between rule 93 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 258 between rule 93 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 258 between rule 93 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 259 between rule 89 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 259 between rule 89 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 259 between rule 89 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 259 between rule 89 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 259 between rule 89 and token OP18_TERNARY resolved as reduce.
Conflict in state 259 between rule 89 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 259 between rule 89 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 259 between rule 89 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 259 between rule 89 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 259 between rule 89 and token OP04_MATH_POW resolved as shift.
Conflict in state 259 between rule 89 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 259 between rule 89 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 259 between rule 89 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 259 between rule 89 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 259 between rule 89 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 259 between rule 89 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 259 between rule 89 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 260 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 260 between rule 105 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 260 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 260 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 260 between rule 105 and token OP08_STRING_CAT resolved as shift.
Conflict in state 260 between rule 105 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 260 between rule 105 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 260 between rule 105 and token OP18_TERNARY resolved as shift.
Conflict in state 260 between rule 105 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 260 between rule 105 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 260 between rule 105 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 260 between rule 105 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 260 between rule 105 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 260 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 260 between rule 105 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 260 between rule 105 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 260 between rule 105 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 394 between rule 81 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 394 between rule 81 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 394 between rule 81 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 394 between rule 81 and token OP08_STRING_CAT resolved as shift.
Conflict in state 394 between rule 81 and token OP04_MATH_POW resolved as shift.
Conflict in state 394 between rule 81 and token OP18_TERNARY resolved as shift.
Conflict in state 394 between rule 81 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 394 between rule 81 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 394 between rule 81 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 394 between rule 81 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 394 between rule 81 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 394 between rule 81 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 394 between rule 81 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 394 between rule 81 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 394 between rule 81 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 394 between rule 81 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 394 between rule 81 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 406 between rule 102 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 406 between rule 102 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 406 between rule 102 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 406 between rule 102 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 406 between rule 102 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 406 between rule 102 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 406 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 406 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 406 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 406 between rule 102 and token OP08_STRING_CAT resolved as shift.
Conflict in state 406 between rule 102 and token OP17_LIST_RANGE resolved as error.
Conflict in state 406 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 406 between rule 102 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 406 between rule 102 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 406 between rule 102 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 406 between rule 102 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 406 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> Critic
20:	OPTIONAL-9 -> /* empty */
21:	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header
22:	Module -> Package
23:	Module -> Class
24:	STAR-10 -> STAR-10 Critic
25:	STAR-10 -> /* empty */
26:	STAR-11 -> STAR-11 Include
27:	STAR-11 -> /* empty */
28:	STAR-12 -> STAR-12 Constant
29:	STAR-12 -> /* empty */
30:	PLUS-13 -> PLUS-13 Subroutine
31:	PLUS-13 -> Subroutine
32:	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'
33:	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN
34:	PLUS-14 -> PLUS-14 WORD
35:	PLUS-14 -> WORD
36:	Critic -> '## no critic qw(' PLUS-14 ')'
37:	PLUS-15 -> PLUS-15 WORD
38:	PLUS-15 -> WORD
39:	Include -> 'use' WordScoped ';'
40:	Include -> 'use' WordScoped OP01_QW PLUS-15 ')' ';'
41:	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'
42:	OPTIONAL-16 -> SubroutineArguments
43:	OPTIONAL-16 -> /* empty */
44:	STAR-17 -> STAR-17 Operation
45:	STAR-17 -> /* empty */
46:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 STAR-17 '}' ';'
47:	PAREN-18 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL
48:	STAR-19 -> STAR-19 PAREN-18
49:	STAR-19 -> /* empty */
50:	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'
51:	STAR-20 -> STAR-20 Critic
52:	STAR-20 -> /* empty */
53:	STAR-21 -> STAR-21 Include
54:	STAR-21 -> /* empty */
55:	STAR-22 -> STAR-22 Constant
56:	STAR-22 -> /* empty */
57:	STAR-23 -> STAR-23 MethodOrSubroutine
58:	STAR-23 -> /* empty */
59:	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'
60:	PAREN-24 -> OP21_LIST_COMMA HashEntryTyped
61:	STAR-25 -> STAR-25 PAREN-24
62:	STAR-25 -> /* empty */
63:	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 '}' ';'
64:	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';'
65:	OPTIONAL-26 -> MethodArguments
66:	OPTIONAL-26 -> /* empty */
67:	STAR-27 -> STAR-27 Operation
68:	STAR-27 -> /* empty */
69:	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 STAR-27 '}' ';'
70:	PAREN-28 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL
71:	STAR-29 -> STAR-29 PAREN-28
72:	STAR-29 -> /* empty */
73:	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 ')' OP19_VARIABLE_ASSIGN '@_;'
74:	MethodOrSubroutine -> Method
75:	MethodOrSubroutine -> Subroutine
76:	Operation -> Expression ';'
77:	Operation -> Statement
78:	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')'
79:	Operator -> OP01_NAMED SubExpression
80:	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'
81:	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression
82:	Operator -> OP01_CLOSE FHREF_SYMBOL
83:	Operator -> OP03_MATH_INC_DEC Variable
84:	Operator -> Variable OP03_MATH_INC_DEC
85:	Operator -> SubExpression OP04_MATH_POW SubExpression
86:	Operator -> OP05_LOGICAL_NEG SubExpression
87:	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')'
88:	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN
89:	Operator -> SubExpression OP07_STRING_REPEAT SubExpression
90:	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression
91:	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression
92:	Operator -> SubExpression OP08_STRING_CAT SubExpression
93:	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression
94:	Operator -> OP10_NAMED_UNARY SubExpression
95:	Operator -> OP10_NAMED_UNARY
96:	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression
97:	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression
98:	Operator -> SubExpression OP13_BITWISE_AND SubExpression
99:	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression
100:	Operator -> SubExpression OP15_LOGICAL_AND SubExpression
101:	Operator -> SubExpression OP16_LOGICAL_OR SubExpression
102:	Operator -> SubExpression OP17_LIST_RANGE SubExpression
103:	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral
104:	Operator -> OP22_LOGICAL_NEG SubExpression
105:	Operator -> SubExpression OP23_LOGICAL_AND SubExpression
106:	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression
107:	PAREN-30 -> STDOUT_STDERR
108:	OPTIONAL-31 -> PAREN-30
109:	OPTIONAL-31 -> /* empty */
110:	OPTIONAL-32 -> ListElements
111:	OPTIONAL-32 -> /* empty */
112:	OperatorVoid -> OP01_PRINT OPTIONAL-31 ListElements ';'
113:	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements ';'
114:	OperatorVoid -> OP01_NAMED_VOID_SCOLON
115:	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-32 ')' ';'
116:	OperatorVoid -> OP01_NAMED_VOID ListElements ';'
117:	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';'
118:	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON
119:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
120:	OPTIONAL-33 -> ListElements
121:	OPTIONAL-33 -> /* empty */
122:	OPTIONAL-34 -> ListElements
123:	OPTIONAL-34 -> /* empty */
124:	Expression -> Operator
125:	Expression -> WordScoped LPAREN OPTIONAL-33 ')'
126:	Expression -> WORD_UPPERCASE LPAREN ')'
127:	Expression -> WordScoped SCOPE WORD_UPPERCASE LPAREN ')'
128:	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-34 ')'
129:	Expression -> WordScoped OP02_METHOD_THINARROW_NEW ')'
130:	SubExpression -> Expression
131:	SubExpression -> 'undef'
132:	SubExpression -> Literal
133:	SubExpression -> Variable
134:	SubExpression -> ArrayReference
135:	SubExpression -> ArrayDereference
136:	SubExpression -> HashReference
137:	SubExpression -> HashDereference
138:	SubExpression -> LPAREN SubExpression ')'
139:	SubExpressionOrStdin -> SubExpression
140:	SubExpressionOrStdin -> STDIN
141:	PAREN-35 -> LoopLabel COLON
142:	OPTIONAL-36 -> PAREN-35
143:	OPTIONAL-36 -> /* empty */
144:	Statement -> Conditional
145:	Statement -> OPTIONAL-36 Loop
146:	Statement -> OperatorVoid
147:	Statement -> VariableDeclaration
148:	Statement -> VariableModification
149:	PAREN-37 -> 'elsif' LPAREN SubExpression ')' CodeBlock
150:	STAR-38 -> STAR-38 PAREN-37
151:	STAR-38 -> /* empty */
152:	PAREN-39 -> 'else' CodeBlock
153:	OPTIONAL-40 -> PAREN-39
154:	OPTIONAL-40 -> /* empty */
155:	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-38 OPTIONAL-40
156:	Loop -> LoopFor
157:	Loop -> LoopForEach
158:	Loop -> LoopWhile
159:	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock
160:	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock
161:	LoopWhile -> 'while' LPAREN SubExpression ')' CodeBlock
162:	PLUS-41 -> PLUS-41 Operation
163:	PLUS-41 -> Operation
164:	CodeBlock -> LBRACE PLUS-41 '}'
165:	STAR-42 -> STAR-42 VariableRetrieval
166:	STAR-42 -> /* empty */
167:	Variable -> VARIABLE_SYMBOL STAR-42
168:	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']'
169:	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}'
170:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
171:	VariableDeclaration -> MY Type VARIABLE_SYMBOL ';'
172:	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
173:	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL ';'
174:	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
175:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';'
176:	PAREN-43 -> OP21_LIST_COMMA ListElement
177:	STAR-44 -> STAR-44 PAREN-43
178:	STAR-44 -> /* empty */
179:	ListElements -> ListElement STAR-44
180:	PLUS-45 -> PLUS-45 WORD
181:	PLUS-45 -> WORD
182:	ListElement -> SubExpression
183:	ListElement -> TypeInner SubExpression
184:	ListElement -> OP01_QW PLUS-45 ')'
185:	OPTIONAL-46 -> ListElements
186:	OPTIONAL-46 -> /* empty */
187:	ArrayReference -> LBRACKET OPTIONAL-46 ']'
188:	OPTIONAL-47 -> TypeInner
189:	OPTIONAL-47 -> /* empty */
190:	ArrayDereference -> '@{' Variable '}'
191:	ArrayDereference -> '@{' OPTIONAL-47 ArrayReference '}'
192:	OPTIONAL-48 -> TypeInner
193:	OPTIONAL-48 -> /* empty */
194:	HashEntry -> VariableOrLiteralOrWord OP20_HASH_FATARROW OPTIONAL-48 SubExpression
195:	HashEntry -> HashDereference
196:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression
197:	HashEntryTyped -> HashDereference
198:	PAREN-49 -> OP21_LIST_COMMA HashEntry
199:	STAR-50 -> STAR-50 PAREN-49
200:	STAR-50 -> /* empty */
201:	HashReference -> LBRACE HashEntry STAR-50 '}'
202:	HashReference -> LBRACE '}'
203:	OPTIONAL-51 -> TypeInner
204:	OPTIONAL-51 -> /* empty */
205:	HashDereference -> '%{' Variable '}'
206:	HashDereference -> '%{' OPTIONAL-51 HashReference '}'
207:	WordScoped -> WORD
208:	WordScoped -> WORD_SCOPED
209:	LoopLabel -> WORD_UPPERCASE
210:	Type -> WORD
211:	Type -> TYPE_INTEGER
212:	TypeInner -> MY Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
213:	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN
214:	VariableOrLiteral -> Variable
215:	VariableOrLiteral -> Literal
216:	VariableOrLiteralOrWord -> Variable
217:	VariableOrLiteralOrWord -> Literal
218:	VariableOrLiteralOrWord -> WORD
219:	Literal -> LITERAL_NUMBER
220:	Literal -> LITERAL_STRING

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'## no critic qw('	shift, and go to state 4
	SHEBANG	shift, and go to state 2

	'package'	reduce using rule 20 (OPTIONAL-9)

	Critic	go to state 1
	Program	go to state 7
	CompileUnit	go to state 6
	OPTIONAL-9	go to state 3
	PAREN-1	go to state 9
	PLUS-2	go to state 8
	ModuleHeader	go to state 5

State 1:

	OPTIONAL-9 -> Critic .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 2:

	Program -> SHEBANG . OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 4

	'use strict;'	reduce using rule 7 (OPTIONAL-3)

	Critic	go to state 10
	OPTIONAL-3	go to state 11

State 3:

	ModuleHeader -> OPTIONAL-9 . 'package' WordScoped ';' Header	(Rule 21)

	'package'	shift, and go to state 12

State 4:

	Critic -> '## no critic qw(' . PLUS-14 ')'	(Rule 36)

	WORD	shift, and go to state 14

	PLUS-14	go to state 13

State 5:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent qw('	shift, and go to state 18

	'## no critic qw('	reduce using rule 25 (STAR-10)
	'our'	reduce using rule 25 (STAR-10)
	'use constant'	reduce using rule 25 (STAR-10)
	'use'	reduce using rule 25 (STAR-10)

	Package	go to state 16
	Module	go to state 19
	STAR-10	go to state 15
	Class	go to state 17

State 6:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 20

State 7:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 8:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	'## no critic qw('	shift, and go to state 4

	$end	reduce using rule 5 (CompileUnit)
	'package'	reduce using rule 20 (OPTIONAL-9)

	ModuleHeader	go to state 5
	OPTIONAL-9	go to state 3
	PAREN-1	go to state 21
	Critic	go to state 1

State 9:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 10:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 11:

	Program -> SHEBANG OPTIONAL-3 . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 22

	Header	go to state 23

State 12:

	ModuleHeader -> OPTIONAL-9 'package' . WordScoped ';' Header	(Rule 21)

	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 25

State 13:

	PLUS-14 -> PLUS-14 . WORD	(Rule 34)
	Critic -> '## no critic qw(' PLUS-14 . ')'	(Rule 36)

	')'	shift, and go to state 27
	WORD	shift, and go to state 28

State 14:

	PLUS-14 -> WORD .	(Rule 35)

	$default	reduce using rule 35 (PLUS-14)

State 15:

	STAR-10 -> STAR-10 . Critic	(Rule 24)
	Package -> STAR-10 . STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'## no critic qw('	shift, and go to state 4

	'our'	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	'use'	reduce using rule 27 (STAR-11)

	STAR-11	go to state 30
	Critic	go to state 29

State 16:

	Module -> Package .	(Rule 22)

	$default	reduce using rule 22 (Module)

State 17:

	Module -> Class .	(Rule 23)

	$default	reduce using rule 23 (Module)

State 18:

	Class -> 'use parent qw(' . WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 31

State 19:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 20:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 21:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 22:

	Header -> 'use strict;' . 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use warnings;'	shift, and go to state 32

State 23:

	Program -> SHEBANG OPTIONAL-3 Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 33

State 24:

	WordScoped -> WORD_SCOPED .	(Rule 208)

	$default	reduce using rule 208 (WordScoped)

State 25:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped . ';' Header	(Rule 21)

	';'	shift, and go to state 34

State 26:

	WordScoped -> WORD .	(Rule 207)

	$default	reduce using rule 207 (WordScoped)

State 27:

	Critic -> '## no critic qw(' PLUS-14 ')' .	(Rule 36)

	$default	reduce using rule 36 (Critic)

State 28:

	PLUS-14 -> PLUS-14 WORD .	(Rule 34)

	$default	reduce using rule 34 (PLUS-14)

State 29:

	STAR-10 -> STAR-10 Critic .	(Rule 24)

	$default	reduce using rule 24 (STAR-10)

State 30:

	STAR-11 -> STAR-11 . Include	(Rule 26)
	Package -> STAR-10 STAR-11 . STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'use'	shift, and go to state 35

	'our'	reduce using rule 29 (STAR-12)
	'use constant'	reduce using rule 29 (STAR-12)

	Include	go to state 37
	STAR-12	go to state 36

State 31:

	Class -> 'use parent qw(' WordScoped . ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	')'	shift, and go to state 38

State 32:

	Header -> 'use strict;' 'use warnings;' . 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use RPerl;'	shift, and go to state 39

State 33:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 4

	'%{'	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'for'	reduce using rule 11 (STAR-5)
	'foreach'	reduce using rule 11 (STAR-5)
	'if'	reduce using rule 11 (STAR-5)
	'our'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'use'	reduce using rule 11 (STAR-5)
	'while'	reduce using rule 11 (STAR-5)
	LBRACE	reduce using rule 11 (STAR-5)
	LBRACKET	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	LPAREN	reduce using rule 11 (STAR-5)
	MY	reduce using rule 11 (STAR-5)
	OP01_CLOSE	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_LPAREN	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_SCOLON	reduce using rule 11 (STAR-5)
	OP01_OPEN	reduce using rule 11 (STAR-5)
	OP01_PRINT	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG_LPAREN	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)
	WORD_UPPERCASE	reduce using rule 11 (STAR-5)

	STAR-5	go to state 40
	Critic	go to state 41

State 34:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' . Header	(Rule 21)

	'use strict;'	shift, and go to state 22

	Header	go to state 42

State 35:

	Include -> 'use' . WordScoped ';'	(Rule 39)
	Include -> 'use' . WordScoped OP01_QW PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 43

State 36:

	STAR-12 -> STAR-12 . Constant	(Rule 28)
	Package -> STAR-10 STAR-11 STAR-12 . PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 48
	'use constant'	shift, and go to state 46

	Subroutine	go to state 47
	PLUS-13	go to state 44
	Constant	go to state 45

State 37:

	STAR-11 -> STAR-11 Include .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 38:

	Class -> 'use parent qw(' WordScoped ')' . ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	';'	shift, and go to state 49

State 39:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' . 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'our'	shift, and go to state 50

State 40:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use'	shift, and go to state 35

	'%{'	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'for'	reduce using rule 13 (STAR-6)
	'foreach'	reduce using rule 13 (STAR-6)
	'if'	reduce using rule 13 (STAR-6)
	'our'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while'	reduce using rule 13 (STAR-6)
	LBRACE	reduce using rule 13 (STAR-6)
	LBRACKET	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	LPAREN	reduce using rule 13 (STAR-6)
	MY	reduce using rule 13 (STAR-6)
	OP01_CLOSE	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_LPAREN	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_SCOLON	reduce using rule 13 (STAR-6)
	OP01_OPEN	reduce using rule 13 (STAR-6)
	OP01_PRINT	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG_LPAREN	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)
	WORD_UPPERCASE	reduce using rule 13 (STAR-6)

	STAR-6	go to state 52
	Include	go to state 51

State 41:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 42:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header .	(Rule 21)

	$default	reduce using rule 21 (ModuleHeader)

State 43:

	Include -> 'use' WordScoped . ';'	(Rule 39)
	Include -> 'use' WordScoped . OP01_QW PLUS-15 ')' ';'	(Rule 40)

	';'	shift, and go to state 54
	OP01_QW	shift, and go to state 53

State 44:

	PLUS-13 -> PLUS-13 . Subroutine	(Rule 30)
	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 . LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 48
	LITERAL_NUMBER	shift, and go to state 56

	Subroutine	go to state 55

State 45:

	STAR-12 -> STAR-12 Constant .	(Rule 28)

	$default	reduce using rule 28 (STAR-12)

State 46:

	Constant -> 'use constant' . WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 41)

	WORD_UPPERCASE	shift, and go to state 57

State 47:

	PLUS-13 -> Subroutine .	(Rule 31)

	$default	reduce using rule 31 (PLUS-13)

State 48:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 STAR-17 '}' ';'	(Rule 46)

	TYPE_INTEGER	shift, and go to state 60
	WORD	shift, and go to state 58

	Type	go to state 59

State 49:

	Class -> 'use parent qw(' WordScoped ')' ';' . Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	'use'	shift, and go to state 35

	Include	go to state 61

State 50:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' . VERSION_NUMBER_ASSIGN	(Rule 33)

	VERSION_NUMBER_ASSIGN	shift, and go to state 62

State 51:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 52:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 46

	'%{'	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'for'	reduce using rule 15 (STAR-7)
	'foreach'	reduce using rule 15 (STAR-7)
	'if'	reduce using rule 15 (STAR-7)
	'our'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while'	reduce using rule 15 (STAR-7)
	LBRACE	reduce using rule 15 (STAR-7)
	LBRACKET	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	LPAREN	reduce using rule 15 (STAR-7)
	MY	reduce using rule 15 (STAR-7)
	OP01_CLOSE	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_LPAREN	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_SCOLON	reduce using rule 15 (STAR-7)
	OP01_OPEN	reduce using rule 15 (STAR-7)
	OP01_PRINT	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG_LPAREN	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)
	WORD_UPPERCASE	reduce using rule 15 (STAR-7)

	STAR-7	go to state 63
	Constant	go to state 64

State 53:

	Include -> 'use' WordScoped OP01_QW . PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 65

	PLUS-15	go to state 66

State 54:

	Include -> 'use' WordScoped ';' .	(Rule 39)

	$default	reduce using rule 39 (Include)

State 55:

	PLUS-13 -> PLUS-13 Subroutine .	(Rule 30)

	$default	reduce using rule 30 (PLUS-13)

State 56:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER . ';'	(Rule 32)

	';'	shift, and go to state 67

State 57:

	Constant -> 'use constant' WORD_UPPERCASE . OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 41)

	OP20_HASH_FATARROW	shift, and go to state 68

State 58:

	Type -> WORD .	(Rule 210)

	$default	reduce using rule 210 (Type)

State 59:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-16 STAR-17 '}' ';'	(Rule 46)

	VARIABLE_SYMBOL	shift, and go to state 69

State 60:

	Type -> TYPE_INTEGER .	(Rule 211)

	$default	reduce using rule 211 (Type)

State 61:

	Class -> 'use parent qw(' WordScoped ')' ';' Include . STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	$default	reduce using rule 52 (STAR-20)

	STAR-20	go to state 70

State 62:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN .	(Rule 33)

	$default	reduce using rule 33 (Header)

State 63:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'if'	shift, and go to state 88
	'our'	shift, and go to state 48
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	MY	shift, and go to state 109
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 111
	OP01_NAMED_VOID	shift, and go to state 89
	OP01_NAMED_VOID_LPAREN	shift, and go to state 75
	OP01_NAMED_VOID_SCOLON	shift, and go to state 113
	OP01_OPEN	shift, and go to state 97
	OP01_PRINT	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP19_LOOP_CONTROL	shift, and go to state 73
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 83
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 108

	'for'	reduce using rule 143 (OPTIONAL-36)
	'foreach'	reduce using rule 143 (OPTIONAL-36)
	'while'	reduce using rule 143 (OPTIONAL-36)

	LoopLabel	go to state 84
	HashDereference	go to state 86
	Operation	go to state 76
	PLUS-8	go to state 106
	Literal	go to state 81
	Expression	go to state 80
	Variable	go to state 82
	Subroutine	go to state 114
	OPTIONAL-36	go to state 115
	OperatorVoid	go to state 87
	WordScoped	go to state 92
	VariableModification	go to state 93
	HashReference	go to state 72
	ArrayReference	go to state 90
	Operator	go to state 71
	Statement	go to state 100
	SubExpression	go to state 101
	Conditional	go to state 103
	PAREN-35	go to state 104
	VariableDeclaration	go to state 96
	ArrayDereference	go to state 74

State 64:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 65:

	PLUS-15 -> WORD .	(Rule 38)

	$default	reduce using rule 38 (PLUS-15)

State 66:

	PLUS-15 -> PLUS-15 . WORD	(Rule 37)
	Include -> 'use' WordScoped OP01_QW PLUS-15 . ')' ';'	(Rule 40)

	')'	shift, and go to state 119
	WORD	shift, and go to state 118

State 67:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';' .	(Rule 32)

	$default	reduce using rule 32 (Package)

State 68:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW . TypeInnerConstant Literal ';'	(Rule 41)

	MY	shift, and go to state 121

	TypeInnerConstant	go to state 120

State 69:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-16 STAR-17 '}' ';'	(Rule 46)

	'= sub {'	shift, and go to state 122

State 70:

	STAR-20 -> STAR-20 . Critic	(Rule 51)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 . STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	'## no critic qw('	shift, and go to state 4

	'our hashref $properties'	reduce using rule 54 (STAR-21)
	'use constant'	reduce using rule 54 (STAR-21)
	'use'	reduce using rule 54 (STAR-21)

	STAR-21	go to state 123
	Critic	go to state 124

State 71:

	Expression -> Operator .	(Rule 124)

	$default	reduce using rule 124 (Expression)

State 72:

	SubExpression -> HashReference .	(Rule 136)

	$default	reduce using rule 136 (SubExpression)

State 73:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 119)

	WORD_UPPERCASE	shift, and go to state 126

	LoopLabel	go to state 125

State 74:

	SubExpression -> ArrayDereference .	(Rule 135)

	$default	reduce using rule 135 (SubExpression)

State 75:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN . OPTIONAL-32 ')' ';'	(Rule 115)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	MY	shift, and go to state 135
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP01_QW	shift, and go to state 130
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	')'	reduce using rule 111 (OPTIONAL-32)

	OPTIONAL-32	go to state 129
	Operator	go to state 71
	Variable	go to state 128
	Expression	go to state 127
	Literal	go to state 81
	ArrayReference	go to state 90
	HashReference	go to state 72
	HashDereference	go to state 86
	TypeInner	go to state 134
	ListElement	go to state 132
	WordScoped	go to state 92
	ListElements	go to state 137
	ArrayDereference	go to state 74
	SubExpression	go to state 131

State 76:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 77:

	Operator -> OP10_NAMED_UNARY . SubExpression	(Rule 94)
	Operator -> OP10_NAMED_UNARY .	(Rule 95)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	')'	reduce using rule 95 (Operator)
	';'	reduce using rule 95 (Operator)
	']'	reduce using rule 95 (Operator)
	'}'	reduce using rule 95 (Operator)
	OP04_MATH_POW	reduce using rule 95 (Operator)
	OP06_REGEX_MATCH	reduce using rule 95 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 95 (Operator)
	OP07_STRING_REPEAT	reduce using rule 95 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 95 (Operator)
	OP08_STRING_CAT	reduce using rule 95 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 95 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 95 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 95 (Operator)
	OP13_BITWISE_AND	reduce using rule 95 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 95 (Operator)
	OP15_LOGICAL_AND	reduce using rule 95 (Operator)
	OP16_LOGICAL_OR	reduce using rule 95 (Operator)
	OP17_LIST_RANGE	reduce using rule 95 (Operator)
	OP18_TERNARY	reduce using rule 95 (Operator)
	OP21_LIST_COMMA	reduce using rule 95 (Operator)
	OP23_LOGICAL_AND	reduce using rule 95 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 95 (Operator)

	ArrayDereference	go to state 74
	SubExpression	go to state 138
	Variable	go to state 128
	Operator	go to state 71
	Expression	go to state 127
	ArrayReference	go to state 90
	Literal	go to state 81
	HashReference	go to state 72
	HashDereference	go to state 86
	WordScoped	go to state 92

State 78:

	SubExpression -> 'undef' .	(Rule 131)

	$default	reduce using rule 131 (SubExpression)

State 79:

	ArrayDereference -> '@{' . Variable '}'	(Rule 190)
	ArrayDereference -> '@{' . OPTIONAL-47 ArrayReference '}'	(Rule 191)

	MY	shift, and go to state 135
	VARIABLE_SYMBOL	shift, and go to state 107

	LBRACKET	reduce using rule 189 (OPTIONAL-47)

	Variable	go to state 139
	TypeInner	go to state 141
	OPTIONAL-47	go to state 140

State 80:

	Operation -> Expression . ';'	(Rule 76)
	SubExpression -> Expression .	(Rule 130)

	';'	shift, and go to state 142

	OP04_MATH_POW	reduce using rule 130 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 130 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 130 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 130 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 130 (SubExpression)
	OP08_STRING_CAT	reduce using rule 130 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 130 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 130 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 130 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 130 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 130 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 130 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 130 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 130 (SubExpression)
	OP18_TERNARY	reduce using rule 130 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 130 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 130 (SubExpression)

State 81:

	SubExpression -> Literal .	(Rule 132)

	$default	reduce using rule 132 (SubExpression)

State 82:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 84)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-34 ')'	(Rule 128)
	SubExpression -> Variable .	(Rule 133)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 174)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY SubExpression ';'	(Rule 175)

	OP02_METHOD_THINARROW	shift, and go to state 146
	OP03_MATH_INC_DEC	shift, and go to state 144
	OP19_VARIABLE_ASSIGN	shift, and go to state 145
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 143

	OP04_MATH_POW	reduce using rule 133 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 133 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 133 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 133 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 133 (SubExpression)
	OP08_STRING_CAT	reduce using rule 133 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 133 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 133 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 133 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 133 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 133 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 133 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 133 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 133 (SubExpression)
	OP18_TERNARY	reduce using rule 133 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 133 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 133 (SubExpression)

State 83:

	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON .	(Rule 118)

	$default	reduce using rule 118 (OperatorVoid)

State 84:

	PAREN-35 -> LoopLabel . COLON	(Rule 141)

	COLON	shift, and go to state 147

State 85:

	Literal -> LITERAL_STRING .	(Rule 220)

	$default	reduce using rule 220 (Literal)

State 86:

	SubExpression -> HashDereference .	(Rule 137)

	$default	reduce using rule 137 (SubExpression)

State 87:

	Statement -> OperatorVoid .	(Rule 146)

	$default	reduce using rule 146 (Statement)

State 88:

	Conditional -> 'if' . LPAREN SubExpression ')' CodeBlock STAR-38 OPTIONAL-40	(Rule 155)

	LPAREN	shift, and go to state 148

State 89:

	OperatorVoid -> OP01_NAMED_VOID . ListElements ';'	(Rule 116)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	MY	shift, and go to state 135
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP01_QW	shift, and go to state 130
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	Expression	go to state 127
	ArrayReference	go to state 90
	Literal	go to state 81
	Variable	go to state 128
	Operator	go to state 71
	ListElement	go to state 132
	WordScoped	go to state 92
	TypeInner	go to state 134
	HashDereference	go to state 86
	HashReference	go to state 72
	ArrayDereference	go to state 74
	ListElements	go to state 149
	SubExpression	go to state 131

State 90:

	SubExpression -> ArrayReference .	(Rule 134)

	$default	reduce using rule 134 (SubExpression)

State 91:

	Operator -> OP01_CLOSE . FHREF_SYMBOL	(Rule 82)

	FHREF_SYMBOL	shift, and go to state 150

State 92:

	Expression -> WordScoped . LPAREN OPTIONAL-33 ')'	(Rule 125)
	Expression -> WordScoped . SCOPE WORD_UPPERCASE LPAREN ')'	(Rule 127)
	Expression -> WordScoped . OP02_METHOD_THINARROW_NEW ')'	(Rule 129)

	LPAREN	shift, and go to state 151
	OP02_METHOD_THINARROW_NEW	shift, and go to state 152
	SCOPE	shift, and go to state 153

State 93:

	Statement -> VariableModification .	(Rule 148)

	$default	reduce using rule 148 (Statement)

State 94:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 83)

	VARIABLE_SYMBOL	shift, and go to state 107

	Variable	go to state 154

State 95:

	OperatorVoid -> OP01_PRINT . OPTIONAL-31 ListElements ';'	(Rule 112)
	OperatorVoid -> OP01_PRINT . FHREF_SYMBOL_BRACES ListElements ';'	(Rule 113)

	FHREF_SYMBOL_BRACES	shift, and go to state 156
	STDOUT_STDERR	shift, and go to state 157

	'%{'	reduce using rule 109 (OPTIONAL-31)
	'@{'	reduce using rule 109 (OPTIONAL-31)
	'undef'	reduce using rule 109 (OPTIONAL-31)
	LBRACE	reduce using rule 109 (OPTIONAL-31)
	LBRACKET	reduce using rule 109 (OPTIONAL-31)
	LITERAL_NUMBER	reduce using rule 109 (OPTIONAL-31)
	LITERAL_STRING	reduce using rule 109 (OPTIONAL-31)
	LPAREN	reduce using rule 109 (OPTIONAL-31)
	MY	reduce using rule 109 (OPTIONAL-31)
	OP01_CLOSE	reduce using rule 109 (OPTIONAL-31)
	OP01_NAMED	reduce using rule 109 (OPTIONAL-31)
	OP01_OPEN	reduce using rule 109 (OPTIONAL-31)
	OP01_QW	reduce using rule 109 (OPTIONAL-31)
	OP03_MATH_INC_DEC	reduce using rule 109 (OPTIONAL-31)
	OP05_LOGICAL_NEG	reduce using rule 109 (OPTIONAL-31)
	OP05_MATH_NEG_LPAREN	reduce using rule 109 (OPTIONAL-31)
	OP10_NAMED_UNARY	reduce using rule 109 (OPTIONAL-31)
	OP22_LOGICAL_NEG	reduce using rule 109 (OPTIONAL-31)
	VARIABLE_SYMBOL	reduce using rule 109 (OPTIONAL-31)
	WORD	reduce using rule 109 (OPTIONAL-31)
	WORD_SCOPED	reduce using rule 109 (OPTIONAL-31)
	WORD_UPPERCASE	reduce using rule 109 (OPTIONAL-31)

	PAREN-30	go to state 155
	OPTIONAL-31	go to state 158

State 96:

	Statement -> VariableDeclaration .	(Rule 147)

	$default	reduce using rule 147 (Statement)

State 97:

	Operator -> OP01_OPEN . MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	MY	shift, and go to state 159

State 98:

	Operator -> OP05_LOGICAL_NEG . SubExpression	(Rule 86)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	ArrayDereference	go to state 74
	SubExpression	go to state 160
	Variable	go to state 128
	Operator	go to state 71
	Literal	go to state 81
	Expression	go to state 127
	ArrayReference	go to state 90
	HashReference	go to state 72
	HashDereference	go to state 86
	WordScoped	go to state 92

State 99:

	ArrayReference -> LBRACKET . OPTIONAL-46 ']'	(Rule 187)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	MY	shift, and go to state 135
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP01_QW	shift, and go to state 130
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	']'	reduce using rule 186 (OPTIONAL-46)

	ArrayReference	go to state 90
	Expression	go to state 127
	Literal	go to state 81
	OPTIONAL-46	go to state 161
	Operator	go to state 71
	Variable	go to state 128
	WordScoped	go to state 92
	ListElement	go to state 132
	HashDereference	go to state 86
	HashReference	go to state 72
	TypeInner	go to state 134
	ListElements	go to state 162
	ArrayDereference	go to state 74
	SubExpression	go to state 131

State 100:

	Operation -> Statement .	(Rule 77)

	$default	reduce using rule 77 (Operation)

State 101:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 172
	OP12_COMPARE_EQ_NE	shift, and go to state 173
	OP13_BITWISE_AND	shift, and go to state 175
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 176
	OP16_LOGICAL_OR	shift, and go to state 171
	OP17_LIST_RANGE	shift, and go to state 167
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 179
	OP24_LOGICAL_OR_XOR	shift, and go to state 166

State 102:

	Operator -> OP22_LOGICAL_NEG . SubExpression	(Rule 104)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	SubExpression	go to state 180
	ArrayDereference	go to state 74
	HashDereference	go to state 86
	HashReference	go to state 72
	WordScoped	go to state 92
	Variable	go to state 128
	Operator	go to state 71
	Expression	go to state 127
	ArrayReference	go to state 90
	Literal	go to state 81

State 103:

	Statement -> Conditional .	(Rule 144)

	$default	reduce using rule 144 (Statement)

State 104:

	OPTIONAL-36 -> PAREN-35 .	(Rule 142)

	$default	reduce using rule 142 (OPTIONAL-36)

State 105:

	HashReference -> LBRACE . HashEntry STAR-50 '}'	(Rule 201)
	HashReference -> LBRACE . '}'	(Rule 202)

	'%{'	shift, and go to state 116
	'}'	shift, and go to state 186
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 181

	HashDereference	go to state 182
	HashEntry	go to state 185
	VariableOrLiteralOrWord	go to state 187
	Variable	go to state 184
	Literal	go to state 183

State 106:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'if'	shift, and go to state 88
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	MY	shift, and go to state 109
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 111
	OP01_NAMED_VOID	shift, and go to state 89
	OP01_NAMED_VOID_LPAREN	shift, and go to state 75
	OP01_NAMED_VOID_SCOLON	shift, and go to state 113
	OP01_OPEN	shift, and go to state 97
	OP01_PRINT	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP19_LOOP_CONTROL	shift, and go to state 73
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 83
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 108

	$end	reduce using rule 18 (Program)
	'for'	reduce using rule 143 (OPTIONAL-36)
	'foreach'	reduce using rule 143 (OPTIONAL-36)
	'while'	reduce using rule 143 (OPTIONAL-36)

	ArrayReference	go to state 90
	Operator	go to state 71
	WordScoped	go to state 92
	VariableModification	go to state 93
	HashReference	go to state 72
	VariableDeclaration	go to state 96
	ArrayDereference	go to state 74
	SubExpression	go to state 101
	Statement	go to state 100
	Conditional	go to state 103
	PAREN-35	go to state 104
	Expression	go to state 80
	Literal	go to state 81
	Operation	go to state 188
	Variable	go to state 82
	LoopLabel	go to state 84
	HashDereference	go to state 86
	OperatorVoid	go to state 87
	OPTIONAL-36	go to state 115

State 107:

	Variable -> VARIABLE_SYMBOL . STAR-42	(Rule 167)

	$default	reduce using rule 166 (STAR-42)

	STAR-42	go to state 189

State 108:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 126)
	LoopLabel -> WORD_UPPERCASE .	(Rule 209)

	LPAREN	shift, and go to state 190

	COLON	reduce using rule 209 (LoopLabel)

State 109:

	VariableDeclaration -> MY . Type VARIABLE_SYMBOL ';'	(Rule 171)
	VariableDeclaration -> MY . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 172)
	VariableDeclaration -> MY . TYPE_FHREF FHREF_SYMBOL ';'	(Rule 173)

	TYPE_FHREF	shift, and go to state 191
	TYPE_INTEGER	shift, and go to state 60
	WORD	shift, and go to state 58

	Type	go to state 192

State 110:

	Operator -> OP05_MATH_NEG_LPAREN . SubExpression ')'	(Rule 87)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	WordScoped	go to state 92
	HashDereference	go to state 86
	HashReference	go to state 72
	Literal	go to state 81
	ArrayReference	go to state 90
	Expression	go to state 127
	Variable	go to state 128
	Operator	go to state 71
	SubExpression	go to state 193
	ArrayDereference	go to state 74

State 111:

	Operator -> OP01_NAMED . SubExpression	(Rule 79)
	OperatorVoid -> OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ';'	(Rule 117)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	MY	shift, and go to state 135
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP01_QW	shift, and go to state 130
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	ListElement	go to state 194
	WordScoped	go to state 92
	TypeInner	go to state 134
	HashDereference	go to state 86
	HashReference	go to state 72
	Literal	go to state 81
	Expression	go to state 127
	ArrayReference	go to state 90
	Operator	go to state 71
	Variable	go to state 128
	SubExpression	go to state 195
	ArrayDereference	go to state 74

State 112:

	Literal -> LITERAL_NUMBER .	(Rule 219)

	$default	reduce using rule 219 (Literal)

State 113:

	OperatorVoid -> OP01_NAMED_VOID_SCOLON .	(Rule 114)

	$default	reduce using rule 114 (OperatorVoid)

State 114:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 115:

	Statement -> OPTIONAL-36 . Loop	(Rule 145)

	'for'	shift, and go to state 200
	'foreach'	shift, and go to state 199
	'while'	shift, and go to state 198

	LoopFor	go to state 201
	LoopForEach	go to state 196
	Loop	go to state 197
	LoopWhile	go to state 202

State 116:

	HashDereference -> '%{' . Variable '}'	(Rule 205)
	HashDereference -> '%{' . OPTIONAL-51 HashReference '}'	(Rule 206)

	MY	shift, and go to state 135
	VARIABLE_SYMBOL	shift, and go to state 107

	LBRACE	reduce using rule 204 (OPTIONAL-51)

	TypeInner	go to state 205
	Variable	go to state 204
	OPTIONAL-51	go to state 203

State 117:

	Operator -> LPAREN . OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')'	(Rule 78)
	Operator -> LPAREN . OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'	(Rule 80)
	SubExpression -> LPAREN . SubExpression ')'	(Rule 138)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 206
	OP01_OPEN	shift, and go to state 97
	OP01_PRINT	shift, and go to state 207
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	ArrayDereference	go to state 74
	SubExpression	go to state 208
	Operator	go to state 71
	Variable	go to state 128
	Literal	go to state 81
	Expression	go to state 127
	ArrayReference	go to state 90
	HashDereference	go to state 86
	HashReference	go to state 72
	WordScoped	go to state 92

State 118:

	PLUS-15 -> PLUS-15 WORD .	(Rule 37)

	$default	reduce using rule 37 (PLUS-15)

State 119:

	Include -> 'use' WordScoped OP01_QW PLUS-15 ')' . ';'	(Rule 40)

	';'	shift, and go to state 209

State 120:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant . Literal ';'	(Rule 41)

	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85

	Literal	go to state 210

State 121:

	TypeInnerConstant -> MY . Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 213)

	TYPE_INTEGER	shift, and go to state 60
	WORD	shift, and go to state 58

	Type	go to state 211

State 122:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-16 STAR-17 '}' ';'	(Rule 46)

	LPAREN_MY	shift, and go to state 214

	'%{'	reduce using rule 43 (OPTIONAL-16)
	'@{'	reduce using rule 43 (OPTIONAL-16)
	'for'	reduce using rule 43 (OPTIONAL-16)
	'foreach'	reduce using rule 43 (OPTIONAL-16)
	'if'	reduce using rule 43 (OPTIONAL-16)
	'undef'	reduce using rule 43 (OPTIONAL-16)
	'while'	reduce using rule 43 (OPTIONAL-16)
	'}'	reduce using rule 43 (OPTIONAL-16)
	LBRACE	reduce using rule 43 (OPTIONAL-16)
	LBRACKET	reduce using rule 43 (OPTIONAL-16)
	LITERAL_NUMBER	reduce using rule 43 (OPTIONAL-16)
	LITERAL_STRING	reduce using rule 43 (OPTIONAL-16)
	LPAREN	reduce using rule 43 (OPTIONAL-16)
	MY	reduce using rule 43 (OPTIONAL-16)
	OP01_CLOSE	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID_LPAREN	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID_SCOLON	reduce using rule 43 (OPTIONAL-16)
	OP01_OPEN	reduce using rule 43 (OPTIONAL-16)
	OP01_PRINT	reduce using rule 43 (OPTIONAL-16)
	OP03_MATH_INC_DEC	reduce using rule 43 (OPTIONAL-16)
	OP05_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	OP05_MATH_NEG_LPAREN	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY	reduce using rule 43 (OPTIONAL-16)
	OP19_LOOP_CONTROL	reduce using rule 43 (OPTIONAL-16)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 43 (OPTIONAL-16)
	OP22_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	VARIABLE_SYMBOL	reduce using rule 43 (OPTIONAL-16)
	WORD	reduce using rule 43 (OPTIONAL-16)
	WORD_SCOPED	reduce using rule 43 (OPTIONAL-16)
	WORD_UPPERCASE	reduce using rule 43 (OPTIONAL-16)

	SubroutineArguments	go to state 213
	OPTIONAL-16	go to state 212

State 123:

	STAR-21 -> STAR-21 . Include	(Rule 53)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 . STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	'use'	shift, and go to state 35

	'our hashref $properties'	reduce using rule 56 (STAR-22)
	'use constant'	reduce using rule 56 (STAR-22)

	Include	go to state 215
	STAR-22	go to state 216

State 124:

	STAR-20 -> STAR-20 Critic .	(Rule 51)

	$default	reduce using rule 51 (STAR-20)

State 125:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 119)

	';'	shift, and go to state 217

State 126:

	LoopLabel -> WORD_UPPERCASE .	(Rule 209)

	$default	reduce using rule 209 (LoopLabel)

State 127:

	SubExpression -> Expression .	(Rule 130)

	$default	reduce using rule 130 (SubExpression)

State 128:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 84)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-34 ')'	(Rule 128)
	SubExpression -> Variable .	(Rule 133)

	OP02_METHOD_THINARROW	shift, and go to state 146
	OP03_MATH_INC_DEC	shift, and go to state 144

	')'	reduce using rule 133 (SubExpression)
	';'	reduce using rule 133 (SubExpression)
	']'	reduce using rule 133 (SubExpression)
	'}'	reduce using rule 133 (SubExpression)
	OP04_MATH_POW	reduce using rule 133 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 133 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 133 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 133 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 133 (SubExpression)
	OP08_STRING_CAT	reduce using rule 133 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 133 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 133 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 133 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 133 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 133 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 133 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 133 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 133 (SubExpression)
	OP18_TERNARY	reduce using rule 133 (SubExpression)
	OP21_LIST_COMMA	reduce using rule 133 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 133 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 133 (SubExpression)

State 129:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-32 . ')' ';'	(Rule 115)

	')'	shift, and go to state 218

State 130:

	ListElement -> OP01_QW . PLUS-45 ')'	(Rule 184)

	WORD	shift, and go to state 220

	PLUS-45	go to state 219

State 131:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	ListElement -> SubExpression .	(Rule 182)

	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 172
	OP12_COMPARE_EQ_NE	shift, and go to state 173
	OP13_BITWISE_AND	shift, and go to state 175
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 176
	OP16_LOGICAL_OR	shift, and go to state 171
	OP17_LIST_RANGE	shift, and go to state 167
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 179
	OP24_LOGICAL_OR_XOR	shift, and go to state 166

	')'	reduce using rule 182 (ListElement)
	';'	reduce using rule 182 (ListElement)
	']'	reduce using rule 182 (ListElement)
	OP21_LIST_COMMA	reduce using rule 182 (ListElement)

State 132:

	ListElements -> ListElement . STAR-44	(Rule 179)

	$default	reduce using rule 178 (STAR-44)

	STAR-44	go to state 221

State 133:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 126)

	LPAREN	shift, and go to state 190

State 134:

	ListElement -> TypeInner . SubExpression	(Rule 183)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	WordScoped	go to state 92
	HashDereference	go to state 86
	HashReference	go to state 72
	ArrayReference	go to state 90
	Literal	go to state 81
	Expression	go to state 127
	Variable	go to state 128
	Operator	go to state 71
	SubExpression	go to state 222
	ArrayDereference	go to state 74

State 135:

	TypeInner -> MY . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 212)

	TYPE_INTEGER	shift, and go to state 60
	WORD	shift, and go to state 58

	Type	go to state 223

State 136:

	Operator -> OP01_NAMED . SubExpression	(Rule 79)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	ArrayReference	go to state 90
	Literal	go to state 81
	Expression	go to state 127
	Variable	go to state 128
	Operator	go to state 71
	WordScoped	go to state 92
	HashReference	go to state 72
	HashDereference	go to state 86
	ArrayDereference	go to state 74
	SubExpression	go to state 224

State 137:

	OPTIONAL-32 -> ListElements .	(Rule 110)

	$default	reduce using rule 110 (OPTIONAL-32)

State 138:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> OP10_NAMED_UNARY SubExpression .	(Rule 94)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 177

	')'	reduce using rule 94 (Operator)
	';'	reduce using rule 94 (Operator)
	']'	reduce using rule 94 (Operator)
	'}'	reduce using rule 94 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 94 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 94 (Operator)
	OP13_BITWISE_AND	reduce using rule 94 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 94 (Operator)
	OP15_LOGICAL_AND	reduce using rule 94 (Operator)
	OP16_LOGICAL_OR	reduce using rule 94 (Operator)
	OP17_LIST_RANGE	reduce using rule 94 (Operator)
	OP18_TERNARY	reduce using rule 94 (Operator)
	OP21_LIST_COMMA	reduce using rule 94 (Operator)
	OP23_LOGICAL_AND	reduce using rule 94 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 94 (Operator)

State 139:

	ArrayDereference -> '@{' Variable . '}'	(Rule 190)

	'}'	shift, and go to state 225

State 140:

	ArrayDereference -> '@{' OPTIONAL-47 . ArrayReference '}'	(Rule 191)

	LBRACKET	shift, and go to state 99

	ArrayReference	go to state 226

State 141:

	OPTIONAL-47 -> TypeInner .	(Rule 188)

	$default	reduce using rule 188 (OPTIONAL-47)

State 142:

	Operation -> Expression ';' .	(Rule 76)

	$default	reduce using rule 76 (Operation)

State 143:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . SubExpression ';'	(Rule 175)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	WordScoped	go to state 92
	HashReference	go to state 72
	HashDereference	go to state 86
	ArrayReference	go to state 90
	Expression	go to state 127
	Literal	go to state 81
	Variable	go to state 128
	Operator	go to state 71
	SubExpression	go to state 227
	ArrayDereference	go to state 74

State 144:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 84)

	$default	reduce using rule 84 (Operator)

State 145:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 174)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	STDIN	shift, and go to state 230
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	Literal	go to state 81
	ArrayReference	go to state 90
	Expression	go to state 127
	Variable	go to state 128
	Operator	go to state 71
	SubExpressionOrStdin	go to state 229
	WordScoped	go to state 92
	HashReference	go to state 72
	HashDereference	go to state 86
	ArrayDereference	go to state 74
	SubExpression	go to state 228

State 146:

	Expression -> Variable OP02_METHOD_THINARROW . LPAREN OPTIONAL-34 ')'	(Rule 128)

	LPAREN	shift, and go to state 231

State 147:

	PAREN-35 -> LoopLabel COLON .	(Rule 141)

	$default	reduce using rule 141 (PAREN-35)

State 148:

	Conditional -> 'if' LPAREN . SubExpression ')' CodeBlock STAR-38 OPTIONAL-40	(Rule 155)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	Operator	go to state 71
	Variable	go to state 128
	ArrayReference	go to state 90
	Expression	go to state 127
	Literal	go to state 81
	HashDereference	go to state 86
	HashReference	go to state 72
	WordScoped	go to state 92
	ArrayDereference	go to state 74
	SubExpression	go to state 232

State 149:

	OperatorVoid -> OP01_NAMED_VOID ListElements . ';'	(Rule 116)

	';'	shift, and go to state 233

State 150:

	Operator -> OP01_CLOSE FHREF_SYMBOL .	(Rule 82)

	$default	reduce using rule 82 (Operator)

State 151:

	Expression -> WordScoped LPAREN . OPTIONAL-33 ')'	(Rule 125)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	MY	shift, and go to state 135
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP01_QW	shift, and go to state 130
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	')'	reduce using rule 121 (OPTIONAL-33)

	ArrayReference	go to state 90
	OPTIONAL-33	go to state 235
	Expression	go to state 127
	Literal	go to state 81
	Operator	go to state 71
	Variable	go to state 128
	ListElement	go to state 132
	WordScoped	go to state 92
	HashDereference	go to state 86
	HashReference	go to state 72
	TypeInner	go to state 134
	ListElements	go to state 234
	ArrayDereference	go to state 74
	SubExpression	go to state 131

State 152:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW . ')'	(Rule 129)

	')'	shift, and go to state 236

State 153:

	Expression -> WordScoped SCOPE . WORD_UPPERCASE LPAREN ')'	(Rule 127)

	WORD_UPPERCASE	shift, and go to state 237

State 154:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 83)

	$default	reduce using rule 83 (Operator)

State 155:

	OPTIONAL-31 -> PAREN-30 .	(Rule 108)

	$default	reduce using rule 108 (OPTIONAL-31)

State 156:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES . ListElements ';'	(Rule 113)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	MY	shift, and go to state 135
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP01_QW	shift, and go to state 130
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	ArrayDereference	go to state 74
	ListElements	go to state 238
	SubExpression	go to state 131
	Literal	go to state 81
	Expression	go to state 127
	ArrayReference	go to state 90
	Operator	go to state 71
	Variable	go to state 128
	ListElement	go to state 132
	WordScoped	go to state 92
	TypeInner	go to state 134
	HashDereference	go to state 86
	HashReference	go to state 72

State 157:

	PAREN-30 -> STDOUT_STDERR .	(Rule 107)

	$default	reduce using rule 107 (PAREN-30)

State 158:

	OperatorVoid -> OP01_PRINT OPTIONAL-31 . ListElements ';'	(Rule 112)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	MY	shift, and go to state 135
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP01_QW	shift, and go to state 130
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	Variable	go to state 128
	Operator	go to state 71
	Literal	go to state 81
	Expression	go to state 127
	ArrayReference	go to state 90
	TypeInner	go to state 134
	HashReference	go to state 72
	HashDereference	go to state 86
	WordScoped	go to state 92
	ListElement	go to state 132
	ArrayDereference	go to state 74
	ListElements	go to state 239
	SubExpression	go to state 131

State 159:

	Operator -> OP01_OPEN MY . TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	TYPE_FHREF	shift, and go to state 240

State 160:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> OP05_LOGICAL_NEG SubExpression .	(Rule 86)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 165

	')'	reduce using rule 86 (Operator)
	';'	reduce using rule 86 (Operator)
	']'	reduce using rule 86 (Operator)
	'}'	reduce using rule 86 (Operator)
	OP06_REGEX_MATCH	reduce using rule 86 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 86 (Operator)
	OP07_STRING_REPEAT	reduce using rule 86 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 86 (Operator)
	OP08_STRING_CAT	reduce using rule 86 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 86 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 86 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 86 (Operator)
	OP13_BITWISE_AND	reduce using rule 86 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 86 (Operator)
	OP15_LOGICAL_AND	reduce using rule 86 (Operator)
	OP16_LOGICAL_OR	reduce using rule 86 (Operator)
	OP17_LIST_RANGE	reduce using rule 86 (Operator)
	OP18_TERNARY	reduce using rule 86 (Operator)
	OP21_LIST_COMMA	reduce using rule 86 (Operator)
	OP23_LOGICAL_AND	reduce using rule 86 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 86 (Operator)

State 161:

	ArrayReference -> LBRACKET OPTIONAL-46 . ']'	(Rule 187)

	']'	shift, and go to state 241

State 162:

	OPTIONAL-46 -> ListElements .	(Rule 185)

	$default	reduce using rule 185 (OPTIONAL-46)

State 163:

	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD . SubExpression	(Rule 90)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	ArrayDereference	go to state 74
	SubExpression	go to state 242
	Literal	go to state 81
	ArrayReference	go to state 90
	Expression	go to state 127
	Variable	go to state 128
	Operator	go to state 71
	WordScoped	go to state 92
	HashReference	go to state 72
	HashDereference	go to state 86

State 164:

	Operator -> SubExpression OP08_STRING_CAT . SubExpression	(Rule 92)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	ArrayReference	go to state 90
	Literal	go to state 81
	Expression	go to state 127
	Variable	go to state 128
	Operator	go to state 71
	WordScoped	go to state 92
	HashReference	go to state 72
	HashDereference	go to state 86
	ArrayDereference	go to state 74
	SubExpression	go to state 243

State 165:

	Operator -> SubExpression OP04_MATH_POW . SubExpression	(Rule 85)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	ArrayDereference	go to state 74
	SubExpression	go to state 244
	Literal	go to state 81
	Expression	go to state 127
	ArrayReference	go to state 90
	Variable	go to state 128
	Operator	go to state 71
	WordScoped	go to state 92
	HashDereference	go to state 86
	HashReference	go to state 72

State 166:

	Operator -> SubExpression OP24_LOGICAL_OR_XOR . SubExpression	(Rule 106)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	ArrayDereference	go to state 74
	SubExpression	go to state 245
	Operator	go to state 71
	Variable	go to state 128
	ArrayReference	go to state 90
	Expression	go to state 127
	Literal	go to state 81
	HashReference	go to state 72
	HashDereference	go to state 86
	WordScoped	go to state 92

State 167:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 102)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	HashReference	go to state 72
	HashDereference	go to state 86
	WordScoped	go to state 92
	Operator	go to state 71
	Variable	go to state 128
	ArrayReference	go to state 90
	Expression	go to state 127
	Literal	go to state 81
	SubExpression	go to state 246
	ArrayDereference	go to state 74

State 168:

	Operator -> SubExpression OP08_MATH_ADD_SUB . SubExpression	(Rule 91)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	SubExpression	go to state 247
	ArrayDereference	go to state 74
	HashReference	go to state 72
	HashDereference	go to state 86
	WordScoped	go to state 92
	Variable	go to state 128
	Operator	go to state 71
	Literal	go to state 81
	ArrayReference	go to state 90
	Expression	go to state 127

State 169:

	Operator -> SubExpression OP18_TERNARY . VariableOrLiteral COLON VariableOrLiteral	(Rule 103)

	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	VARIABLE_SYMBOL	shift, and go to state 107

	Literal	go to state 248
	Variable	go to state 249
	VariableOrLiteral	go to state 250

State 170:

	Operator -> SubExpression OP06_REGEX_MATCH . OP06_REGEX_PATTERN	(Rule 88)

	OP06_REGEX_PATTERN	shift, and go to state 251

State 171:

	Operator -> SubExpression OP16_LOGICAL_OR . SubExpression	(Rule 101)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	Operator	go to state 71
	Variable	go to state 128
	Expression	go to state 127
	ArrayReference	go to state 90
	Literal	go to state 81
	HashDereference	go to state 86
	HashReference	go to state 72
	WordScoped	go to state 92
	ArrayDereference	go to state 74
	SubExpression	go to state 252

State 172:

	Operator -> SubExpression OP11_COMPARE_LT_GT . SubExpression	(Rule 96)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	SubExpression	go to state 253
	ArrayDereference	go to state 74
	HashReference	go to state 72
	HashDereference	go to state 86
	WordScoped	go to state 92
	Operator	go to state 71
	Variable	go to state 128
	ArrayReference	go to state 90
	Expression	go to state 127
	Literal	go to state 81

State 173:

	Operator -> SubExpression OP12_COMPARE_EQ_NE . SubExpression	(Rule 97)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	WordScoped	go to state 92
	HashDereference	go to state 86
	HashReference	go to state 72
	ArrayReference	go to state 90
	Expression	go to state 127
	Literal	go to state 81
	Operator	go to state 71
	Variable	go to state 128
	SubExpression	go to state 254
	ArrayDereference	go to state 74

State 174:

	Operator -> SubExpression OP14_BITWISE_OR_XOR . SubExpression	(Rule 99)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	WordScoped	go to state 92
	HashReference	go to state 72
	HashDereference	go to state 86
	ArrayReference	go to state 90
	Literal	go to state 81
	Expression	go to state 127
	Variable	go to state 128
	Operator	go to state 71
	SubExpression	go to state 255
	ArrayDereference	go to state 74

State 175:

	Operator -> SubExpression OP13_BITWISE_AND . SubExpression	(Rule 98)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	ArrayReference	go to state 90
	Expression	go to state 127
	Literal	go to state 81
	Variable	go to state 128
	Operator	go to state 71
	WordScoped	go to state 92
	HashDereference	go to state 86
	HashReference	go to state 72
	ArrayDereference	go to state 74
	SubExpression	go to state 256

State 176:

	Operator -> SubExpression OP15_LOGICAL_AND . SubExpression	(Rule 100)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	ArrayDereference	go to state 74
	SubExpression	go to state 257
	ArrayReference	go to state 90
	Expression	go to state 127
	Literal	go to state 81
	Variable	go to state 128
	Operator	go to state 71
	WordScoped	go to state 92
	HashDereference	go to state 86
	HashReference	go to state 72

State 177:

	Operator -> SubExpression OP09_BITWISE_SHIFT . SubExpression	(Rule 93)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	HashReference	go to state 72
	HashDereference	go to state 86
	WordScoped	go to state 92
	Operator	go to state 71
	Variable	go to state 128
	Expression	go to state 127
	Literal	go to state 81
	ArrayReference	go to state 90
	SubExpression	go to state 258
	ArrayDereference	go to state 74

State 178:

	Operator -> SubExpression OP07_STRING_REPEAT . SubExpression	(Rule 89)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	WordScoped	go to state 92
	HashReference	go to state 72
	HashDereference	go to state 86
	Expression	go to state 127
	ArrayReference	go to state 90
	Literal	go to state 81
	Operator	go to state 71
	Variable	go to state 128
	SubExpression	go to state 259
	ArrayDereference	go to state 74

State 179:

	Operator -> SubExpression OP23_LOGICAL_AND . SubExpression	(Rule 105)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	SubExpression	go to state 260
	ArrayDereference	go to state 74
	WordScoped	go to state 92
	HashReference	go to state 72
	HashDereference	go to state 86
	ArrayReference	go to state 90
	Expression	go to state 127
	Literal	go to state 81
	Operator	go to state 71
	Variable	go to state 128

State 180:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> OP22_LOGICAL_NEG SubExpression .	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 172
	OP12_COMPARE_EQ_NE	shift, and go to state 173
	OP13_BITWISE_AND	shift, and go to state 175
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 176
	OP16_LOGICAL_OR	shift, and go to state 171
	OP17_LIST_RANGE	shift, and go to state 167
	OP18_TERNARY	shift, and go to state 169

	')'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 181:

	VariableOrLiteralOrWord -> WORD .	(Rule 218)

	$default	reduce using rule 218 (VariableOrLiteralOrWord)

State 182:

	HashEntry -> HashDereference .	(Rule 195)

	$default	reduce using rule 195 (HashEntry)

State 183:

	VariableOrLiteralOrWord -> Literal .	(Rule 217)

	$default	reduce using rule 217 (VariableOrLiteralOrWord)

State 184:

	VariableOrLiteralOrWord -> Variable .	(Rule 216)

	$default	reduce using rule 216 (VariableOrLiteralOrWord)

State 185:

	HashReference -> LBRACE HashEntry . STAR-50 '}'	(Rule 201)

	$default	reduce using rule 200 (STAR-50)

	STAR-50	go to state 261

State 186:

	HashReference -> LBRACE '}' .	(Rule 202)

	$default	reduce using rule 202 (HashReference)

State 187:

	HashEntry -> VariableOrLiteralOrWord . OP20_HASH_FATARROW OPTIONAL-48 SubExpression	(Rule 194)

	OP20_HASH_FATARROW	shift, and go to state 262

State 188:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 189:

	STAR-42 -> STAR-42 . VariableRetrieval	(Rule 165)
	Variable -> VARIABLE_SYMBOL STAR-42 .	(Rule 167)

	OP02_ARRAY_THINARROW	shift, and go to state 264
	OP02_HASH_THINARROW	shift, and go to state 265

	')'	reduce using rule 167 (Variable)
	';'	reduce using rule 167 (Variable)
	']'	reduce using rule 167 (Variable)
	'}'	reduce using rule 167 (Variable)
	COLON	reduce using rule 167 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 167 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 167 (Variable)
	OP04_MATH_POW	reduce using rule 167 (Variable)
	OP06_REGEX_MATCH	reduce using rule 167 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 167 (Variable)
	OP07_STRING_REPEAT	reduce using rule 167 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 167 (Variable)
	OP08_STRING_CAT	reduce using rule 167 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 167 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 167 (Variable)
	OP12_COMPARE_EQ_NE	reduce using rule 167 (Variable)
	OP13_BITWISE_AND	reduce using rule 167 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 167 (Variable)
	OP15_LOGICAL_AND	reduce using rule 167 (Variable)
	OP16_LOGICAL_OR	reduce using rule 167 (Variable)
	OP17_LIST_RANGE	reduce using rule 167 (Variable)
	OP18_TERNARY	reduce using rule 167 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 167 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 167 (Variable)
	OP20_HASH_FATARROW	reduce using rule 167 (Variable)
	OP21_LIST_COMMA	reduce using rule 167 (Variable)
	OP23_LOGICAL_AND	reduce using rule 167 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 167 (Variable)

	VariableRetrieval	go to state 263

State 190:

	Expression -> WORD_UPPERCASE LPAREN . ')'	(Rule 126)

	')'	shift, and go to state 266

State 191:

	VariableDeclaration -> MY TYPE_FHREF . FHREF_SYMBOL ';'	(Rule 173)

	FHREF_SYMBOL	shift, and go to state 267

State 192:

	VariableDeclaration -> MY Type . VARIABLE_SYMBOL ';'	(Rule 171)
	VariableDeclaration -> MY Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 172)

	VARIABLE_SYMBOL	shift, and go to state 268

State 193:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> OP05_MATH_NEG_LPAREN SubExpression . ')'	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	')'	shift, and go to state 269
	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 172
	OP12_COMPARE_EQ_NE	shift, and go to state 173
	OP13_BITWISE_AND	shift, and go to state 175
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 176
	OP16_LOGICAL_OR	shift, and go to state 171
	OP17_LIST_RANGE	shift, and go to state 167
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 179
	OP24_LOGICAL_OR_XOR	shift, and go to state 166

State 194:

	OperatorVoid -> OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ';'	(Rule 117)

	OP21_LIST_COMMA	shift, and go to state 270

State 195:

	Operator -> OP01_NAMED SubExpression .	(Rule 79)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	ListElement -> SubExpression .	(Rule 182)

	')'	reduce using rule 79 (Operator)
	';'	reduce using rule 79 (Operator)
	OP04_MATH_POW	reduce using rule 79 (Operator)
	OP06_REGEX_MATCH	reduce using rule 79 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 79 (Operator)
	OP07_STRING_REPEAT	reduce using rule 79 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 79 (Operator)
	OP08_STRING_CAT	reduce using rule 79 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 79 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 79 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 79 (Operator)
	OP13_BITWISE_AND	reduce using rule 79 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 79 (Operator)
	OP15_LOGICAL_AND	reduce using rule 79 (Operator)
	OP16_LOGICAL_OR	reduce using rule 79 (Operator)
	OP17_LIST_RANGE	reduce using rule 79 (Operator)
	OP18_TERNARY	reduce using rule 79 (Operator)
	OP21_LIST_COMMA	reduce using rule 182 (ListElement)
	OP23_LOGICAL_AND	reduce using rule 79 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 79 (Operator)

State 196:

	Loop -> LoopForEach .	(Rule 157)

	$default	reduce using rule 157 (Loop)

State 197:

	Statement -> OPTIONAL-36 Loop .	(Rule 145)

	$default	reduce using rule 145 (Statement)

State 198:

	LoopWhile -> 'while' . LPAREN SubExpression ')' CodeBlock	(Rule 161)

	LPAREN	shift, and go to state 271

State 199:

	LoopForEach -> 'foreach' . MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 160)

	MY	shift, and go to state 272

State 200:

	LoopFor -> 'for' . MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 159)

	MY	shift, and go to state 273

State 201:

	Loop -> LoopFor .	(Rule 156)

	$default	reduce using rule 156 (Loop)

State 202:

	Loop -> LoopWhile .	(Rule 158)

	$default	reduce using rule 158 (Loop)

State 203:

	HashDereference -> '%{' OPTIONAL-51 . HashReference '}'	(Rule 206)

	LBRACE	shift, and go to state 105

	HashReference	go to state 274

State 204:

	HashDereference -> '%{' Variable . '}'	(Rule 205)

	'}'	shift, and go to state 275

State 205:

	OPTIONAL-51 -> TypeInner .	(Rule 203)

	$default	reduce using rule 203 (OPTIONAL-51)

State 206:

	Operator -> OP01_NAMED . SubExpression	(Rule 79)
	Operator -> LPAREN OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ')'	(Rule 80)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	MY	shift, and go to state 135
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP01_QW	shift, and go to state 130
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	WordScoped	go to state 92
	ListElement	go to state 276
	HashDereference	go to state 86
	HashReference	go to state 72
	TypeInner	go to state 134
	Literal	go to state 81
	ArrayReference	go to state 90
	Expression	go to state 127
	Variable	go to state 128
	Operator	go to state 71
	SubExpression	go to state 195
	ArrayDereference	go to state 74

State 207:

	Operator -> LPAREN OP01_PRINT . FHREF_SYMBOL_BRACES ListElements ')'	(Rule 78)

	FHREF_SYMBOL_BRACES	shift, and go to state 277

State 208:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	SubExpression -> LPAREN SubExpression . ')'	(Rule 138)

	')'	shift, and go to state 278
	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 172
	OP12_COMPARE_EQ_NE	shift, and go to state 173
	OP13_BITWISE_AND	shift, and go to state 175
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 176
	OP16_LOGICAL_OR	shift, and go to state 171
	OP17_LIST_RANGE	shift, and go to state 167
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 179
	OP24_LOGICAL_OR_XOR	shift, and go to state 166

State 209:

	Include -> 'use' WordScoped OP01_QW PLUS-15 ')' ';' .	(Rule 40)

	$default	reduce using rule 40 (Include)

State 210:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal . ';'	(Rule 41)

	';'	shift, and go to state 279

State 211:

	TypeInnerConstant -> MY Type . '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 213)

	'$TYPED_'	shift, and go to state 280

State 212:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 . STAR-17 '}' ';'	(Rule 46)

	$default	reduce using rule 45 (STAR-17)

	STAR-17	go to state 281

State 213:

	OPTIONAL-16 -> SubroutineArguments .	(Rule 42)

	$default	reduce using rule 42 (OPTIONAL-16)

State 214:

	SubroutineArguments -> LPAREN_MY . Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	TYPE_INTEGER	shift, and go to state 60
	WORD	shift, and go to state 58

	Type	go to state 282

State 215:

	STAR-21 -> STAR-21 Include .	(Rule 53)

	$default	reduce using rule 53 (STAR-21)

State 216:

	STAR-22 -> STAR-22 . Constant	(Rule 55)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 . Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	'our hashref $properties'	shift, and go to state 283
	'use constant'	shift, and go to state 46

	Properties	go to state 285
	Constant	go to state 284

State 217:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 119)

	$default	reduce using rule 119 (OperatorVoid)

State 218:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-32 ')' . ';'	(Rule 115)

	';'	shift, and go to state 286

State 219:

	PLUS-45 -> PLUS-45 . WORD	(Rule 180)
	ListElement -> OP01_QW PLUS-45 . ')'	(Rule 184)

	')'	shift, and go to state 287
	WORD	shift, and go to state 288

State 220:

	PLUS-45 -> WORD .	(Rule 181)

	$default	reduce using rule 181 (PLUS-45)

State 221:

	STAR-44 -> STAR-44 . PAREN-43	(Rule 177)
	ListElements -> ListElement STAR-44 .	(Rule 179)

	OP21_LIST_COMMA	shift, and go to state 289

	')'	reduce using rule 179 (ListElements)
	';'	reduce using rule 179 (ListElements)
	']'	reduce using rule 179 (ListElements)

	PAREN-43	go to state 290

State 222:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	ListElement -> TypeInner SubExpression .	(Rule 183)

	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 172
	OP12_COMPARE_EQ_NE	shift, and go to state 173
	OP13_BITWISE_AND	shift, and go to state 175
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 176
	OP16_LOGICAL_OR	shift, and go to state 171
	OP17_LIST_RANGE	shift, and go to state 167
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 179
	OP24_LOGICAL_OR_XOR	shift, and go to state 166

	')'	reduce using rule 183 (ListElement)
	';'	reduce using rule 183 (ListElement)
	']'	reduce using rule 183 (ListElement)
	OP21_LIST_COMMA	reduce using rule 183 (ListElement)

State 223:

	TypeInner -> MY Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 212)

	'$TYPED_'	shift, and go to state 291

State 224:

	Operator -> OP01_NAMED SubExpression .	(Rule 79)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	')'	reduce using rule 79 (Operator)
	';'	reduce using rule 79 (Operator)
	']'	reduce using rule 79 (Operator)
	'}'	reduce using rule 79 (Operator)
	OP04_MATH_POW	reduce using rule 79 (Operator)
	OP06_REGEX_MATCH	reduce using rule 79 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 79 (Operator)
	OP07_STRING_REPEAT	reduce using rule 79 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 79 (Operator)
	OP08_STRING_CAT	reduce using rule 79 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 79 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 79 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 79 (Operator)
	OP13_BITWISE_AND	reduce using rule 79 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 79 (Operator)
	OP15_LOGICAL_AND	reduce using rule 79 (Operator)
	OP16_LOGICAL_OR	reduce using rule 79 (Operator)
	OP17_LIST_RANGE	reduce using rule 79 (Operator)
	OP18_TERNARY	reduce using rule 79 (Operator)
	OP21_LIST_COMMA	reduce using rule 79 (Operator)
	OP23_LOGICAL_AND	reduce using rule 79 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 79 (Operator)

State 225:

	ArrayDereference -> '@{' Variable '}' .	(Rule 190)

	$default	reduce using rule 190 (ArrayDereference)

State 226:

	ArrayDereference -> '@{' OPTIONAL-47 ArrayReference . '}'	(Rule 191)

	'}'	shift, and go to state 292

State 227:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression . ';'	(Rule 175)

	';'	shift, and go to state 293
	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 172
	OP12_COMPARE_EQ_NE	shift, and go to state 173
	OP13_BITWISE_AND	shift, and go to state 175
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 176
	OP16_LOGICAL_OR	shift, and go to state 171
	OP17_LIST_RANGE	shift, and go to state 167
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 179
	OP24_LOGICAL_OR_XOR	shift, and go to state 166

State 228:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	SubExpressionOrStdin -> SubExpression .	(Rule 139)

	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 172
	OP12_COMPARE_EQ_NE	shift, and go to state 173
	OP13_BITWISE_AND	shift, and go to state 175
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 176
	OP16_LOGICAL_OR	shift, and go to state 171
	OP17_LIST_RANGE	shift, and go to state 167
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 179
	OP24_LOGICAL_OR_XOR	shift, and go to state 166

	';'	reduce using rule 139 (SubExpressionOrStdin)

State 229:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 174)

	';'	shift, and go to state 294

State 230:

	SubExpressionOrStdin -> STDIN .	(Rule 140)

	$default	reduce using rule 140 (SubExpressionOrStdin)

State 231:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN . OPTIONAL-34 ')'	(Rule 128)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	MY	shift, and go to state 135
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP01_QW	shift, and go to state 130
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	')'	reduce using rule 123 (OPTIONAL-34)

	SubExpression	go to state 131
	OPTIONAL-34	go to state 295
	ArrayDereference	go to state 74
	ListElements	go to state 296
	ListElement	go to state 132
	WordScoped	go to state 92
	TypeInner	go to state 134
	HashDereference	go to state 86
	HashReference	go to state 72
	Expression	go to state 127
	ArrayReference	go to state 90
	Literal	go to state 81
	Variable	go to state 128
	Operator	go to state 71

State 232:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	Conditional -> 'if' LPAREN SubExpression . ')' CodeBlock STAR-38 OPTIONAL-40	(Rule 155)

	')'	shift, and go to state 297
	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 172
	OP12_COMPARE_EQ_NE	shift, and go to state 173
	OP13_BITWISE_AND	shift, and go to state 175
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 176
	OP16_LOGICAL_OR	shift, and go to state 171
	OP17_LIST_RANGE	shift, and go to state 167
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 179
	OP24_LOGICAL_OR_XOR	shift, and go to state 166

State 233:

	OperatorVoid -> OP01_NAMED_VOID ListElements ';' .	(Rule 116)

	$default	reduce using rule 116 (OperatorVoid)

State 234:

	OPTIONAL-33 -> ListElements .	(Rule 120)

	$default	reduce using rule 120 (OPTIONAL-33)

State 235:

	Expression -> WordScoped LPAREN OPTIONAL-33 . ')'	(Rule 125)

	')'	shift, and go to state 298

State 236:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW ')' .	(Rule 129)

	$default	reduce using rule 129 (Expression)

State 237:

	Expression -> WordScoped SCOPE WORD_UPPERCASE . LPAREN ')'	(Rule 127)

	LPAREN	shift, and go to state 299

State 238:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements . ';'	(Rule 113)

	';'	shift, and go to state 300

State 239:

	OperatorVoid -> OP01_PRINT OPTIONAL-31 ListElements . ';'	(Rule 112)

	';'	shift, and go to state 301

State 240:

	Operator -> OP01_OPEN MY TYPE_FHREF . FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	FHREF_SYMBOL	shift, and go to state 302

State 241:

	ArrayReference -> LBRACKET OPTIONAL-46 ']' .	(Rule 187)

	$default	reduce using rule 187 (ArrayReference)

State 242:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression .	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 178

	')'	reduce using rule 90 (Operator)
	';'	reduce using rule 90 (Operator)
	']'	reduce using rule 90 (Operator)
	'}'	reduce using rule 90 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 90 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 90 (Operator)
	OP08_STRING_CAT	reduce using rule 90 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 90 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 90 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 90 (Operator)
	OP13_BITWISE_AND	reduce using rule 90 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 90 (Operator)
	OP15_LOGICAL_AND	reduce using rule 90 (Operator)
	OP16_LOGICAL_OR	reduce using rule 90 (Operator)
	OP17_LIST_RANGE	reduce using rule 90 (Operator)
	OP18_TERNARY	reduce using rule 90 (Operator)
	OP21_LIST_COMMA	reduce using rule 90 (Operator)
	OP23_LOGICAL_AND	reduce using rule 90 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 90 (Operator)

State 243:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression OP08_STRING_CAT SubExpression .	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168

	')'	reduce using rule 92 (Operator)
	';'	reduce using rule 92 (Operator)
	']'	reduce using rule 92 (Operator)
	'}'	reduce using rule 92 (Operator)
	OP08_STRING_CAT	reduce using rule 92 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 92 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 92 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 92 (Operator)
	OP13_BITWISE_AND	reduce using rule 92 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 92 (Operator)
	OP15_LOGICAL_AND	reduce using rule 92 (Operator)
	OP16_LOGICAL_OR	reduce using rule 92 (Operator)
	OP17_LIST_RANGE	reduce using rule 92 (Operator)
	OP18_TERNARY	reduce using rule 92 (Operator)
	OP21_LIST_COMMA	reduce using rule 92 (Operator)
	OP23_LOGICAL_AND	reduce using rule 92 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 92 (Operator)

State 244:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression OP04_MATH_POW SubExpression .	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 165

	')'	reduce using rule 85 (Operator)
	';'	reduce using rule 85 (Operator)
	']'	reduce using rule 85 (Operator)
	'}'	reduce using rule 85 (Operator)
	OP06_REGEX_MATCH	reduce using rule 85 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 85 (Operator)
	OP07_STRING_REPEAT	reduce using rule 85 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 85 (Operator)
	OP08_STRING_CAT	reduce using rule 85 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 85 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 85 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 85 (Operator)
	OP13_BITWISE_AND	reduce using rule 85 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 85 (Operator)
	OP15_LOGICAL_AND	reduce using rule 85 (Operator)
	OP16_LOGICAL_OR	reduce using rule 85 (Operator)
	OP17_LIST_RANGE	reduce using rule 85 (Operator)
	OP18_TERNARY	reduce using rule 85 (Operator)
	OP21_LIST_COMMA	reduce using rule 85 (Operator)
	OP23_LOGICAL_AND	reduce using rule 85 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 85 (Operator)

State 245:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression .	(Rule 106)

	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 172
	OP12_COMPARE_EQ_NE	shift, and go to state 173
	OP13_BITWISE_AND	shift, and go to state 175
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 176
	OP16_LOGICAL_OR	shift, and go to state 171
	OP17_LIST_RANGE	shift, and go to state 167
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 179

	')'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 246:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 172
	OP12_COMPARE_EQ_NE	shift, and go to state 173
	OP13_BITWISE_AND	shift, and go to state 175
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 176
	OP16_LOGICAL_OR	shift, and go to state 171

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 102 (Operator)
	';'	reduce using rule 102 (Operator)
	']'	reduce using rule 102 (Operator)
	'}'	reduce using rule 102 (Operator)
	OP18_TERNARY	reduce using rule 102 (Operator)
	OP21_LIST_COMMA	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 247:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression .	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178

	')'	reduce using rule 91 (Operator)
	';'	reduce using rule 91 (Operator)
	']'	reduce using rule 91 (Operator)
	'}'	reduce using rule 91 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 91 (Operator)
	OP08_STRING_CAT	reduce using rule 91 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 91 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 91 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 91 (Operator)
	OP13_BITWISE_AND	reduce using rule 91 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 91 (Operator)
	OP15_LOGICAL_AND	reduce using rule 91 (Operator)
	OP16_LOGICAL_OR	reduce using rule 91 (Operator)
	OP17_LIST_RANGE	reduce using rule 91 (Operator)
	OP18_TERNARY	reduce using rule 91 (Operator)
	OP21_LIST_COMMA	reduce using rule 91 (Operator)
	OP23_LOGICAL_AND	reduce using rule 91 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 91 (Operator)

State 248:

	VariableOrLiteral -> Literal .	(Rule 215)

	$default	reduce using rule 215 (VariableOrLiteral)

State 249:

	VariableOrLiteral -> Variable .	(Rule 214)

	$default	reduce using rule 214 (VariableOrLiteral)

State 250:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral . COLON VariableOrLiteral	(Rule 103)

	COLON	shift, and go to state 303

State 251:

	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN .	(Rule 88)

	$default	reduce using rule 88 (Operator)

State 252:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression OP16_LOGICAL_OR SubExpression .	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 172
	OP12_COMPARE_EQ_NE	shift, and go to state 173
	OP13_BITWISE_AND	shift, and go to state 175
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 176

	')'	reduce using rule 101 (Operator)
	';'	reduce using rule 101 (Operator)
	']'	reduce using rule 101 (Operator)
	'}'	reduce using rule 101 (Operator)
	OP16_LOGICAL_OR	reduce using rule 101 (Operator)
	OP17_LIST_RANGE	reduce using rule 101 (Operator)
	OP18_TERNARY	reduce using rule 101 (Operator)
	OP21_LIST_COMMA	reduce using rule 101 (Operator)
	OP23_LOGICAL_AND	reduce using rule 101 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 101 (Operator)

State 253:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression .	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 177

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 96 (Operator)
	';'	reduce using rule 96 (Operator)
	']'	reduce using rule 96 (Operator)
	'}'	reduce using rule 96 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 96 (Operator)
	OP13_BITWISE_AND	reduce using rule 96 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 96 (Operator)
	OP15_LOGICAL_AND	reduce using rule 96 (Operator)
	OP16_LOGICAL_OR	reduce using rule 96 (Operator)
	OP17_LIST_RANGE	reduce using rule 96 (Operator)
	OP18_TERNARY	reduce using rule 96 (Operator)
	OP21_LIST_COMMA	reduce using rule 96 (Operator)
	OP23_LOGICAL_AND	reduce using rule 96 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 96 (Operator)

State 254:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression .	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 172

	OP12_COMPARE_EQ_NE	error (nonassociative)

	')'	reduce using rule 97 (Operator)
	';'	reduce using rule 97 (Operator)
	']'	reduce using rule 97 (Operator)
	'}'	reduce using rule 97 (Operator)
	OP13_BITWISE_AND	reduce using rule 97 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 97 (Operator)
	OP15_LOGICAL_AND	reduce using rule 97 (Operator)
	OP16_LOGICAL_OR	reduce using rule 97 (Operator)
	OP17_LIST_RANGE	reduce using rule 97 (Operator)
	OP18_TERNARY	reduce using rule 97 (Operator)
	OP21_LIST_COMMA	reduce using rule 97 (Operator)
	OP23_LOGICAL_AND	reduce using rule 97 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 97 (Operator)

State 255:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression .	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 172
	OP12_COMPARE_EQ_NE	shift, and go to state 173
	OP13_BITWISE_AND	shift, and go to state 175

	')'	reduce using rule 99 (Operator)
	';'	reduce using rule 99 (Operator)
	']'	reduce using rule 99 (Operator)
	'}'	reduce using rule 99 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 99 (Operator)
	OP15_LOGICAL_AND	reduce using rule 99 (Operator)
	OP16_LOGICAL_OR	reduce using rule 99 (Operator)
	OP17_LIST_RANGE	reduce using rule 99 (Operator)
	OP18_TERNARY	reduce using rule 99 (Operator)
	OP21_LIST_COMMA	reduce using rule 99 (Operator)
	OP23_LOGICAL_AND	reduce using rule 99 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 99 (Operator)

State 256:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression OP13_BITWISE_AND SubExpression .	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 172
	OP12_COMPARE_EQ_NE	shift, and go to state 173

	')'	reduce using rule 98 (Operator)
	';'	reduce using rule 98 (Operator)
	']'	reduce using rule 98 (Operator)
	'}'	reduce using rule 98 (Operator)
	OP13_BITWISE_AND	reduce using rule 98 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 98 (Operator)
	OP15_LOGICAL_AND	reduce using rule 98 (Operator)
	OP16_LOGICAL_OR	reduce using rule 98 (Operator)
	OP17_LIST_RANGE	reduce using rule 98 (Operator)
	OP18_TERNARY	reduce using rule 98 (Operator)
	OP21_LIST_COMMA	reduce using rule 98 (Operator)
	OP23_LOGICAL_AND	reduce using rule 98 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 98 (Operator)

State 257:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression OP15_LOGICAL_AND SubExpression .	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 172
	OP12_COMPARE_EQ_NE	shift, and go to state 173
	OP13_BITWISE_AND	shift, and go to state 175
	OP14_BITWISE_OR_XOR	shift, and go to state 174

	')'	reduce using rule 100 (Operator)
	';'	reduce using rule 100 (Operator)
	']'	reduce using rule 100 (Operator)
	'}'	reduce using rule 100 (Operator)
	OP15_LOGICAL_AND	reduce using rule 100 (Operator)
	OP16_LOGICAL_OR	reduce using rule 100 (Operator)
	OP17_LIST_RANGE	reduce using rule 100 (Operator)
	OP18_TERNARY	reduce using rule 100 (Operator)
	OP21_LIST_COMMA	reduce using rule 100 (Operator)
	OP23_LOGICAL_AND	reduce using rule 100 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 100 (Operator)

State 258:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression .	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164

	')'	reduce using rule 93 (Operator)
	';'	reduce using rule 93 (Operator)
	']'	reduce using rule 93 (Operator)
	'}'	reduce using rule 93 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 93 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 93 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 93 (Operator)
	OP13_BITWISE_AND	reduce using rule 93 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 93 (Operator)
	OP15_LOGICAL_AND	reduce using rule 93 (Operator)
	OP16_LOGICAL_OR	reduce using rule 93 (Operator)
	OP17_LIST_RANGE	reduce using rule 93 (Operator)
	OP18_TERNARY	reduce using rule 93 (Operator)
	OP21_LIST_COMMA	reduce using rule 93 (Operator)
	OP23_LOGICAL_AND	reduce using rule 93 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 93 (Operator)

State 259:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression OP07_STRING_REPEAT SubExpression .	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170

	')'	reduce using rule 89 (Operator)
	';'	reduce using rule 89 (Operator)
	']'	reduce using rule 89 (Operator)
	'}'	reduce using rule 89 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 89 (Operator)
	OP07_STRING_REPEAT	reduce using rule 89 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 89 (Operator)
	OP08_STRING_CAT	reduce using rule 89 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 89 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 89 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 89 (Operator)
	OP13_BITWISE_AND	reduce using rule 89 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 89 (Operator)
	OP15_LOGICAL_AND	reduce using rule 89 (Operator)
	OP16_LOGICAL_OR	reduce using rule 89 (Operator)
	OP17_LIST_RANGE	reduce using rule 89 (Operator)
	OP18_TERNARY	reduce using rule 89 (Operator)
	OP21_LIST_COMMA	reduce using rule 89 (Operator)
	OP23_LOGICAL_AND	reduce using rule 89 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 89 (Operator)

State 260:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression OP23_LOGICAL_AND SubExpression .	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 172
	OP12_COMPARE_EQ_NE	shift, and go to state 173
	OP13_BITWISE_AND	shift, and go to state 175
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 176
	OP16_LOGICAL_OR	shift, and go to state 171
	OP17_LIST_RANGE	shift, and go to state 167
	OP18_TERNARY	shift, and go to state 169

	')'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 261:

	STAR-50 -> STAR-50 . PAREN-49	(Rule 199)
	HashReference -> LBRACE HashEntry STAR-50 . '}'	(Rule 201)

	'}'	shift, and go to state 305
	OP21_LIST_COMMA	shift, and go to state 306

	PAREN-49	go to state 304

State 262:

	HashEntry -> VariableOrLiteralOrWord OP20_HASH_FATARROW . OPTIONAL-48 SubExpression	(Rule 194)

	MY	shift, and go to state 135

	'%{'	reduce using rule 193 (OPTIONAL-48)
	'@{'	reduce using rule 193 (OPTIONAL-48)
	'undef'	reduce using rule 193 (OPTIONAL-48)
	LBRACE	reduce using rule 193 (OPTIONAL-48)
	LBRACKET	reduce using rule 193 (OPTIONAL-48)
	LITERAL_NUMBER	reduce using rule 193 (OPTIONAL-48)
	LITERAL_STRING	reduce using rule 193 (OPTIONAL-48)
	LPAREN	reduce using rule 193 (OPTIONAL-48)
	OP01_CLOSE	reduce using rule 193 (OPTIONAL-48)
	OP01_NAMED	reduce using rule 193 (OPTIONAL-48)
	OP01_OPEN	reduce using rule 193 (OPTIONAL-48)
	OP03_MATH_INC_DEC	reduce using rule 193 (OPTIONAL-48)
	OP05_LOGICAL_NEG	reduce using rule 193 (OPTIONAL-48)
	OP05_MATH_NEG_LPAREN	reduce using rule 193 (OPTIONAL-48)
	OP10_NAMED_UNARY	reduce using rule 193 (OPTIONAL-48)
	OP22_LOGICAL_NEG	reduce using rule 193 (OPTIONAL-48)
	VARIABLE_SYMBOL	reduce using rule 193 (OPTIONAL-48)
	WORD	reduce using rule 193 (OPTIONAL-48)
	WORD_SCOPED	reduce using rule 193 (OPTIONAL-48)
	WORD_UPPERCASE	reduce using rule 193 (OPTIONAL-48)

	OPTIONAL-48	go to state 307
	TypeInner	go to state 308

State 263:

	STAR-42 -> STAR-42 VariableRetrieval .	(Rule 165)

	$default	reduce using rule 165 (STAR-42)

State 264:

	VariableRetrieval -> OP02_ARRAY_THINARROW . SubExpression ']'	(Rule 168)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	Variable	go to state 128
	Operator	go to state 71
	Literal	go to state 81
	ArrayReference	go to state 90
	Expression	go to state 127
	HashReference	go to state 72
	HashDereference	go to state 86
	WordScoped	go to state 92
	ArrayDereference	go to state 74
	SubExpression	go to state 309

State 265:

	VariableRetrieval -> OP02_HASH_THINARROW . SubExpression '}'	(Rule 169)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 170)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 311
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	SubExpression	go to state 310
	ArrayDereference	go to state 74
	WordScoped	go to state 92
	HashDereference	go to state 86
	HashReference	go to state 72
	ArrayReference	go to state 90
	Expression	go to state 127
	Literal	go to state 81
	Operator	go to state 71
	Variable	go to state 128

State 266:

	Expression -> WORD_UPPERCASE LPAREN ')' .	(Rule 126)

	$default	reduce using rule 126 (Expression)

State 267:

	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL . ';'	(Rule 173)

	';'	shift, and go to state 312

State 268:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL . ';'	(Rule 171)
	VariableDeclaration -> MY Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 172)

	';'	shift, and go to state 314
	OP19_VARIABLE_ASSIGN	shift, and go to state 313

State 269:

	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')' .	(Rule 87)

	$default	reduce using rule 87 (Operator)

State 270:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ';'	(Rule 117)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	MY	shift, and go to state 135
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP01_QW	shift, and go to state 130
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	WordScoped	go to state 92
	ListElement	go to state 132
	TypeInner	go to state 134
	HashReference	go to state 72
	HashDereference	go to state 86
	ArrayReference	go to state 90
	Literal	go to state 81
	Expression	go to state 127
	Operator	go to state 71
	Variable	go to state 128
	SubExpression	go to state 131
	ArrayDereference	go to state 74
	ListElements	go to state 315

State 271:

	LoopWhile -> 'while' LPAREN . SubExpression ')' CodeBlock	(Rule 161)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	WordScoped	go to state 92
	HashDereference	go to state 86
	HashReference	go to state 72
	Expression	go to state 127
	ArrayReference	go to state 90
	Literal	go to state 81
	Variable	go to state 128
	Operator	go to state 71
	SubExpression	go to state 316
	ArrayDereference	go to state 74

State 272:

	LoopForEach -> 'foreach' MY . Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 160)

	TYPE_INTEGER	shift, and go to state 60
	WORD	shift, and go to state 58

	Type	go to state 317

State 273:

	LoopFor -> 'for' MY . TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 159)

	TYPE_INTEGER	shift, and go to state 318

State 274:

	HashDereference -> '%{' OPTIONAL-51 HashReference . '}'	(Rule 206)

	'}'	shift, and go to state 319

State 275:

	HashDereference -> '%{' Variable '}' .	(Rule 205)

	$default	reduce using rule 205 (HashDereference)

State 276:

	Operator -> LPAREN OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ')'	(Rule 80)

	OP21_LIST_COMMA	shift, and go to state 320

State 277:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES . ListElements ')'	(Rule 78)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	MY	shift, and go to state 135
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP01_QW	shift, and go to state 130
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	ArrayDereference	go to state 74
	ListElements	go to state 321
	SubExpression	go to state 131
	ArrayReference	go to state 90
	Expression	go to state 127
	Literal	go to state 81
	Operator	go to state 71
	Variable	go to state 128
	ListElement	go to state 132
	WordScoped	go to state 92
	TypeInner	go to state 134
	HashDereference	go to state 86
	HashReference	go to state 72

State 278:

	SubExpression -> LPAREN SubExpression ')' .	(Rule 138)

	$default	reduce using rule 138 (SubExpression)

State 279:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';' .	(Rule 41)

	$default	reduce using rule 41 (Constant)

State 280:

	TypeInnerConstant -> MY Type '$TYPED_' . WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 213)

	WORD_UPPERCASE	shift, and go to state 322

State 281:

	STAR-17 -> STAR-17 . Operation	(Rule 44)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 STAR-17 . '}' ';'	(Rule 46)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'if'	shift, and go to state 88
	'undef'	shift, and go to state 78
	'}'	shift, and go to state 323
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	MY	shift, and go to state 109
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 111
	OP01_NAMED_VOID	shift, and go to state 89
	OP01_NAMED_VOID_LPAREN	shift, and go to state 75
	OP01_NAMED_VOID_SCOLON	shift, and go to state 113
	OP01_OPEN	shift, and go to state 97
	OP01_PRINT	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP19_LOOP_CONTROL	shift, and go to state 73
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 83
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 108

	'for'	reduce using rule 143 (OPTIONAL-36)
	'foreach'	reduce using rule 143 (OPTIONAL-36)
	'while'	reduce using rule 143 (OPTIONAL-36)

	OPTIONAL-36	go to state 115
	OperatorVoid	go to state 87
	HashDereference	go to state 86
	LoopLabel	go to state 84
	Variable	go to state 82
	Expression	go to state 80
	Literal	go to state 81
	Operation	go to state 324
	Conditional	go to state 103
	PAREN-35	go to state 104
	SubExpression	go to state 101
	Statement	go to state 100
	ArrayDereference	go to state 74
	VariableDeclaration	go to state 96
	HashReference	go to state 72
	VariableModification	go to state 93
	WordScoped	go to state 92
	Operator	go to state 71
	ArrayReference	go to state 90

State 282:

	SubroutineArguments -> LPAREN_MY Type . VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	VARIABLE_SYMBOL	shift, and go to state 325

State 283:

	Properties -> 'our hashref $properties' . OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 '}' ';'	(Rule 63)
	Properties -> 'our hashref $properties' . OP19_VARIABLE_ASSIGN LBRACE '}' ';'	(Rule 64)

	OP19_VARIABLE_ASSIGN	shift, and go to state 326

State 284:

	STAR-22 -> STAR-22 Constant .	(Rule 55)

	$default	reduce using rule 55 (STAR-22)

State 285:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties . STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	$default	reduce using rule 58 (STAR-23)

	STAR-23	go to state 327

State 286:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-32 ')' ';' .	(Rule 115)

	$default	reduce using rule 115 (OperatorVoid)

State 287:

	ListElement -> OP01_QW PLUS-45 ')' .	(Rule 184)

	$default	reduce using rule 184 (ListElement)

State 288:

	PLUS-45 -> PLUS-45 WORD .	(Rule 180)

	$default	reduce using rule 180 (PLUS-45)

State 289:

	PAREN-43 -> OP21_LIST_COMMA . ListElement	(Rule 176)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	MY	shift, and go to state 135
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP01_QW	shift, and go to state 130
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	ArrayReference	go to state 90
	Expression	go to state 127
	Literal	go to state 81
	Operator	go to state 71
	Variable	go to state 128
	WordScoped	go to state 92
	ListElement	go to state 328
	HashDereference	go to state 86
	HashReference	go to state 72
	TypeInner	go to state 134
	ArrayDereference	go to state 74
	SubExpression	go to state 131

State 290:

	STAR-44 -> STAR-44 PAREN-43 .	(Rule 177)

	$default	reduce using rule 177 (STAR-44)

State 291:

	TypeInner -> MY Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 212)

	WORD	shift, and go to state 329

State 292:

	ArrayDereference -> '@{' OPTIONAL-47 ArrayReference '}' .	(Rule 191)

	$default	reduce using rule 191 (ArrayDereference)

State 293:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';' .	(Rule 175)

	$default	reduce using rule 175 (VariableModification)

State 294:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 174)

	$default	reduce using rule 174 (VariableModification)

State 295:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-34 . ')'	(Rule 128)

	')'	shift, and go to state 330

State 296:

	OPTIONAL-34 -> ListElements .	(Rule 122)

	$default	reduce using rule 122 (OPTIONAL-34)

State 297:

	Conditional -> 'if' LPAREN SubExpression ')' . CodeBlock STAR-38 OPTIONAL-40	(Rule 155)

	LBRACE	shift, and go to state 332

	CodeBlock	go to state 331

State 298:

	Expression -> WordScoped LPAREN OPTIONAL-33 ')' .	(Rule 125)

	$default	reduce using rule 125 (Expression)

State 299:

	Expression -> WordScoped SCOPE WORD_UPPERCASE LPAREN . ')'	(Rule 127)

	')'	shift, and go to state 333

State 300:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements ';' .	(Rule 113)

	$default	reduce using rule 113 (OperatorVoid)

State 301:

	OperatorVoid -> OP01_PRINT OPTIONAL-31 ListElements ';' .	(Rule 112)

	$default	reduce using rule 112 (OperatorVoid)

State 302:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL . OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	OP21_LIST_COMMA	shift, and go to state 334

State 303:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON . VariableOrLiteral	(Rule 103)

	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	VARIABLE_SYMBOL	shift, and go to state 107

	VariableOrLiteral	go to state 335
	Variable	go to state 249
	Literal	go to state 248

State 304:

	STAR-50 -> STAR-50 PAREN-49 .	(Rule 199)

	$default	reduce using rule 199 (STAR-50)

State 305:

	HashReference -> LBRACE HashEntry STAR-50 '}' .	(Rule 201)

	$default	reduce using rule 201 (HashReference)

State 306:

	PAREN-49 -> OP21_LIST_COMMA . HashEntry	(Rule 198)

	'%{'	shift, and go to state 116
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 181

	Variable	go to state 184
	VariableOrLiteralOrWord	go to state 187
	Literal	go to state 183
	HashDereference	go to state 182
	HashEntry	go to state 336

State 307:

	HashEntry -> VariableOrLiteralOrWord OP20_HASH_FATARROW OPTIONAL-48 . SubExpression	(Rule 194)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	SubExpression	go to state 337
	ArrayDereference	go to state 74
	WordScoped	go to state 92
	HashDereference	go to state 86
	HashReference	go to state 72
	Expression	go to state 127
	ArrayReference	go to state 90
	Literal	go to state 81
	Variable	go to state 128
	Operator	go to state 71

State 308:

	OPTIONAL-48 -> TypeInner .	(Rule 192)

	$default	reduce using rule 192 (OPTIONAL-48)

State 309:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression . ']'	(Rule 168)

	']'	shift, and go to state 338
	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 172
	OP12_COMPARE_EQ_NE	shift, and go to state 173
	OP13_BITWISE_AND	shift, and go to state 175
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 176
	OP16_LOGICAL_OR	shift, and go to state 171
	OP17_LIST_RANGE	shift, and go to state 167
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 179
	OP24_LOGICAL_OR_XOR	shift, and go to state 166

State 310:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	VariableRetrieval -> OP02_HASH_THINARROW SubExpression . '}'	(Rule 169)

	'}'	shift, and go to state 339
	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 172
	OP12_COMPARE_EQ_NE	shift, and go to state 173
	OP13_BITWISE_AND	shift, and go to state 175
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 176
	OP16_LOGICAL_OR	shift, and go to state 171
	OP17_LIST_RANGE	shift, and go to state 167
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 179
	OP24_LOGICAL_OR_XOR	shift, and go to state 166

State 311:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 170)
	WordScoped -> WORD .	(Rule 207)

	'}'	shift, and go to state 340

	LPAREN	reduce using rule 207 (WordScoped)
	OP02_METHOD_THINARROW_NEW	reduce using rule 207 (WordScoped)
	SCOPE	reduce using rule 207 (WordScoped)

State 312:

	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL ';' .	(Rule 173)

	$default	reduce using rule 173 (VariableDeclaration)

State 313:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 172)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	STDIN	shift, and go to state 230
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	SubExpression	go to state 228
	ArrayDereference	go to state 74
	HashDereference	go to state 86
	HashReference	go to state 72
	SubExpressionOrStdin	go to state 341
	WordScoped	go to state 92
	Variable	go to state 128
	Operator	go to state 71
	Literal	go to state 81
	ArrayReference	go to state 90
	Expression	go to state 127

State 314:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL ';' .	(Rule 171)

	$default	reduce using rule 171 (VariableDeclaration)

State 315:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ';'	(Rule 117)

	';'	shift, and go to state 342

State 316:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	LoopWhile -> 'while' LPAREN SubExpression . ')' CodeBlock	(Rule 161)

	')'	shift, and go to state 343
	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 172
	OP12_COMPARE_EQ_NE	shift, and go to state 173
	OP13_BITWISE_AND	shift, and go to state 175
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 176
	OP16_LOGICAL_OR	shift, and go to state 171
	OP17_LIST_RANGE	shift, and go to state 167
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 179
	OP24_LOGICAL_OR_XOR	shift, and go to state 166

State 317:

	LoopForEach -> 'foreach' MY Type . VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 160)

	VARIABLE_SYMBOL	shift, and go to state 344

State 318:

	LoopFor -> 'for' MY TYPE_INTEGER . VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 159)

	VARIABLE_SYMBOL	shift, and go to state 345

State 319:

	HashDereference -> '%{' OPTIONAL-51 HashReference '}' .	(Rule 206)

	$default	reduce using rule 206 (HashDereference)

State 320:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ')'	(Rule 80)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	MY	shift, and go to state 135
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP01_QW	shift, and go to state 130
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	Literal	go to state 81
	Expression	go to state 127
	ArrayReference	go to state 90
	Variable	go to state 128
	Operator	go to state 71
	WordScoped	go to state 92
	ListElement	go to state 132
	HashReference	go to state 72
	HashDereference	go to state 86
	TypeInner	go to state 134
	ListElements	go to state 346
	ArrayDereference	go to state 74
	SubExpression	go to state 131

State 321:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements . ')'	(Rule 78)

	')'	shift, and go to state 347

State 322:

	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE . OP19_VARIABLE_ASSIGN	(Rule 213)

	OP19_VARIABLE_ASSIGN	shift, and go to state 348

State 323:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 STAR-17 '}' . ';'	(Rule 46)

	';'	shift, and go to state 349

State 324:

	STAR-17 -> STAR-17 Operation .	(Rule 44)

	$default	reduce using rule 44 (STAR-17)

State 325:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL . STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	$default	reduce using rule 49 (STAR-19)

	STAR-19	go to state 350

State 326:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN . LBRACE HashEntryTyped STAR-25 '}' ';'	(Rule 63)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN . LBRACE '}' ';'	(Rule 64)

	LBRACE	shift, and go to state 351

State 327:

	STAR-23 -> STAR-23 . MethodOrSubroutine	(Rule 57)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 . LITERAL_NUMBER ';'	(Rule 59)

	'our'	shift, and go to state 356
	LITERAL_NUMBER	shift, and go to state 353

	Method	go to state 355
	Subroutine	go to state 354
	MethodOrSubroutine	go to state 352

State 328:

	PAREN-43 -> OP21_LIST_COMMA ListElement .	(Rule 176)

	$default	reduce using rule 176 (PAREN-43)

State 329:

	TypeInner -> MY Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 212)

	OP19_VARIABLE_ASSIGN	shift, and go to state 357

State 330:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-34 ')' .	(Rule 128)

	$default	reduce using rule 128 (Expression)

State 331:

	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock . STAR-38 OPTIONAL-40	(Rule 155)

	$default	reduce using rule 151 (STAR-38)

	STAR-38	go to state 358

State 332:

	CodeBlock -> LBRACE . PLUS-41 '}'	(Rule 164)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'if'	shift, and go to state 88
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	MY	shift, and go to state 109
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 111
	OP01_NAMED_VOID	shift, and go to state 89
	OP01_NAMED_VOID_LPAREN	shift, and go to state 75
	OP01_NAMED_VOID_SCOLON	shift, and go to state 113
	OP01_OPEN	shift, and go to state 97
	OP01_PRINT	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP19_LOOP_CONTROL	shift, and go to state 73
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 83
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 108

	'for'	reduce using rule 143 (OPTIONAL-36)
	'foreach'	reduce using rule 143 (OPTIONAL-36)
	'while'	reduce using rule 143 (OPTIONAL-36)

	ArrayReference	go to state 90
	Operator	go to state 71
	WordScoped	go to state 92
	VariableModification	go to state 93
	HashReference	go to state 72
	VariableDeclaration	go to state 96
	ArrayDereference	go to state 74
	Statement	go to state 100
	SubExpression	go to state 101
	PAREN-35	go to state 104
	Conditional	go to state 103
	Operation	go to state 360
	Literal	go to state 81
	Expression	go to state 80
	PLUS-41	go to state 359
	Variable	go to state 82
	LoopLabel	go to state 84
	HashDereference	go to state 86
	OperatorVoid	go to state 87
	OPTIONAL-36	go to state 115

State 333:

	Expression -> WordScoped SCOPE WORD_UPPERCASE LPAREN ')' .	(Rule 127)

	$default	reduce using rule 127 (Expression)

State 334:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA . LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	LITERAL_STRING	shift, and go to state 361

State 335:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral .	(Rule 103)

	$default	reduce using rule 103 (Operator)

State 336:

	PAREN-49 -> OP21_LIST_COMMA HashEntry .	(Rule 198)

	$default	reduce using rule 198 (PAREN-49)

State 337:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	HashEntry -> VariableOrLiteralOrWord OP20_HASH_FATARROW OPTIONAL-48 SubExpression .	(Rule 194)

	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 172
	OP12_COMPARE_EQ_NE	shift, and go to state 173
	OP13_BITWISE_AND	shift, and go to state 175
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 176
	OP16_LOGICAL_OR	shift, and go to state 171
	OP17_LIST_RANGE	shift, and go to state 167
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 179
	OP24_LOGICAL_OR_XOR	shift, and go to state 166

	'}'	reduce using rule 194 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 194 (HashEntry)

State 338:

	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']' .	(Rule 168)

	$default	reduce using rule 168 (VariableRetrieval)

State 339:

	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}' .	(Rule 169)

	$default	reduce using rule 169 (VariableRetrieval)

State 340:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 170)

	$default	reduce using rule 170 (VariableRetrieval)

State 341:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 172)

	';'	shift, and go to state 362

State 342:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';' .	(Rule 117)

	$default	reduce using rule 117 (OperatorVoid)

State 343:

	LoopWhile -> 'while' LPAREN SubExpression ')' . CodeBlock	(Rule 161)

	LBRACE	shift, and go to state 332

	CodeBlock	go to state 363

State 344:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL . LPAREN ListElements ')' CodeBlock	(Rule 160)

	LPAREN	shift, and go to state 364

State 345:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL . LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 159)

	LPAREN	shift, and go to state 365

State 346:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ')'	(Rule 80)

	')'	shift, and go to state 366

State 347:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')' .	(Rule 78)

	$default	reduce using rule 78 (Operator)

State 348:

	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN .	(Rule 213)

	$default	reduce using rule 213 (TypeInnerConstant)

State 349:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 STAR-17 '}' ';' .	(Rule 46)

	$default	reduce using rule 46 (Subroutine)

State 350:

	STAR-19 -> STAR-19 . PAREN-18	(Rule 48)
	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	')'	shift, and go to state 368
	OP21_LIST_COMMA	shift, and go to state 369

	PAREN-18	go to state 367

State 351:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE . HashEntryTyped STAR-25 '}' ';'	(Rule 63)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE . '}' ';'	(Rule 64)

	'%{'	shift, and go to state 116
	'}'	shift, and go to state 370
	WORD	shift, and go to state 373

	HashDereference	go to state 372
	HashEntryTyped	go to state 371

State 352:

	STAR-23 -> STAR-23 MethodOrSubroutine .	(Rule 57)

	$default	reduce using rule 57 (STAR-23)

State 353:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER . ';'	(Rule 59)

	';'	shift, and go to state 374

State 354:

	MethodOrSubroutine -> Subroutine .	(Rule 75)

	$default	reduce using rule 75 (MethodOrSubroutine)

State 355:

	MethodOrSubroutine -> Method .	(Rule 74)

	$default	reduce using rule 74 (MethodOrSubroutine)

State 356:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 STAR-17 '}' ';'	(Rule 46)
	Method -> 'our' . TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 STAR-27 '}' ';'	(Rule 69)

	TYPE_INTEGER	shift, and go to state 60
	TYPE_METHOD	shift, and go to state 375
	WORD	shift, and go to state 58

	Type	go to state 59

State 357:

	TypeInner -> MY Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 212)

	$default	reduce using rule 212 (TypeInner)

State 358:

	STAR-38 -> STAR-38 . PAREN-37	(Rule 150)
	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-38 . OPTIONAL-40	(Rule 155)

	'else'	shift, and go to state 378
	'elsif'	shift, and go to state 380

	$end	reduce using rule 154 (OPTIONAL-40)
	'%{'	reduce using rule 154 (OPTIONAL-40)
	'@{'	reduce using rule 154 (OPTIONAL-40)
	'for'	reduce using rule 154 (OPTIONAL-40)
	'foreach'	reduce using rule 154 (OPTIONAL-40)
	'if'	reduce using rule 154 (OPTIONAL-40)
	'undef'	reduce using rule 154 (OPTIONAL-40)
	'while'	reduce using rule 154 (OPTIONAL-40)
	'}'	reduce using rule 154 (OPTIONAL-40)
	LBRACE	reduce using rule 154 (OPTIONAL-40)
	LBRACKET	reduce using rule 154 (OPTIONAL-40)
	LITERAL_NUMBER	reduce using rule 154 (OPTIONAL-40)
	LITERAL_STRING	reduce using rule 154 (OPTIONAL-40)
	LPAREN	reduce using rule 154 (OPTIONAL-40)
	MY	reduce using rule 154 (OPTIONAL-40)
	OP01_CLOSE	reduce using rule 154 (OPTIONAL-40)
	OP01_NAMED	reduce using rule 154 (OPTIONAL-40)
	OP01_NAMED_VOID	reduce using rule 154 (OPTIONAL-40)
	OP01_NAMED_VOID_LPAREN	reduce using rule 154 (OPTIONAL-40)
	OP01_NAMED_VOID_SCOLON	reduce using rule 154 (OPTIONAL-40)
	OP01_OPEN	reduce using rule 154 (OPTIONAL-40)
	OP01_PRINT	reduce using rule 154 (OPTIONAL-40)
	OP03_MATH_INC_DEC	reduce using rule 154 (OPTIONAL-40)
	OP05_LOGICAL_NEG	reduce using rule 154 (OPTIONAL-40)
	OP05_MATH_NEG_LPAREN	reduce using rule 154 (OPTIONAL-40)
	OP10_NAMED_UNARY	reduce using rule 154 (OPTIONAL-40)
	OP19_LOOP_CONTROL	reduce using rule 154 (OPTIONAL-40)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 154 (OPTIONAL-40)
	OP22_LOGICAL_NEG	reduce using rule 154 (OPTIONAL-40)
	VARIABLE_SYMBOL	reduce using rule 154 (OPTIONAL-40)
	WORD	reduce using rule 154 (OPTIONAL-40)
	WORD_SCOPED	reduce using rule 154 (OPTIONAL-40)
	WORD_UPPERCASE	reduce using rule 154 (OPTIONAL-40)

	PAREN-37	go to state 377
	OPTIONAL-40	go to state 379
	PAREN-39	go to state 376

State 359:

	PLUS-41 -> PLUS-41 . Operation	(Rule 162)
	CodeBlock -> LBRACE PLUS-41 . '}'	(Rule 164)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'if'	shift, and go to state 88
	'undef'	shift, and go to state 78
	'}'	shift, and go to state 381
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	MY	shift, and go to state 109
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 111
	OP01_NAMED_VOID	shift, and go to state 89
	OP01_NAMED_VOID_LPAREN	shift, and go to state 75
	OP01_NAMED_VOID_SCOLON	shift, and go to state 113
	OP01_OPEN	shift, and go to state 97
	OP01_PRINT	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP19_LOOP_CONTROL	shift, and go to state 73
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 83
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 108

	'for'	reduce using rule 143 (OPTIONAL-36)
	'foreach'	reduce using rule 143 (OPTIONAL-36)
	'while'	reduce using rule 143 (OPTIONAL-36)

	OperatorVoid	go to state 87
	OPTIONAL-36	go to state 115
	Operation	go to state 382
	Literal	go to state 81
	Expression	go to state 80
	Variable	go to state 82
	LoopLabel	go to state 84
	HashDereference	go to state 86
	VariableDeclaration	go to state 96
	ArrayDereference	go to state 74
	Statement	go to state 100
	SubExpression	go to state 101
	PAREN-35	go to state 104
	Conditional	go to state 103
	ArrayReference	go to state 90
	Operator	go to state 71
	VariableModification	go to state 93
	WordScoped	go to state 92
	HashReference	go to state 72

State 360:

	PLUS-41 -> Operation .	(Rule 163)

	$default	reduce using rule 163 (PLUS-41)

State 361:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING . OP21_LIST_COMMA SubExpression	(Rule 81)

	OP21_LIST_COMMA	shift, and go to state 383

State 362:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 172)

	$default	reduce using rule 172 (VariableDeclaration)

State 363:

	LoopWhile -> 'while' LPAREN SubExpression ')' CodeBlock .	(Rule 161)

	$default	reduce using rule 161 (LoopWhile)

State 364:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN . ListElements ')' CodeBlock	(Rule 160)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	MY	shift, and go to state 135
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP01_QW	shift, and go to state 130
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	HashReference	go to state 72
	HashDereference	go to state 86
	TypeInner	go to state 134
	WordScoped	go to state 92
	ListElement	go to state 132
	Variable	go to state 128
	Operator	go to state 71
	Expression	go to state 127
	Literal	go to state 81
	ArrayReference	go to state 90
	SubExpression	go to state 131
	ListElements	go to state 384
	ArrayDereference	go to state 74

State 365:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN . SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 159)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	HashReference	go to state 72
	HashDereference	go to state 86
	WordScoped	go to state 92
	Variable	go to state 128
	Operator	go to state 71
	ArrayReference	go to state 90
	Expression	go to state 127
	Literal	go to state 81
	SubExpression	go to state 385
	ArrayDereference	go to state 74

State 366:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' .	(Rule 80)

	$default	reduce using rule 80 (Operator)

State 367:

	STAR-19 -> STAR-19 PAREN-18 .	(Rule 48)

	$default	reduce using rule 48 (STAR-19)

State 368:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	OP19_VARIABLE_ASSIGN	shift, and go to state 386

State 369:

	PAREN-18 -> OP21_LIST_COMMA . MY Type VARIABLE_SYMBOL	(Rule 47)

	MY	shift, and go to state 387

State 370:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' . ';'	(Rule 64)

	';'	shift, and go to state 388

State 371:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped . STAR-25 '}' ';'	(Rule 63)

	$default	reduce using rule 62 (STAR-25)

	STAR-25	go to state 389

State 372:

	HashEntryTyped -> HashDereference .	(Rule 197)

	$default	reduce using rule 197 (HashEntryTyped)

State 373:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner SubExpression	(Rule 196)

	OP20_HASH_FATARROW	shift, and go to state 390

State 374:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';' .	(Rule 59)

	$default	reduce using rule 59 (Class)

State 375:

	Method -> 'our' TYPE_METHOD . VARIABLE_SYMBOL '= sub {' OPTIONAL-26 STAR-27 '}' ';'	(Rule 69)

	VARIABLE_SYMBOL	shift, and go to state 391

State 376:

	OPTIONAL-40 -> PAREN-39 .	(Rule 153)

	$default	reduce using rule 153 (OPTIONAL-40)

State 377:

	STAR-38 -> STAR-38 PAREN-37 .	(Rule 150)

	$default	reduce using rule 150 (STAR-38)

State 378:

	PAREN-39 -> 'else' . CodeBlock	(Rule 152)

	LBRACE	shift, and go to state 332

	CodeBlock	go to state 392

State 379:

	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-38 OPTIONAL-40 .	(Rule 155)

	$default	reduce using rule 155 (Conditional)

State 380:

	PAREN-37 -> 'elsif' . LPAREN SubExpression ')' CodeBlock	(Rule 149)

	LPAREN	shift, and go to state 393

State 381:

	CodeBlock -> LBRACE PLUS-41 '}' .	(Rule 164)

	$default	reduce using rule 164 (CodeBlock)

State 382:

	PLUS-41 -> PLUS-41 Operation .	(Rule 162)

	$default	reduce using rule 162 (PLUS-41)

State 383:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA . SubExpression	(Rule 81)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	WordScoped	go to state 92
	HashDereference	go to state 86
	HashReference	go to state 72
	Literal	go to state 81
	Expression	go to state 127
	ArrayReference	go to state 90
	Operator	go to state 71
	Variable	go to state 128
	SubExpression	go to state 394
	ArrayDereference	go to state 74

State 384:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements . ')' CodeBlock	(Rule 160)

	')'	shift, and go to state 395

State 385:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression . OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 159)

	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 172
	OP12_COMPARE_EQ_NE	shift, and go to state 173
	OP13_BITWISE_AND	shift, and go to state 175
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 176
	OP16_LOGICAL_OR	shift, and go to state 171
	OP17_LIST_RANGE	shift, and go to state 396
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 179
	OP24_LOGICAL_OR_XOR	shift, and go to state 166

State 386:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 50)

	'@_;'	shift, and go to state 397

State 387:

	PAREN-18 -> OP21_LIST_COMMA MY . Type VARIABLE_SYMBOL	(Rule 47)

	TYPE_INTEGER	shift, and go to state 60
	WORD	shift, and go to state 58

	Type	go to state 398

State 388:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';' .	(Rule 64)

	$default	reduce using rule 64 (Properties)

State 389:

	STAR-25 -> STAR-25 . PAREN-24	(Rule 61)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 . '}' ';'	(Rule 63)

	'}'	shift, and go to state 399
	OP21_LIST_COMMA	shift, and go to state 401

	PAREN-24	go to state 400

State 390:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner SubExpression	(Rule 196)

	MY	shift, and go to state 135

	TypeInner	go to state 402

State 391:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL . '= sub {' OPTIONAL-26 STAR-27 '}' ';'	(Rule 69)

	'= sub {'	shift, and go to state 403

State 392:

	PAREN-39 -> 'else' CodeBlock .	(Rule 152)

	$default	reduce using rule 152 (PAREN-39)

State 393:

	PAREN-37 -> 'elsif' LPAREN . SubExpression ')' CodeBlock	(Rule 149)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	ArrayDereference	go to state 74
	SubExpression	go to state 404
	Expression	go to state 127
	ArrayReference	go to state 90
	Literal	go to state 81
	Variable	go to state 128
	Operator	go to state 71
	WordScoped	go to state 92
	HashReference	go to state 72
	HashDereference	go to state 86

State 394:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression .	(Rule 81)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 172
	OP12_COMPARE_EQ_NE	shift, and go to state 173
	OP13_BITWISE_AND	shift, and go to state 175
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 176
	OP16_LOGICAL_OR	shift, and go to state 171
	OP17_LIST_RANGE	shift, and go to state 167
	OP18_TERNARY	shift, and go to state 169

	')'	reduce using rule 81 (Operator)
	';'	reduce using rule 81 (Operator)
	']'	reduce using rule 81 (Operator)
	'}'	reduce using rule 81 (Operator)
	OP21_LIST_COMMA	reduce using rule 81 (Operator)
	OP23_LOGICAL_AND	reduce using rule 81 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 81 (Operator)

State 395:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' . CodeBlock	(Rule 160)

	LBRACE	shift, and go to state 332

	CodeBlock	go to state 405

State 396:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 102)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE . SubExpression ')' CodeBlock	(Rule 159)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	Literal	go to state 81
	Expression	go to state 127
	ArrayReference	go to state 90
	Variable	go to state 128
	Operator	go to state 71
	WordScoped	go to state 92
	HashDereference	go to state 86
	HashReference	go to state 72
	ArrayDereference	go to state 74
	SubExpression	go to state 406

State 397:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 50)

	$default	reduce using rule 50 (SubroutineArguments)

State 398:

	PAREN-18 -> OP21_LIST_COMMA MY Type . VARIABLE_SYMBOL	(Rule 47)

	VARIABLE_SYMBOL	shift, and go to state 407

State 399:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 '}' . ';'	(Rule 63)

	';'	shift, and go to state 408

State 400:

	STAR-25 -> STAR-25 PAREN-24 .	(Rule 61)

	$default	reduce using rule 61 (STAR-25)

State 401:

	PAREN-24 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 60)

	'%{'	shift, and go to state 116
	WORD	shift, and go to state 373

	HashDereference	go to state 372
	HashEntryTyped	go to state 409

State 402:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . SubExpression	(Rule 196)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'undef'	shift, and go to state 78
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 136
	OP01_OPEN	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 133

	ArrayDereference	go to state 74
	SubExpression	go to state 410
	Variable	go to state 128
	Operator	go to state 71
	ArrayReference	go to state 90
	Literal	go to state 81
	Expression	go to state 127
	HashDereference	go to state 86
	HashReference	go to state 72
	WordScoped	go to state 92

State 403:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' . OPTIONAL-26 STAR-27 '}' ';'	(Rule 69)

	LPAREN_MY	shift, and go to state 411

	'%{'	reduce using rule 66 (OPTIONAL-26)
	'@{'	reduce using rule 66 (OPTIONAL-26)
	'for'	reduce using rule 66 (OPTIONAL-26)
	'foreach'	reduce using rule 66 (OPTIONAL-26)
	'if'	reduce using rule 66 (OPTIONAL-26)
	'undef'	reduce using rule 66 (OPTIONAL-26)
	'while'	reduce using rule 66 (OPTIONAL-26)
	'}'	reduce using rule 66 (OPTIONAL-26)
	LBRACE	reduce using rule 66 (OPTIONAL-26)
	LBRACKET	reduce using rule 66 (OPTIONAL-26)
	LITERAL_NUMBER	reduce using rule 66 (OPTIONAL-26)
	LITERAL_STRING	reduce using rule 66 (OPTIONAL-26)
	LPAREN	reduce using rule 66 (OPTIONAL-26)
	MY	reduce using rule 66 (OPTIONAL-26)
	OP01_CLOSE	reduce using rule 66 (OPTIONAL-26)
	OP01_NAMED	reduce using rule 66 (OPTIONAL-26)
	OP01_NAMED_VOID	reduce using rule 66 (OPTIONAL-26)
	OP01_NAMED_VOID_LPAREN	reduce using rule 66 (OPTIONAL-26)
	OP01_NAMED_VOID_SCOLON	reduce using rule 66 (OPTIONAL-26)
	OP01_OPEN	reduce using rule 66 (OPTIONAL-26)
	OP01_PRINT	reduce using rule 66 (OPTIONAL-26)
	OP03_MATH_INC_DEC	reduce using rule 66 (OPTIONAL-26)
	OP05_LOGICAL_NEG	reduce using rule 66 (OPTIONAL-26)
	OP05_MATH_NEG_LPAREN	reduce using rule 66 (OPTIONAL-26)
	OP10_NAMED_UNARY	reduce using rule 66 (OPTIONAL-26)
	OP19_LOOP_CONTROL	reduce using rule 66 (OPTIONAL-26)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 66 (OPTIONAL-26)
	OP22_LOGICAL_NEG	reduce using rule 66 (OPTIONAL-26)
	VARIABLE_SYMBOL	reduce using rule 66 (OPTIONAL-26)
	WORD	reduce using rule 66 (OPTIONAL-26)
	WORD_SCOPED	reduce using rule 66 (OPTIONAL-26)
	WORD_UPPERCASE	reduce using rule 66 (OPTIONAL-26)

	MethodArguments	go to state 412
	OPTIONAL-26	go to state 413

State 404:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	PAREN-37 -> 'elsif' LPAREN SubExpression . ')' CodeBlock	(Rule 149)

	')'	shift, and go to state 414
	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 172
	OP12_COMPARE_EQ_NE	shift, and go to state 173
	OP13_BITWISE_AND	shift, and go to state 175
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 176
	OP16_LOGICAL_OR	shift, and go to state 171
	OP17_LIST_RANGE	shift, and go to state 167
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 179
	OP24_LOGICAL_OR_XOR	shift, and go to state 166

State 405:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock .	(Rule 160)

	$default	reduce using rule 160 (LoopForEach)

State 406:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression . ')' CodeBlock	(Rule 159)

	')'	shift, and go to state 415
	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 172
	OP12_COMPARE_EQ_NE	shift, and go to state 173
	OP13_BITWISE_AND	shift, and go to state 175
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 176
	OP16_LOGICAL_OR	shift, and go to state 171

	OP17_LIST_RANGE	error (nonassociative)

	OP18_TERNARY	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 407:

	PAREN-18 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL .	(Rule 47)

	$default	reduce using rule 47 (PAREN-18)

State 408:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 '}' ';' .	(Rule 63)

	$default	reduce using rule 63 (Properties)

State 409:

	PAREN-24 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 60)

	$default	reduce using rule 60 (PAREN-24)

State 410:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression .	(Rule 196)

	OP04_MATH_POW	shift, and go to state 165
	OP06_REGEX_MATCH	shift, and go to state 170
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 172
	OP12_COMPARE_EQ_NE	shift, and go to state 173
	OP13_BITWISE_AND	shift, and go to state 175
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 176
	OP16_LOGICAL_OR	shift, and go to state 171
	OP17_LIST_RANGE	shift, and go to state 167
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 179
	OP24_LOGICAL_OR_XOR	shift, and go to state 166

	'}'	reduce using rule 196 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 196 (HashEntryTyped)

State 411:

	MethodArguments -> LPAREN_MY . TYPE_SELF STAR-29 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 73)

	TYPE_SELF	shift, and go to state 416

State 412:

	OPTIONAL-26 -> MethodArguments .	(Rule 65)

	$default	reduce using rule 65 (OPTIONAL-26)

State 413:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 . STAR-27 '}' ';'	(Rule 69)

	$default	reduce using rule 68 (STAR-27)

	STAR-27	go to state 417

State 414:

	PAREN-37 -> 'elsif' LPAREN SubExpression ')' . CodeBlock	(Rule 149)

	LBRACE	shift, and go to state 332

	CodeBlock	go to state 418

State 415:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' . CodeBlock	(Rule 159)

	LBRACE	shift, and go to state 332

	CodeBlock	go to state 419

State 416:

	MethodArguments -> LPAREN_MY TYPE_SELF . STAR-29 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 73)

	$default	reduce using rule 72 (STAR-29)

	STAR-29	go to state 420

State 417:

	STAR-27 -> STAR-27 . Operation	(Rule 67)
	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 STAR-27 . '}' ';'	(Rule 69)

	'%{'	shift, and go to state 116
	'@{'	shift, and go to state 79
	'if'	shift, and go to state 88
	'undef'	shift, and go to state 78
	'}'	shift, and go to state 422
	LBRACE	shift, and go to state 105
	LBRACKET	shift, and go to state 99
	LITERAL_NUMBER	shift, and go to state 112
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 117
	MY	shift, and go to state 109
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 111
	OP01_NAMED_VOID	shift, and go to state 89
	OP01_NAMED_VOID_LPAREN	shift, and go to state 75
	OP01_NAMED_VOID_SCOLON	shift, and go to state 113
	OP01_OPEN	shift, and go to state 97
	OP01_PRINT	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 94
	OP05_LOGICAL_NEG	shift, and go to state 98
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 77
	OP19_LOOP_CONTROL	shift, and go to state 73
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 83
	OP22_LOGICAL_NEG	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 108

	'for'	reduce using rule 143 (OPTIONAL-36)
	'foreach'	reduce using rule 143 (OPTIONAL-36)
	'while'	reduce using rule 143 (OPTIONAL-36)

	OperatorVoid	go to state 87
	OPTIONAL-36	go to state 115
	Expression	go to state 80
	Literal	go to state 81
	Operation	go to state 421
	Variable	go to state 82
	LoopLabel	go to state 84
	HashDereference	go to state 86
	VariableDeclaration	go to state 96
	ArrayDereference	go to state 74
	SubExpression	go to state 101
	Statement	go to state 100
	Conditional	go to state 103
	PAREN-35	go to state 104
	ArrayReference	go to state 90
	Operator	go to state 71
	WordScoped	go to state 92
	VariableModification	go to state 93
	HashReference	go to state 72

State 418:

	PAREN-37 -> 'elsif' LPAREN SubExpression ')' CodeBlock .	(Rule 149)

	$default	reduce using rule 149 (PAREN-37)

State 419:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock .	(Rule 159)

	$default	reduce using rule 159 (LoopFor)

State 420:

	STAR-29 -> STAR-29 . PAREN-28	(Rule 71)
	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 73)

	')'	shift, and go to state 423
	OP21_LIST_COMMA	shift, and go to state 424

	PAREN-28	go to state 425

State 421:

	STAR-27 -> STAR-27 Operation .	(Rule 67)

	$default	reduce using rule 67 (STAR-27)

State 422:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 STAR-27 '}' . ';'	(Rule 69)

	';'	shift, and go to state 426

State 423:

	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 73)

	OP19_VARIABLE_ASSIGN	shift, and go to state 427

State 424:

	PAREN-28 -> OP21_LIST_COMMA . MY Type VARIABLE_SYMBOL	(Rule 70)

	MY	shift, and go to state 428

State 425:

	STAR-29 -> STAR-29 PAREN-28 .	(Rule 71)

	$default	reduce using rule 71 (STAR-29)

State 426:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 STAR-27 '}' ';' .	(Rule 69)

	$default	reduce using rule 69 (Method)

State 427:

	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 73)

	'@_;'	shift, and go to state 429

State 428:

	PAREN-28 -> OP21_LIST_COMMA MY . Type VARIABLE_SYMBOL	(Rule 70)

	TYPE_INTEGER	shift, and go to state 60
	WORD	shift, and go to state 58

	Type	go to state 430

State 429:

	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 73)

	$default	reduce using rule 73 (MethodArguments)

State 430:

	PAREN-28 -> OP21_LIST_COMMA MY Type . VARIABLE_SYMBOL	(Rule 70)

	VARIABLE_SYMBOL	shift, and go to state 431

State 431:

	PAREN-28 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL .	(Rule 70)

	$default	reduce using rule 70 (PAREN-28)


Summary:
--------
Number of rules         : 221
Number of terminals     : 91
Number of non-terminals : 101
Number of states        : 432
