Conflicts:
----------
Conflict in state 168 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 168 between rule 109 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 168 between rule 109 and token OP18_TERNARY resolved as shift.
Conflict in state 168 between rule 109 and token OP08_STRING_CAT resolved as shift.
Conflict in state 168 between rule 109 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 168 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 168 between rule 109 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 168 between rule 109 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 168 between rule 109 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 168 between rule 109 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 168 between rule 109 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 168 between rule 109 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 168 between rule 109 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 168 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 168 between rule 109 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 168 between rule 109 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 168 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 191 between rule 99 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 191 between rule 99 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 191 between rule 99 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 191 between rule 99 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 191 between rule 99 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 191 between rule 99 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 191 between rule 99 and token OP04_MATH_POW resolved as shift.
Conflict in state 191 between rule 99 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 191 between rule 99 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 191 between rule 99 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 191 between rule 99 and token OP18_TERNARY resolved as reduce.
Conflict in state 191 between rule 99 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 191 between rule 99 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 191 between rule 99 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 191 between rule 99 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 191 between rule 99 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 191 between rule 99 and token OP08_STRING_CAT resolved as shift.
Conflict in state 193 between rule 83 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 193 between rule 83 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 193 between rule 83 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 193 between rule 83 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 193 between rule 83 and token OP06_REGEX_BIND resolved as reduce.
Conflict in state 193 between rule 83 and token OP18_TERNARY resolved as reduce.
Conflict in state 193 between rule 83 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 193 between rule 83 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 193 between rule 83 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 193 between rule 83 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 193 between rule 83 and token OP04_MATH_POW resolved as reduce.
Conflict in state 193 between rule 83 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 193 between rule 83 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 193 between rule 83 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 193 between rule 83 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 193 between rule 83 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 193 between rule 83 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 234 between rule 91 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 234 between rule 91 and token OP06_REGEX_BIND resolved as reduce.
Conflict in state 234 between rule 91 and token OP18_TERNARY resolved as reduce.
Conflict in state 234 between rule 91 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 234 between rule 91 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 234 between rule 91 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 234 between rule 91 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 234 between rule 91 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 234 between rule 91 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 234 between rule 91 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 234 between rule 91 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 234 between rule 91 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 234 between rule 91 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 234 between rule 91 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 234 between rule 91 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 234 between rule 91 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 234 between rule 91 and token OP04_MATH_POW resolved as shift.
Conflict in state 254 between rule 101 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 254 between rule 101 and token OP18_TERNARY resolved as reduce.
Conflict in state 254 between rule 101 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 254 between rule 101 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 254 between rule 101 and token OP08_STRING_CAT resolved as shift.
Conflict in state 254 between rule 101 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 254 between rule 101 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 254 between rule 101 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 254 between rule 101 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 254 between rule 101 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 254 between rule 101 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 254 between rule 101 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 254 between rule 101 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 254 between rule 101 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 254 between rule 101 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 254 between rule 101 and token OP04_MATH_POW resolved as shift.
Conflict in state 254 between rule 101 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 255 between rule 96 and token OP04_MATH_POW resolved as shift.
Conflict in state 255 between rule 96 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 255 between rule 96 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 255 between rule 96 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 255 between rule 96 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 255 between rule 96 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 255 between rule 96 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 255 between rule 96 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 255 between rule 96 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 255 between rule 96 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 255 between rule 96 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 255 between rule 96 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 255 between rule 96 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 255 between rule 96 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 255 between rule 96 and token OP18_TERNARY resolved as reduce.
Conflict in state 255 between rule 96 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 255 between rule 96 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 256 between rule 104 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 256 between rule 104 and token OP08_STRING_CAT resolved as shift.
Conflict in state 256 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 256 between rule 104 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 256 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 256 between rule 104 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 256 between rule 104 and token OP18_TERNARY resolved as reduce.
Conflict in state 256 between rule 104 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 256 between rule 104 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 256 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 256 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 256 between rule 104 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 256 between rule 104 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 256 between rule 104 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 256 between rule 104 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 256 between rule 104 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 256 between rule 104 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 257 between rule 98 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 257 between rule 98 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 257 between rule 98 and token OP08_STRING_CAT resolved as shift.
Conflict in state 257 between rule 98 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 257 between rule 98 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 257 between rule 98 and token OP18_TERNARY resolved as reduce.
Conflict in state 257 between rule 98 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 257 between rule 98 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 257 between rule 98 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 257 between rule 98 and token OP04_MATH_POW resolved as shift.
Conflict in state 257 between rule 98 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 257 between rule 98 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 257 between rule 98 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 257 between rule 98 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 257 between rule 98 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 257 between rule 98 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 257 between rule 98 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 258 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 258 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 258 between rule 106 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 258 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 258 between rule 106 and token OP08_STRING_CAT resolved as shift.
Conflict in state 258 between rule 106 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 258 between rule 106 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 258 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 258 between rule 106 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 258 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 258 between rule 106 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 258 between rule 106 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 258 between rule 106 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 258 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 258 between rule 106 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 258 between rule 106 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 258 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 259 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 259 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 259 between rule 102 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 259 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 259 between rule 102 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 259 between rule 102 and token OP08_STRING_CAT resolved as shift.
Conflict in state 259 between rule 102 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 259 between rule 102 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 259 between rule 102 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 259 between rule 102 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 259 between rule 102 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 259 between rule 102 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 259 between rule 102 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 259 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 259 between rule 102 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 259 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 259 between rule 102 and token OP12_COMPARE_EQ_NE resolved as error.
Conflict in state 260 between rule 105 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 260 between rule 105 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 260 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 260 between rule 105 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 260 between rule 105 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 260 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 260 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 260 between rule 105 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 260 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 260 between rule 105 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 260 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 260 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 260 between rule 105 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 260 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 260 between rule 105 and token OP08_STRING_CAT resolved as shift.
Conflict in state 260 between rule 105 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 260 between rule 105 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 261 between rule 103 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 261 between rule 103 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 261 between rule 103 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 261 between rule 103 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 261 between rule 103 and token OP04_MATH_POW resolved as shift.
Conflict in state 261 between rule 103 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 261 between rule 103 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 261 between rule 103 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 261 between rule 103 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 261 between rule 103 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 261 between rule 103 and token OP08_STRING_CAT resolved as shift.
Conflict in state 261 between rule 103 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 261 between rule 103 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 261 between rule 103 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 261 between rule 103 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 261 between rule 103 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 261 between rule 103 and token OP18_TERNARY resolved as reduce.
Conflict in state 262 between rule 107 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 262 between rule 107 and token OP18_TERNARY resolved as reduce.
Conflict in state 262 between rule 107 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 262 between rule 107 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 262 between rule 107 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 262 between rule 107 and token OP08_STRING_CAT resolved as shift.
Conflict in state 262 between rule 107 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 262 between rule 107 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 262 between rule 107 and token OP17_LIST_RANGE resolved as error.
Conflict in state 262 between rule 107 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 262 between rule 107 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 262 between rule 107 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 262 between rule 107 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 262 between rule 107 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 262 between rule 107 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 262 between rule 107 and token OP04_MATH_POW resolved as shift.
Conflict in state 262 between rule 107 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 263 between rule 95 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 263 between rule 95 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 263 between rule 95 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 263 between rule 95 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 263 between rule 95 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 263 between rule 95 and token OP04_MATH_POW resolved as shift.
Conflict in state 263 between rule 95 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 263 between rule 95 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 263 between rule 95 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 263 between rule 95 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 263 between rule 95 and token OP18_TERNARY resolved as reduce.
Conflict in state 263 between rule 95 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 263 between rule 95 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 263 between rule 95 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 263 between rule 95 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 263 between rule 95 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 263 between rule 95 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 264 between rule 89 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 264 between rule 89 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 264 between rule 89 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 264 between rule 89 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 264 between rule 89 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 264 between rule 89 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 264 between rule 89 and token OP04_MATH_POW resolved as shift.
Conflict in state 264 between rule 89 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 264 between rule 89 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 264 between rule 89 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 264 between rule 89 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 264 between rule 89 and token OP18_TERNARY resolved as reduce.
Conflict in state 264 between rule 89 and token OP06_REGEX_BIND resolved as reduce.
Conflict in state 264 between rule 89 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 264 between rule 89 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 264 between rule 89 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 264 between rule 89 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 265 between rule 111 and token OP08_STRING_CAT resolved as shift.
Conflict in state 265 between rule 111 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 265 between rule 111 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 265 between rule 111 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 265 between rule 111 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 265 between rule 111 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 265 between rule 111 and token OP18_TERNARY resolved as shift.
Conflict in state 265 between rule 111 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 265 between rule 111 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 265 between rule 111 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 265 between rule 111 and token OP04_MATH_POW resolved as shift.
Conflict in state 265 between rule 111 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 265 between rule 111 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 265 between rule 111 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 265 between rule 111 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 265 between rule 111 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 265 between rule 111 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 270 between rule 97 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 270 between rule 97 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 270 between rule 97 and token OP18_TERNARY resolved as reduce.
Conflict in state 270 between rule 97 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 270 between rule 97 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 270 between rule 97 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 270 between rule 97 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 270 between rule 97 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 270 between rule 97 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 270 between rule 97 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 270 between rule 97 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 270 between rule 97 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 270 between rule 97 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 270 between rule 97 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 270 between rule 97 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 270 between rule 97 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 270 between rule 97 and token OP04_MATH_POW resolved as shift.
Conflict in state 271 between rule 110 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 271 between rule 110 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 271 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 271 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 271 between rule 110 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 271 between rule 110 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 271 between rule 110 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 271 between rule 110 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 271 between rule 110 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 271 between rule 110 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 271 between rule 110 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 271 between rule 110 and token OP08_STRING_CAT resolved as shift.
Conflict in state 271 between rule 110 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 271 between rule 110 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 271 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 271 between rule 110 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 271 between rule 110 and token OP18_TERNARY resolved as shift.
Conflict in state 272 between rule 94 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 272 between rule 94 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 272 between rule 94 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 272 between rule 94 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 272 between rule 94 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 272 between rule 94 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 272 between rule 94 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 272 between rule 94 and token OP04_MATH_POW resolved as shift.
Conflict in state 272 between rule 94 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 272 between rule 94 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 272 between rule 94 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 272 between rule 94 and token OP18_TERNARY resolved as reduce.
Conflict in state 272 between rule 94 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 272 between rule 94 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 272 between rule 94 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 272 between rule 94 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 272 between rule 94 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 275 between rule 83 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 275 between rule 83 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 275 between rule 83 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 275 between rule 83 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 275 between rule 83 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 275 between rule 83 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 275 between rule 83 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 275 between rule 83 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 275 between rule 83 and token OP04_MATH_POW resolved as reduce.
Conflict in state 275 between rule 83 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 275 between rule 83 and token OP06_REGEX_BIND resolved as reduce.
Conflict in state 275 between rule 83 and token OP18_TERNARY resolved as reduce.
Conflict in state 275 between rule 83 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 275 between rule 83 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 275 between rule 83 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 275 between rule 83 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 275 between rule 83 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 447 between rule 85 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 447 between rule 85 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 447 between rule 85 and token OP18_TERNARY resolved as shift.
Conflict in state 447 between rule 85 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 447 between rule 85 and token OP08_STRING_CAT resolved as shift.
Conflict in state 447 between rule 85 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 447 between rule 85 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 447 between rule 85 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 447 between rule 85 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 447 between rule 85 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 447 between rule 85 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 447 between rule 85 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 447 between rule 85 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 447 between rule 85 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 447 between rule 85 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 447 between rule 85 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 447 between rule 85 and token OP04_MATH_POW resolved as shift.
Conflict in state 460 between rule 107 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 460 between rule 107 and token OP04_MATH_POW resolved as shift.
Conflict in state 460 between rule 107 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 460 between rule 107 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 460 between rule 107 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 460 between rule 107 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 460 between rule 107 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 460 between rule 107 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 460 between rule 107 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 460 between rule 107 and token OP17_LIST_RANGE resolved as error.
Conflict in state 460 between rule 107 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 460 between rule 107 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 460 between rule 107 and token OP08_STRING_CAT resolved as shift.
Conflict in state 460 between rule 107 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 460 between rule 107 and token OP18_TERNARY resolved as reduce.
Conflict in state 460 between rule 107 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 460 between rule 107 and token OP24_LOGICAL_OR_XOR resolved as reduce.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> Critic
20:	OPTIONAL-9 -> /* empty */
21:	OPTIONAL-10 -> USE_RPERL
22:	OPTIONAL-10 -> /* empty */
23:	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped ';' Header
24:	Module -> Package
25:	Module -> Class
26:	STAR-11 -> STAR-11 Critic
27:	STAR-11 -> /* empty */
28:	STAR-12 -> STAR-12 Include
29:	STAR-12 -> /* empty */
30:	STAR-13 -> STAR-13 Constant
31:	STAR-13 -> /* empty */
32:	PLUS-14 -> PLUS-14 Subroutine
33:	PLUS-14 -> Subroutine
34:	Package -> STAR-11 STAR-12 STAR-13 PLUS-14 LITERAL_NUMBER ';'
35:	OPTIONAL-15 -> USE_RPERL_AFTER
36:	OPTIONAL-15 -> /* empty */
37:	Header -> 'use strict;' 'use warnings;' OPTIONAL-15 'our' VERSION_NUMBER_ASSIGN
38:	PLUS-16 -> PLUS-16 WORD
39:	PLUS-16 -> WORD
40:	Critic -> '## no critic qw(' PLUS-16 ')'
41:	Include -> USE WordScoped ';'
42:	Include -> USE WordScoped OP01_QW ';'
43:	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'
44:	OPTIONAL-17 -> SubroutineArguments
45:	OPTIONAL-17 -> /* empty */
46:	STAR-18 -> STAR-18 Operation
47:	STAR-18 -> /* empty */
48:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-17 STAR-18 '}' ';'
49:	PAREN-19 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL
50:	STAR-20 -> STAR-20 PAREN-19
51:	STAR-20 -> /* empty */
52:	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-20 ')' OP19_VARIABLE_ASSIGN '@ARG;'
53:	STAR-21 -> STAR-21 Critic
54:	STAR-21 -> /* empty */
55:	STAR-22 -> STAR-22 Include
56:	STAR-22 -> /* empty */
57:	STAR-23 -> STAR-23 Constant
58:	STAR-23 -> /* empty */
59:	STAR-24 -> STAR-24 SubroutineOrMethod
60:	STAR-24 -> /* empty */
61:	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-21 STAR-22 STAR-23 Properties STAR-24 LITERAL_NUMBER ';'
62:	PAREN-25 -> OP21_LIST_COMMA HashEntryProperties
63:	STAR-26 -> STAR-26 PAREN-25
64:	STAR-26 -> /* empty */
65:	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-26 '}' ';'
66:	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';'
67:	OPTIONAL-27 -> MethodArguments
68:	OPTIONAL-27 -> /* empty */
69:	STAR-28 -> STAR-28 Operation
70:	STAR-28 -> /* empty */
71:	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-27 STAR-28 '}' ';'
72:	PAREN-29 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL
73:	STAR-30 -> STAR-30 PAREN-29
74:	STAR-30 -> /* empty */
75:	MethodArguments -> LPAREN_MY Type SELF STAR-30 ')' OP19_VARIABLE_ASSIGN '@ARG;'
76:	SubroutineOrMethod -> Subroutine
77:	SubroutineOrMethod -> Method
78:	Operation -> Expression ';'
79:	Operation -> OP01_NAMED_SCOLON
80:	Operation -> OP10_NAMED_UNARY_SCOLON
81:	Operation -> Statement
82:	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')'
83:	Operator -> OP01_NAMED SubExpression
84:	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'
85:	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression
86:	Operator -> OP01_CLOSE FHREF_SYMBOL
87:	Operator -> OP03_MATH_INC_DEC Variable
88:	Operator -> Variable OP03_MATH_INC_DEC
89:	Operator -> SubExpression OP04_MATH_POW SubExpression
90:	Operator -> OP05_BITWISE_NEG_LPAREN SubExpression ')'
91:	Operator -> OP05_LOGICAL_NEG SubExpression
92:	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')'
93:	Operator -> SubExpression OP06_REGEX_BIND OP06_REGEX_PATTERN
94:	Operator -> SubExpression OP07_STRING_REPEAT SubExpression
95:	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression
96:	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression
97:	Operator -> SubExpression OP08_STRING_CAT SubExpression
98:	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression
99:	Operator -> OP10_NAMED_UNARY SubExpression
100:	Operator -> OP10_NAMED_UNARY
101:	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression
102:	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression
103:	Operator -> SubExpression OP13_BITWISE_AND SubExpression
104:	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression
105:	Operator -> SubExpression OP15_LOGICAL_AND SubExpression
106:	Operator -> SubExpression OP16_LOGICAL_OR SubExpression
107:	Operator -> SubExpression OP17_LIST_RANGE SubExpression
108:	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral
109:	Operator -> OP22_LOGICAL_NEG SubExpression
110:	Operator -> SubExpression OP23_LOGICAL_AND SubExpression
111:	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression
112:	PAREN-31 -> STDOUT_STDERR
113:	OPTIONAL-32 -> PAREN-31
114:	OPTIONAL-32 -> /* empty */
115:	OPTIONAL-33 -> ListElements
116:	OPTIONAL-33 -> /* empty */
117:	OperatorVoid -> OP01_PRINT OPTIONAL-32 ListElements ';'
118:	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements ';'
119:	OperatorVoid -> OP01_NAMED_VOID_SCOLON
120:	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-33 ')' ';'
121:	OperatorVoid -> OP01_NAMED_VOID ListElements ';'
122:	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';'
123:	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON
124:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
125:	OPTIONAL-34 -> ListElements
126:	OPTIONAL-34 -> /* empty */
127:	OPTIONAL-35 -> ListElements
128:	OPTIONAL-35 -> /* empty */
129:	OPTIONAL-36 -> HashReference
130:	OPTIONAL-36 -> /* empty */
131:	Expression -> Operator
132:	Expression -> WORD_UPPERCASE LPAREN ')'
133:	Expression -> CONSTANT_CALL_SCOPED
134:	Expression -> WordScoped LPAREN OPTIONAL-34 ')'
135:	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-35 ')'
136:	Expression -> WordScoped OP02_METHOD_THINARROW_NEW OPTIONAL-36 ')'
137:	SubExpression -> Expression
138:	SubExpression -> 'undef'
139:	SubExpression -> Literal
140:	SubExpression -> Variable
141:	SubExpression -> ArrayReference
142:	SubExpression -> ArrayDereference
143:	SubExpression -> HashReference
144:	SubExpression -> HashDereference
145:	SubExpression -> LPAREN SubExpression ')'
146:	SubExpressionOrInput -> SubExpression
147:	SubExpressionOrInput -> FHREF_SYMBOL_IN
148:	SubExpressionOrInput -> STDIN
149:	SubExpressionOrVarMod -> SubExpression
150:	SubExpressionOrVarMod -> VariableModification
151:	PAREN-37 -> LoopLabel COLON
152:	OPTIONAL-38 -> PAREN-37
153:	OPTIONAL-38 -> /* empty */
154:	Statement -> Conditional
155:	Statement -> OPTIONAL-38 Loop
156:	Statement -> OperatorVoid
157:	Statement -> VariableDeclaration
158:	Statement -> VariableModification ';'
159:	PAREN-39 -> 'elsif' LPAREN SubExpression ')' CodeBlock
160:	STAR-40 -> STAR-40 PAREN-39
161:	STAR-40 -> /* empty */
162:	PAREN-41 -> 'else' CodeBlock
163:	OPTIONAL-42 -> PAREN-41
164:	OPTIONAL-42 -> /* empty */
165:	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-40 OPTIONAL-42
166:	Loop -> LoopFor
167:	Loop -> LoopForEach
168:	Loop -> LoopWhile
169:	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock
170:	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock
171:	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock
172:	LoopWhile -> 'while' LPAREN SubExpression ')' CodeBlock
173:	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrInput ')' CodeBlock
174:	PLUS-43 -> PLUS-43 Operation
175:	PLUS-43 -> Operation
176:	CodeBlock -> LBRACE PLUS-43 '}'
177:	STAR-44 -> STAR-44 VariableRetrieval
178:	STAR-44 -> /* empty */
179:	Variable -> VariableSymbolOrSelf STAR-44
180:	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']'
181:	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}'
182:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
183:	VariableDeclaration -> MY Type VARIABLE_SYMBOL ';'
184:	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExpIn
185:	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'
186:	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL ';'
187:	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrInput
188:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression
189:	PAREN-45 -> OP21_LIST_COMMA ListElement
190:	STAR-46 -> STAR-46 PAREN-45
191:	STAR-46 -> /* empty */
192:	ListElements -> ListElement STAR-46
193:	ListElement -> SubExpression
194:	ListElement -> TypeInner SubExpression
195:	ListElement -> OP01_QW
196:	ListElement -> ARGV
197:	OPTIONAL-47 -> ListElements
198:	OPTIONAL-47 -> /* empty */
199:	ArrayReference -> LBRACKET OPTIONAL-47 ']'
200:	OPTIONAL-48 -> TypeInner
201:	OPTIONAL-48 -> /* empty */
202:	ArrayDereference -> '@{' Variable '}'
203:	ArrayDereference -> '@{' OPTIONAL-48 ArrayReference '}'
204:	OPTIONAL-49 -> TypeInner
205:	OPTIONAL-49 -> /* empty */
206:	HashEntry -> VarOrLitOrOpStrOrWord OP20_HASH_FATARROW OPTIONAL-49 SubExpression
207:	HashEntry -> HashDereference
208:	HashEntry -> ENV
209:	HashEntryProperties -> OpStringOrWord OP20_HASH_FATARROW TypeInnerProperties
210:	PAREN-50 -> OP21_LIST_COMMA HashEntry
211:	STAR-51 -> STAR-51 PAREN-50
212:	STAR-51 -> /* empty */
213:	HashReference -> LBRACE HashEntry STAR-51 '}'
214:	HashReference -> LBRACE '}'
215:	OPTIONAL-52 -> TypeInner
216:	OPTIONAL-52 -> /* empty */
217:	HashDereference -> '%{' Variable '}'
218:	HashDereference -> '%{' OPTIONAL-52 HashReference '}'
219:	WordScoped -> WORD
220:	WordScoped -> WORD_SCOPED
221:	LoopLabel -> WORD_UPPERCASE
222:	Type -> WORD
223:	Type -> WORD_SCOPED
224:	Type -> TYPE_INTEGER
225:	TypeInner -> MY Type '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN
226:	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN SubExpression
227:	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'
228:	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN
229:	VariableOrLiteral -> Variable
230:	VariableOrLiteral -> Literal
231:	VarOrLitOrOpStrOrWord -> Variable
232:	VarOrLitOrOpStrOrWord -> Literal
233:	VarOrLitOrOpStrOrWord -> OpStringOrWord
234:	VariableSymbolOrSelf -> VARIABLE_SYMBOL
235:	VariableSymbolOrSelf -> SELF
236:	Literal -> LITERAL_NUMBER
237:	Literal -> LITERAL_STRING
238:	OpNamedScolonOrSubExp -> OP01_NAMED_SCOLON
239:	OpNamedScolonOrSubExp -> OP10_NAMED_UNARY_SCOLON
240:	OpNamedScolonOrSubExp -> SubExpression ';'
241:	OpNamedScolonOrSubExpIn -> OP01_NAMED_SCOLON
242:	OpNamedScolonOrSubExpIn -> OP10_NAMED_UNARY_SCOLON
243:	OpNamedScolonOrSubExpIn -> SubExpressionOrInput ';'
244:	OpStringOrWord -> OP24_LOGICAL_OR_XOR
245:	OpStringOrWord -> OP23_LOGICAL_AND
246:	OpStringOrWord -> OP22_LOGICAL_NEG
247:	OpStringOrWord -> OP19_LOOP_CONTROL_SCOLON
248:	OpStringOrWord -> OP19_LOOP_CONTROL
249:	OpStringOrWord -> OP12_COMPARE_EQ_NE
250:	OpStringOrWord -> OP11_COMPARE_LT_GT
251:	OpStringOrWord -> OP10_NAMED_UNARY
252:	OpStringOrWord -> OP08_MATH_ADD_SUB
253:	OpStringOrWord -> OP07_MATH_MULT_DIV_MOD
254:	OpStringOrWord -> OP07_STRING_REPEAT
255:	OpStringOrWord -> OP01_NAMED
256:	OpStringOrWord -> OP01_CLOSE
257:	OpStringOrWord -> OP01_OPEN
258:	OpStringOrWord -> OP01_NAMED_VOID
259:	OpStringOrWord -> OP01_PRINT
260:	OpStringOrWord -> WORD

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'## no critic qw('	shift, and go to state 4
	SHEBANG	shift, and go to state 2

	'package'	reduce using rule 20 (OPTIONAL-9)
	USE_RPERL	reduce using rule 20 (OPTIONAL-9)

	OPTIONAL-9	go to state 1
	PAREN-1	go to state 6
	PLUS-2	go to state 3
	CompileUnit	go to state 5
	Program	go to state 7
	Critic	go to state 9
	ModuleHeader	go to state 8

State 1:

	ModuleHeader -> OPTIONAL-9 . OPTIONAL-10 'package' WordScoped ';' Header	(Rule 23)

	USE_RPERL	shift, and go to state 10

	'package'	reduce using rule 22 (OPTIONAL-10)

	OPTIONAL-10	go to state 11

State 2:

	Program -> SHEBANG . OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 4

	USE_RPERL	reduce using rule 7 (OPTIONAL-3)

	Critic	go to state 13
	OPTIONAL-3	go to state 12

State 3:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	'## no critic qw('	shift, and go to state 4

	$end	reduce using rule 5 (CompileUnit)
	'package'	reduce using rule 20 (OPTIONAL-9)
	USE_RPERL	reduce using rule 20 (OPTIONAL-9)

	PAREN-1	go to state 14
	OPTIONAL-9	go to state 1
	ModuleHeader	go to state 8
	Critic	go to state 9

State 4:

	Critic -> '## no critic qw(' . PLUS-16 ')'	(Rule 40)

	WORD	shift, and go to state 15

	PLUS-16	go to state 16

State 5:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 17

State 6:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 7:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 8:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent qw('	shift, and go to state 22

	'## no critic qw('	reduce using rule 27 (STAR-11)
	'our'	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	USE	reduce using rule 27 (STAR-11)

	Module	go to state 19
	Package	go to state 21
	Class	go to state 20
	STAR-11	go to state 18

State 9:

	OPTIONAL-9 -> Critic .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 10:

	OPTIONAL-10 -> USE_RPERL .	(Rule 21)

	$default	reduce using rule 21 (OPTIONAL-10)

State 11:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 . 'package' WordScoped ';' Header	(Rule 23)

	'package'	shift, and go to state 23

State 12:

	Program -> SHEBANG OPTIONAL-3 . USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	USE_RPERL	shift, and go to state 24

State 13:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 14:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 15:

	PLUS-16 -> WORD .	(Rule 39)

	$default	reduce using rule 39 (PLUS-16)

State 16:

	PLUS-16 -> PLUS-16 . WORD	(Rule 38)
	Critic -> '## no critic qw(' PLUS-16 . ')'	(Rule 40)

	')'	shift, and go to state 26
	WORD	shift, and go to state 25

State 17:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 18:

	STAR-11 -> STAR-11 . Critic	(Rule 26)
	Package -> STAR-11 . STAR-12 STAR-13 PLUS-14 LITERAL_NUMBER ';'	(Rule 34)

	'## no critic qw('	shift, and go to state 4

	'our'	reduce using rule 29 (STAR-12)
	'use constant'	reduce using rule 29 (STAR-12)
	USE	reduce using rule 29 (STAR-12)

	STAR-12	go to state 27
	Critic	go to state 28

State 19:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 20:

	Module -> Class .	(Rule 25)

	$default	reduce using rule 25 (Module)

State 21:

	Module -> Package .	(Rule 24)

	$default	reduce using rule 24 (Module)

State 22:

	Class -> 'use parent qw(' . WordScoped ')' ';' Include STAR-21 STAR-22 STAR-23 Properties STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31

	WordScoped	go to state 29

State 23:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' . WordScoped ';' Header	(Rule 23)

	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31

	WordScoped	go to state 32

State 24:

	Program -> SHEBANG OPTIONAL-3 USE_RPERL . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 34

	Header	go to state 33

State 25:

	PLUS-16 -> PLUS-16 WORD .	(Rule 38)

	$default	reduce using rule 38 (PLUS-16)

State 26:

	Critic -> '## no critic qw(' PLUS-16 ')' .	(Rule 40)

	$default	reduce using rule 40 (Critic)

State 27:

	STAR-12 -> STAR-12 . Include	(Rule 28)
	Package -> STAR-11 STAR-12 . STAR-13 PLUS-14 LITERAL_NUMBER ';'	(Rule 34)

	USE	shift, and go to state 35

	'our'	reduce using rule 31 (STAR-13)
	'use constant'	reduce using rule 31 (STAR-13)

	STAR-13	go to state 37
	Include	go to state 36

State 28:

	STAR-11 -> STAR-11 Critic .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 29:

	Class -> 'use parent qw(' WordScoped . ')' ';' Include STAR-21 STAR-22 STAR-23 Properties STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	')'	shift, and go to state 38

State 30:

	WordScoped -> WORD .	(Rule 219)

	$default	reduce using rule 219 (WordScoped)

State 31:

	WordScoped -> WORD_SCOPED .	(Rule 220)

	$default	reduce using rule 220 (WordScoped)

State 32:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped . ';' Header	(Rule 23)

	';'	shift, and go to state 39

State 33:

	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 40

State 34:

	Header -> 'use strict;' . 'use warnings;' OPTIONAL-15 'our' VERSION_NUMBER_ASSIGN	(Rule 37)

	'use warnings;'	shift, and go to state 41

State 35:

	Include -> USE . WordScoped ';'	(Rule 41)
	Include -> USE . WordScoped OP01_QW ';'	(Rule 42)

	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31

	WordScoped	go to state 42

State 36:

	STAR-12 -> STAR-12 Include .	(Rule 28)

	$default	reduce using rule 28 (STAR-12)

State 37:

	STAR-13 -> STAR-13 . Constant	(Rule 30)
	Package -> STAR-11 STAR-12 STAR-13 . PLUS-14 LITERAL_NUMBER ';'	(Rule 34)

	'our'	shift, and go to state 45
	'use constant'	shift, and go to state 46

	Constant	go to state 43
	PLUS-14	go to state 44
	Subroutine	go to state 47

State 38:

	Class -> 'use parent qw(' WordScoped ')' . ';' Include STAR-21 STAR-22 STAR-23 Properties STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	';'	shift, and go to state 48

State 39:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped ';' . Header	(Rule 23)

	'use strict;'	shift, and go to state 34

	Header	go to state 49

State 40:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 4

	'%{'	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'for'	reduce using rule 11 (STAR-5)
	'foreach'	reduce using rule 11 (STAR-5)
	'if'	reduce using rule 11 (STAR-5)
	'our'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'while'	reduce using rule 11 (STAR-5)
	CONSTANT_CALL_SCOPED	reduce using rule 11 (STAR-5)
	LBRACE	reduce using rule 11 (STAR-5)
	LBRACKET	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	LPAREN	reduce using rule 11 (STAR-5)
	MY	reduce using rule 11 (STAR-5)
	OP01_CLOSE	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_SCOLON	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_LPAREN	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_SCOLON	reduce using rule 11 (STAR-5)
	OP01_OPEN	reduce using rule 11 (STAR-5)
	OP01_PRINT	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG_LPAREN	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY_SCOLON	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	SELF	reduce using rule 11 (STAR-5)
	USE	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)
	WORD_UPPERCASE	reduce using rule 11 (STAR-5)

	STAR-5	go to state 51
	Critic	go to state 50

State 41:

	Header -> 'use strict;' 'use warnings;' . OPTIONAL-15 'our' VERSION_NUMBER_ASSIGN	(Rule 37)

	USE_RPERL_AFTER	shift, and go to state 52

	'our'	reduce using rule 36 (OPTIONAL-15)

	OPTIONAL-15	go to state 53

State 42:

	Include -> USE WordScoped . ';'	(Rule 41)
	Include -> USE WordScoped . OP01_QW ';'	(Rule 42)

	';'	shift, and go to state 54
	OP01_QW	shift, and go to state 55

State 43:

	STAR-13 -> STAR-13 Constant .	(Rule 30)

	$default	reduce using rule 30 (STAR-13)

State 44:

	PLUS-14 -> PLUS-14 . Subroutine	(Rule 32)
	Package -> STAR-11 STAR-12 STAR-13 PLUS-14 . LITERAL_NUMBER ';'	(Rule 34)

	'our'	shift, and go to state 45
	LITERAL_NUMBER	shift, and go to state 57

	Subroutine	go to state 56

State 45:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-17 STAR-18 '}' ';'	(Rule 48)

	TYPE_INTEGER	shift, and go to state 58
	WORD	shift, and go to state 61
	WORD_SCOPED	shift, and go to state 60

	Type	go to state 59

State 46:

	Constant -> 'use constant' . WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 43)

	WORD_UPPERCASE	shift, and go to state 62

State 47:

	PLUS-14 -> Subroutine .	(Rule 33)

	$default	reduce using rule 33 (PLUS-14)

State 48:

	Class -> 'use parent qw(' WordScoped ')' ';' . Include STAR-21 STAR-22 STAR-23 Properties STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	USE	shift, and go to state 35

	Include	go to state 63

State 49:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped ';' Header .	(Rule 23)

	$default	reduce using rule 23 (ModuleHeader)

State 50:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 51:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	USE	shift, and go to state 35

	'%{'	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'for'	reduce using rule 13 (STAR-6)
	'foreach'	reduce using rule 13 (STAR-6)
	'if'	reduce using rule 13 (STAR-6)
	'our'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while'	reduce using rule 13 (STAR-6)
	CONSTANT_CALL_SCOPED	reduce using rule 13 (STAR-6)
	LBRACE	reduce using rule 13 (STAR-6)
	LBRACKET	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	LPAREN	reduce using rule 13 (STAR-6)
	MY	reduce using rule 13 (STAR-6)
	OP01_CLOSE	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_SCOLON	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_LPAREN	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_SCOLON	reduce using rule 13 (STAR-6)
	OP01_OPEN	reduce using rule 13 (STAR-6)
	OP01_PRINT	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG_LPAREN	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY_SCOLON	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	SELF	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)
	WORD_UPPERCASE	reduce using rule 13 (STAR-6)

	STAR-6	go to state 65
	Include	go to state 64

State 52:

	OPTIONAL-15 -> USE_RPERL_AFTER .	(Rule 35)

	$default	reduce using rule 35 (OPTIONAL-15)

State 53:

	Header -> 'use strict;' 'use warnings;' OPTIONAL-15 . 'our' VERSION_NUMBER_ASSIGN	(Rule 37)

	'our'	shift, and go to state 66

State 54:

	Include -> USE WordScoped ';' .	(Rule 41)

	$default	reduce using rule 41 (Include)

State 55:

	Include -> USE WordScoped OP01_QW . ';'	(Rule 42)

	';'	shift, and go to state 67

State 56:

	PLUS-14 -> PLUS-14 Subroutine .	(Rule 32)

	$default	reduce using rule 32 (PLUS-14)

State 57:

	Package -> STAR-11 STAR-12 STAR-13 PLUS-14 LITERAL_NUMBER . ';'	(Rule 34)

	';'	shift, and go to state 68

State 58:

	Type -> TYPE_INTEGER .	(Rule 224)

	$default	reduce using rule 224 (Type)

State 59:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-17 STAR-18 '}' ';'	(Rule 48)

	VARIABLE_SYMBOL	shift, and go to state 69

State 60:

	Type -> WORD_SCOPED .	(Rule 223)

	$default	reduce using rule 223 (Type)

State 61:

	Type -> WORD .	(Rule 222)

	$default	reduce using rule 222 (Type)

State 62:

	Constant -> 'use constant' WORD_UPPERCASE . OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 43)

	OP20_HASH_FATARROW	shift, and go to state 70

State 63:

	Class -> 'use parent qw(' WordScoped ')' ';' Include . STAR-21 STAR-22 STAR-23 Properties STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	$default	reduce using rule 54 (STAR-21)

	STAR-21	go to state 71

State 64:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 65:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 46

	'%{'	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'for'	reduce using rule 15 (STAR-7)
	'foreach'	reduce using rule 15 (STAR-7)
	'if'	reduce using rule 15 (STAR-7)
	'our'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while'	reduce using rule 15 (STAR-7)
	CONSTANT_CALL_SCOPED	reduce using rule 15 (STAR-7)
	LBRACE	reduce using rule 15 (STAR-7)
	LBRACKET	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	LPAREN	reduce using rule 15 (STAR-7)
	MY	reduce using rule 15 (STAR-7)
	OP01_CLOSE	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_SCOLON	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_LPAREN	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_SCOLON	reduce using rule 15 (STAR-7)
	OP01_OPEN	reduce using rule 15 (STAR-7)
	OP01_PRINT	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG_LPAREN	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY_SCOLON	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	SELF	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)
	WORD_UPPERCASE	reduce using rule 15 (STAR-7)

	Constant	go to state 73
	STAR-7	go to state 72

State 66:

	Header -> 'use strict;' 'use warnings;' OPTIONAL-15 'our' . VERSION_NUMBER_ASSIGN	(Rule 37)

	VERSION_NUMBER_ASSIGN	shift, and go to state 74

State 67:

	Include -> USE WordScoped OP01_QW ';' .	(Rule 42)

	$default	reduce using rule 42 (Include)

State 68:

	Package -> STAR-11 STAR-12 STAR-13 PLUS-14 LITERAL_NUMBER ';' .	(Rule 34)

	$default	reduce using rule 34 (Package)

State 69:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-17 STAR-18 '}' ';'	(Rule 48)

	'= sub {'	shift, and go to state 75

State 70:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW . TypeInnerConstant Literal ';'	(Rule 43)

	MY	shift, and go to state 77

	TypeInnerConstant	go to state 76

State 71:

	STAR-21 -> STAR-21 . Critic	(Rule 53)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-21 . STAR-22 STAR-23 Properties STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'## no critic qw('	shift, and go to state 4

	'our hashref $properties'	reduce using rule 56 (STAR-22)
	'use constant'	reduce using rule 56 (STAR-22)
	USE	reduce using rule 56 (STAR-22)

	STAR-22	go to state 78
	Critic	go to state 79

State 72:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'if'	shift, and go to state 132
	'our'	shift, and go to state 45
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	MY	shift, and go to state 93
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 103
	OP01_NAMED_SCOLON	shift, and go to state 85
	OP01_NAMED_VOID	shift, and go to state 102
	OP01_NAMED_VOID_LPAREN	shift, and go to state 124
	OP01_NAMED_VOID_SCOLON	shift, and go to state 123
	OP01_OPEN	shift, and go to state 120
	OP01_PRINT	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 126
	OP19_LOOP_CONTROL	shift, and go to state 83
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 95
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 88

	'for'	reduce using rule 153 (OPTIONAL-38)
	'foreach'	reduce using rule 153 (OPTIONAL-38)
	'while'	reduce using rule 153 (OPTIONAL-38)

	LoopLabel	go to state 87
	VariableDeclaration	go to state 92
	HashDereference	go to state 119
	HashReference	go to state 91
	Conditional	go to state 90
	SubExpression	go to state 82
	Operation	go to state 110
	PAREN-37	go to state 107
	Subroutine	go to state 80
	WordScoped	go to state 109
	Literal	go to state 86
	Expression	go to state 113
	Operator	go to state 84
	OperatorVoid	go to state 112
	Variable	go to state 130
	VariableSymbolOrSelf	go to state 106
	ArrayReference	go to state 104
	OPTIONAL-38	go to state 96
	ArrayDereference	go to state 122
	Statement	go to state 128
	VariableModification	go to state 98
	PLUS-8	go to state 125

State 73:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 74:

	Header -> 'use strict;' 'use warnings;' OPTIONAL-15 'our' VERSION_NUMBER_ASSIGN .	(Rule 37)

	$default	reduce using rule 37 (Header)

State 75:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-17 STAR-18 '}' ';'	(Rule 48)

	LPAREN_MY	shift, and go to state 133

	'%{'	reduce using rule 45 (OPTIONAL-17)
	'@{'	reduce using rule 45 (OPTIONAL-17)
	'for'	reduce using rule 45 (OPTIONAL-17)
	'foreach'	reduce using rule 45 (OPTIONAL-17)
	'if'	reduce using rule 45 (OPTIONAL-17)
	'undef'	reduce using rule 45 (OPTIONAL-17)
	'while'	reduce using rule 45 (OPTIONAL-17)
	'}'	reduce using rule 45 (OPTIONAL-17)
	CONSTANT_CALL_SCOPED	reduce using rule 45 (OPTIONAL-17)
	LBRACE	reduce using rule 45 (OPTIONAL-17)
	LBRACKET	reduce using rule 45 (OPTIONAL-17)
	LITERAL_NUMBER	reduce using rule 45 (OPTIONAL-17)
	LITERAL_STRING	reduce using rule 45 (OPTIONAL-17)
	LPAREN	reduce using rule 45 (OPTIONAL-17)
	MY	reduce using rule 45 (OPTIONAL-17)
	OP01_CLOSE	reduce using rule 45 (OPTIONAL-17)
	OP01_NAMED	reduce using rule 45 (OPTIONAL-17)
	OP01_NAMED_SCOLON	reduce using rule 45 (OPTIONAL-17)
	OP01_NAMED_VOID	reduce using rule 45 (OPTIONAL-17)
	OP01_NAMED_VOID_LPAREN	reduce using rule 45 (OPTIONAL-17)
	OP01_NAMED_VOID_SCOLON	reduce using rule 45 (OPTIONAL-17)
	OP01_OPEN	reduce using rule 45 (OPTIONAL-17)
	OP01_PRINT	reduce using rule 45 (OPTIONAL-17)
	OP03_MATH_INC_DEC	reduce using rule 45 (OPTIONAL-17)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 45 (OPTIONAL-17)
	OP05_LOGICAL_NEG	reduce using rule 45 (OPTIONAL-17)
	OP05_MATH_NEG_LPAREN	reduce using rule 45 (OPTIONAL-17)
	OP10_NAMED_UNARY	reduce using rule 45 (OPTIONAL-17)
	OP10_NAMED_UNARY_SCOLON	reduce using rule 45 (OPTIONAL-17)
	OP19_LOOP_CONTROL	reduce using rule 45 (OPTIONAL-17)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 45 (OPTIONAL-17)
	OP22_LOGICAL_NEG	reduce using rule 45 (OPTIONAL-17)
	SELF	reduce using rule 45 (OPTIONAL-17)
	VARIABLE_SYMBOL	reduce using rule 45 (OPTIONAL-17)
	WORD	reduce using rule 45 (OPTIONAL-17)
	WORD_SCOPED	reduce using rule 45 (OPTIONAL-17)
	WORD_UPPERCASE	reduce using rule 45 (OPTIONAL-17)

	SubroutineArguments	go to state 135
	OPTIONAL-17	go to state 134

State 76:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant . Literal ';'	(Rule 43)

	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111

	Literal	go to state 136

State 77:

	TypeInnerConstant -> MY . Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 228)

	TYPE_INTEGER	shift, and go to state 58
	WORD	shift, and go to state 61
	WORD_SCOPED	shift, and go to state 60

	Type	go to state 137

State 78:

	STAR-22 -> STAR-22 . Include	(Rule 55)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-21 STAR-22 . STAR-23 Properties STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	USE	shift, and go to state 35

	'our hashref $properties'	reduce using rule 58 (STAR-23)
	'use constant'	reduce using rule 58 (STAR-23)

	Include	go to state 138
	STAR-23	go to state 139

State 79:

	STAR-21 -> STAR-21 Critic .	(Rule 53)

	$default	reduce using rule 53 (STAR-21)

State 80:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 81:

	Operator -> LPAREN . OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')'	(Rule 82)
	Operator -> LPAREN . OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'	(Rule 84)
	SubExpression -> LPAREN . SubExpression ')'	(Rule 145)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 140
	OP01_OPEN	shift, and go to state 120
	OP01_PRINT	shift, and go to state 145
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	SubExpression	go to state 141
	ArrayDereference	go to state 122
	WordScoped	go to state 109
	Operator	go to state 84
	Expression	go to state 144
	Literal	go to state 86
	Variable	go to state 143
	ArrayReference	go to state 104
	HashReference	go to state 91
	HashDereference	go to state 119
	VariableSymbolOrSelf	go to state 106

State 82:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 152
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 159
	OP23_LOGICAL_AND	shift, and go to state 161
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

State 83:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 124)

	WORD_UPPERCASE	shift, and go to state 163

	LoopLabel	go to state 164

State 84:

	Expression -> Operator .	(Rule 131)

	$default	reduce using rule 131 (Expression)

State 85:

	Operation -> OP01_NAMED_SCOLON .	(Rule 79)

	$default	reduce using rule 79 (Operation)

State 86:

	SubExpression -> Literal .	(Rule 139)

	$default	reduce using rule 139 (SubExpression)

State 87:

	PAREN-37 -> LoopLabel . COLON	(Rule 151)

	COLON	shift, and go to state 165

State 88:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 132)
	LoopLabel -> WORD_UPPERCASE .	(Rule 221)

	LPAREN	shift, and go to state 166

	COLON	reduce using rule 221 (LoopLabel)

State 89:

	Operator -> OP22_LOGICAL_NEG . SubExpression	(Rule 109)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	VariableSymbolOrSelf	go to state 106
	HashDereference	go to state 119
	HashReference	go to state 91
	ArrayReference	go to state 104
	Variable	go to state 143
	Literal	go to state 86
	Expression	go to state 144
	Operator	go to state 84
	WordScoped	go to state 109
	ArrayDereference	go to state 122
	SubExpression	go to state 168

State 90:

	Statement -> Conditional .	(Rule 154)

	$default	reduce using rule 154 (Statement)

State 91:

	SubExpression -> HashReference .	(Rule 143)

	$default	reduce using rule 143 (SubExpression)

State 92:

	Statement -> VariableDeclaration .	(Rule 157)

	$default	reduce using rule 157 (Statement)

State 93:

	VariableDeclaration -> MY . Type VARIABLE_SYMBOL ';'	(Rule 183)
	VariableDeclaration -> MY . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExpIn	(Rule 184)
	VariableDeclaration -> MY . Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 185)
	VariableDeclaration -> MY . TYPE_FHREF FHREF_SYMBOL ';'	(Rule 186)

	TYPE_FHREF	shift, and go to state 169
	TYPE_INTEGER	shift, and go to state 58
	WORD	shift, and go to state 61
	WORD_SCOPED	shift, and go to state 60

	Type	go to state 170

State 94:

	HashDereference -> '%{' . Variable '}'	(Rule 217)
	HashDereference -> '%{' . OPTIONAL-52 HashReference '}'	(Rule 218)

	MY	shift, and go to state 174
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100

	LBRACE	reduce using rule 216 (OPTIONAL-52)

	VariableSymbolOrSelf	go to state 106
	OPTIONAL-52	go to state 173
	TypeInner	go to state 171
	Variable	go to state 172

State 95:

	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON .	(Rule 123)

	$default	reduce using rule 123 (OperatorVoid)

State 96:

	Statement -> OPTIONAL-38 . Loop	(Rule 155)

	'for'	shift, and go to state 179
	'foreach'	shift, and go to state 175
	'while'	shift, and go to state 176

	LoopForEach	go to state 181
	LoopWhile	go to state 178
	Loop	go to state 177
	LoopFor	go to state 180

State 97:

	ArrayReference -> LBRACKET . OPTIONAL-47 ']'	(Rule 199)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	ARGV	shift, and go to state 182
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	MY	shift, and go to state 174
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP01_QW	shift, and go to state 185
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	']'	reduce using rule 198 (OPTIONAL-47)

	ArrayDereference	go to state 122
	WordScoped	go to state 109
	SubExpression	go to state 183
	ListElement	go to state 188
	ListElements	go to state 186
	Operator	go to state 84
	Expression	go to state 144
	OPTIONAL-47	go to state 184
	Literal	go to state 86
	Variable	go to state 143
	ArrayReference	go to state 104
	TypeInner	go to state 187
	HashReference	go to state 91
	HashDereference	go to state 119
	VariableSymbolOrSelf	go to state 106

State 98:

	Statement -> VariableModification . ';'	(Rule 158)

	';'	shift, and go to state 189

State 99:

	Operator -> OP05_BITWISE_NEG_LPAREN . SubExpression ')'	(Rule 90)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	SubExpression	go to state 190
	ArrayDereference	go to state 122
	WordScoped	go to state 109
	Operator	go to state 84
	Expression	go to state 144
	Literal	go to state 86
	Variable	go to state 143
	ArrayReference	go to state 104
	VariableSymbolOrSelf	go to state 106
	HashDereference	go to state 119
	HashReference	go to state 91

State 100:

	VariableSymbolOrSelf -> VARIABLE_SYMBOL .	(Rule 234)

	$default	reduce using rule 234 (VariableSymbolOrSelf)

State 101:

	Operator -> OP10_NAMED_UNARY . SubExpression	(Rule 99)
	Operator -> OP10_NAMED_UNARY .	(Rule 100)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	')'	reduce using rule 100 (Operator)
	';'	reduce using rule 100 (Operator)
	']'	reduce using rule 100 (Operator)
	'}'	reduce using rule 100 (Operator)
	OP04_MATH_POW	reduce using rule 100 (Operator)
	OP06_REGEX_BIND	reduce using rule 100 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 100 (Operator)
	OP07_STRING_REPEAT	reduce using rule 100 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 100 (Operator)
	OP08_STRING_CAT	reduce using rule 100 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 100 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 100 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 100 (Operator)
	OP13_BITWISE_AND	reduce using rule 100 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 100 (Operator)
	OP15_LOGICAL_AND	reduce using rule 100 (Operator)
	OP16_LOGICAL_OR	reduce using rule 100 (Operator)
	OP17_LIST_RANGE	reduce using rule 100 (Operator)
	OP18_TERNARY	reduce using rule 100 (Operator)
	OP21_LIST_COMMA	reduce using rule 100 (Operator)
	OP23_LOGICAL_AND	reduce using rule 100 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 100 (Operator)

	ArrayDereference	go to state 122
	WordScoped	go to state 109
	SubExpression	go to state 191
	Literal	go to state 86
	Expression	go to state 144
	Operator	go to state 84
	Variable	go to state 143
	VariableSymbolOrSelf	go to state 106
	HashDereference	go to state 119
	HashReference	go to state 91
	ArrayReference	go to state 104

State 102:

	OperatorVoid -> OP01_NAMED_VOID . ListElements ';'	(Rule 121)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	ARGV	shift, and go to state 182
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	MY	shift, and go to state 174
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP01_QW	shift, and go to state 185
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	ListElements	go to state 192
	WordScoped	go to state 109
	ArrayDereference	go to state 122
	ListElement	go to state 188
	SubExpression	go to state 183
	Literal	go to state 86
	Expression	go to state 144
	Operator	go to state 84
	Variable	go to state 143
	VariableSymbolOrSelf	go to state 106
	HashReference	go to state 91
	HashDereference	go to state 119
	ArrayReference	go to state 104
	TypeInner	go to state 187

State 103:

	Operator -> OP01_NAMED . SubExpression	(Rule 83)
	OperatorVoid -> OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ';'	(Rule 122)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	ARGV	shift, and go to state 182
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	MY	shift, and go to state 174
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP01_QW	shift, and go to state 185
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	HashReference	go to state 91
	HashDereference	go to state 119
	VariableSymbolOrSelf	go to state 106
	TypeInner	go to state 187
	ArrayReference	go to state 104
	Variable	go to state 143
	Literal	go to state 86
	Expression	go to state 144
	Operator	go to state 84
	ArrayDereference	go to state 122
	WordScoped	go to state 109
	SubExpression	go to state 193
	ListElement	go to state 194

State 104:

	SubExpression -> ArrayReference .	(Rule 141)

	$default	reduce using rule 141 (SubExpression)

State 105:

	Expression -> CONSTANT_CALL_SCOPED .	(Rule 133)

	$default	reduce using rule 133 (Expression)

State 106:

	Variable -> VariableSymbolOrSelf . STAR-44	(Rule 179)

	$default	reduce using rule 178 (STAR-44)

	STAR-44	go to state 195

State 107:

	OPTIONAL-38 -> PAREN-37 .	(Rule 152)

	$default	reduce using rule 152 (OPTIONAL-38)

State 108:

	VariableSymbolOrSelf -> SELF .	(Rule 235)

	$default	reduce using rule 235 (VariableSymbolOrSelf)

State 109:

	Expression -> WordScoped . LPAREN OPTIONAL-34 ')'	(Rule 134)
	Expression -> WordScoped . OP02_METHOD_THINARROW_NEW OPTIONAL-36 ')'	(Rule 136)

	LPAREN	shift, and go to state 196
	OP02_METHOD_THINARROW_NEW	shift, and go to state 197

State 110:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 111:

	Literal -> LITERAL_STRING .	(Rule 237)

	$default	reduce using rule 237 (Literal)

State 112:

	Statement -> OperatorVoid .	(Rule 156)

	$default	reduce using rule 156 (Statement)

State 113:

	Operation -> Expression . ';'	(Rule 78)
	SubExpression -> Expression .	(Rule 137)

	';'	shift, and go to state 198

	OP04_MATH_POW	reduce using rule 137 (SubExpression)
	OP06_REGEX_BIND	reduce using rule 137 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 137 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 137 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 137 (SubExpression)
	OP08_STRING_CAT	reduce using rule 137 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 137 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 137 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 137 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 137 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 137 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 137 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 137 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 137 (SubExpression)
	OP18_TERNARY	reduce using rule 137 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 137 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 137 (SubExpression)

State 114:

	HashReference -> LBRACE . HashEntry STAR-51 '}'	(Rule 213)
	HashReference -> LBRACE . '}'	(Rule 214)

	'%{'	shift, and go to state 94
	'}'	shift, and go to state 207
	ENV	shift, and go to state 220
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 206
	OP01_NAMED	shift, and go to state 217
	OP01_NAMED_VOID	shift, and go to state 214
	OP01_OPEN	shift, and go to state 203
	OP01_PRINT	shift, and go to state 200
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 213
	OP07_STRING_REPEAT	shift, and go to state 223
	OP08_MATH_ADD_SUB	shift, and go to state 199
	OP10_NAMED_UNARY	shift, and go to state 215
	OP11_COMPARE_LT_GT	shift, and go to state 201
	OP12_COMPARE_EQ_NE	shift, and go to state 204
	OP19_LOOP_CONTROL	shift, and go to state 211
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 219
	OP22_LOGICAL_NEG	shift, and go to state 208
	OP23_LOGICAL_AND	shift, and go to state 218
	OP24_LOGICAL_OR_XOR	shift, and go to state 216
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 222

	HashEntry	go to state 221
	VariableSymbolOrSelf	go to state 106
	HashDereference	go to state 202
	Literal	go to state 212
	OpStringOrWord	go to state 209
	Variable	go to state 205
	VarOrLitOrOpStrOrWord	go to state 210

State 115:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 87)

	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100

	Variable	go to state 224
	VariableSymbolOrSelf	go to state 106

State 116:

	OperatorVoid -> OP01_PRINT . OPTIONAL-32 ListElements ';'	(Rule 117)
	OperatorVoid -> OP01_PRINT . FHREF_SYMBOL_BRACES ListElements ';'	(Rule 118)

	FHREF_SYMBOL_BRACES	shift, and go to state 228
	STDOUT_STDERR	shift, and go to state 225

	'%{'	reduce using rule 114 (OPTIONAL-32)
	'@{'	reduce using rule 114 (OPTIONAL-32)
	'undef'	reduce using rule 114 (OPTIONAL-32)
	ARGV	reduce using rule 114 (OPTIONAL-32)
	CONSTANT_CALL_SCOPED	reduce using rule 114 (OPTIONAL-32)
	LBRACE	reduce using rule 114 (OPTIONAL-32)
	LBRACKET	reduce using rule 114 (OPTIONAL-32)
	LITERAL_NUMBER	reduce using rule 114 (OPTIONAL-32)
	LITERAL_STRING	reduce using rule 114 (OPTIONAL-32)
	LPAREN	reduce using rule 114 (OPTIONAL-32)
	MY	reduce using rule 114 (OPTIONAL-32)
	OP01_CLOSE	reduce using rule 114 (OPTIONAL-32)
	OP01_NAMED	reduce using rule 114 (OPTIONAL-32)
	OP01_OPEN	reduce using rule 114 (OPTIONAL-32)
	OP01_QW	reduce using rule 114 (OPTIONAL-32)
	OP03_MATH_INC_DEC	reduce using rule 114 (OPTIONAL-32)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 114 (OPTIONAL-32)
	OP05_LOGICAL_NEG	reduce using rule 114 (OPTIONAL-32)
	OP05_MATH_NEG_LPAREN	reduce using rule 114 (OPTIONAL-32)
	OP10_NAMED_UNARY	reduce using rule 114 (OPTIONAL-32)
	OP22_LOGICAL_NEG	reduce using rule 114 (OPTIONAL-32)
	SELF	reduce using rule 114 (OPTIONAL-32)
	VARIABLE_SYMBOL	reduce using rule 114 (OPTIONAL-32)
	WORD	reduce using rule 114 (OPTIONAL-32)
	WORD_SCOPED	reduce using rule 114 (OPTIONAL-32)
	WORD_UPPERCASE	reduce using rule 114 (OPTIONAL-32)

	OPTIONAL-32	go to state 226
	PAREN-31	go to state 227

State 117:

	Literal -> LITERAL_NUMBER .	(Rule 236)

	$default	reduce using rule 236 (Literal)

State 118:

	SubExpression -> 'undef' .	(Rule 138)

	$default	reduce using rule 138 (SubExpression)

State 119:

	SubExpression -> HashDereference .	(Rule 144)

	$default	reduce using rule 144 (SubExpression)

State 120:

	Operator -> OP01_OPEN . MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 85)

	MY	shift, and go to state 229

State 121:

	Operator -> OP05_MATH_NEG_LPAREN . SubExpression ')'	(Rule 92)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	Variable	go to state 143
	HashDereference	go to state 119
	VariableSymbolOrSelf	go to state 106
	HashReference	go to state 91
	ArrayReference	go to state 104
	SubExpression	go to state 230
	WordScoped	go to state 109
	ArrayDereference	go to state 122
	Literal	go to state 86
	Expression	go to state 144
	Operator	go to state 84

State 122:

	SubExpression -> ArrayDereference .	(Rule 142)

	$default	reduce using rule 142 (SubExpression)

State 123:

	OperatorVoid -> OP01_NAMED_VOID_SCOLON .	(Rule 119)

	$default	reduce using rule 119 (OperatorVoid)

State 124:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN . OPTIONAL-33 ')' ';'	(Rule 120)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	ARGV	shift, and go to state 182
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	MY	shift, and go to state 174
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP01_QW	shift, and go to state 185
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	')'	reduce using rule 116 (OPTIONAL-33)

	Operator	go to state 84
	Expression	go to state 144
	Literal	go to state 86
	OPTIONAL-33	go to state 232
	ArrayDereference	go to state 122
	WordScoped	go to state 109
	ListElement	go to state 188
	SubExpression	go to state 183
	ListElements	go to state 231
	TypeInner	go to state 187
	ArrayReference	go to state 104
	HashDereference	go to state 119
	HashReference	go to state 91
	VariableSymbolOrSelf	go to state 106
	Variable	go to state 143

State 125:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'if'	shift, and go to state 132
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	MY	shift, and go to state 93
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 103
	OP01_NAMED_SCOLON	shift, and go to state 85
	OP01_NAMED_VOID	shift, and go to state 102
	OP01_NAMED_VOID_LPAREN	shift, and go to state 124
	OP01_NAMED_VOID_SCOLON	shift, and go to state 123
	OP01_OPEN	shift, and go to state 120
	OP01_PRINT	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 126
	OP19_LOOP_CONTROL	shift, and go to state 83
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 95
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 88

	$end	reduce using rule 18 (Program)
	'for'	reduce using rule 153 (OPTIONAL-38)
	'foreach'	reduce using rule 153 (OPTIONAL-38)
	'while'	reduce using rule 153 (OPTIONAL-38)

	LoopLabel	go to state 87
	VariableDeclaration	go to state 92
	HashReference	go to state 91
	HashDereference	go to state 119
	Conditional	go to state 90
	SubExpression	go to state 82
	Operation	go to state 233
	WordScoped	go to state 109
	PAREN-37	go to state 107
	Literal	go to state 86
	Expression	go to state 113
	OperatorVoid	go to state 112
	Operator	go to state 84
	Variable	go to state 130
	VariableSymbolOrSelf	go to state 106
	ArrayReference	go to state 104
	OPTIONAL-38	go to state 96
	ArrayDereference	go to state 122
	Statement	go to state 128
	VariableModification	go to state 98

State 126:

	Operation -> OP10_NAMED_UNARY_SCOLON .	(Rule 80)

	$default	reduce using rule 80 (Operation)

State 127:

	Operator -> OP05_LOGICAL_NEG . SubExpression	(Rule 91)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	ArrayReference	go to state 104
	VariableSymbolOrSelf	go to state 106
	HashReference	go to state 91
	HashDereference	go to state 119
	Variable	go to state 143
	Expression	go to state 144
	Operator	go to state 84
	Literal	go to state 86
	ArrayDereference	go to state 122
	WordScoped	go to state 109
	SubExpression	go to state 234

State 128:

	Operation -> Statement .	(Rule 81)

	$default	reduce using rule 81 (Operation)

State 129:

	ArrayDereference -> '@{' . Variable '}'	(Rule 202)
	ArrayDereference -> '@{' . OPTIONAL-48 ArrayReference '}'	(Rule 203)

	MY	shift, and go to state 174
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100

	LBRACKET	reduce using rule 201 (OPTIONAL-48)

	OPTIONAL-48	go to state 235
	Variable	go to state 237
	TypeInner	go to state 236
	VariableSymbolOrSelf	go to state 106

State 130:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 88)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-35 ')'	(Rule 135)
	SubExpression -> Variable .	(Rule 140)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN SubExpressionOrInput	(Rule 187)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY SubExpression	(Rule 188)

	OP02_METHOD_THINARROW	shift, and go to state 240
	OP03_MATH_INC_DEC	shift, and go to state 238
	OP19_VARIABLE_ASSIGN	shift, and go to state 241
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 239

	')'	reduce using rule 140 (SubExpression)
	OP04_MATH_POW	reduce using rule 140 (SubExpression)
	OP06_REGEX_BIND	reduce using rule 140 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 140 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 140 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 140 (SubExpression)
	OP08_STRING_CAT	reduce using rule 140 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 140 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 140 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 140 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 140 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 140 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 140 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 140 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 140 (SubExpression)
	OP18_TERNARY	reduce using rule 140 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 140 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 140 (SubExpression)

State 131:

	Operator -> OP01_CLOSE . FHREF_SYMBOL	(Rule 86)

	FHREF_SYMBOL	shift, and go to state 242

State 132:

	Conditional -> 'if' . LPAREN SubExpression ')' CodeBlock STAR-40 OPTIONAL-42	(Rule 165)

	LPAREN	shift, and go to state 243

State 133:

	SubroutineArguments -> LPAREN_MY . Type VARIABLE_SYMBOL STAR-20 ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 52)

	TYPE_INTEGER	shift, and go to state 58
	WORD	shift, and go to state 61
	WORD_SCOPED	shift, and go to state 60

	Type	go to state 244

State 134:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-17 . STAR-18 '}' ';'	(Rule 48)

	$default	reduce using rule 47 (STAR-18)

	STAR-18	go to state 245

State 135:

	OPTIONAL-17 -> SubroutineArguments .	(Rule 44)

	$default	reduce using rule 44 (OPTIONAL-17)

State 136:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal . ';'	(Rule 43)

	';'	shift, and go to state 246

State 137:

	TypeInnerConstant -> MY Type . '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 228)

	'$TYPED_'	shift, and go to state 247

State 138:

	STAR-22 -> STAR-22 Include .	(Rule 55)

	$default	reduce using rule 55 (STAR-22)

State 139:

	STAR-23 -> STAR-23 . Constant	(Rule 57)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-21 STAR-22 STAR-23 . Properties STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'our hashref $properties'	shift, and go to state 248
	'use constant'	shift, and go to state 46

	Constant	go to state 249
	Properties	go to state 250

State 140:

	Operator -> OP01_NAMED . SubExpression	(Rule 83)
	Operator -> LPAREN OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ')'	(Rule 84)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	ARGV	shift, and go to state 182
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	MY	shift, and go to state 174
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP01_QW	shift, and go to state 185
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	Variable	go to state 143
	TypeInner	go to state 187
	ArrayReference	go to state 104
	HashDereference	go to state 119
	HashReference	go to state 91
	VariableSymbolOrSelf	go to state 106
	ListElement	go to state 251
	SubExpression	go to state 193
	ArrayDereference	go to state 122
	WordScoped	go to state 109
	Expression	go to state 144
	Operator	go to state 84
	Literal	go to state 86

State 141:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	SubExpression -> LPAREN SubExpression . ')'	(Rule 145)

	')'	shift, and go to state 252
	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 152
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 159
	OP23_LOGICAL_AND	shift, and go to state 161
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

State 142:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 132)

	LPAREN	shift, and go to state 166

State 143:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 88)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-35 ')'	(Rule 135)
	SubExpression -> Variable .	(Rule 140)

	OP02_METHOD_THINARROW	shift, and go to state 240
	OP03_MATH_INC_DEC	shift, and go to state 238

	')'	reduce using rule 140 (SubExpression)
	';'	reduce using rule 140 (SubExpression)
	']'	reduce using rule 140 (SubExpression)
	'}'	reduce using rule 140 (SubExpression)
	OP04_MATH_POW	reduce using rule 140 (SubExpression)
	OP06_REGEX_BIND	reduce using rule 140 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 140 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 140 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 140 (SubExpression)
	OP08_STRING_CAT	reduce using rule 140 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 140 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 140 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 140 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 140 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 140 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 140 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 140 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 140 (SubExpression)
	OP18_TERNARY	reduce using rule 140 (SubExpression)
	OP21_LIST_COMMA	reduce using rule 140 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 140 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 140 (SubExpression)

State 144:

	SubExpression -> Expression .	(Rule 137)

	$default	reduce using rule 137 (SubExpression)

State 145:

	Operator -> LPAREN OP01_PRINT . FHREF_SYMBOL_BRACES ListElements ')'	(Rule 82)

	FHREF_SYMBOL_BRACES	shift, and go to state 253

State 146:

	Operator -> SubExpression OP11_COMPARE_LT_GT . SubExpression	(Rule 101)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	Variable	go to state 143
	ArrayReference	go to state 104
	VariableSymbolOrSelf	go to state 106
	HashReference	go to state 91
	HashDereference	go to state 119
	ArrayDereference	go to state 122
	WordScoped	go to state 109
	SubExpression	go to state 254
	Operator	go to state 84
	Expression	go to state 144
	Literal	go to state 86

State 147:

	Operator -> SubExpression OP08_MATH_ADD_SUB . SubExpression	(Rule 96)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	SubExpression	go to state 255
	WordScoped	go to state 109
	ArrayDereference	go to state 122
	Literal	go to state 86
	Expression	go to state 144
	Operator	go to state 84
	Variable	go to state 143
	HashDereference	go to state 119
	HashReference	go to state 91
	VariableSymbolOrSelf	go to state 106
	ArrayReference	go to state 104

State 148:

	Operator -> SubExpression OP14_BITWISE_OR_XOR . SubExpression	(Rule 104)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	SubExpression	go to state 256
	ArrayDereference	go to state 122
	WordScoped	go to state 109
	Operator	go to state 84
	Expression	go to state 144
	Literal	go to state 86
	Variable	go to state 143
	ArrayReference	go to state 104
	VariableSymbolOrSelf	go to state 106
	HashDereference	go to state 119
	HashReference	go to state 91

State 149:

	Operator -> SubExpression OP09_BITWISE_SHIFT . SubExpression	(Rule 98)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	VariableSymbolOrSelf	go to state 106
	HashReference	go to state 91
	HashDereference	go to state 119
	ArrayReference	go to state 104
	Variable	go to state 143
	Literal	go to state 86
	Operator	go to state 84
	Expression	go to state 144
	ArrayDereference	go to state 122
	WordScoped	go to state 109
	SubExpression	go to state 257

State 150:

	Operator -> SubExpression OP16_LOGICAL_OR . SubExpression	(Rule 106)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	ArrayDereference	go to state 122
	WordScoped	go to state 109
	SubExpression	go to state 258
	Literal	go to state 86
	Expression	go to state 144
	Operator	go to state 84
	Variable	go to state 143
	HashDereference	go to state 119
	VariableSymbolOrSelf	go to state 106
	HashReference	go to state 91
	ArrayReference	go to state 104

State 151:

	Operator -> SubExpression OP12_COMPARE_EQ_NE . SubExpression	(Rule 102)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	ArrayDereference	go to state 122
	WordScoped	go to state 109
	SubExpression	go to state 259
	Literal	go to state 86
	Expression	go to state 144
	Operator	go to state 84
	Variable	go to state 143
	VariableSymbolOrSelf	go to state 106
	HashReference	go to state 91
	HashDereference	go to state 119
	ArrayReference	go to state 104

State 152:

	Operator -> SubExpression OP15_LOGICAL_AND . SubExpression	(Rule 105)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	HashDereference	go to state 119
	VariableSymbolOrSelf	go to state 106
	HashReference	go to state 91
	ArrayReference	go to state 104
	Variable	go to state 143
	Literal	go to state 86
	Expression	go to state 144
	Operator	go to state 84
	SubExpression	go to state 260
	ArrayDereference	go to state 122
	WordScoped	go to state 109

State 153:

	Operator -> SubExpression OP13_BITWISE_AND . SubExpression	(Rule 103)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	Literal	go to state 86
	Operator	go to state 84
	Expression	go to state 144
	SubExpression	go to state 261
	ArrayDereference	go to state 122
	WordScoped	go to state 109
	HashReference	go to state 91
	VariableSymbolOrSelf	go to state 106
	HashDereference	go to state 119
	ArrayReference	go to state 104
	Variable	go to state 143

State 154:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 107)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	HashDereference	go to state 119
	VariableSymbolOrSelf	go to state 106
	HashReference	go to state 91
	ArrayReference	go to state 104
	Variable	go to state 143
	Literal	go to state 86
	Expression	go to state 144
	Operator	go to state 84
	SubExpression	go to state 262
	ArrayDereference	go to state 122
	WordScoped	go to state 109

State 155:

	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD . SubExpression	(Rule 95)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	ArrayReference	go to state 104
	HashReference	go to state 91
	VariableSymbolOrSelf	go to state 106
	HashDereference	go to state 119
	Variable	go to state 143
	Operator	go to state 84
	Expression	go to state 144
	Literal	go to state 86
	WordScoped	go to state 109
	ArrayDereference	go to state 122
	SubExpression	go to state 263

State 156:

	Operator -> SubExpression OP04_MATH_POW . SubExpression	(Rule 89)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	WordScoped	go to state 109
	ArrayDereference	go to state 122
	SubExpression	go to state 264
	Operator	go to state 84
	Expression	go to state 144
	Literal	go to state 86
	Variable	go to state 143
	ArrayReference	go to state 104
	VariableSymbolOrSelf	go to state 106
	HashReference	go to state 91
	HashDereference	go to state 119

State 157:

	Operator -> SubExpression OP24_LOGICAL_OR_XOR . SubExpression	(Rule 111)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	Variable	go to state 143
	ArrayReference	go to state 104
	VariableSymbolOrSelf	go to state 106
	HashReference	go to state 91
	HashDereference	go to state 119
	WordScoped	go to state 109
	ArrayDereference	go to state 122
	SubExpression	go to state 265
	Operator	go to state 84
	Expression	go to state 144
	Literal	go to state 86

State 158:

	Operator -> SubExpression OP06_REGEX_BIND . OP06_REGEX_PATTERN	(Rule 93)

	OP06_REGEX_PATTERN	shift, and go to state 266

State 159:

	Operator -> SubExpression OP18_TERNARY . VariableOrLiteral COLON VariableOrLiteral	(Rule 108)

	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100

	VariableOrLiteral	go to state 269
	Variable	go to state 268
	Literal	go to state 267
	VariableSymbolOrSelf	go to state 106

State 160:

	Operator -> SubExpression OP08_STRING_CAT . SubExpression	(Rule 97)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	Variable	go to state 143
	ArrayReference	go to state 104
	HashDereference	go to state 119
	VariableSymbolOrSelf	go to state 106
	HashReference	go to state 91
	WordScoped	go to state 109
	ArrayDereference	go to state 122
	SubExpression	go to state 270
	Operator	go to state 84
	Expression	go to state 144
	Literal	go to state 86

State 161:

	Operator -> SubExpression OP23_LOGICAL_AND . SubExpression	(Rule 110)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	WordScoped	go to state 109
	ArrayDereference	go to state 122
	SubExpression	go to state 271
	Literal	go to state 86
	Expression	go to state 144
	Operator	go to state 84
	Variable	go to state 143
	HashDereference	go to state 119
	HashReference	go to state 91
	VariableSymbolOrSelf	go to state 106
	ArrayReference	go to state 104

State 162:

	Operator -> SubExpression OP07_STRING_REPEAT . SubExpression	(Rule 94)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	Expression	go to state 144
	Operator	go to state 84
	Literal	go to state 86
	SubExpression	go to state 272
	WordScoped	go to state 109
	ArrayDereference	go to state 122
	ArrayReference	go to state 104
	HashDereference	go to state 119
	HashReference	go to state 91
	VariableSymbolOrSelf	go to state 106
	Variable	go to state 143

State 163:

	LoopLabel -> WORD_UPPERCASE .	(Rule 221)

	$default	reduce using rule 221 (LoopLabel)

State 164:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 124)

	';'	shift, and go to state 273

State 165:

	PAREN-37 -> LoopLabel COLON .	(Rule 151)

	$default	reduce using rule 151 (PAREN-37)

State 166:

	Expression -> WORD_UPPERCASE LPAREN . ')'	(Rule 132)

	')'	shift, and go to state 274

State 167:

	Operator -> OP01_NAMED . SubExpression	(Rule 83)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	ArrayDereference	go to state 122
	WordScoped	go to state 109
	SubExpression	go to state 275
	Literal	go to state 86
	Expression	go to state 144
	Operator	go to state 84
	Variable	go to state 143
	HashReference	go to state 91
	VariableSymbolOrSelf	go to state 106
	HashDereference	go to state 119
	ArrayReference	go to state 104

State 168:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> OP22_LOGICAL_NEG SubExpression .	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 152
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 159

	')'	reduce using rule 109 (Operator)
	';'	reduce using rule 109 (Operator)
	']'	reduce using rule 109 (Operator)
	'}'	reduce using rule 109 (Operator)
	OP21_LIST_COMMA	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 169:

	VariableDeclaration -> MY TYPE_FHREF . FHREF_SYMBOL ';'	(Rule 186)

	FHREF_SYMBOL	shift, and go to state 276

State 170:

	VariableDeclaration -> MY Type . VARIABLE_SYMBOL ';'	(Rule 183)
	VariableDeclaration -> MY Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExpIn	(Rule 184)
	VariableDeclaration -> MY Type . VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 185)

	VARIABLE_SYMBOL	shift, and go to state 277

State 171:

	OPTIONAL-52 -> TypeInner .	(Rule 215)

	$default	reduce using rule 215 (OPTIONAL-52)

State 172:

	HashDereference -> '%{' Variable . '}'	(Rule 217)

	'}'	shift, and go to state 278

State 173:

	HashDereference -> '%{' OPTIONAL-52 . HashReference '}'	(Rule 218)

	LBRACE	shift, and go to state 114

	HashReference	go to state 279

State 174:

	TypeInner -> MY . Type '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN	(Rule 225)

	TYPE_INTEGER	shift, and go to state 58
	WORD	shift, and go to state 61
	WORD_SCOPED	shift, and go to state 60

	Type	go to state 280

State 175:

	LoopForEach -> 'foreach' . MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 171)

	MY	shift, and go to state 281

State 176:

	LoopWhile -> 'while' . LPAREN SubExpression ')' CodeBlock	(Rule 172)
	LoopWhile -> 'while' . LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrInput ')' CodeBlock	(Rule 173)

	LPAREN	shift, and go to state 282
	LPAREN_MY	shift, and go to state 283

State 177:

	Statement -> OPTIONAL-38 Loop .	(Rule 155)

	$default	reduce using rule 155 (Statement)

State 178:

	Loop -> LoopWhile .	(Rule 168)

	$default	reduce using rule 168 (Loop)

State 179:

	LoopFor -> 'for' . MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 169)
	LoopFor -> 'for' . LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 170)

	LPAREN_MY	shift, and go to state 285
	MY	shift, and go to state 284

State 180:

	Loop -> LoopFor .	(Rule 166)

	$default	reduce using rule 166 (Loop)

State 181:

	Loop -> LoopForEach .	(Rule 167)

	$default	reduce using rule 167 (Loop)

State 182:

	ListElement -> ARGV .	(Rule 196)

	$default	reduce using rule 196 (ListElement)

State 183:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	ListElement -> SubExpression .	(Rule 193)

	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 152
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 159
	OP23_LOGICAL_AND	shift, and go to state 161
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

	')'	reduce using rule 193 (ListElement)
	';'	reduce using rule 193 (ListElement)
	']'	reduce using rule 193 (ListElement)
	OP21_LIST_COMMA	reduce using rule 193 (ListElement)

State 184:

	ArrayReference -> LBRACKET OPTIONAL-47 . ']'	(Rule 199)

	']'	shift, and go to state 286

State 185:

	ListElement -> OP01_QW .	(Rule 195)

	$default	reduce using rule 195 (ListElement)

State 186:

	OPTIONAL-47 -> ListElements .	(Rule 197)

	$default	reduce using rule 197 (OPTIONAL-47)

State 187:

	ListElement -> TypeInner . SubExpression	(Rule 194)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	Literal	go to state 86
	Expression	go to state 144
	Operator	go to state 84
	SubExpression	go to state 287
	ArrayDereference	go to state 122
	WordScoped	go to state 109
	HashReference	go to state 91
	HashDereference	go to state 119
	VariableSymbolOrSelf	go to state 106
	ArrayReference	go to state 104
	Variable	go to state 143

State 188:

	ListElements -> ListElement . STAR-46	(Rule 192)

	$default	reduce using rule 191 (STAR-46)

	STAR-46	go to state 288

State 189:

	Statement -> VariableModification ';' .	(Rule 158)

	$default	reduce using rule 158 (Statement)

State 190:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> OP05_BITWISE_NEG_LPAREN SubExpression . ')'	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	')'	shift, and go to state 289
	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 152
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 159
	OP23_LOGICAL_AND	shift, and go to state 161
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

State 191:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> OP10_NAMED_UNARY SubExpression .	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149

	')'	reduce using rule 99 (Operator)
	';'	reduce using rule 99 (Operator)
	']'	reduce using rule 99 (Operator)
	'}'	reduce using rule 99 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 99 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 99 (Operator)
	OP13_BITWISE_AND	reduce using rule 99 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 99 (Operator)
	OP15_LOGICAL_AND	reduce using rule 99 (Operator)
	OP16_LOGICAL_OR	reduce using rule 99 (Operator)
	OP17_LIST_RANGE	reduce using rule 99 (Operator)
	OP18_TERNARY	reduce using rule 99 (Operator)
	OP21_LIST_COMMA	reduce using rule 99 (Operator)
	OP23_LOGICAL_AND	reduce using rule 99 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 99 (Operator)

State 192:

	OperatorVoid -> OP01_NAMED_VOID ListElements . ';'	(Rule 121)

	';'	shift, and go to state 290

State 193:

	Operator -> OP01_NAMED SubExpression .	(Rule 83)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	ListElement -> SubExpression .	(Rule 193)

	')'	reduce using rule 83 (Operator)
	';'	reduce using rule 83 (Operator)
	OP04_MATH_POW	reduce using rule 83 (Operator)
	OP06_REGEX_BIND	reduce using rule 83 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 83 (Operator)
	OP07_STRING_REPEAT	reduce using rule 83 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 83 (Operator)
	OP08_STRING_CAT	reduce using rule 83 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 83 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 83 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 83 (Operator)
	OP13_BITWISE_AND	reduce using rule 83 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 83 (Operator)
	OP15_LOGICAL_AND	reduce using rule 83 (Operator)
	OP16_LOGICAL_OR	reduce using rule 83 (Operator)
	OP17_LIST_RANGE	reduce using rule 83 (Operator)
	OP18_TERNARY	reduce using rule 83 (Operator)
	OP21_LIST_COMMA	reduce using rule 193 (ListElement)
	OP23_LOGICAL_AND	reduce using rule 83 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 83 (Operator)

State 194:

	OperatorVoid -> OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ';'	(Rule 122)

	OP21_LIST_COMMA	shift, and go to state 291

State 195:

	STAR-44 -> STAR-44 . VariableRetrieval	(Rule 177)
	Variable -> VariableSymbolOrSelf STAR-44 .	(Rule 179)

	OP02_ARRAY_THINARROW	shift, and go to state 292
	OP02_HASH_THINARROW	shift, and go to state 293

	')'	reduce using rule 179 (Variable)
	';'	reduce using rule 179 (Variable)
	']'	reduce using rule 179 (Variable)
	'}'	reduce using rule 179 (Variable)
	COLON	reduce using rule 179 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 179 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 179 (Variable)
	OP04_MATH_POW	reduce using rule 179 (Variable)
	OP06_REGEX_BIND	reduce using rule 179 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 179 (Variable)
	OP07_STRING_REPEAT	reduce using rule 179 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 179 (Variable)
	OP08_STRING_CAT	reduce using rule 179 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 179 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 179 (Variable)
	OP12_COMPARE_EQ_NE	reduce using rule 179 (Variable)
	OP13_BITWISE_AND	reduce using rule 179 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 179 (Variable)
	OP15_LOGICAL_AND	reduce using rule 179 (Variable)
	OP16_LOGICAL_OR	reduce using rule 179 (Variable)
	OP17_LIST_RANGE	reduce using rule 179 (Variable)
	OP18_TERNARY	reduce using rule 179 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 179 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 179 (Variable)
	OP20_HASH_FATARROW	reduce using rule 179 (Variable)
	OP21_LIST_COMMA	reduce using rule 179 (Variable)
	OP23_LOGICAL_AND	reduce using rule 179 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 179 (Variable)

	VariableRetrieval	go to state 294

State 196:

	Expression -> WordScoped LPAREN . OPTIONAL-34 ')'	(Rule 134)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	ARGV	shift, and go to state 182
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	MY	shift, and go to state 174
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP01_QW	shift, and go to state 185
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	')'	reduce using rule 126 (OPTIONAL-34)

	HashReference	go to state 91
	HashDereference	go to state 119
	VariableSymbolOrSelf	go to state 106
	TypeInner	go to state 187
	ArrayReference	go to state 104
	Variable	go to state 143
	OPTIONAL-34	go to state 296
	Literal	go to state 86
	Operator	go to state 84
	Expression	go to state 144
	ListElements	go to state 295
	ArrayDereference	go to state 122
	WordScoped	go to state 109
	SubExpression	go to state 183
	ListElement	go to state 188

State 197:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW . OPTIONAL-36 ')'	(Rule 136)

	LBRACE	shift, and go to state 114

	')'	reduce using rule 130 (OPTIONAL-36)

	HashReference	go to state 297
	OPTIONAL-36	go to state 298

State 198:

	Operation -> Expression ';' .	(Rule 78)

	$default	reduce using rule 78 (Operation)

State 199:

	OpStringOrWord -> OP08_MATH_ADD_SUB .	(Rule 252)

	$default	reduce using rule 252 (OpStringOrWord)

State 200:

	OpStringOrWord -> OP01_PRINT .	(Rule 259)

	$default	reduce using rule 259 (OpStringOrWord)

State 201:

	OpStringOrWord -> OP11_COMPARE_LT_GT .	(Rule 250)

	$default	reduce using rule 250 (OpStringOrWord)

State 202:

	HashEntry -> HashDereference .	(Rule 207)

	$default	reduce using rule 207 (HashEntry)

State 203:

	OpStringOrWord -> OP01_OPEN .	(Rule 257)

	$default	reduce using rule 257 (OpStringOrWord)

State 204:

	OpStringOrWord -> OP12_COMPARE_EQ_NE .	(Rule 249)

	$default	reduce using rule 249 (OpStringOrWord)

State 205:

	VarOrLitOrOpStrOrWord -> Variable .	(Rule 231)

	$default	reduce using rule 231 (VarOrLitOrOpStrOrWord)

State 206:

	OpStringOrWord -> OP01_CLOSE .	(Rule 256)

	$default	reduce using rule 256 (OpStringOrWord)

State 207:

	HashReference -> LBRACE '}' .	(Rule 214)

	$default	reduce using rule 214 (HashReference)

State 208:

	OpStringOrWord -> OP22_LOGICAL_NEG .	(Rule 246)

	$default	reduce using rule 246 (OpStringOrWord)

State 209:

	VarOrLitOrOpStrOrWord -> OpStringOrWord .	(Rule 233)

	$default	reduce using rule 233 (VarOrLitOrOpStrOrWord)

State 210:

	HashEntry -> VarOrLitOrOpStrOrWord . OP20_HASH_FATARROW OPTIONAL-49 SubExpression	(Rule 206)

	OP20_HASH_FATARROW	shift, and go to state 299

State 211:

	OpStringOrWord -> OP19_LOOP_CONTROL .	(Rule 248)

	$default	reduce using rule 248 (OpStringOrWord)

State 212:

	VarOrLitOrOpStrOrWord -> Literal .	(Rule 232)

	$default	reduce using rule 232 (VarOrLitOrOpStrOrWord)

State 213:

	OpStringOrWord -> OP07_MATH_MULT_DIV_MOD .	(Rule 253)

	$default	reduce using rule 253 (OpStringOrWord)

State 214:

	OpStringOrWord -> OP01_NAMED_VOID .	(Rule 258)

	$default	reduce using rule 258 (OpStringOrWord)

State 215:

	OpStringOrWord -> OP10_NAMED_UNARY .	(Rule 251)

	$default	reduce using rule 251 (OpStringOrWord)

State 216:

	OpStringOrWord -> OP24_LOGICAL_OR_XOR .	(Rule 244)

	$default	reduce using rule 244 (OpStringOrWord)

State 217:

	OpStringOrWord -> OP01_NAMED .	(Rule 255)

	$default	reduce using rule 255 (OpStringOrWord)

State 218:

	OpStringOrWord -> OP23_LOGICAL_AND .	(Rule 245)

	$default	reduce using rule 245 (OpStringOrWord)

State 219:

	OpStringOrWord -> OP19_LOOP_CONTROL_SCOLON .	(Rule 247)

	$default	reduce using rule 247 (OpStringOrWord)

State 220:

	HashEntry -> ENV .	(Rule 208)

	$default	reduce using rule 208 (HashEntry)

State 221:

	HashReference -> LBRACE HashEntry . STAR-51 '}'	(Rule 213)

	$default	reduce using rule 212 (STAR-51)

	STAR-51	go to state 300

State 222:

	OpStringOrWord -> WORD .	(Rule 260)

	$default	reduce using rule 260 (OpStringOrWord)

State 223:

	OpStringOrWord -> OP07_STRING_REPEAT .	(Rule 254)

	$default	reduce using rule 254 (OpStringOrWord)

State 224:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 87)

	$default	reduce using rule 87 (Operator)

State 225:

	PAREN-31 -> STDOUT_STDERR .	(Rule 112)

	$default	reduce using rule 112 (PAREN-31)

State 226:

	OperatorVoid -> OP01_PRINT OPTIONAL-32 . ListElements ';'	(Rule 117)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	ARGV	shift, and go to state 182
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	MY	shift, and go to state 174
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP01_QW	shift, and go to state 185
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	Literal	go to state 86
	Expression	go to state 144
	Operator	go to state 84
	ListElements	go to state 301
	WordScoped	go to state 109
	ArrayDereference	go to state 122
	ListElement	go to state 188
	SubExpression	go to state 183
	HashReference	go to state 91
	VariableSymbolOrSelf	go to state 106
	HashDereference	go to state 119
	TypeInner	go to state 187
	ArrayReference	go to state 104
	Variable	go to state 143

State 227:

	OPTIONAL-32 -> PAREN-31 .	(Rule 113)

	$default	reduce using rule 113 (OPTIONAL-32)

State 228:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES . ListElements ';'	(Rule 118)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	ARGV	shift, and go to state 182
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	MY	shift, and go to state 174
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP01_QW	shift, and go to state 185
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	ListElement	go to state 188
	SubExpression	go to state 183
	ArrayDereference	go to state 122
	WordScoped	go to state 109
	ListElements	go to state 302
	Operator	go to state 84
	Expression	go to state 144
	Literal	go to state 86
	Variable	go to state 143
	TypeInner	go to state 187
	ArrayReference	go to state 104
	HashDereference	go to state 119
	HashReference	go to state 91
	VariableSymbolOrSelf	go to state 106

State 229:

	Operator -> OP01_OPEN MY . TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 85)

	TYPE_FHREF	shift, and go to state 303

State 230:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> OP05_MATH_NEG_LPAREN SubExpression . ')'	(Rule 92)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	')'	shift, and go to state 304
	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 152
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 159
	OP23_LOGICAL_AND	shift, and go to state 161
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

State 231:

	OPTIONAL-33 -> ListElements .	(Rule 115)

	$default	reduce using rule 115 (OPTIONAL-33)

State 232:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-33 . ')' ';'	(Rule 120)

	')'	shift, and go to state 305

State 233:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 234:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> OP05_LOGICAL_NEG SubExpression .	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 156

	')'	reduce using rule 91 (Operator)
	';'	reduce using rule 91 (Operator)
	']'	reduce using rule 91 (Operator)
	'}'	reduce using rule 91 (Operator)
	OP06_REGEX_BIND	reduce using rule 91 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 91 (Operator)
	OP07_STRING_REPEAT	reduce using rule 91 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 91 (Operator)
	OP08_STRING_CAT	reduce using rule 91 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 91 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 91 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 91 (Operator)
	OP13_BITWISE_AND	reduce using rule 91 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 91 (Operator)
	OP15_LOGICAL_AND	reduce using rule 91 (Operator)
	OP16_LOGICAL_OR	reduce using rule 91 (Operator)
	OP17_LIST_RANGE	reduce using rule 91 (Operator)
	OP18_TERNARY	reduce using rule 91 (Operator)
	OP21_LIST_COMMA	reduce using rule 91 (Operator)
	OP23_LOGICAL_AND	reduce using rule 91 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 91 (Operator)

State 235:

	ArrayDereference -> '@{' OPTIONAL-48 . ArrayReference '}'	(Rule 203)

	LBRACKET	shift, and go to state 97

	ArrayReference	go to state 306

State 236:

	OPTIONAL-48 -> TypeInner .	(Rule 200)

	$default	reduce using rule 200 (OPTIONAL-48)

State 237:

	ArrayDereference -> '@{' Variable . '}'	(Rule 202)

	'}'	shift, and go to state 307

State 238:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 88)

	$default	reduce using rule 88 (Operator)

State 239:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . SubExpression	(Rule 188)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	ArrayDereference	go to state 122
	WordScoped	go to state 109
	SubExpression	go to state 308
	Operator	go to state 84
	Expression	go to state 144
	Literal	go to state 86
	Variable	go to state 143
	ArrayReference	go to state 104
	VariableSymbolOrSelf	go to state 106
	HashDereference	go to state 119
	HashReference	go to state 91

State 240:

	Expression -> Variable OP02_METHOD_THINARROW . LPAREN OPTIONAL-35 ')'	(Rule 135)

	LPAREN	shift, and go to state 309

State 241:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . SubExpressionOrInput	(Rule 187)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	FHREF_SYMBOL_IN	shift, and go to state 311
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	STDIN	shift, and go to state 312
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	WordScoped	go to state 109
	ArrayDereference	go to state 122
	SubExpression	go to state 310
	Expression	go to state 144
	Operator	go to state 84
	Literal	go to state 86
	Variable	go to state 143
	SubExpressionOrInput	go to state 313
	ArrayReference	go to state 104
	HashDereference	go to state 119
	VariableSymbolOrSelf	go to state 106
	HashReference	go to state 91

State 242:

	Operator -> OP01_CLOSE FHREF_SYMBOL .	(Rule 86)

	$default	reduce using rule 86 (Operator)

State 243:

	Conditional -> 'if' LPAREN . SubExpression ')' CodeBlock STAR-40 OPTIONAL-42	(Rule 165)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	VariableSymbolOrSelf	go to state 106
	HashDereference	go to state 119
	HashReference	go to state 91
	ArrayReference	go to state 104
	Variable	go to state 143
	Literal	go to state 86
	Operator	go to state 84
	Expression	go to state 144
	ArrayDereference	go to state 122
	WordScoped	go to state 109
	SubExpression	go to state 314

State 244:

	SubroutineArguments -> LPAREN_MY Type . VARIABLE_SYMBOL STAR-20 ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 52)

	VARIABLE_SYMBOL	shift, and go to state 315

State 245:

	STAR-18 -> STAR-18 . Operation	(Rule 46)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-17 STAR-18 . '}' ';'	(Rule 48)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'if'	shift, and go to state 132
	'undef'	shift, and go to state 118
	'}'	shift, and go to state 316
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	MY	shift, and go to state 93
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 103
	OP01_NAMED_SCOLON	shift, and go to state 85
	OP01_NAMED_VOID	shift, and go to state 102
	OP01_NAMED_VOID_LPAREN	shift, and go to state 124
	OP01_NAMED_VOID_SCOLON	shift, and go to state 123
	OP01_OPEN	shift, and go to state 120
	OP01_PRINT	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 126
	OP19_LOOP_CONTROL	shift, and go to state 83
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 95
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 88

	'for'	reduce using rule 153 (OPTIONAL-38)
	'foreach'	reduce using rule 153 (OPTIONAL-38)
	'while'	reduce using rule 153 (OPTIONAL-38)

	PAREN-37	go to state 107
	WordScoped	go to state 109
	Operation	go to state 317
	SubExpression	go to state 82
	Expression	go to state 113
	OperatorVoid	go to state 112
	Operator	go to state 84
	Literal	go to state 86
	LoopLabel	go to state 87
	HashReference	go to state 91
	Conditional	go to state 90
	HashDereference	go to state 119
	VariableDeclaration	go to state 92
	ArrayDereference	go to state 122
	OPTIONAL-38	go to state 96
	VariableModification	go to state 98
	Statement	go to state 128
	Variable	go to state 130
	ArrayReference	go to state 104
	VariableSymbolOrSelf	go to state 106

State 246:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';' .	(Rule 43)

	$default	reduce using rule 43 (Constant)

State 247:

	TypeInnerConstant -> MY Type '$TYPED_' . WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 228)

	WORD_UPPERCASE	shift, and go to state 318

State 248:

	Properties -> 'our hashref $properties' . OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-26 '}' ';'	(Rule 65)
	Properties -> 'our hashref $properties' . OP19_VARIABLE_ASSIGN LBRACE '}' ';'	(Rule 66)

	OP19_VARIABLE_ASSIGN	shift, and go to state 319

State 249:

	STAR-23 -> STAR-23 Constant .	(Rule 57)

	$default	reduce using rule 57 (STAR-23)

State 250:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-21 STAR-22 STAR-23 Properties . STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	$default	reduce using rule 60 (STAR-24)

	STAR-24	go to state 320

State 251:

	Operator -> LPAREN OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ')'	(Rule 84)

	OP21_LIST_COMMA	shift, and go to state 321

State 252:

	SubExpression -> LPAREN SubExpression ')' .	(Rule 145)

	$default	reduce using rule 145 (SubExpression)

State 253:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES . ListElements ')'	(Rule 82)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	ARGV	shift, and go to state 182
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	MY	shift, and go to state 174
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP01_QW	shift, and go to state 185
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	Variable	go to state 143
	HashReference	go to state 91
	HashDereference	go to state 119
	VariableSymbolOrSelf	go to state 106
	TypeInner	go to state 187
	ArrayReference	go to state 104
	ListElements	go to state 322
	WordScoped	go to state 109
	ArrayDereference	go to state 122
	SubExpression	go to state 183
	ListElement	go to state 188
	Literal	go to state 86
	Operator	go to state 84
	Expression	go to state 144

State 254:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression .	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 101 (Operator)
	';'	reduce using rule 101 (Operator)
	']'	reduce using rule 101 (Operator)
	'}'	reduce using rule 101 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 101 (Operator)
	OP13_BITWISE_AND	reduce using rule 101 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 101 (Operator)
	OP15_LOGICAL_AND	reduce using rule 101 (Operator)
	OP16_LOGICAL_OR	reduce using rule 101 (Operator)
	OP17_LIST_RANGE	reduce using rule 101 (Operator)
	OP18_TERNARY	reduce using rule 101 (Operator)
	OP21_LIST_COMMA	reduce using rule 101 (Operator)
	OP23_LOGICAL_AND	reduce using rule 101 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 101 (Operator)

State 255:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression .	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162

	')'	reduce using rule 96 (Operator)
	';'	reduce using rule 96 (Operator)
	']'	reduce using rule 96 (Operator)
	'}'	reduce using rule 96 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 96 (Operator)
	OP08_STRING_CAT	reduce using rule 96 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 96 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 96 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 96 (Operator)
	OP13_BITWISE_AND	reduce using rule 96 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 96 (Operator)
	OP15_LOGICAL_AND	reduce using rule 96 (Operator)
	OP16_LOGICAL_OR	reduce using rule 96 (Operator)
	OP17_LIST_RANGE	reduce using rule 96 (Operator)
	OP18_TERNARY	reduce using rule 96 (Operator)
	OP21_LIST_COMMA	reduce using rule 96 (Operator)
	OP23_LOGICAL_AND	reduce using rule 96 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 96 (Operator)

State 256:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression .	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153

	')'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 104 (Operator)
	OP15_LOGICAL_AND	reduce using rule 104 (Operator)
	OP16_LOGICAL_OR	reduce using rule 104 (Operator)
	OP17_LIST_RANGE	reduce using rule 104 (Operator)
	OP18_TERNARY	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 257:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression .	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160

	')'	reduce using rule 98 (Operator)
	';'	reduce using rule 98 (Operator)
	']'	reduce using rule 98 (Operator)
	'}'	reduce using rule 98 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 98 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 98 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 98 (Operator)
	OP13_BITWISE_AND	reduce using rule 98 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 98 (Operator)
	OP15_LOGICAL_AND	reduce using rule 98 (Operator)
	OP16_LOGICAL_OR	reduce using rule 98 (Operator)
	OP17_LIST_RANGE	reduce using rule 98 (Operator)
	OP18_TERNARY	reduce using rule 98 (Operator)
	OP21_LIST_COMMA	reduce using rule 98 (Operator)
	OP23_LOGICAL_AND	reduce using rule 98 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 98 (Operator)

State 258:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression OP16_LOGICAL_OR SubExpression .	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 152

	')'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP16_LOGICAL_OR	reduce using rule 106 (Operator)
	OP17_LIST_RANGE	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 259:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression .	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146

	OP12_COMPARE_EQ_NE	error (nonassociative)

	')'	reduce using rule 102 (Operator)
	';'	reduce using rule 102 (Operator)
	']'	reduce using rule 102 (Operator)
	'}'	reduce using rule 102 (Operator)
	OP13_BITWISE_AND	reduce using rule 102 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 102 (Operator)
	OP15_LOGICAL_AND	reduce using rule 102 (Operator)
	OP16_LOGICAL_OR	reduce using rule 102 (Operator)
	OP17_LIST_RANGE	reduce using rule 102 (Operator)
	OP18_TERNARY	reduce using rule 102 (Operator)
	OP21_LIST_COMMA	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 260:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression OP15_LOGICAL_AND SubExpression .	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 148

	')'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP15_LOGICAL_AND	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 261:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression OP13_BITWISE_AND SubExpression .	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151

	')'	reduce using rule 103 (Operator)
	';'	reduce using rule 103 (Operator)
	']'	reduce using rule 103 (Operator)
	'}'	reduce using rule 103 (Operator)
	OP13_BITWISE_AND	reduce using rule 103 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 103 (Operator)
	OP15_LOGICAL_AND	reduce using rule 103 (Operator)
	OP16_LOGICAL_OR	reduce using rule 103 (Operator)
	OP17_LIST_RANGE	reduce using rule 103 (Operator)
	OP18_TERNARY	reduce using rule 103 (Operator)
	OP21_LIST_COMMA	reduce using rule 103 (Operator)
	OP23_LOGICAL_AND	reduce using rule 103 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 103 (Operator)

State 262:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 152
	OP16_LOGICAL_OR	shift, and go to state 150

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 107 (Operator)
	';'	reduce using rule 107 (Operator)
	']'	reduce using rule 107 (Operator)
	'}'	reduce using rule 107 (Operator)
	OP18_TERNARY	reduce using rule 107 (Operator)
	OP21_LIST_COMMA	reduce using rule 107 (Operator)
	OP23_LOGICAL_AND	reduce using rule 107 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 107 (Operator)

State 263:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression .	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 162

	')'	reduce using rule 95 (Operator)
	';'	reduce using rule 95 (Operator)
	']'	reduce using rule 95 (Operator)
	'}'	reduce using rule 95 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 95 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 95 (Operator)
	OP08_STRING_CAT	reduce using rule 95 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 95 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 95 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 95 (Operator)
	OP13_BITWISE_AND	reduce using rule 95 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 95 (Operator)
	OP15_LOGICAL_AND	reduce using rule 95 (Operator)
	OP16_LOGICAL_OR	reduce using rule 95 (Operator)
	OP17_LIST_RANGE	reduce using rule 95 (Operator)
	OP18_TERNARY	reduce using rule 95 (Operator)
	OP21_LIST_COMMA	reduce using rule 95 (Operator)
	OP23_LOGICAL_AND	reduce using rule 95 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 95 (Operator)

State 264:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression OP04_MATH_POW SubExpression .	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 156

	')'	reduce using rule 89 (Operator)
	';'	reduce using rule 89 (Operator)
	']'	reduce using rule 89 (Operator)
	'}'	reduce using rule 89 (Operator)
	OP06_REGEX_BIND	reduce using rule 89 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 89 (Operator)
	OP07_STRING_REPEAT	reduce using rule 89 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 89 (Operator)
	OP08_STRING_CAT	reduce using rule 89 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 89 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 89 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 89 (Operator)
	OP13_BITWISE_AND	reduce using rule 89 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 89 (Operator)
	OP15_LOGICAL_AND	reduce using rule 89 (Operator)
	OP16_LOGICAL_OR	reduce using rule 89 (Operator)
	OP17_LIST_RANGE	reduce using rule 89 (Operator)
	OP18_TERNARY	reduce using rule 89 (Operator)
	OP21_LIST_COMMA	reduce using rule 89 (Operator)
	OP23_LOGICAL_AND	reduce using rule 89 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 89 (Operator)

State 265:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression .	(Rule 111)

	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 152
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 159
	OP23_LOGICAL_AND	shift, and go to state 161

	')'	reduce using rule 111 (Operator)
	';'	reduce using rule 111 (Operator)
	']'	reduce using rule 111 (Operator)
	'}'	reduce using rule 111 (Operator)
	OP21_LIST_COMMA	reduce using rule 111 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 111 (Operator)

State 266:

	Operator -> SubExpression OP06_REGEX_BIND OP06_REGEX_PATTERN .	(Rule 93)

	$default	reduce using rule 93 (Operator)

State 267:

	VariableOrLiteral -> Literal .	(Rule 230)

	$default	reduce using rule 230 (VariableOrLiteral)

State 268:

	VariableOrLiteral -> Variable .	(Rule 229)

	$default	reduce using rule 229 (VariableOrLiteral)

State 269:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral . COLON VariableOrLiteral	(Rule 108)

	COLON	shift, and go to state 323

State 270:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression OP08_STRING_CAT SubExpression .	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147

	')'	reduce using rule 97 (Operator)
	';'	reduce using rule 97 (Operator)
	']'	reduce using rule 97 (Operator)
	'}'	reduce using rule 97 (Operator)
	OP08_STRING_CAT	reduce using rule 97 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 97 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 97 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 97 (Operator)
	OP13_BITWISE_AND	reduce using rule 97 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 97 (Operator)
	OP15_LOGICAL_AND	reduce using rule 97 (Operator)
	OP16_LOGICAL_OR	reduce using rule 97 (Operator)
	OP17_LIST_RANGE	reduce using rule 97 (Operator)
	OP18_TERNARY	reduce using rule 97 (Operator)
	OP21_LIST_COMMA	reduce using rule 97 (Operator)
	OP23_LOGICAL_AND	reduce using rule 97 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 97 (Operator)

State 271:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression OP23_LOGICAL_AND SubExpression .	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 152
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 159

	')'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP23_LOGICAL_AND	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 272:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression OP07_STRING_REPEAT SubExpression .	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158

	')'	reduce using rule 94 (Operator)
	';'	reduce using rule 94 (Operator)
	']'	reduce using rule 94 (Operator)
	'}'	reduce using rule 94 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 94 (Operator)
	OP07_STRING_REPEAT	reduce using rule 94 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 94 (Operator)
	OP08_STRING_CAT	reduce using rule 94 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 94 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 94 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 94 (Operator)
	OP13_BITWISE_AND	reduce using rule 94 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 94 (Operator)
	OP15_LOGICAL_AND	reduce using rule 94 (Operator)
	OP16_LOGICAL_OR	reduce using rule 94 (Operator)
	OP17_LIST_RANGE	reduce using rule 94 (Operator)
	OP18_TERNARY	reduce using rule 94 (Operator)
	OP21_LIST_COMMA	reduce using rule 94 (Operator)
	OP23_LOGICAL_AND	reduce using rule 94 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 94 (Operator)

State 273:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 124)

	$default	reduce using rule 124 (OperatorVoid)

State 274:

	Expression -> WORD_UPPERCASE LPAREN ')' .	(Rule 132)

	$default	reduce using rule 132 (Expression)

State 275:

	Operator -> OP01_NAMED SubExpression .	(Rule 83)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	')'	reduce using rule 83 (Operator)
	';'	reduce using rule 83 (Operator)
	']'	reduce using rule 83 (Operator)
	'}'	reduce using rule 83 (Operator)
	OP04_MATH_POW	reduce using rule 83 (Operator)
	OP06_REGEX_BIND	reduce using rule 83 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 83 (Operator)
	OP07_STRING_REPEAT	reduce using rule 83 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 83 (Operator)
	OP08_STRING_CAT	reduce using rule 83 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 83 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 83 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 83 (Operator)
	OP13_BITWISE_AND	reduce using rule 83 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 83 (Operator)
	OP15_LOGICAL_AND	reduce using rule 83 (Operator)
	OP16_LOGICAL_OR	reduce using rule 83 (Operator)
	OP17_LIST_RANGE	reduce using rule 83 (Operator)
	OP18_TERNARY	reduce using rule 83 (Operator)
	OP21_LIST_COMMA	reduce using rule 83 (Operator)
	OP23_LOGICAL_AND	reduce using rule 83 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 83 (Operator)

State 276:

	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL . ';'	(Rule 186)

	';'	shift, and go to state 324

State 277:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL . ';'	(Rule 183)
	VariableDeclaration -> MY Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExpIn	(Rule 184)
	VariableDeclaration -> MY Type VARIABLE_SYMBOL . OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 185)

	';'	shift, and go to state 325
	OP02_ARRAY_THINARROW	shift, and go to state 327
	OP19_VARIABLE_ASSIGN	shift, and go to state 326

State 278:

	HashDereference -> '%{' Variable '}' .	(Rule 217)

	$default	reduce using rule 217 (HashDereference)

State 279:

	HashDereference -> '%{' OPTIONAL-52 HashReference . '}'	(Rule 218)

	'}'	shift, and go to state 328

State 280:

	TypeInner -> MY Type . '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN	(Rule 225)

	'$TYPED_'	shift, and go to state 329

State 281:

	LoopForEach -> 'foreach' MY . Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 171)

	TYPE_INTEGER	shift, and go to state 58
	WORD	shift, and go to state 61
	WORD_SCOPED	shift, and go to state 60

	Type	go to state 330

State 282:

	LoopWhile -> 'while' LPAREN . SubExpression ')' CodeBlock	(Rule 172)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	Variable	go to state 143
	HashReference	go to state 91
	VariableSymbolOrSelf	go to state 106
	HashDereference	go to state 119
	ArrayReference	go to state 104
	SubExpression	go to state 331
	WordScoped	go to state 109
	ArrayDereference	go to state 122
	Literal	go to state 86
	Expression	go to state 144
	Operator	go to state 84

State 283:

	LoopWhile -> 'while' LPAREN_MY . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrInput ')' CodeBlock	(Rule 173)

	TYPE_INTEGER	shift, and go to state 58
	WORD	shift, and go to state 61
	WORD_SCOPED	shift, and go to state 60

	Type	go to state 332

State 284:

	LoopFor -> 'for' MY . TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 169)

	TYPE_INTEGER	shift, and go to state 333

State 285:

	LoopFor -> 'for' LPAREN_MY . TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 170)

	TYPE_INTEGER	shift, and go to state 334

State 286:

	ArrayReference -> LBRACKET OPTIONAL-47 ']' .	(Rule 199)

	$default	reduce using rule 199 (ArrayReference)

State 287:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	ListElement -> TypeInner SubExpression .	(Rule 194)

	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 152
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 159
	OP23_LOGICAL_AND	shift, and go to state 161
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

	')'	reduce using rule 194 (ListElement)
	';'	reduce using rule 194 (ListElement)
	']'	reduce using rule 194 (ListElement)
	OP21_LIST_COMMA	reduce using rule 194 (ListElement)

State 288:

	STAR-46 -> STAR-46 . PAREN-45	(Rule 190)
	ListElements -> ListElement STAR-46 .	(Rule 192)

	OP21_LIST_COMMA	shift, and go to state 336

	')'	reduce using rule 192 (ListElements)
	';'	reduce using rule 192 (ListElements)
	']'	reduce using rule 192 (ListElements)

	PAREN-45	go to state 335

State 289:

	Operator -> OP05_BITWISE_NEG_LPAREN SubExpression ')' .	(Rule 90)

	$default	reduce using rule 90 (Operator)

State 290:

	OperatorVoid -> OP01_NAMED_VOID ListElements ';' .	(Rule 121)

	$default	reduce using rule 121 (OperatorVoid)

State 291:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ';'	(Rule 122)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	ARGV	shift, and go to state 182
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	MY	shift, and go to state 174
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP01_QW	shift, and go to state 185
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	ListElements	go to state 337
	WordScoped	go to state 109
	ArrayDereference	go to state 122
	SubExpression	go to state 183
	ListElement	go to state 188
	Literal	go to state 86
	Operator	go to state 84
	Expression	go to state 144
	Variable	go to state 143
	VariableSymbolOrSelf	go to state 106
	HashReference	go to state 91
	HashDereference	go to state 119
	TypeInner	go to state 187
	ArrayReference	go to state 104

State 292:

	VariableRetrieval -> OP02_ARRAY_THINARROW . SubExpression ']'	(Rule 180)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	Variable	go to state 143
	ArrayReference	go to state 104
	HashReference	go to state 91
	VariableSymbolOrSelf	go to state 106
	HashDereference	go to state 119
	WordScoped	go to state 109
	ArrayDereference	go to state 122
	SubExpression	go to state 338
	Expression	go to state 144
	Operator	go to state 84
	Literal	go to state 86

State 293:

	VariableRetrieval -> OP02_HASH_THINARROW . SubExpression '}'	(Rule 181)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 182)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 340
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	ArrayReference	go to state 104
	VariableSymbolOrSelf	go to state 106
	HashDereference	go to state 119
	HashReference	go to state 91
	Variable	go to state 143
	Expression	go to state 144
	Operator	go to state 84
	Literal	go to state 86
	ArrayDereference	go to state 122
	WordScoped	go to state 109
	SubExpression	go to state 339

State 294:

	STAR-44 -> STAR-44 VariableRetrieval .	(Rule 177)

	$default	reduce using rule 177 (STAR-44)

State 295:

	OPTIONAL-34 -> ListElements .	(Rule 125)

	$default	reduce using rule 125 (OPTIONAL-34)

State 296:

	Expression -> WordScoped LPAREN OPTIONAL-34 . ')'	(Rule 134)

	')'	shift, and go to state 341

State 297:

	OPTIONAL-36 -> HashReference .	(Rule 129)

	$default	reduce using rule 129 (OPTIONAL-36)

State 298:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW OPTIONAL-36 . ')'	(Rule 136)

	')'	shift, and go to state 342

State 299:

	HashEntry -> VarOrLitOrOpStrOrWord OP20_HASH_FATARROW . OPTIONAL-49 SubExpression	(Rule 206)

	MY	shift, and go to state 174

	'%{'	reduce using rule 205 (OPTIONAL-49)
	'@{'	reduce using rule 205 (OPTIONAL-49)
	'undef'	reduce using rule 205 (OPTIONAL-49)
	CONSTANT_CALL_SCOPED	reduce using rule 205 (OPTIONAL-49)
	LBRACE	reduce using rule 205 (OPTIONAL-49)
	LBRACKET	reduce using rule 205 (OPTIONAL-49)
	LITERAL_NUMBER	reduce using rule 205 (OPTIONAL-49)
	LITERAL_STRING	reduce using rule 205 (OPTIONAL-49)
	LPAREN	reduce using rule 205 (OPTIONAL-49)
	OP01_CLOSE	reduce using rule 205 (OPTIONAL-49)
	OP01_NAMED	reduce using rule 205 (OPTIONAL-49)
	OP01_OPEN	reduce using rule 205 (OPTIONAL-49)
	OP03_MATH_INC_DEC	reduce using rule 205 (OPTIONAL-49)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 205 (OPTIONAL-49)
	OP05_LOGICAL_NEG	reduce using rule 205 (OPTIONAL-49)
	OP05_MATH_NEG_LPAREN	reduce using rule 205 (OPTIONAL-49)
	OP10_NAMED_UNARY	reduce using rule 205 (OPTIONAL-49)
	OP22_LOGICAL_NEG	reduce using rule 205 (OPTIONAL-49)
	SELF	reduce using rule 205 (OPTIONAL-49)
	VARIABLE_SYMBOL	reduce using rule 205 (OPTIONAL-49)
	WORD	reduce using rule 205 (OPTIONAL-49)
	WORD_SCOPED	reduce using rule 205 (OPTIONAL-49)
	WORD_UPPERCASE	reduce using rule 205 (OPTIONAL-49)

	OPTIONAL-49	go to state 344
	TypeInner	go to state 343

State 300:

	STAR-51 -> STAR-51 . PAREN-50	(Rule 211)
	HashReference -> LBRACE HashEntry STAR-51 . '}'	(Rule 213)

	'}'	shift, and go to state 346
	OP21_LIST_COMMA	shift, and go to state 347

	PAREN-50	go to state 345

State 301:

	OperatorVoid -> OP01_PRINT OPTIONAL-32 ListElements . ';'	(Rule 117)

	';'	shift, and go to state 348

State 302:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements . ';'	(Rule 118)

	';'	shift, and go to state 349

State 303:

	Operator -> OP01_OPEN MY TYPE_FHREF . FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 85)

	FHREF_SYMBOL	shift, and go to state 350

State 304:

	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')' .	(Rule 92)

	$default	reduce using rule 92 (Operator)

State 305:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-33 ')' . ';'	(Rule 120)

	';'	shift, and go to state 351

State 306:

	ArrayDereference -> '@{' OPTIONAL-48 ArrayReference . '}'	(Rule 203)

	'}'	shift, and go to state 352

State 307:

	ArrayDereference -> '@{' Variable '}' .	(Rule 202)

	$default	reduce using rule 202 (ArrayDereference)

State 308:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression .	(Rule 188)

	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 152
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 159
	OP23_LOGICAL_AND	shift, and go to state 161
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

	')'	reduce using rule 188 (VariableModification)
	';'	reduce using rule 188 (VariableModification)

State 309:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN . OPTIONAL-35 ')'	(Rule 135)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	ARGV	shift, and go to state 182
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	MY	shift, and go to state 174
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP01_QW	shift, and go to state 185
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	')'	reduce using rule 128 (OPTIONAL-35)

	ArrayReference	go to state 104
	TypeInner	go to state 187
	OPTIONAL-35	go to state 353
	HashReference	go to state 91
	HashDereference	go to state 119
	VariableSymbolOrSelf	go to state 106
	Variable	go to state 143
	Operator	go to state 84
	Expression	go to state 144
	Literal	go to state 86
	WordScoped	go to state 109
	ArrayDereference	go to state 122
	SubExpression	go to state 183
	ListElement	go to state 188
	ListElements	go to state 354

State 310:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	SubExpressionOrInput -> SubExpression .	(Rule 146)

	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 152
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 159
	OP23_LOGICAL_AND	shift, and go to state 161
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

	')'	reduce using rule 146 (SubExpressionOrInput)
	';'	reduce using rule 146 (SubExpressionOrInput)

State 311:

	SubExpressionOrInput -> FHREF_SYMBOL_IN .	(Rule 147)

	$default	reduce using rule 147 (SubExpressionOrInput)

State 312:

	SubExpressionOrInput -> STDIN .	(Rule 148)

	$default	reduce using rule 148 (SubExpressionOrInput)

State 313:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrInput .	(Rule 187)

	$default	reduce using rule 187 (VariableModification)

State 314:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	Conditional -> 'if' LPAREN SubExpression . ')' CodeBlock STAR-40 OPTIONAL-42	(Rule 165)

	')'	shift, and go to state 355
	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 152
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 159
	OP23_LOGICAL_AND	shift, and go to state 161
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

State 315:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL . STAR-20 ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 52)

	$default	reduce using rule 51 (STAR-20)

	STAR-20	go to state 356

State 316:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-17 STAR-18 '}' . ';'	(Rule 48)

	';'	shift, and go to state 357

State 317:

	STAR-18 -> STAR-18 Operation .	(Rule 46)

	$default	reduce using rule 46 (STAR-18)

State 318:

	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE . OP19_VARIABLE_ASSIGN	(Rule 228)

	OP19_VARIABLE_ASSIGN	shift, and go to state 358

State 319:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN . LBRACE HashEntryProperties STAR-26 '}' ';'	(Rule 65)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN . LBRACE '}' ';'	(Rule 66)

	LBRACE	shift, and go to state 359

State 320:

	STAR-24 -> STAR-24 . SubroutineOrMethod	(Rule 59)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-21 STAR-22 STAR-23 Properties STAR-24 . LITERAL_NUMBER ';'	(Rule 61)

	'our'	shift, and go to state 361
	LITERAL_NUMBER	shift, and go to state 360

	Method	go to state 362
	SubroutineOrMethod	go to state 364
	Subroutine	go to state 363

State 321:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ')'	(Rule 84)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	ARGV	shift, and go to state 182
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	MY	shift, and go to state 174
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP01_QW	shift, and go to state 185
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	Variable	go to state 143
	TypeInner	go to state 187
	ArrayReference	go to state 104
	VariableSymbolOrSelf	go to state 106
	HashDereference	go to state 119
	HashReference	go to state 91
	ListElement	go to state 188
	SubExpression	go to state 183
	WordScoped	go to state 109
	ArrayDereference	go to state 122
	ListElements	go to state 365
	Operator	go to state 84
	Expression	go to state 144
	Literal	go to state 86

State 322:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements . ')'	(Rule 82)

	')'	shift, and go to state 366

State 323:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON . VariableOrLiteral	(Rule 108)

	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100

	VariableSymbolOrSelf	go to state 106
	Literal	go to state 267
	Variable	go to state 268
	VariableOrLiteral	go to state 367

State 324:

	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL ';' .	(Rule 186)

	$default	reduce using rule 186 (VariableDeclaration)

State 325:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL ';' .	(Rule 183)

	$default	reduce using rule 183 (VariableDeclaration)

State 326:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . OpNamedScolonOrSubExpIn	(Rule 184)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	FHREF_SYMBOL_IN	shift, and go to state 311
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_NAMED_SCOLON	shift, and go to state 371
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 368
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	STDIN	shift, and go to state 312
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	OpNamedScolonOrSubExpIn	go to state 369
	ArrayReference	go to state 104
	SubExpressionOrInput	go to state 370
	VariableSymbolOrSelf	go to state 106
	HashDereference	go to state 119
	HashReference	go to state 91
	Variable	go to state 143
	Operator	go to state 84
	Expression	go to state 144
	Literal	go to state 86
	WordScoped	go to state 109
	ArrayDereference	go to state 122
	SubExpression	go to state 310

State 327:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW . SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 185)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	Variable	go to state 143
	ArrayReference	go to state 104
	VariableSymbolOrSelf	go to state 106
	HashDereference	go to state 119
	HashReference	go to state 91
	WordScoped	go to state 109
	ArrayDereference	go to state 122
	SubExpression	go to state 372
	Expression	go to state 144
	Operator	go to state 84
	Literal	go to state 86

State 328:

	HashDereference -> '%{' OPTIONAL-52 HashReference '}' .	(Rule 218)

	$default	reduce using rule 218 (HashDereference)

State 329:

	TypeInner -> MY Type '$TYPED_' . OpStringOrWord OP19_VARIABLE_ASSIGN	(Rule 225)

	OP01_CLOSE	shift, and go to state 206
	OP01_NAMED	shift, and go to state 217
	OP01_NAMED_VOID	shift, and go to state 214
	OP01_OPEN	shift, and go to state 203
	OP01_PRINT	shift, and go to state 200
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 213
	OP07_STRING_REPEAT	shift, and go to state 223
	OP08_MATH_ADD_SUB	shift, and go to state 199
	OP10_NAMED_UNARY	shift, and go to state 215
	OP11_COMPARE_LT_GT	shift, and go to state 201
	OP12_COMPARE_EQ_NE	shift, and go to state 204
	OP19_LOOP_CONTROL	shift, and go to state 211
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 219
	OP22_LOGICAL_NEG	shift, and go to state 208
	OP23_LOGICAL_AND	shift, and go to state 218
	OP24_LOGICAL_OR_XOR	shift, and go to state 216
	WORD	shift, and go to state 222

	OpStringOrWord	go to state 373

State 330:

	LoopForEach -> 'foreach' MY Type . VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 171)

	VARIABLE_SYMBOL	shift, and go to state 374

State 331:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	LoopWhile -> 'while' LPAREN SubExpression . ')' CodeBlock	(Rule 172)

	')'	shift, and go to state 375
	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 152
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 159
	OP23_LOGICAL_AND	shift, and go to state 161
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

State 332:

	LoopWhile -> 'while' LPAREN_MY Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrInput ')' CodeBlock	(Rule 173)

	VARIABLE_SYMBOL	shift, and go to state 376

State 333:

	LoopFor -> 'for' MY TYPE_INTEGER . VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 169)

	VARIABLE_SYMBOL	shift, and go to state 377

State 334:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 170)

	VARIABLE_SYMBOL	shift, and go to state 378

State 335:

	STAR-46 -> STAR-46 PAREN-45 .	(Rule 190)

	$default	reduce using rule 190 (STAR-46)

State 336:

	PAREN-45 -> OP21_LIST_COMMA . ListElement	(Rule 189)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	ARGV	shift, and go to state 182
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	MY	shift, and go to state 174
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP01_QW	shift, and go to state 185
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	ArrayDereference	go to state 122
	WordScoped	go to state 109
	SubExpression	go to state 183
	ListElement	go to state 379
	Literal	go to state 86
	Expression	go to state 144
	Operator	go to state 84
	Variable	go to state 143
	HashReference	go to state 91
	HashDereference	go to state 119
	VariableSymbolOrSelf	go to state 106
	ArrayReference	go to state 104
	TypeInner	go to state 187

State 337:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ';'	(Rule 122)

	';'	shift, and go to state 380

State 338:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression . ']'	(Rule 180)

	']'	shift, and go to state 381
	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 152
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 159
	OP23_LOGICAL_AND	shift, and go to state 161
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

State 339:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	VariableRetrieval -> OP02_HASH_THINARROW SubExpression . '}'	(Rule 181)

	'}'	shift, and go to state 382
	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 152
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 159
	OP23_LOGICAL_AND	shift, and go to state 161
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

State 340:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 182)
	WordScoped -> WORD .	(Rule 219)

	'}'	shift, and go to state 383

	LPAREN	reduce using rule 219 (WordScoped)
	OP02_METHOD_THINARROW_NEW	reduce using rule 219 (WordScoped)

State 341:

	Expression -> WordScoped LPAREN OPTIONAL-34 ')' .	(Rule 134)

	$default	reduce using rule 134 (Expression)

State 342:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW OPTIONAL-36 ')' .	(Rule 136)

	$default	reduce using rule 136 (Expression)

State 343:

	OPTIONAL-49 -> TypeInner .	(Rule 204)

	$default	reduce using rule 204 (OPTIONAL-49)

State 344:

	HashEntry -> VarOrLitOrOpStrOrWord OP20_HASH_FATARROW OPTIONAL-49 . SubExpression	(Rule 206)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	ArrayReference	go to state 104
	HashReference	go to state 91
	HashDereference	go to state 119
	VariableSymbolOrSelf	go to state 106
	Variable	go to state 143
	Operator	go to state 84
	Expression	go to state 144
	Literal	go to state 86
	WordScoped	go to state 109
	ArrayDereference	go to state 122
	SubExpression	go to state 384

State 345:

	STAR-51 -> STAR-51 PAREN-50 .	(Rule 211)

	$default	reduce using rule 211 (STAR-51)

State 346:

	HashReference -> LBRACE HashEntry STAR-51 '}' .	(Rule 213)

	$default	reduce using rule 213 (HashReference)

State 347:

	PAREN-50 -> OP21_LIST_COMMA . HashEntry	(Rule 210)

	'%{'	shift, and go to state 94
	ENV	shift, and go to state 220
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 206
	OP01_NAMED	shift, and go to state 217
	OP01_NAMED_VOID	shift, and go to state 214
	OP01_OPEN	shift, and go to state 203
	OP01_PRINT	shift, and go to state 200
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 213
	OP07_STRING_REPEAT	shift, and go to state 223
	OP08_MATH_ADD_SUB	shift, and go to state 199
	OP10_NAMED_UNARY	shift, and go to state 215
	OP11_COMPARE_LT_GT	shift, and go to state 201
	OP12_COMPARE_EQ_NE	shift, and go to state 204
	OP19_LOOP_CONTROL	shift, and go to state 211
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 219
	OP22_LOGICAL_NEG	shift, and go to state 208
	OP23_LOGICAL_AND	shift, and go to state 218
	OP24_LOGICAL_OR_XOR	shift, and go to state 216
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 222

	HashEntry	go to state 385
	Literal	go to state 212
	HashDereference	go to state 202
	VariableSymbolOrSelf	go to state 106
	OpStringOrWord	go to state 209
	Variable	go to state 205
	VarOrLitOrOpStrOrWord	go to state 210

State 348:

	OperatorVoid -> OP01_PRINT OPTIONAL-32 ListElements ';' .	(Rule 117)

	$default	reduce using rule 117 (OperatorVoid)

State 349:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements ';' .	(Rule 118)

	$default	reduce using rule 118 (OperatorVoid)

State 350:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL . OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 85)

	OP21_LIST_COMMA	shift, and go to state 386

State 351:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-33 ')' ';' .	(Rule 120)

	$default	reduce using rule 120 (OperatorVoid)

State 352:

	ArrayDereference -> '@{' OPTIONAL-48 ArrayReference '}' .	(Rule 203)

	$default	reduce using rule 203 (ArrayDereference)

State 353:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-35 . ')'	(Rule 135)

	')'	shift, and go to state 387

State 354:

	OPTIONAL-35 -> ListElements .	(Rule 127)

	$default	reduce using rule 127 (OPTIONAL-35)

State 355:

	Conditional -> 'if' LPAREN SubExpression ')' . CodeBlock STAR-40 OPTIONAL-42	(Rule 165)

	LBRACE	shift, and go to state 388

	CodeBlock	go to state 389

State 356:

	STAR-20 -> STAR-20 . PAREN-19	(Rule 50)
	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-20 . ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 52)

	')'	shift, and go to state 391
	OP21_LIST_COMMA	shift, and go to state 390

	PAREN-19	go to state 392

State 357:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-17 STAR-18 '}' ';' .	(Rule 48)

	$default	reduce using rule 48 (Subroutine)

State 358:

	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN .	(Rule 228)

	$default	reduce using rule 228 (TypeInnerConstant)

State 359:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE . HashEntryProperties STAR-26 '}' ';'	(Rule 65)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE . '}' ';'	(Rule 66)

	'}'	shift, and go to state 393
	OP01_CLOSE	shift, and go to state 206
	OP01_NAMED	shift, and go to state 217
	OP01_NAMED_VOID	shift, and go to state 214
	OP01_OPEN	shift, and go to state 203
	OP01_PRINT	shift, and go to state 200
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 213
	OP07_STRING_REPEAT	shift, and go to state 223
	OP08_MATH_ADD_SUB	shift, and go to state 199
	OP10_NAMED_UNARY	shift, and go to state 215
	OP11_COMPARE_LT_GT	shift, and go to state 201
	OP12_COMPARE_EQ_NE	shift, and go to state 204
	OP19_LOOP_CONTROL	shift, and go to state 211
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 219
	OP22_LOGICAL_NEG	shift, and go to state 208
	OP23_LOGICAL_AND	shift, and go to state 218
	OP24_LOGICAL_OR_XOR	shift, and go to state 216
	WORD	shift, and go to state 222

	OpStringOrWord	go to state 394
	HashEntryProperties	go to state 395

State 360:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-21 STAR-22 STAR-23 Properties STAR-24 LITERAL_NUMBER . ';'	(Rule 61)

	';'	shift, and go to state 396

State 361:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-17 STAR-18 '}' ';'	(Rule 48)
	Method -> 'our' . TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-27 STAR-28 '}' ';'	(Rule 71)

	TYPE_INTEGER	shift, and go to state 58
	TYPE_METHOD	shift, and go to state 397
	WORD	shift, and go to state 61
	WORD_SCOPED	shift, and go to state 60

	Type	go to state 59

State 362:

	SubroutineOrMethod -> Method .	(Rule 77)

	$default	reduce using rule 77 (SubroutineOrMethod)

State 363:

	SubroutineOrMethod -> Subroutine .	(Rule 76)

	$default	reduce using rule 76 (SubroutineOrMethod)

State 364:

	STAR-24 -> STAR-24 SubroutineOrMethod .	(Rule 59)

	$default	reduce using rule 59 (STAR-24)

State 365:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ')'	(Rule 84)

	')'	shift, and go to state 398

State 366:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')' .	(Rule 82)

	$default	reduce using rule 82 (Operator)

State 367:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral .	(Rule 108)

	$default	reduce using rule 108 (Operator)

State 368:

	OpNamedScolonOrSubExpIn -> OP10_NAMED_UNARY_SCOLON .	(Rule 242)

	$default	reduce using rule 242 (OpNamedScolonOrSubExpIn)

State 369:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExpIn .	(Rule 184)

	$default	reduce using rule 184 (VariableDeclaration)

State 370:

	OpNamedScolonOrSubExpIn -> SubExpressionOrInput . ';'	(Rule 243)

	';'	shift, and go to state 399

State 371:

	OpNamedScolonOrSubExpIn -> OP01_NAMED_SCOLON .	(Rule 241)

	$default	reduce using rule 241 (OpNamedScolonOrSubExpIn)

State 372:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression . ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 185)

	']'	shift, and go to state 400
	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 152
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 159
	OP23_LOGICAL_AND	shift, and go to state 161
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

State 373:

	TypeInner -> MY Type '$TYPED_' OpStringOrWord . OP19_VARIABLE_ASSIGN	(Rule 225)

	OP19_VARIABLE_ASSIGN	shift, and go to state 401

State 374:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL . LPAREN ListElements ')' CodeBlock	(Rule 171)

	LPAREN	shift, and go to state 402

State 375:

	LoopWhile -> 'while' LPAREN SubExpression ')' . CodeBlock	(Rule 172)

	LBRACE	shift, and go to state 388

	CodeBlock	go to state 403

State 376:

	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN SubExpressionOrInput ')' CodeBlock	(Rule 173)

	OP19_VARIABLE_ASSIGN	shift, and go to state 404

State 377:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL . LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 169)

	LPAREN	shift, and go to state 405

State 378:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 170)

	OP19_VARIABLE_ASSIGN	shift, and go to state 406

State 379:

	PAREN-45 -> OP21_LIST_COMMA ListElement .	(Rule 189)

	$default	reduce using rule 189 (PAREN-45)

State 380:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';' .	(Rule 122)

	$default	reduce using rule 122 (OperatorVoid)

State 381:

	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']' .	(Rule 180)

	$default	reduce using rule 180 (VariableRetrieval)

State 382:

	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}' .	(Rule 181)

	$default	reduce using rule 181 (VariableRetrieval)

State 383:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 182)

	$default	reduce using rule 182 (VariableRetrieval)

State 384:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	HashEntry -> VarOrLitOrOpStrOrWord OP20_HASH_FATARROW OPTIONAL-49 SubExpression .	(Rule 206)

	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 152
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 159
	OP23_LOGICAL_AND	shift, and go to state 161
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

	'}'	reduce using rule 206 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 206 (HashEntry)

State 385:

	PAREN-50 -> OP21_LIST_COMMA HashEntry .	(Rule 210)

	$default	reduce using rule 210 (PAREN-50)

State 386:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA . LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 85)

	LITERAL_STRING	shift, and go to state 407

State 387:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-35 ')' .	(Rule 135)

	$default	reduce using rule 135 (Expression)

State 388:

	CodeBlock -> LBRACE . PLUS-43 '}'	(Rule 176)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'if'	shift, and go to state 132
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	MY	shift, and go to state 93
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 103
	OP01_NAMED_SCOLON	shift, and go to state 85
	OP01_NAMED_VOID	shift, and go to state 102
	OP01_NAMED_VOID_LPAREN	shift, and go to state 124
	OP01_NAMED_VOID_SCOLON	shift, and go to state 123
	OP01_OPEN	shift, and go to state 120
	OP01_PRINT	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 126
	OP19_LOOP_CONTROL	shift, and go to state 83
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 95
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 88

	'for'	reduce using rule 153 (OPTIONAL-38)
	'foreach'	reduce using rule 153 (OPTIONAL-38)
	'while'	reduce using rule 153 (OPTIONAL-38)

	VariableDeclaration	go to state 92
	HashDereference	go to state 119
	Conditional	go to state 90
	HashReference	go to state 91
	LoopLabel	go to state 87
	OperatorVoid	go to state 112
	Expression	go to state 113
	Operator	go to state 84
	Literal	go to state 86
	SubExpression	go to state 82
	Operation	go to state 408
	WordScoped	go to state 109
	PAREN-37	go to state 107
	ArrayReference	go to state 104
	VariableSymbolOrSelf	go to state 106
	Variable	go to state 130
	PLUS-43	go to state 409
	Statement	go to state 128
	VariableModification	go to state 98
	ArrayDereference	go to state 122
	OPTIONAL-38	go to state 96

State 389:

	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock . STAR-40 OPTIONAL-42	(Rule 165)

	$default	reduce using rule 161 (STAR-40)

	STAR-40	go to state 410

State 390:

	PAREN-19 -> OP21_LIST_COMMA . MY Type VARIABLE_SYMBOL	(Rule 49)

	MY	shift, and go to state 411

State 391:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-20 ')' . OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 52)

	OP19_VARIABLE_ASSIGN	shift, and go to state 412

State 392:

	STAR-20 -> STAR-20 PAREN-19 .	(Rule 50)

	$default	reduce using rule 50 (STAR-20)

State 393:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' . ';'	(Rule 66)

	';'	shift, and go to state 413

State 394:

	HashEntryProperties -> OpStringOrWord . OP20_HASH_FATARROW TypeInnerProperties	(Rule 209)

	OP20_HASH_FATARROW	shift, and go to state 414

State 395:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties . STAR-26 '}' ';'	(Rule 65)

	$default	reduce using rule 64 (STAR-26)

	STAR-26	go to state 415

State 396:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-21 STAR-22 STAR-23 Properties STAR-24 LITERAL_NUMBER ';' .	(Rule 61)

	$default	reduce using rule 61 (Class)

State 397:

	Method -> 'our' TYPE_METHOD . VARIABLE_SYMBOL '= sub {' OPTIONAL-27 STAR-28 '}' ';'	(Rule 71)

	VARIABLE_SYMBOL	shift, and go to state 416

State 398:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' .	(Rule 84)

	$default	reduce using rule 84 (Operator)

State 399:

	OpNamedScolonOrSubExpIn -> SubExpressionOrInput ';' .	(Rule 243)

	$default	reduce using rule 243 (OpNamedScolonOrSubExpIn)

State 400:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' . OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 185)

	OP19_VARIABLE_ASSIGN	shift, and go to state 417

State 401:

	TypeInner -> MY Type '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN .	(Rule 225)

	$default	reduce using rule 225 (TypeInner)

State 402:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN . ListElements ')' CodeBlock	(Rule 171)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	ARGV	shift, and go to state 182
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	MY	shift, and go to state 174
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP01_QW	shift, and go to state 185
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	HashReference	go to state 91
	HashDereference	go to state 119
	VariableSymbolOrSelf	go to state 106
	ArrayReference	go to state 104
	TypeInner	go to state 187
	Variable	go to state 143
	Literal	go to state 86
	Operator	go to state 84
	Expression	go to state 144
	ListElements	go to state 418
	WordScoped	go to state 109
	ArrayDereference	go to state 122
	SubExpression	go to state 183
	ListElement	go to state 188

State 403:

	LoopWhile -> 'while' LPAREN SubExpression ')' CodeBlock .	(Rule 172)

	$default	reduce using rule 172 (LoopWhile)

State 404:

	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . SubExpressionOrInput ')' CodeBlock	(Rule 173)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	FHREF_SYMBOL_IN	shift, and go to state 311
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	STDIN	shift, and go to state 312
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	Variable	go to state 143
	HashDereference	go to state 119
	VariableSymbolOrSelf	go to state 106
	HashReference	go to state 91
	ArrayReference	go to state 104
	SubExpressionOrInput	go to state 419
	ArrayDereference	go to state 122
	WordScoped	go to state 109
	SubExpression	go to state 310
	Literal	go to state 86
	Expression	go to state 144
	Operator	go to state 84

State 405:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN . SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 169)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	Operator	go to state 84
	Expression	go to state 144
	Literal	go to state 86
	SubExpression	go to state 420
	ArrayDereference	go to state 122
	WordScoped	go to state 109
	ArrayReference	go to state 104
	HashDereference	go to state 119
	HashReference	go to state 91
	VariableSymbolOrSelf	go to state 106
	Variable	go to state 143

State 406:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 170)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_NAMED_SCOLON	shift, and go to state 424
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 422
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	OpNamedScolonOrSubExp	go to state 421
	ArrayReference	go to state 104
	HashDereference	go to state 119
	VariableSymbolOrSelf	go to state 106
	HashReference	go to state 91
	Variable	go to state 143
	Operator	go to state 84
	Expression	go to state 144
	Literal	go to state 86
	SubExpression	go to state 423
	WordScoped	go to state 109
	ArrayDereference	go to state 122

State 407:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING . OP21_LIST_COMMA SubExpression	(Rule 85)

	OP21_LIST_COMMA	shift, and go to state 425

State 408:

	PLUS-43 -> Operation .	(Rule 175)

	$default	reduce using rule 175 (PLUS-43)

State 409:

	PLUS-43 -> PLUS-43 . Operation	(Rule 174)
	CodeBlock -> LBRACE PLUS-43 . '}'	(Rule 176)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'if'	shift, and go to state 132
	'undef'	shift, and go to state 118
	'}'	shift, and go to state 426
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	MY	shift, and go to state 93
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 103
	OP01_NAMED_SCOLON	shift, and go to state 85
	OP01_NAMED_VOID	shift, and go to state 102
	OP01_NAMED_VOID_LPAREN	shift, and go to state 124
	OP01_NAMED_VOID_SCOLON	shift, and go to state 123
	OP01_OPEN	shift, and go to state 120
	OP01_PRINT	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 126
	OP19_LOOP_CONTROL	shift, and go to state 83
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 95
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 88

	'for'	reduce using rule 153 (OPTIONAL-38)
	'foreach'	reduce using rule 153 (OPTIONAL-38)
	'while'	reduce using rule 153 (OPTIONAL-38)

	LoopLabel	go to state 87
	HashDereference	go to state 119
	Conditional	go to state 90
	HashReference	go to state 91
	VariableDeclaration	go to state 92
	PAREN-37	go to state 107
	WordScoped	go to state 109
	Operation	go to state 427
	SubExpression	go to state 82
	Literal	go to state 86
	Operator	go to state 84
	Expression	go to state 113
	OperatorVoid	go to state 112
	Variable	go to state 130
	VariableSymbolOrSelf	go to state 106
	ArrayReference	go to state 104
	OPTIONAL-38	go to state 96
	ArrayDereference	go to state 122
	VariableModification	go to state 98
	Statement	go to state 128

State 410:

	STAR-40 -> STAR-40 . PAREN-39	(Rule 160)
	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-40 . OPTIONAL-42	(Rule 165)

	'else'	shift, and go to state 429
	'elsif'	shift, and go to state 431

	$end	reduce using rule 164 (OPTIONAL-42)
	'%{'	reduce using rule 164 (OPTIONAL-42)
	'@{'	reduce using rule 164 (OPTIONAL-42)
	'for'	reduce using rule 164 (OPTIONAL-42)
	'foreach'	reduce using rule 164 (OPTIONAL-42)
	'if'	reduce using rule 164 (OPTIONAL-42)
	'undef'	reduce using rule 164 (OPTIONAL-42)
	'while'	reduce using rule 164 (OPTIONAL-42)
	'}'	reduce using rule 164 (OPTIONAL-42)
	CONSTANT_CALL_SCOPED	reduce using rule 164 (OPTIONAL-42)
	LBRACE	reduce using rule 164 (OPTIONAL-42)
	LBRACKET	reduce using rule 164 (OPTIONAL-42)
	LITERAL_NUMBER	reduce using rule 164 (OPTIONAL-42)
	LITERAL_STRING	reduce using rule 164 (OPTIONAL-42)
	LPAREN	reduce using rule 164 (OPTIONAL-42)
	MY	reduce using rule 164 (OPTIONAL-42)
	OP01_CLOSE	reduce using rule 164 (OPTIONAL-42)
	OP01_NAMED	reduce using rule 164 (OPTIONAL-42)
	OP01_NAMED_SCOLON	reduce using rule 164 (OPTIONAL-42)
	OP01_NAMED_VOID	reduce using rule 164 (OPTIONAL-42)
	OP01_NAMED_VOID_LPAREN	reduce using rule 164 (OPTIONAL-42)
	OP01_NAMED_VOID_SCOLON	reduce using rule 164 (OPTIONAL-42)
	OP01_OPEN	reduce using rule 164 (OPTIONAL-42)
	OP01_PRINT	reduce using rule 164 (OPTIONAL-42)
	OP03_MATH_INC_DEC	reduce using rule 164 (OPTIONAL-42)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 164 (OPTIONAL-42)
	OP05_LOGICAL_NEG	reduce using rule 164 (OPTIONAL-42)
	OP05_MATH_NEG_LPAREN	reduce using rule 164 (OPTIONAL-42)
	OP10_NAMED_UNARY	reduce using rule 164 (OPTIONAL-42)
	OP10_NAMED_UNARY_SCOLON	reduce using rule 164 (OPTIONAL-42)
	OP19_LOOP_CONTROL	reduce using rule 164 (OPTIONAL-42)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 164 (OPTIONAL-42)
	OP22_LOGICAL_NEG	reduce using rule 164 (OPTIONAL-42)
	SELF	reduce using rule 164 (OPTIONAL-42)
	VARIABLE_SYMBOL	reduce using rule 164 (OPTIONAL-42)
	WORD	reduce using rule 164 (OPTIONAL-42)
	WORD_SCOPED	reduce using rule 164 (OPTIONAL-42)
	WORD_UPPERCASE	reduce using rule 164 (OPTIONAL-42)

	PAREN-39	go to state 432
	OPTIONAL-42	go to state 430
	PAREN-41	go to state 428

State 411:

	PAREN-19 -> OP21_LIST_COMMA MY . Type VARIABLE_SYMBOL	(Rule 49)

	TYPE_INTEGER	shift, and go to state 58
	WORD	shift, and go to state 61
	WORD_SCOPED	shift, and go to state 60

	Type	go to state 433

State 412:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-20 ')' OP19_VARIABLE_ASSIGN . '@ARG;'	(Rule 52)

	'@ARG;'	shift, and go to state 434

State 413:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';' .	(Rule 66)

	$default	reduce using rule 66 (Properties)

State 414:

	HashEntryProperties -> OpStringOrWord OP20_HASH_FATARROW . TypeInnerProperties	(Rule 209)

	MY	shift, and go to state 436

	TypeInnerProperties	go to state 435

State 415:

	STAR-26 -> STAR-26 . PAREN-25	(Rule 63)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-26 . '}' ';'	(Rule 65)

	'}'	shift, and go to state 437
	OP21_LIST_COMMA	shift, and go to state 439

	PAREN-25	go to state 438

State 416:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL . '= sub {' OPTIONAL-27 STAR-28 '}' ';'	(Rule 71)

	'= sub {'	shift, and go to state 440

State 417:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN . 'undef' ';'	(Rule 185)

	'undef'	shift, and go to state 441

State 418:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements . ')' CodeBlock	(Rule 171)

	')'	shift, and go to state 442

State 419:

	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrInput . ')' CodeBlock	(Rule 173)

	')'	shift, and go to state 443

State 420:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression . OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 169)

	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 152
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 444
	OP18_TERNARY	shift, and go to state 159
	OP23_LOGICAL_AND	shift, and go to state 161
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

State 421:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp . VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 170)

	VARIABLE_SYMBOL	shift, and go to state 445

State 422:

	OpNamedScolonOrSubExp -> OP10_NAMED_UNARY_SCOLON .	(Rule 239)

	$default	reduce using rule 239 (OpNamedScolonOrSubExp)

State 423:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	OpNamedScolonOrSubExp -> SubExpression . ';'	(Rule 240)

	';'	shift, and go to state 446
	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 152
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 159
	OP23_LOGICAL_AND	shift, and go to state 161
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

State 424:

	OpNamedScolonOrSubExp -> OP01_NAMED_SCOLON .	(Rule 238)

	$default	reduce using rule 238 (OpNamedScolonOrSubExp)

State 425:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA . SubExpression	(Rule 85)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	ArrayReference	go to state 104
	HashReference	go to state 91
	HashDereference	go to state 119
	VariableSymbolOrSelf	go to state 106
	Variable	go to state 143
	Operator	go to state 84
	Expression	go to state 144
	Literal	go to state 86
	SubExpression	go to state 447
	ArrayDereference	go to state 122
	WordScoped	go to state 109

State 426:

	CodeBlock -> LBRACE PLUS-43 '}' .	(Rule 176)

	$default	reduce using rule 176 (CodeBlock)

State 427:

	PLUS-43 -> PLUS-43 Operation .	(Rule 174)

	$default	reduce using rule 174 (PLUS-43)

State 428:

	OPTIONAL-42 -> PAREN-41 .	(Rule 163)

	$default	reduce using rule 163 (OPTIONAL-42)

State 429:

	PAREN-41 -> 'else' . CodeBlock	(Rule 162)

	LBRACE	shift, and go to state 388

	CodeBlock	go to state 448

State 430:

	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-40 OPTIONAL-42 .	(Rule 165)

	$default	reduce using rule 165 (Conditional)

State 431:

	PAREN-39 -> 'elsif' . LPAREN SubExpression ')' CodeBlock	(Rule 159)

	LPAREN	shift, and go to state 449

State 432:

	STAR-40 -> STAR-40 PAREN-39 .	(Rule 160)

	$default	reduce using rule 160 (STAR-40)

State 433:

	PAREN-19 -> OP21_LIST_COMMA MY Type . VARIABLE_SYMBOL	(Rule 49)

	VARIABLE_SYMBOL	shift, and go to state 450

State 434:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-20 ')' OP19_VARIABLE_ASSIGN '@ARG;' .	(Rule 52)

	$default	reduce using rule 52 (SubroutineArguments)

State 435:

	HashEntryProperties -> OpStringOrWord OP20_HASH_FATARROW TypeInnerProperties .	(Rule 209)

	$default	reduce using rule 209 (HashEntryProperties)

State 436:

	TypeInnerProperties -> MY . Type '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN SubExpression	(Rule 226)
	TypeInnerProperties -> MY . Type '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 227)

	TYPE_INTEGER	shift, and go to state 58
	WORD	shift, and go to state 61
	WORD_SCOPED	shift, and go to state 60

	Type	go to state 451

State 437:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-26 '}' . ';'	(Rule 65)

	';'	shift, and go to state 452

State 438:

	STAR-26 -> STAR-26 PAREN-25 .	(Rule 63)

	$default	reduce using rule 63 (STAR-26)

State 439:

	PAREN-25 -> OP21_LIST_COMMA . HashEntryProperties	(Rule 62)

	OP01_CLOSE	shift, and go to state 206
	OP01_NAMED	shift, and go to state 217
	OP01_NAMED_VOID	shift, and go to state 214
	OP01_OPEN	shift, and go to state 203
	OP01_PRINT	shift, and go to state 200
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 213
	OP07_STRING_REPEAT	shift, and go to state 223
	OP08_MATH_ADD_SUB	shift, and go to state 199
	OP10_NAMED_UNARY	shift, and go to state 215
	OP11_COMPARE_LT_GT	shift, and go to state 201
	OP12_COMPARE_EQ_NE	shift, and go to state 204
	OP19_LOOP_CONTROL	shift, and go to state 211
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 219
	OP22_LOGICAL_NEG	shift, and go to state 208
	OP23_LOGICAL_AND	shift, and go to state 218
	OP24_LOGICAL_OR_XOR	shift, and go to state 216
	WORD	shift, and go to state 222

	OpStringOrWord	go to state 394
	HashEntryProperties	go to state 453

State 440:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' . OPTIONAL-27 STAR-28 '}' ';'	(Rule 71)

	LPAREN_MY	shift, and go to state 454

	'%{'	reduce using rule 68 (OPTIONAL-27)
	'@{'	reduce using rule 68 (OPTIONAL-27)
	'for'	reduce using rule 68 (OPTIONAL-27)
	'foreach'	reduce using rule 68 (OPTIONAL-27)
	'if'	reduce using rule 68 (OPTIONAL-27)
	'undef'	reduce using rule 68 (OPTIONAL-27)
	'while'	reduce using rule 68 (OPTIONAL-27)
	'}'	reduce using rule 68 (OPTIONAL-27)
	CONSTANT_CALL_SCOPED	reduce using rule 68 (OPTIONAL-27)
	LBRACE	reduce using rule 68 (OPTIONAL-27)
	LBRACKET	reduce using rule 68 (OPTIONAL-27)
	LITERAL_NUMBER	reduce using rule 68 (OPTIONAL-27)
	LITERAL_STRING	reduce using rule 68 (OPTIONAL-27)
	LPAREN	reduce using rule 68 (OPTIONAL-27)
	MY	reduce using rule 68 (OPTIONAL-27)
	OP01_CLOSE	reduce using rule 68 (OPTIONAL-27)
	OP01_NAMED	reduce using rule 68 (OPTIONAL-27)
	OP01_NAMED_SCOLON	reduce using rule 68 (OPTIONAL-27)
	OP01_NAMED_VOID	reduce using rule 68 (OPTIONAL-27)
	OP01_NAMED_VOID_LPAREN	reduce using rule 68 (OPTIONAL-27)
	OP01_NAMED_VOID_SCOLON	reduce using rule 68 (OPTIONAL-27)
	OP01_OPEN	reduce using rule 68 (OPTIONAL-27)
	OP01_PRINT	reduce using rule 68 (OPTIONAL-27)
	OP03_MATH_INC_DEC	reduce using rule 68 (OPTIONAL-27)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 68 (OPTIONAL-27)
	OP05_LOGICAL_NEG	reduce using rule 68 (OPTIONAL-27)
	OP05_MATH_NEG_LPAREN	reduce using rule 68 (OPTIONAL-27)
	OP10_NAMED_UNARY	reduce using rule 68 (OPTIONAL-27)
	OP10_NAMED_UNARY_SCOLON	reduce using rule 68 (OPTIONAL-27)
	OP19_LOOP_CONTROL	reduce using rule 68 (OPTIONAL-27)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 68 (OPTIONAL-27)
	OP22_LOGICAL_NEG	reduce using rule 68 (OPTIONAL-27)
	SELF	reduce using rule 68 (OPTIONAL-27)
	VARIABLE_SYMBOL	reduce using rule 68 (OPTIONAL-27)
	WORD	reduce using rule 68 (OPTIONAL-27)
	WORD_SCOPED	reduce using rule 68 (OPTIONAL-27)
	WORD_UPPERCASE	reduce using rule 68 (OPTIONAL-27)

	MethodArguments	go to state 456
	OPTIONAL-27	go to state 455

State 441:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' . ';'	(Rule 185)

	';'	shift, and go to state 457

State 442:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' . CodeBlock	(Rule 171)

	LBRACE	shift, and go to state 388

	CodeBlock	go to state 458

State 443:

	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrInput ')' . CodeBlock	(Rule 173)

	LBRACE	shift, and go to state 388

	CodeBlock	go to state 459

State 444:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 107)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE . SubExpression ')' CodeBlock	(Rule 169)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	ArrayDereference	go to state 122
	WordScoped	go to state 109
	SubExpression	go to state 460
	Literal	go to state 86
	Operator	go to state 84
	Expression	go to state 144
	Variable	go to state 143
	HashDereference	go to state 119
	VariableSymbolOrSelf	go to state 106
	HashReference	go to state 91
	ArrayReference	go to state 104

State 445:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL . OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 170)

	OP11_COMPARE_LT_GT	shift, and go to state 461

State 446:

	OpNamedScolonOrSubExp -> SubExpression ';' .	(Rule 240)

	$default	reduce using rule 240 (OpNamedScolonOrSubExp)

State 447:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression .	(Rule 85)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 152
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 159

	')'	reduce using rule 85 (Operator)
	';'	reduce using rule 85 (Operator)
	']'	reduce using rule 85 (Operator)
	'}'	reduce using rule 85 (Operator)
	OP21_LIST_COMMA	reduce using rule 85 (Operator)
	OP23_LOGICAL_AND	reduce using rule 85 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 85 (Operator)

State 448:

	PAREN-41 -> 'else' CodeBlock .	(Rule 162)

	$default	reduce using rule 162 (PAREN-41)

State 449:

	PAREN-39 -> 'elsif' LPAREN . SubExpression ')' CodeBlock	(Rule 159)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	Literal	go to state 86
	Expression	go to state 144
	Operator	go to state 84
	WordScoped	go to state 109
	ArrayDereference	go to state 122
	SubExpression	go to state 462
	HashReference	go to state 91
	VariableSymbolOrSelf	go to state 106
	HashDereference	go to state 119
	ArrayReference	go to state 104
	Variable	go to state 143

State 450:

	PAREN-19 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL .	(Rule 49)

	$default	reduce using rule 49 (PAREN-19)

State 451:

	TypeInnerProperties -> MY Type . '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN SubExpression	(Rule 226)
	TypeInnerProperties -> MY Type . '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 227)

	'$TYPED_'	shift, and go to state 463

State 452:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-26 '}' ';' .	(Rule 65)

	$default	reduce using rule 65 (Properties)

State 453:

	PAREN-25 -> OP21_LIST_COMMA HashEntryProperties .	(Rule 62)

	$default	reduce using rule 62 (PAREN-25)

State 454:

	MethodArguments -> LPAREN_MY . Type SELF STAR-30 ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 75)

	TYPE_INTEGER	shift, and go to state 58
	WORD	shift, and go to state 61
	WORD_SCOPED	shift, and go to state 60

	Type	go to state 464

State 455:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-27 . STAR-28 '}' ';'	(Rule 71)

	$default	reduce using rule 70 (STAR-28)

	STAR-28	go to state 465

State 456:

	OPTIONAL-27 -> MethodArguments .	(Rule 67)

	$default	reduce using rule 67 (OPTIONAL-27)

State 457:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';' .	(Rule 185)

	$default	reduce using rule 185 (VariableDeclaration)

State 458:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock .	(Rule 171)

	$default	reduce using rule 171 (LoopForEach)

State 459:

	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrInput ')' CodeBlock .	(Rule 173)

	$default	reduce using rule 173 (LoopWhile)

State 460:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression . ')' CodeBlock	(Rule 169)

	')'	shift, and go to state 466
	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 152
	OP16_LOGICAL_OR	shift, and go to state 150

	OP17_LIST_RANGE	error (nonassociative)

	OP18_TERNARY	reduce using rule 107 (Operator)
	OP23_LOGICAL_AND	reduce using rule 107 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 107 (Operator)

State 461:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT . OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 170)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_NAMED_SCOLON	shift, and go to state 424
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 422
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	ArrayDereference	go to state 122
	WordScoped	go to state 109
	SubExpression	go to state 423
	Operator	go to state 84
	Expression	go to state 144
	Literal	go to state 86
	Variable	go to state 143
	ArrayReference	go to state 104
	OpNamedScolonOrSubExp	go to state 467
	VariableSymbolOrSelf	go to state 106
	HashDereference	go to state 119
	HashReference	go to state 91

State 462:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	PAREN-39 -> 'elsif' LPAREN SubExpression . ')' CodeBlock	(Rule 159)

	')'	shift, and go to state 468
	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 152
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 159
	OP23_LOGICAL_AND	shift, and go to state 161
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

State 463:

	TypeInnerProperties -> MY Type '$TYPED_' . OpStringOrWord OP19_VARIABLE_ASSIGN SubExpression	(Rule 226)
	TypeInnerProperties -> MY Type '$TYPED_' . OpStringOrWord OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 227)

	OP01_CLOSE	shift, and go to state 206
	OP01_NAMED	shift, and go to state 217
	OP01_NAMED_VOID	shift, and go to state 214
	OP01_OPEN	shift, and go to state 203
	OP01_PRINT	shift, and go to state 200
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 213
	OP07_STRING_REPEAT	shift, and go to state 223
	OP08_MATH_ADD_SUB	shift, and go to state 199
	OP10_NAMED_UNARY	shift, and go to state 215
	OP11_COMPARE_LT_GT	shift, and go to state 201
	OP12_COMPARE_EQ_NE	shift, and go to state 204
	OP19_LOOP_CONTROL	shift, and go to state 211
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 219
	OP22_LOGICAL_NEG	shift, and go to state 208
	OP23_LOGICAL_AND	shift, and go to state 218
	OP24_LOGICAL_OR_XOR	shift, and go to state 216
	WORD	shift, and go to state 222

	OpStringOrWord	go to state 469

State 464:

	MethodArguments -> LPAREN_MY Type . SELF STAR-30 ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 75)

	SELF	shift, and go to state 470

State 465:

	STAR-28 -> STAR-28 . Operation	(Rule 69)
	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-27 STAR-28 . '}' ';'	(Rule 71)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'if'	shift, and go to state 132
	'undef'	shift, and go to state 118
	'}'	shift, and go to state 471
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	MY	shift, and go to state 93
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 103
	OP01_NAMED_SCOLON	shift, and go to state 85
	OP01_NAMED_VOID	shift, and go to state 102
	OP01_NAMED_VOID_LPAREN	shift, and go to state 124
	OP01_NAMED_VOID_SCOLON	shift, and go to state 123
	OP01_OPEN	shift, and go to state 120
	OP01_PRINT	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 126
	OP19_LOOP_CONTROL	shift, and go to state 83
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 95
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 88

	'for'	reduce using rule 153 (OPTIONAL-38)
	'foreach'	reduce using rule 153 (OPTIONAL-38)
	'while'	reduce using rule 153 (OPTIONAL-38)

	Operator	go to state 84
	OperatorVoid	go to state 112
	Expression	go to state 113
	Literal	go to state 86
	SubExpression	go to state 82
	Operation	go to state 472
	PAREN-37	go to state 107
	WordScoped	go to state 109
	VariableDeclaration	go to state 92
	HashReference	go to state 91
	Conditional	go to state 90
	HashDereference	go to state 119
	LoopLabel	go to state 87
	Statement	go to state 128
	VariableModification	go to state 98
	ArrayDereference	go to state 122
	OPTIONAL-38	go to state 96
	ArrayReference	go to state 104
	VariableSymbolOrSelf	go to state 106
	Variable	go to state 130

State 466:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' . CodeBlock	(Rule 169)

	LBRACE	shift, and go to state 388

	CodeBlock	go to state 473

State 467:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp . SubExpressionOrVarMod ')' CodeBlock	(Rule 170)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	Variable	go to state 130
	VariableSymbolOrSelf	go to state 106
	HashDereference	go to state 119
	HashReference	go to state 91
	ArrayReference	go to state 104
	ArrayDereference	go to state 122
	WordScoped	go to state 109
	SubExpression	go to state 474
	VariableModification	go to state 476
	Literal	go to state 86
	Operator	go to state 84
	Expression	go to state 144
	SubExpressionOrVarMod	go to state 475

State 468:

	PAREN-39 -> 'elsif' LPAREN SubExpression ')' . CodeBlock	(Rule 159)

	LBRACE	shift, and go to state 388

	CodeBlock	go to state 477

State 469:

	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord . OP19_VARIABLE_ASSIGN SubExpression	(Rule 226)
	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord . OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 227)

	OP02_ARRAY_THINARROW	shift, and go to state 479
	OP19_VARIABLE_ASSIGN	shift, and go to state 478

State 470:

	MethodArguments -> LPAREN_MY Type SELF . STAR-30 ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 75)

	$default	reduce using rule 74 (STAR-30)

	STAR-30	go to state 480

State 471:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-27 STAR-28 '}' . ';'	(Rule 71)

	';'	shift, and go to state 481

State 472:

	STAR-28 -> STAR-28 Operation .	(Rule 69)

	$default	reduce using rule 69 (STAR-28)

State 473:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock .	(Rule 169)

	$default	reduce using rule 169 (LoopFor)

State 474:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	SubExpressionOrVarMod -> SubExpression .	(Rule 149)

	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 152
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 159
	OP23_LOGICAL_AND	shift, and go to state 161
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

	')'	reduce using rule 149 (SubExpressionOrVarMod)

State 475:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod . ')' CodeBlock	(Rule 170)

	')'	shift, and go to state 482

State 476:

	SubExpressionOrVarMod -> VariableModification .	(Rule 150)

	$default	reduce using rule 150 (SubExpressionOrVarMod)

State 477:

	PAREN-39 -> 'elsif' LPAREN SubExpression ')' CodeBlock .	(Rule 159)

	$default	reduce using rule 159 (PAREN-39)

State 478:

	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN . SubExpression	(Rule 226)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	WordScoped	go to state 109
	ArrayDereference	go to state 122
	SubExpression	go to state 483
	Literal	go to state 86
	Operator	go to state 84
	Expression	go to state 144
	Variable	go to state 143
	VariableSymbolOrSelf	go to state 106
	HashReference	go to state 91
	HashDereference	go to state 119
	ArrayReference	go to state 104

State 479:

	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW . SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 227)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 129
	'undef'	shift, and go to state 118
	CONSTANT_CALL_SCOPED	shift, and go to state 105
	LBRACE	shift, and go to state 114
	LBRACKET	shift, and go to state 97
	LITERAL_NUMBER	shift, and go to state 117
	LITERAL_STRING	shift, and go to state 111
	LPAREN	shift, and go to state 81
	OP01_CLOSE	shift, and go to state 131
	OP01_NAMED	shift, and go to state 167
	OP01_OPEN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 99
	OP05_LOGICAL_NEG	shift, and go to state 127
	OP05_MATH_NEG_LPAREN	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 89
	SELF	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 100
	WORD	shift, and go to state 30
	WORD_SCOPED	shift, and go to state 31
	WORD_UPPERCASE	shift, and go to state 142

	Literal	go to state 86
	Expression	go to state 144
	Operator	go to state 84
	ArrayDereference	go to state 122
	WordScoped	go to state 109
	SubExpression	go to state 484
	VariableSymbolOrSelf	go to state 106
	HashReference	go to state 91
	HashDereference	go to state 119
	ArrayReference	go to state 104
	Variable	go to state 143

State 480:

	STAR-30 -> STAR-30 . PAREN-29	(Rule 73)
	MethodArguments -> LPAREN_MY Type SELF STAR-30 . ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 75)

	')'	shift, and go to state 487
	OP21_LIST_COMMA	shift, and go to state 485

	PAREN-29	go to state 486

State 481:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-27 STAR-28 '}' ';' .	(Rule 71)

	$default	reduce using rule 71 (Method)

State 482:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' . CodeBlock	(Rule 170)

	LBRACE	shift, and go to state 388

	CodeBlock	go to state 488

State 483:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN SubExpression .	(Rule 226)

	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 152
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 159
	OP23_LOGICAL_AND	shift, and go to state 161
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

	'}'	reduce using rule 226 (TypeInnerProperties)
	OP21_LIST_COMMA	reduce using rule 226 (TypeInnerProperties)

State 484:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW SubExpression . ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 227)

	']'	shift, and go to state 489
	OP04_MATH_POW	shift, and go to state 156
	OP06_REGEX_BIND	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP07_STRING_REPEAT	shift, and go to state 162
	OP08_MATH_ADD_SUB	shift, and go to state 147
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 146
	OP12_COMPARE_EQ_NE	shift, and go to state 151
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 152
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 159
	OP23_LOGICAL_AND	shift, and go to state 161
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

State 485:

	PAREN-29 -> OP21_LIST_COMMA . MY Type VARIABLE_SYMBOL	(Rule 72)

	MY	shift, and go to state 490

State 486:

	STAR-30 -> STAR-30 PAREN-29 .	(Rule 73)

	$default	reduce using rule 73 (STAR-30)

State 487:

	MethodArguments -> LPAREN_MY Type SELF STAR-30 ')' . OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 75)

	OP19_VARIABLE_ASSIGN	shift, and go to state 491

State 488:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock .	(Rule 170)

	$default	reduce using rule 170 (LoopFor)

State 489:

	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW SubExpression ']' . OP19_VARIABLE_ASSIGN 'undef'	(Rule 227)

	OP19_VARIABLE_ASSIGN	shift, and go to state 492

State 490:

	PAREN-29 -> OP21_LIST_COMMA MY . Type VARIABLE_SYMBOL	(Rule 72)

	TYPE_INTEGER	shift, and go to state 58
	WORD	shift, and go to state 61
	WORD_SCOPED	shift, and go to state 60

	Type	go to state 493

State 491:

	MethodArguments -> LPAREN_MY Type SELF STAR-30 ')' OP19_VARIABLE_ASSIGN . '@ARG;'	(Rule 75)

	'@ARG;'	shift, and go to state 494

State 492:

	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN . 'undef'	(Rule 227)

	'undef'	shift, and go to state 495

State 493:

	PAREN-29 -> OP21_LIST_COMMA MY Type . VARIABLE_SYMBOL	(Rule 72)

	VARIABLE_SYMBOL	shift, and go to state 496

State 494:

	MethodArguments -> LPAREN_MY Type SELF STAR-30 ')' OP19_VARIABLE_ASSIGN '@ARG;' .	(Rule 75)

	$default	reduce using rule 75 (MethodArguments)

State 495:

	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' .	(Rule 227)

	$default	reduce using rule 227 (TypeInnerProperties)

State 496:

	PAREN-29 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL .	(Rule 72)

	$default	reduce using rule 72 (PAREN-29)


Summary:
--------
Number of rules         : 261
Number of terminals     : 98
Number of non-terminals : 108
Number of states        : 497
