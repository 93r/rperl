Conflicts:
----------
Conflict in state 168 between rule 90 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 168 between rule 90 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 168 between rule 90 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 168 between rule 90 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 168 between rule 90 and token OP04_MATH_POW resolved as shift.
Conflict in state 168 between rule 90 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 168 between rule 90 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 168 between rule 90 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 168 between rule 90 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 168 between rule 90 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 168 between rule 90 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 168 between rule 90 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 168 between rule 90 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 168 between rule 90 and token OP18_TERNARY resolved as reduce.
Conflict in state 168 between rule 90 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 168 between rule 90 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 168 between rule 90 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 203 between rule 83 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 203 between rule 83 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 203 between rule 83 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 203 between rule 83 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 203 between rule 83 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 203 between rule 83 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 203 between rule 83 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 203 between rule 83 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 203 between rule 83 and token OP18_TERNARY resolved as reduce.
Conflict in state 203 between rule 83 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 203 between rule 83 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 203 between rule 83 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 203 between rule 83 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 203 between rule 83 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 203 between rule 83 and token OP04_MATH_POW resolved as reduce.
Conflict in state 203 between rule 83 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 203 between rule 83 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 230 between rule 108 and token OP04_MATH_POW resolved as shift.
Conflict in state 230 between rule 108 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 230 between rule 108 and token OP08_STRING_CAT resolved as shift.
Conflict in state 230 between rule 108 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 230 between rule 108 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 230 between rule 108 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 230 between rule 108 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 230 between rule 108 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 230 between rule 108 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 230 between rule 108 and token OP18_TERNARY resolved as shift.
Conflict in state 230 between rule 108 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 230 between rule 108 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 230 between rule 108 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 230 between rule 108 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 230 between rule 108 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 230 between rule 108 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 230 between rule 108 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 231 between rule 98 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 231 between rule 98 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 231 between rule 98 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 231 between rule 98 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 231 between rule 98 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 231 between rule 98 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 231 between rule 98 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 231 between rule 98 and token OP18_TERNARY resolved as reduce.
Conflict in state 231 between rule 98 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 231 between rule 98 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 231 between rule 98 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 231 between rule 98 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 231 between rule 98 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 231 between rule 98 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 231 between rule 98 and token OP08_STRING_CAT resolved as shift.
Conflict in state 231 between rule 98 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 231 between rule 98 and token OP04_MATH_POW resolved as shift.
Conflict in state 244 between rule 83 and token OP04_MATH_POW resolved as reduce.
Conflict in state 244 between rule 83 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 244 between rule 83 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 244 between rule 83 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 244 between rule 83 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 244 between rule 83 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 244 between rule 83 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 244 between rule 83 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 244 between rule 83 and token OP18_TERNARY resolved as reduce.
Conflict in state 244 between rule 83 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 244 between rule 83 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 244 between rule 83 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 244 between rule 83 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 244 between rule 83 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 244 between rule 83 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 244 between rule 83 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 244 between rule 83 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 260 between rule 106 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 260 between rule 106 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 260 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 260 between rule 106 and token OP17_LIST_RANGE resolved as error.
Conflict in state 260 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 260 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 260 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 260 between rule 106 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 260 between rule 106 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 260 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 260 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 260 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 260 between rule 106 and token OP08_STRING_CAT resolved as shift.
Conflict in state 260 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 260 between rule 106 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 260 between rule 106 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 260 between rule 106 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 261 between rule 94 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 261 between rule 94 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 261 between rule 94 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 261 between rule 94 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 261 between rule 94 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 261 between rule 94 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 261 between rule 94 and token OP18_TERNARY resolved as reduce.
Conflict in state 261 between rule 94 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 261 between rule 94 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 261 between rule 94 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 261 between rule 94 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 261 between rule 94 and token OP04_MATH_POW resolved as shift.
Conflict in state 261 between rule 94 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 261 between rule 94 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 261 between rule 94 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 261 between rule 94 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 261 between rule 94 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 262 between rule 100 and token OP18_TERNARY resolved as reduce.
Conflict in state 262 between rule 100 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 262 between rule 100 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 262 between rule 100 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 262 between rule 100 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 262 between rule 100 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 262 between rule 100 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 262 between rule 100 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 262 between rule 100 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 262 between rule 100 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 262 between rule 100 and token OP08_STRING_CAT resolved as shift.
Conflict in state 262 between rule 100 and token OP04_MATH_POW resolved as shift.
Conflict in state 262 between rule 100 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 262 between rule 100 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 262 between rule 100 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 262 between rule 100 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 262 between rule 100 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 266 between rule 103 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 266 between rule 103 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 266 between rule 103 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 266 between rule 103 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 266 between rule 103 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 266 between rule 103 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 266 between rule 103 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 266 between rule 103 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 266 between rule 103 and token OP18_TERNARY resolved as reduce.
Conflict in state 266 between rule 103 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 266 between rule 103 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 266 between rule 103 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 266 between rule 103 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 266 between rule 103 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 266 between rule 103 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 266 between rule 103 and token OP08_STRING_CAT resolved as shift.
Conflict in state 266 between rule 103 and token OP04_MATH_POW resolved as shift.
Conflict in state 267 between rule 101 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 267 between rule 101 and token OP18_TERNARY resolved as reduce.
Conflict in state 267 between rule 101 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 267 between rule 101 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 267 between rule 101 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 267 between rule 101 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 267 between rule 101 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 267 between rule 101 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 267 between rule 101 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 267 between rule 101 and token OP04_MATH_POW resolved as shift.
Conflict in state 267 between rule 101 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 267 between rule 101 and token OP08_STRING_CAT resolved as shift.
Conflict in state 267 between rule 101 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 267 between rule 101 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 267 between rule 101 and token OP12_COMPARE_EQ_NE resolved as error.
Conflict in state 267 between rule 101 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 267 between rule 101 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 268 between rule 89 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 268 between rule 89 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 268 between rule 89 and token OP04_MATH_POW resolved as shift.
Conflict in state 268 between rule 89 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 268 between rule 89 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 268 between rule 89 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 268 between rule 89 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 268 between rule 89 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 268 between rule 89 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 268 between rule 89 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 268 between rule 89 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 268 between rule 89 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 268 between rule 89 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 268 between rule 89 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 268 between rule 89 and token OP18_TERNARY resolved as reduce.
Conflict in state 268 between rule 89 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 268 between rule 89 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 269 between rule 95 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 269 between rule 95 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 269 between rule 95 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 269 between rule 95 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 269 between rule 95 and token OP04_MATH_POW resolved as shift.
Conflict in state 269 between rule 95 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 269 between rule 95 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 269 between rule 95 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 269 between rule 95 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 269 between rule 95 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 269 between rule 95 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 269 between rule 95 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 269 between rule 95 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 269 between rule 95 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 269 between rule 95 and token OP18_TERNARY resolved as reduce.
Conflict in state 269 between rule 95 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 269 between rule 95 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 270 between rule 96 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 270 between rule 96 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 270 between rule 96 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 270 between rule 96 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 270 between rule 96 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 270 between rule 96 and token OP04_MATH_POW resolved as shift.
Conflict in state 270 between rule 96 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 270 between rule 96 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 270 between rule 96 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 270 between rule 96 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 270 between rule 96 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 270 between rule 96 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 270 between rule 96 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 270 between rule 96 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 270 between rule 96 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 270 between rule 96 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 270 between rule 96 and token OP18_TERNARY resolved as reduce.
Conflict in state 272 between rule 104 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 272 between rule 104 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 272 between rule 104 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 272 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 272 between rule 104 and token OP08_STRING_CAT resolved as shift.
Conflict in state 272 between rule 104 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 272 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 272 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 272 between rule 104 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 272 between rule 104 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 272 between rule 104 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 272 between rule 104 and token OP18_TERNARY resolved as reduce.
Conflict in state 272 between rule 104 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 272 between rule 104 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 272 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 272 between rule 104 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 272 between rule 104 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 273 between rule 105 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 273 between rule 105 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 273 between rule 105 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 273 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 273 between rule 105 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 273 between rule 105 and token OP08_STRING_CAT resolved as shift.
Conflict in state 273 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 273 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 273 between rule 105 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 273 between rule 105 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 273 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 273 between rule 105 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 273 between rule 105 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 273 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 273 between rule 105 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 273 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 273 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 274 between rule 102 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 274 between rule 102 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 274 between rule 102 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 274 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 274 between rule 102 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 274 between rule 102 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 274 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 274 between rule 102 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 274 between rule 102 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 274 between rule 102 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 274 between rule 102 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 274 between rule 102 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 274 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 274 between rule 102 and token OP08_STRING_CAT resolved as shift.
Conflict in state 274 between rule 102 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 274 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 274 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 275 between rule 97 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 275 between rule 97 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 275 between rule 97 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 275 between rule 97 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 275 between rule 97 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 275 between rule 97 and token OP18_TERNARY resolved as reduce.
Conflict in state 275 between rule 97 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 275 between rule 97 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 275 between rule 97 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 275 between rule 97 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 275 between rule 97 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 275 between rule 97 and token OP04_MATH_POW resolved as shift.
Conflict in state 275 between rule 97 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 275 between rule 97 and token OP08_STRING_CAT resolved as shift.
Conflict in state 275 between rule 97 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 275 between rule 97 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 275 between rule 97 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 276 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 276 between rule 110 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 276 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 276 between rule 110 and token OP08_STRING_CAT resolved as shift.
Conflict in state 276 between rule 110 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 276 between rule 110 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 276 between rule 110 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 276 between rule 110 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 276 between rule 110 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 276 between rule 110 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 276 between rule 110 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 276 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 276 between rule 110 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 276 between rule 110 and token OP18_TERNARY resolved as shift.
Conflict in state 276 between rule 110 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 276 between rule 110 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 276 between rule 110 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 277 between rule 109 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 277 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 277 between rule 109 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 277 between rule 109 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 277 between rule 109 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 277 between rule 109 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 277 between rule 109 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 277 between rule 109 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 277 between rule 109 and token OP18_TERNARY resolved as shift.
Conflict in state 277 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 277 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 277 between rule 109 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 277 between rule 109 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 277 between rule 109 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 277 between rule 109 and token OP08_STRING_CAT resolved as shift.
Conflict in state 277 between rule 109 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 277 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 278 between rule 93 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 278 between rule 93 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 278 between rule 93 and token OP04_MATH_POW resolved as shift.
Conflict in state 278 between rule 93 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 278 between rule 93 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 278 between rule 93 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 278 between rule 93 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 278 between rule 93 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 278 between rule 93 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 278 between rule 93 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 278 between rule 93 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 278 between rule 93 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 278 between rule 93 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 278 between rule 93 and token OP18_TERNARY resolved as reduce.
Conflict in state 278 between rule 93 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 278 between rule 93 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 278 between rule 93 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 418 between rule 85 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 418 between rule 85 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 418 between rule 85 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 418 between rule 85 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 418 between rule 85 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 418 between rule 85 and token OP08_STRING_CAT resolved as shift.
Conflict in state 418 between rule 85 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 418 between rule 85 and token OP04_MATH_POW resolved as shift.
Conflict in state 418 between rule 85 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 418 between rule 85 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 418 between rule 85 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 418 between rule 85 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 418 between rule 85 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 418 between rule 85 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 418 between rule 85 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 418 between rule 85 and token OP18_TERNARY resolved as shift.
Conflict in state 418 between rule 85 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 430 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 430 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 430 between rule 106 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 430 between rule 106 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 430 between rule 106 and token OP17_LIST_RANGE resolved as error.
Conflict in state 430 between rule 106 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 430 between rule 106 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 430 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 430 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 430 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 430 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 430 between rule 106 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 430 between rule 106 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 430 between rule 106 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 430 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 430 between rule 106 and token OP08_STRING_CAT resolved as shift.
Conflict in state 430 between rule 106 and token OP04_MATH_POW resolved as shift.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> Critic
20:	OPTIONAL-9 -> /* empty */
21:	OPTIONAL-10 -> USE_RPERL
22:	OPTIONAL-10 -> /* empty */
23:	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped ';' Header
24:	Module -> Package
25:	Module -> Class
26:	STAR-11 -> STAR-11 Critic
27:	STAR-11 -> /* empty */
28:	STAR-12 -> STAR-12 Include
29:	STAR-12 -> /* empty */
30:	STAR-13 -> STAR-13 Constant
31:	STAR-13 -> /* empty */
32:	PLUS-14 -> PLUS-14 Subroutine
33:	PLUS-14 -> Subroutine
34:	Package -> STAR-11 STAR-12 STAR-13 PLUS-14 LITERAL_NUMBER ';'
35:	OPTIONAL-15 -> USE_RPERL_AFTER
36:	OPTIONAL-15 -> /* empty */
37:	Header -> 'use strict;' 'use warnings;' OPTIONAL-15 'our' VERSION_NUMBER_ASSIGN
38:	PLUS-16 -> PLUS-16 WORD
39:	PLUS-16 -> WORD
40:	Critic -> '## no critic qw(' PLUS-16 ')'
41:	PLUS-17 -> PLUS-17 WORD
42:	PLUS-17 -> WORD
43:	Include -> USE WordScoped ';'
44:	Include -> USE WordScoped OP01_QW PLUS-17 ')' ';'
45:	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'
46:	OPTIONAL-18 -> SubroutineArguments
47:	OPTIONAL-18 -> /* empty */
48:	STAR-19 -> STAR-19 Operation
49:	STAR-19 -> /* empty */
50:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 STAR-19 '}' ';'
51:	PAREN-20 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL
52:	STAR-21 -> STAR-21 PAREN-20
53:	STAR-21 -> /* empty */
54:	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;'
55:	STAR-22 -> STAR-22 Critic
56:	STAR-22 -> /* empty */
57:	STAR-23 -> STAR-23 Include
58:	STAR-23 -> /* empty */
59:	STAR-24 -> STAR-24 Constant
60:	STAR-24 -> /* empty */
61:	STAR-25 -> STAR-25 MethodOrSubroutine
62:	STAR-25 -> /* empty */
63:	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';'
64:	PAREN-26 -> OP21_LIST_COMMA HashEntryProperties
65:	STAR-27 -> STAR-27 PAREN-26
66:	STAR-27 -> /* empty */
67:	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-27 '}' ';'
68:	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';'
69:	OPTIONAL-28 -> MethodArguments
70:	OPTIONAL-28 -> /* empty */
71:	STAR-29 -> STAR-29 Operation
72:	STAR-29 -> /* empty */
73:	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-28 STAR-29 '}' ';'
74:	PAREN-30 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL
75:	STAR-31 -> STAR-31 PAREN-30
76:	STAR-31 -> /* empty */
77:	MethodArguments -> LPAREN_MY Type SELF STAR-31 ')' OP19_VARIABLE_ASSIGN '@_;'
78:	MethodOrSubroutine -> Method
79:	MethodOrSubroutine -> Subroutine
80:	Operation -> Expression ';'
81:	Operation -> Statement
82:	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')'
83:	Operator -> OP01_NAMED SubExpression
84:	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'
85:	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression
86:	Operator -> OP01_CLOSE FHREF_SYMBOL
87:	Operator -> OP03_MATH_INC_DEC Variable
88:	Operator -> Variable OP03_MATH_INC_DEC
89:	Operator -> SubExpression OP04_MATH_POW SubExpression
90:	Operator -> OP05_LOGICAL_NEG SubExpression
91:	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')'
92:	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN
93:	Operator -> SubExpression OP07_STRING_REPEAT SubExpression
94:	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression
95:	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression
96:	Operator -> SubExpression OP08_STRING_CAT SubExpression
97:	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression
98:	Operator -> OP10_NAMED_UNARY SubExpression
99:	Operator -> OP10_NAMED_UNARY
100:	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression
101:	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression
102:	Operator -> SubExpression OP13_BITWISE_AND SubExpression
103:	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression
104:	Operator -> SubExpression OP15_LOGICAL_AND SubExpression
105:	Operator -> SubExpression OP16_LOGICAL_OR SubExpression
106:	Operator -> SubExpression OP17_LIST_RANGE SubExpression
107:	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral
108:	Operator -> OP22_LOGICAL_NEG SubExpression
109:	Operator -> SubExpression OP23_LOGICAL_AND SubExpression
110:	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression
111:	PAREN-32 -> STDOUT_STDERR
112:	OPTIONAL-33 -> PAREN-32
113:	OPTIONAL-33 -> /* empty */
114:	OPTIONAL-34 -> ListElements
115:	OPTIONAL-34 -> /* empty */
116:	OperatorVoid -> OP01_PRINT OPTIONAL-33 ListElements ';'
117:	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements ';'
118:	OperatorVoid -> OP01_NAMED_VOID_SCOLON
119:	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-34 ')' ';'
120:	OperatorVoid -> OP01_NAMED_VOID ListElements ';'
121:	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';'
122:	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON
123:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
124:	OPTIONAL-35 -> ListElements
125:	OPTIONAL-35 -> /* empty */
126:	OPTIONAL-36 -> ListElements
127:	OPTIONAL-36 -> /* empty */
128:	Expression -> Operator
129:	Expression -> WORD_UPPERCASE LPAREN ')'
130:	Expression -> CONSTANT_CALL_SCOPED
131:	Expression -> WordScoped LPAREN OPTIONAL-35 ')'
132:	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-36 ')'
133:	Expression -> WordScoped OP02_METHOD_THINARROW_NEW ')'
134:	SubExpression -> Expression
135:	SubExpression -> 'undef'
136:	SubExpression -> Literal
137:	SubExpression -> Variable
138:	SubExpression -> ArrayReference
139:	SubExpression -> ArrayDereference
140:	SubExpression -> HashReference
141:	SubExpression -> HashDereference
142:	SubExpression -> LPAREN SubExpression ')'
143:	SubExpressionOrStdin -> SubExpression
144:	SubExpressionOrStdin -> STDIN
145:	SubExpressionOrVarMod -> SubExpression
146:	SubExpressionOrVarMod -> VariableModification
147:	PAREN-37 -> LoopLabel COLON
148:	OPTIONAL-38 -> PAREN-37
149:	OPTIONAL-38 -> /* empty */
150:	Statement -> Conditional
151:	Statement -> OPTIONAL-38 Loop
152:	Statement -> OperatorVoid
153:	Statement -> VariableDeclaration
154:	Statement -> VariableModification ';'
155:	PAREN-39 -> 'elsif' LPAREN SubExpression ')' CodeBlock
156:	STAR-40 -> STAR-40 PAREN-39
157:	STAR-40 -> /* empty */
158:	PAREN-41 -> 'else' CodeBlock
159:	OPTIONAL-42 -> PAREN-41
160:	OPTIONAL-42 -> /* empty */
161:	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-40 OPTIONAL-42
162:	Loop -> LoopFor
163:	Loop -> LoopForEach
164:	Loop -> LoopWhile
165:	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock
166:	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpression ';' VARIABLE_SYMBOL OP11_COMPARE_LT_GT SubExpression ';' SubExpressionOrVarMod ')' CodeBlock
167:	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock
168:	LoopWhile -> 'while' LPAREN SubExpression ')' CodeBlock
169:	PLUS-43 -> PLUS-43 Operation
170:	PLUS-43 -> Operation
171:	CodeBlock -> LBRACE PLUS-43 '}'
172:	STAR-44 -> STAR-44 VariableRetrieval
173:	STAR-44 -> /* empty */
174:	Variable -> VariableSymbolOrSelf STAR-44
175:	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']'
176:	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}'
177:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
178:	VariableDeclaration -> MY Type VARIABLE_SYMBOL ';'
179:	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
180:	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'
181:	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL ';'
182:	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin
183:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression
184:	PAREN-45 -> OP21_LIST_COMMA ListElement
185:	STAR-46 -> STAR-46 PAREN-45
186:	STAR-46 -> /* empty */
187:	ListElements -> ListElement STAR-46
188:	PLUS-47 -> PLUS-47 WORD
189:	PLUS-47 -> WORD
190:	ListElement -> SubExpression
191:	ListElement -> TypeInner SubExpression
192:	ListElement -> OP01_QW PLUS-47 ')'
193:	OPTIONAL-48 -> ListElements
194:	OPTIONAL-48 -> /* empty */
195:	ArrayReference -> LBRACKET OPTIONAL-48 ']'
196:	OPTIONAL-49 -> TypeInner
197:	OPTIONAL-49 -> /* empty */
198:	ArrayDereference -> '@{' Variable '}'
199:	ArrayDereference -> '@{' OPTIONAL-49 ArrayReference '}'
200:	OPTIONAL-50 -> TypeInner
201:	OPTIONAL-50 -> /* empty */
202:	HashEntry -> VariableOrLiteralOrWord OP20_HASH_FATARROW OPTIONAL-50 SubExpression
203:	HashEntry -> HashDereference
204:	HashEntryProperties -> WORD OP20_HASH_FATARROW TypeInnerProperties
205:	PAREN-51 -> OP21_LIST_COMMA HashEntry
206:	STAR-52 -> STAR-52 PAREN-51
207:	STAR-52 -> /* empty */
208:	HashReference -> LBRACE HashEntry STAR-52 '}'
209:	HashReference -> LBRACE '}'
210:	OPTIONAL-53 -> TypeInner
211:	OPTIONAL-53 -> /* empty */
212:	HashDereference -> '%{' Variable '}'
213:	HashDereference -> '%{' OPTIONAL-53 HashReference '}'
214:	WordScoped -> WORD
215:	WordScoped -> WORD_SCOPED
216:	LoopLabel -> WORD_UPPERCASE
217:	Type -> WORD
218:	Type -> WORD_SCOPED
219:	Type -> TYPE_INTEGER
220:	TypeInner -> MY Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
221:	TypeInnerProperties -> MY Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN SubExpression
222:	TypeInnerProperties -> MY Type '$TYPED_' WORD OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'
223:	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN
224:	VariableOrLiteral -> Variable
225:	VariableOrLiteral -> Literal
226:	VariableOrLiteralOrWord -> Variable
227:	VariableOrLiteralOrWord -> Literal
228:	VariableOrLiteralOrWord -> WORD
229:	VariableSymbolOrSelf -> VARIABLE_SYMBOL
230:	VariableSymbolOrSelf -> SELF
231:	Literal -> LITERAL_NUMBER
232:	Literal -> LITERAL_STRING

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'## no critic qw('	shift, and go to state 7
	SHEBANG	shift, and go to state 8

	'package'	reduce using rule 20 (OPTIONAL-9)
	USE_RPERL	reduce using rule 20 (OPTIONAL-9)

	Program	go to state 2
	PAREN-1	go to state 4
	OPTIONAL-9	go to state 3
	CompileUnit	go to state 1
	ModuleHeader	go to state 5
	PLUS-2	go to state 6
	Critic	go to state 9

State 1:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 10

State 2:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 3:

	ModuleHeader -> OPTIONAL-9 . OPTIONAL-10 'package' WordScoped ';' Header	(Rule 23)

	USE_RPERL	shift, and go to state 11

	'package'	reduce using rule 22 (OPTIONAL-10)

	OPTIONAL-10	go to state 12

State 4:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 5:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent qw('	shift, and go to state 15

	'## no critic qw('	reduce using rule 27 (STAR-11)
	'our'	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	USE	reduce using rule 27 (STAR-11)

	Class	go to state 13
	Package	go to state 14
	STAR-11	go to state 17
	Module	go to state 16

State 6:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	'## no critic qw('	shift, and go to state 7

	$end	reduce using rule 5 (CompileUnit)
	'package'	reduce using rule 20 (OPTIONAL-9)
	USE_RPERL	reduce using rule 20 (OPTIONAL-9)

	Critic	go to state 9
	ModuleHeader	go to state 5
	OPTIONAL-9	go to state 3
	PAREN-1	go to state 18

State 7:

	Critic -> '## no critic qw(' . PLUS-16 ')'	(Rule 40)

	WORD	shift, and go to state 19

	PLUS-16	go to state 20

State 8:

	Program -> SHEBANG . OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 7

	USE_RPERL	reduce using rule 7 (OPTIONAL-3)

	Critic	go to state 21
	OPTIONAL-3	go to state 22

State 9:

	OPTIONAL-9 -> Critic .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 10:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 11:

	OPTIONAL-10 -> USE_RPERL .	(Rule 21)

	$default	reduce using rule 21 (OPTIONAL-10)

State 12:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 . 'package' WordScoped ';' Header	(Rule 23)

	'package'	shift, and go to state 23

State 13:

	Module -> Class .	(Rule 25)

	$default	reduce using rule 25 (Module)

State 14:

	Module -> Package .	(Rule 24)

	$default	reduce using rule 24 (Module)

State 15:

	Class -> 'use parent qw(' . WordScoped ')' ';' Include STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 26

State 16:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 17:

	STAR-11 -> STAR-11 . Critic	(Rule 26)
	Package -> STAR-11 . STAR-12 STAR-13 PLUS-14 LITERAL_NUMBER ';'	(Rule 34)

	'## no critic qw('	shift, and go to state 7

	'our'	reduce using rule 29 (STAR-12)
	'use constant'	reduce using rule 29 (STAR-12)
	USE	reduce using rule 29 (STAR-12)

	Critic	go to state 27
	STAR-12	go to state 28

State 18:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 19:

	PLUS-16 -> WORD .	(Rule 39)

	$default	reduce using rule 39 (PLUS-16)

State 20:

	PLUS-16 -> PLUS-16 . WORD	(Rule 38)
	Critic -> '## no critic qw(' PLUS-16 . ')'	(Rule 40)

	')'	shift, and go to state 29
	WORD	shift, and go to state 30

State 21:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 22:

	Program -> SHEBANG OPTIONAL-3 . USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	USE_RPERL	shift, and go to state 31

State 23:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' . WordScoped ';' Header	(Rule 23)

	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 32

State 24:

	WordScoped -> WORD_SCOPED .	(Rule 215)

	$default	reduce using rule 215 (WordScoped)

State 25:

	WordScoped -> WORD .	(Rule 214)

	$default	reduce using rule 214 (WordScoped)

State 26:

	Class -> 'use parent qw(' WordScoped . ')' ';' Include STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	')'	shift, and go to state 33

State 27:

	STAR-11 -> STAR-11 Critic .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 28:

	STAR-12 -> STAR-12 . Include	(Rule 28)
	Package -> STAR-11 STAR-12 . STAR-13 PLUS-14 LITERAL_NUMBER ';'	(Rule 34)

	USE	shift, and go to state 34

	'our'	reduce using rule 31 (STAR-13)
	'use constant'	reduce using rule 31 (STAR-13)

	STAR-13	go to state 35
	Include	go to state 36

State 29:

	Critic -> '## no critic qw(' PLUS-16 ')' .	(Rule 40)

	$default	reduce using rule 40 (Critic)

State 30:

	PLUS-16 -> PLUS-16 WORD .	(Rule 38)

	$default	reduce using rule 38 (PLUS-16)

State 31:

	Program -> SHEBANG OPTIONAL-3 USE_RPERL . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 38

	Header	go to state 37

State 32:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped . ';' Header	(Rule 23)

	';'	shift, and go to state 39

State 33:

	Class -> 'use parent qw(' WordScoped ')' . ';' Include STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	';'	shift, and go to state 40

State 34:

	Include -> USE . WordScoped ';'	(Rule 43)
	Include -> USE . WordScoped OP01_QW PLUS-17 ')' ';'	(Rule 44)

	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 41

State 35:

	STAR-13 -> STAR-13 . Constant	(Rule 30)
	Package -> STAR-11 STAR-12 STAR-13 . PLUS-14 LITERAL_NUMBER ';'	(Rule 34)

	'our'	shift, and go to state 44
	'use constant'	shift, and go to state 42

	Subroutine	go to state 46
	Constant	go to state 43
	PLUS-14	go to state 45

State 36:

	STAR-12 -> STAR-12 Include .	(Rule 28)

	$default	reduce using rule 28 (STAR-12)

State 37:

	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 47

State 38:

	Header -> 'use strict;' . 'use warnings;' OPTIONAL-15 'our' VERSION_NUMBER_ASSIGN	(Rule 37)

	'use warnings;'	shift, and go to state 48

State 39:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped ';' . Header	(Rule 23)

	'use strict;'	shift, and go to state 38

	Header	go to state 49

State 40:

	Class -> 'use parent qw(' WordScoped ')' ';' . Include STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	USE	shift, and go to state 34

	Include	go to state 50

State 41:

	Include -> USE WordScoped . ';'	(Rule 43)
	Include -> USE WordScoped . OP01_QW PLUS-17 ')' ';'	(Rule 44)

	';'	shift, and go to state 52
	OP01_QW	shift, and go to state 51

State 42:

	Constant -> 'use constant' . WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 45)

	WORD_UPPERCASE	shift, and go to state 53

State 43:

	STAR-13 -> STAR-13 Constant .	(Rule 30)

	$default	reduce using rule 30 (STAR-13)

State 44:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 STAR-19 '}' ';'	(Rule 50)

	TYPE_INTEGER	shift, and go to state 55
	WORD	shift, and go to state 57
	WORD_SCOPED	shift, and go to state 56

	Type	go to state 54

State 45:

	PLUS-14 -> PLUS-14 . Subroutine	(Rule 32)
	Package -> STAR-11 STAR-12 STAR-13 PLUS-14 . LITERAL_NUMBER ';'	(Rule 34)

	'our'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 59

	Subroutine	go to state 58

State 46:

	PLUS-14 -> Subroutine .	(Rule 33)

	$default	reduce using rule 33 (PLUS-14)

State 47:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 7

	'%{'	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'for'	reduce using rule 11 (STAR-5)
	'foreach'	reduce using rule 11 (STAR-5)
	'if'	reduce using rule 11 (STAR-5)
	'our'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'while'	reduce using rule 11 (STAR-5)
	CONSTANT_CALL_SCOPED	reduce using rule 11 (STAR-5)
	LBRACE	reduce using rule 11 (STAR-5)
	LBRACKET	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	LPAREN	reduce using rule 11 (STAR-5)
	MY	reduce using rule 11 (STAR-5)
	OP01_CLOSE	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_LPAREN	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_SCOLON	reduce using rule 11 (STAR-5)
	OP01_OPEN	reduce using rule 11 (STAR-5)
	OP01_PRINT	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG_LPAREN	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	SELF	reduce using rule 11 (STAR-5)
	USE	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)
	WORD_UPPERCASE	reduce using rule 11 (STAR-5)

	STAR-5	go to state 60
	Critic	go to state 61

State 48:

	Header -> 'use strict;' 'use warnings;' . OPTIONAL-15 'our' VERSION_NUMBER_ASSIGN	(Rule 37)

	USE_RPERL_AFTER	shift, and go to state 62

	'our'	reduce using rule 36 (OPTIONAL-15)

	OPTIONAL-15	go to state 63

State 49:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped ';' Header .	(Rule 23)

	$default	reduce using rule 23 (ModuleHeader)

State 50:

	Class -> 'use parent qw(' WordScoped ')' ';' Include . STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	$default	reduce using rule 56 (STAR-22)

	STAR-22	go to state 64

State 51:

	Include -> USE WordScoped OP01_QW . PLUS-17 ')' ';'	(Rule 44)

	WORD	shift, and go to state 66

	PLUS-17	go to state 65

State 52:

	Include -> USE WordScoped ';' .	(Rule 43)

	$default	reduce using rule 43 (Include)

State 53:

	Constant -> 'use constant' WORD_UPPERCASE . OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 45)

	OP20_HASH_FATARROW	shift, and go to state 67

State 54:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-18 STAR-19 '}' ';'	(Rule 50)

	VARIABLE_SYMBOL	shift, and go to state 68

State 55:

	Type -> TYPE_INTEGER .	(Rule 219)

	$default	reduce using rule 219 (Type)

State 56:

	Type -> WORD_SCOPED .	(Rule 218)

	$default	reduce using rule 218 (Type)

State 57:

	Type -> WORD .	(Rule 217)

	$default	reduce using rule 217 (Type)

State 58:

	PLUS-14 -> PLUS-14 Subroutine .	(Rule 32)

	$default	reduce using rule 32 (PLUS-14)

State 59:

	Package -> STAR-11 STAR-12 STAR-13 PLUS-14 LITERAL_NUMBER . ';'	(Rule 34)

	';'	shift, and go to state 69

State 60:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	USE	shift, and go to state 34

	'%{'	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'for'	reduce using rule 13 (STAR-6)
	'foreach'	reduce using rule 13 (STAR-6)
	'if'	reduce using rule 13 (STAR-6)
	'our'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while'	reduce using rule 13 (STAR-6)
	CONSTANT_CALL_SCOPED	reduce using rule 13 (STAR-6)
	LBRACE	reduce using rule 13 (STAR-6)
	LBRACKET	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	LPAREN	reduce using rule 13 (STAR-6)
	MY	reduce using rule 13 (STAR-6)
	OP01_CLOSE	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_LPAREN	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_SCOLON	reduce using rule 13 (STAR-6)
	OP01_OPEN	reduce using rule 13 (STAR-6)
	OP01_PRINT	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG_LPAREN	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	SELF	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)
	WORD_UPPERCASE	reduce using rule 13 (STAR-6)

	Include	go to state 70
	STAR-6	go to state 71

State 61:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 62:

	OPTIONAL-15 -> USE_RPERL_AFTER .	(Rule 35)

	$default	reduce using rule 35 (OPTIONAL-15)

State 63:

	Header -> 'use strict;' 'use warnings;' OPTIONAL-15 . 'our' VERSION_NUMBER_ASSIGN	(Rule 37)

	'our'	shift, and go to state 72

State 64:

	STAR-22 -> STAR-22 . Critic	(Rule 55)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 . STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	'## no critic qw('	shift, and go to state 7

	'our hashref $properties'	reduce using rule 58 (STAR-23)
	'use constant'	reduce using rule 58 (STAR-23)
	USE	reduce using rule 58 (STAR-23)

	STAR-23	go to state 74
	Critic	go to state 73

State 65:

	PLUS-17 -> PLUS-17 . WORD	(Rule 41)
	Include -> USE WordScoped OP01_QW PLUS-17 . ')' ';'	(Rule 44)

	')'	shift, and go to state 76
	WORD	shift, and go to state 75

State 66:

	PLUS-17 -> WORD .	(Rule 42)

	$default	reduce using rule 42 (PLUS-17)

State 67:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW . TypeInnerConstant Literal ';'	(Rule 45)

	MY	shift, and go to state 78

	TypeInnerConstant	go to state 77

State 68:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-18 STAR-19 '}' ';'	(Rule 50)

	'= sub {'	shift, and go to state 79

State 69:

	Package -> STAR-11 STAR-12 STAR-13 PLUS-14 LITERAL_NUMBER ';' .	(Rule 34)

	$default	reduce using rule 34 (Package)

State 70:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 71:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 42

	'%{'	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'for'	reduce using rule 15 (STAR-7)
	'foreach'	reduce using rule 15 (STAR-7)
	'if'	reduce using rule 15 (STAR-7)
	'our'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while'	reduce using rule 15 (STAR-7)
	CONSTANT_CALL_SCOPED	reduce using rule 15 (STAR-7)
	LBRACE	reduce using rule 15 (STAR-7)
	LBRACKET	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	LPAREN	reduce using rule 15 (STAR-7)
	MY	reduce using rule 15 (STAR-7)
	OP01_CLOSE	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_LPAREN	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_SCOLON	reduce using rule 15 (STAR-7)
	OP01_OPEN	reduce using rule 15 (STAR-7)
	OP01_PRINT	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG_LPAREN	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	SELF	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)
	WORD_UPPERCASE	reduce using rule 15 (STAR-7)

	STAR-7	go to state 80
	Constant	go to state 81

State 72:

	Header -> 'use strict;' 'use warnings;' OPTIONAL-15 'our' . VERSION_NUMBER_ASSIGN	(Rule 37)

	VERSION_NUMBER_ASSIGN	shift, and go to state 82

State 73:

	STAR-22 -> STAR-22 Critic .	(Rule 55)

	$default	reduce using rule 55 (STAR-22)

State 74:

	STAR-23 -> STAR-23 . Include	(Rule 57)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 STAR-23 . STAR-24 Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	USE	shift, and go to state 34

	'our hashref $properties'	reduce using rule 60 (STAR-24)
	'use constant'	reduce using rule 60 (STAR-24)

	Include	go to state 83
	STAR-24	go to state 84

State 75:

	PLUS-17 -> PLUS-17 WORD .	(Rule 41)

	$default	reduce using rule 41 (PLUS-17)

State 76:

	Include -> USE WordScoped OP01_QW PLUS-17 ')' . ';'	(Rule 44)

	';'	shift, and go to state 85

State 77:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant . Literal ';'	(Rule 45)

	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86

	Literal	go to state 88

State 78:

	TypeInnerConstant -> MY . Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 223)

	TYPE_INTEGER	shift, and go to state 55
	WORD	shift, and go to state 57
	WORD_SCOPED	shift, and go to state 56

	Type	go to state 89

State 79:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-18 STAR-19 '}' ';'	(Rule 50)

	LPAREN_MY	shift, and go to state 92

	'%{'	reduce using rule 47 (OPTIONAL-18)
	'@{'	reduce using rule 47 (OPTIONAL-18)
	'for'	reduce using rule 47 (OPTIONAL-18)
	'foreach'	reduce using rule 47 (OPTIONAL-18)
	'if'	reduce using rule 47 (OPTIONAL-18)
	'undef'	reduce using rule 47 (OPTIONAL-18)
	'while'	reduce using rule 47 (OPTIONAL-18)
	'}'	reduce using rule 47 (OPTIONAL-18)
	CONSTANT_CALL_SCOPED	reduce using rule 47 (OPTIONAL-18)
	LBRACE	reduce using rule 47 (OPTIONAL-18)
	LBRACKET	reduce using rule 47 (OPTIONAL-18)
	LITERAL_NUMBER	reduce using rule 47 (OPTIONAL-18)
	LITERAL_STRING	reduce using rule 47 (OPTIONAL-18)
	LPAREN	reduce using rule 47 (OPTIONAL-18)
	MY	reduce using rule 47 (OPTIONAL-18)
	OP01_CLOSE	reduce using rule 47 (OPTIONAL-18)
	OP01_NAMED	reduce using rule 47 (OPTIONAL-18)
	OP01_NAMED_VOID	reduce using rule 47 (OPTIONAL-18)
	OP01_NAMED_VOID_LPAREN	reduce using rule 47 (OPTIONAL-18)
	OP01_NAMED_VOID_SCOLON	reduce using rule 47 (OPTIONAL-18)
	OP01_OPEN	reduce using rule 47 (OPTIONAL-18)
	OP01_PRINT	reduce using rule 47 (OPTIONAL-18)
	OP03_MATH_INC_DEC	reduce using rule 47 (OPTIONAL-18)
	OP05_LOGICAL_NEG	reduce using rule 47 (OPTIONAL-18)
	OP05_MATH_NEG_LPAREN	reduce using rule 47 (OPTIONAL-18)
	OP10_NAMED_UNARY	reduce using rule 47 (OPTIONAL-18)
	OP19_LOOP_CONTROL	reduce using rule 47 (OPTIONAL-18)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 47 (OPTIONAL-18)
	OP22_LOGICAL_NEG	reduce using rule 47 (OPTIONAL-18)
	SELF	reduce using rule 47 (OPTIONAL-18)
	VARIABLE_SYMBOL	reduce using rule 47 (OPTIONAL-18)
	WORD	reduce using rule 47 (OPTIONAL-18)
	WORD_SCOPED	reduce using rule 47 (OPTIONAL-18)
	WORD_UPPERCASE	reduce using rule 47 (OPTIONAL-18)

	OPTIONAL-18	go to state 90
	SubroutineArguments	go to state 91

State 80:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'if'	shift, and go to state 131
	'our'	shift, and go to state 44
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	MY	shift, and go to state 135
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 119
	OP01_NAMED_VOID	shift, and go to state 127
	OP01_NAMED_VOID_LPAREN	shift, and go to state 99
	OP01_NAMED_VOID_SCOLON	shift, and go to state 124
	OP01_OPEN	shift, and go to state 93
	OP01_PRINT	shift, and go to state 137
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP19_LOOP_CONTROL	shift, and go to state 126
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 115

	'for'	reduce using rule 149 (OPTIONAL-38)
	'foreach'	reduce using rule 149 (OPTIONAL-38)
	'while'	reduce using rule 149 (OPTIONAL-38)

	Literal	go to state 130
	Statement	go to state 109
	Operator	go to state 106
	VariableDeclaration	go to state 129
	WordScoped	go to state 138
	VariableSymbolOrSelf	go to state 118
	SubExpression	go to state 117
	LoopLabel	go to state 120
	Operation	go to state 116
	Variable	go to state 114
	Subroutine	go to state 132
	OPTIONAL-38	go to state 136
	ArrayDereference	go to state 134
	PAREN-37	go to state 113
	ArrayReference	go to state 94
	PLUS-8	go to state 95
	Conditional	go to state 123
	HashDereference	go to state 121
	Expression	go to state 105
	HashReference	go to state 100
	OperatorVoid	go to state 103
	VariableModification	go to state 98

State 81:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 82:

	Header -> 'use strict;' 'use warnings;' OPTIONAL-15 'our' VERSION_NUMBER_ASSIGN .	(Rule 37)

	$default	reduce using rule 37 (Header)

State 83:

	STAR-23 -> STAR-23 Include .	(Rule 57)

	$default	reduce using rule 57 (STAR-23)

State 84:

	STAR-24 -> STAR-24 . Constant	(Rule 59)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 STAR-23 STAR-24 . Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	'our hashref $properties'	shift, and go to state 142
	'use constant'	shift, and go to state 42

	Properties	go to state 141
	Constant	go to state 143

State 85:

	Include -> USE WordScoped OP01_QW PLUS-17 ')' ';' .	(Rule 44)

	$default	reduce using rule 44 (Include)

State 86:

	Literal -> LITERAL_STRING .	(Rule 232)

	$default	reduce using rule 232 (Literal)

State 87:

	Literal -> LITERAL_NUMBER .	(Rule 231)

	$default	reduce using rule 231 (Literal)

State 88:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal . ';'	(Rule 45)

	';'	shift, and go to state 144

State 89:

	TypeInnerConstant -> MY Type . '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 223)

	'$TYPED_'	shift, and go to state 145

State 90:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 . STAR-19 '}' ';'	(Rule 50)

	$default	reduce using rule 49 (STAR-19)

	STAR-19	go to state 146

State 91:

	OPTIONAL-18 -> SubroutineArguments .	(Rule 46)

	$default	reduce using rule 46 (OPTIONAL-18)

State 92:

	SubroutineArguments -> LPAREN_MY . Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 54)

	TYPE_INTEGER	shift, and go to state 55
	WORD	shift, and go to state 57
	WORD_SCOPED	shift, and go to state 56

	Type	go to state 147

State 93:

	Operator -> OP01_OPEN . MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 85)

	MY	shift, and go to state 148

State 94:

	SubExpression -> ArrayReference .	(Rule 138)

	$default	reduce using rule 138 (SubExpression)

State 95:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'if'	shift, and go to state 131
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	MY	shift, and go to state 135
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 119
	OP01_NAMED_VOID	shift, and go to state 127
	OP01_NAMED_VOID_LPAREN	shift, and go to state 99
	OP01_NAMED_VOID_SCOLON	shift, and go to state 124
	OP01_OPEN	shift, and go to state 93
	OP01_PRINT	shift, and go to state 137
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP19_LOOP_CONTROL	shift, and go to state 126
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 115

	$end	reduce using rule 18 (Program)
	'for'	reduce using rule 149 (OPTIONAL-38)
	'foreach'	reduce using rule 149 (OPTIONAL-38)
	'while'	reduce using rule 149 (OPTIONAL-38)

	HashDereference	go to state 121
	ArrayReference	go to state 94
	Conditional	go to state 123
	VariableModification	go to state 98
	Expression	go to state 105
	OperatorVoid	go to state 103
	HashReference	go to state 100
	Statement	go to state 109
	VariableDeclaration	go to state 129
	Operator	go to state 106
	Literal	go to state 130
	Variable	go to state 114
	OPTIONAL-38	go to state 136
	PAREN-37	go to state 113
	ArrayDereference	go to state 134
	LoopLabel	go to state 120
	SubExpression	go to state 117
	VariableSymbolOrSelf	go to state 118
	WordScoped	go to state 138
	Operation	go to state 149

State 96:

	HashDereference -> '%{' . Variable '}'	(Rule 212)
	HashDereference -> '%{' . OPTIONAL-53 HashReference '}'	(Rule 213)

	MY	shift, and go to state 153
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108

	LBRACE	reduce using rule 211 (OPTIONAL-53)

	Variable	go to state 152
	TypeInner	go to state 150
	OPTIONAL-53	go to state 151
	VariableSymbolOrSelf	go to state 118

State 97:

	VariableSymbolOrSelf -> SELF .	(Rule 230)

	$default	reduce using rule 230 (VariableSymbolOrSelf)

State 98:

	Statement -> VariableModification . ';'	(Rule 154)

	';'	shift, and go to state 154

State 99:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN . OPTIONAL-34 ')' ';'	(Rule 119)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	MY	shift, and go to state 153
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP01_QW	shift, and go to state 161
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	')'	reduce using rule 115 (OPTIONAL-34)

	ArrayDereference	go to state 134
	ListElements	go to state 162
	Variable	go to state 157
	HashReference	go to state 100
	SubExpression	go to state 158
	WordScoped	go to state 138
	Expression	go to state 163
	VariableSymbolOrSelf	go to state 118
	Operator	go to state 106
	HashDereference	go to state 121
	TypeInner	go to state 155
	Literal	go to state 130
	ListElement	go to state 156
	OPTIONAL-34	go to state 164
	ArrayReference	go to state 94

State 100:

	SubExpression -> HashReference .	(Rule 140)

	$default	reduce using rule 140 (SubExpression)

State 101:

	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON .	(Rule 122)

	$default	reduce using rule 122 (OperatorVoid)

State 102:

	ArrayDereference -> '@{' . Variable '}'	(Rule 198)
	ArrayDereference -> '@{' . OPTIONAL-49 ArrayReference '}'	(Rule 199)

	MY	shift, and go to state 153
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108

	LBRACKET	reduce using rule 197 (OPTIONAL-49)

	VariableSymbolOrSelf	go to state 118
	OPTIONAL-49	go to state 167
	TypeInner	go to state 166
	Variable	go to state 165

State 103:

	Statement -> OperatorVoid .	(Rule 152)

	$default	reduce using rule 152 (Statement)

State 104:

	Operator -> OP05_LOGICAL_NEG . SubExpression	(Rule 90)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	Variable	go to state 157
	ArrayDereference	go to state 134
	Expression	go to state 163
	WordScoped	go to state 138
	VariableSymbolOrSelf	go to state 118
	SubExpression	go to state 168
	HashReference	go to state 100
	HashDereference	go to state 121
	Operator	go to state 106
	ArrayReference	go to state 94
	Literal	go to state 130

State 105:

	Operation -> Expression . ';'	(Rule 80)
	SubExpression -> Expression .	(Rule 134)

	';'	shift, and go to state 169

	OP04_MATH_POW	reduce using rule 134 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 134 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 134 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 134 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 134 (SubExpression)
	OP08_STRING_CAT	reduce using rule 134 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 134 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 134 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 134 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 134 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 134 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 134 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 134 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 134 (SubExpression)
	OP18_TERNARY	reduce using rule 134 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 134 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 134 (SubExpression)

State 106:

	Expression -> Operator .	(Rule 128)

	$default	reduce using rule 128 (Expression)

State 107:

	ArrayReference -> LBRACKET . OPTIONAL-48 ']'	(Rule 195)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	MY	shift, and go to state 153
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP01_QW	shift, and go to state 161
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	']'	reduce using rule 194 (OPTIONAL-48)

	OPTIONAL-48	go to state 170
	Operator	go to state 106
	TypeInner	go to state 155
	HashDereference	go to state 121
	Literal	go to state 130
	ArrayReference	go to state 94
	ListElement	go to state 156
	ArrayDereference	go to state 134
	Variable	go to state 157
	ListElements	go to state 171
	HashReference	go to state 100
	SubExpression	go to state 158
	VariableSymbolOrSelf	go to state 118
	Expression	go to state 163
	WordScoped	go to state 138

State 108:

	VariableSymbolOrSelf -> VARIABLE_SYMBOL .	(Rule 229)

	$default	reduce using rule 229 (VariableSymbolOrSelf)

State 109:

	Operation -> Statement .	(Rule 81)

	$default	reduce using rule 81 (Operation)

State 110:

	Operator -> OP05_MATH_NEG_LPAREN . SubExpression ')'	(Rule 91)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	Literal	go to state 130
	ArrayReference	go to state 94
	Operator	go to state 106
	HashDereference	go to state 121
	HashReference	go to state 100
	VariableSymbolOrSelf	go to state 118
	Expression	go to state 163
	SubExpression	go to state 172
	WordScoped	go to state 138
	ArrayDereference	go to state 134
	Variable	go to state 157

State 111:

	HashReference -> LBRACE . HashEntry STAR-52 '}'	(Rule 208)
	HashReference -> LBRACE . '}'	(Rule 209)

	'%{'	shift, and go to state 96
	'}'	shift, and go to state 179
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 175

	VariableOrLiteralOrWord	go to state 177
	Literal	go to state 173
	VariableSymbolOrSelf	go to state 118
	HashEntry	go to state 178
	Variable	go to state 176
	HashDereference	go to state 174

State 112:

	SubExpression -> 'undef' .	(Rule 135)

	$default	reduce using rule 135 (SubExpression)

State 113:

	OPTIONAL-38 -> PAREN-37 .	(Rule 148)

	$default	reduce using rule 148 (OPTIONAL-38)

State 114:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 88)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-36 ')'	(Rule 132)
	SubExpression -> Variable .	(Rule 137)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN SubExpressionOrStdin	(Rule 182)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY SubExpression	(Rule 183)

	OP02_METHOD_THINARROW	shift, and go to state 182
	OP03_MATH_INC_DEC	shift, and go to state 180
	OP19_VARIABLE_ASSIGN	shift, and go to state 181
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 183

	')'	reduce using rule 137 (SubExpression)
	OP04_MATH_POW	reduce using rule 137 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 137 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 137 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 137 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 137 (SubExpression)
	OP08_STRING_CAT	reduce using rule 137 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 137 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 137 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 137 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 137 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 137 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 137 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 137 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 137 (SubExpression)
	OP18_TERNARY	reduce using rule 137 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 137 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 137 (SubExpression)

State 115:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 129)
	LoopLabel -> WORD_UPPERCASE .	(Rule 216)

	LPAREN	shift, and go to state 184

	COLON	reduce using rule 216 (LoopLabel)

State 116:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 117:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197
	OP14_BITWISE_OR_XOR	shift, and go to state 189
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 196
	OP17_LIST_RANGE	shift, and go to state 185
	OP18_TERNARY	shift, and go to state 188
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 199

State 118:

	Variable -> VariableSymbolOrSelf . STAR-44	(Rule 174)

	$default	reduce using rule 173 (STAR-44)

	STAR-44	go to state 202

State 119:

	Operator -> OP01_NAMED . SubExpression	(Rule 83)
	OperatorVoid -> OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ';'	(Rule 121)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	MY	shift, and go to state 153
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP01_QW	shift, and go to state 161
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	HashReference	go to state 100
	SubExpression	go to state 203
	WordScoped	go to state 138
	VariableSymbolOrSelf	go to state 118
	Expression	go to state 163
	ArrayDereference	go to state 134
	Variable	go to state 157
	Literal	go to state 130
	ArrayReference	go to state 94
	ListElement	go to state 204
	Operator	go to state 106
	TypeInner	go to state 155
	HashDereference	go to state 121

State 120:

	PAREN-37 -> LoopLabel . COLON	(Rule 147)

	COLON	shift, and go to state 205

State 121:

	SubExpression -> HashDereference .	(Rule 141)

	$default	reduce using rule 141 (SubExpression)

State 122:

	Operator -> LPAREN . OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')'	(Rule 82)
	Operator -> LPAREN . OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'	(Rule 84)
	SubExpression -> LPAREN . SubExpression ')'	(Rule 142)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 206
	OP01_OPEN	shift, and go to state 93
	OP01_PRINT	shift, and go to state 208
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	Literal	go to state 130
	ArrayReference	go to state 94
	Operator	go to state 106
	HashDereference	go to state 121
	HashReference	go to state 100
	WordScoped	go to state 138
	SubExpression	go to state 207
	Expression	go to state 163
	VariableSymbolOrSelf	go to state 118
	ArrayDereference	go to state 134
	Variable	go to state 157

State 123:

	Statement -> Conditional .	(Rule 150)

	$default	reduce using rule 150 (Statement)

State 124:

	OperatorVoid -> OP01_NAMED_VOID_SCOLON .	(Rule 118)

	$default	reduce using rule 118 (OperatorVoid)

State 125:

	Operator -> OP01_CLOSE . FHREF_SYMBOL	(Rule 86)

	FHREF_SYMBOL	shift, and go to state 209

State 126:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 123)

	WORD_UPPERCASE	shift, and go to state 210

	LoopLabel	go to state 211

State 127:

	OperatorVoid -> OP01_NAMED_VOID . ListElements ';'	(Rule 120)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	MY	shift, and go to state 153
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP01_QW	shift, and go to state 161
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	Literal	go to state 130
	ListElement	go to state 156
	ArrayReference	go to state 94
	Operator	go to state 106
	HashDereference	go to state 121
	TypeInner	go to state 155
	HashReference	go to state 100
	VariableSymbolOrSelf	go to state 118
	WordScoped	go to state 138
	Expression	go to state 163
	SubExpression	go to state 158
	ArrayDereference	go to state 134
	ListElements	go to state 212
	Variable	go to state 157

State 128:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 87)

	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108

	VariableSymbolOrSelf	go to state 118
	Variable	go to state 213

State 129:

	Statement -> VariableDeclaration .	(Rule 153)

	$default	reduce using rule 153 (Statement)

State 130:

	SubExpression -> Literal .	(Rule 136)

	$default	reduce using rule 136 (SubExpression)

State 131:

	Conditional -> 'if' . LPAREN SubExpression ')' CodeBlock STAR-40 OPTIONAL-42	(Rule 161)

	LPAREN	shift, and go to state 214

State 132:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 133:

	Expression -> CONSTANT_CALL_SCOPED .	(Rule 130)

	$default	reduce using rule 130 (Expression)

State 134:

	SubExpression -> ArrayDereference .	(Rule 139)

	$default	reduce using rule 139 (SubExpression)

State 135:

	VariableDeclaration -> MY . Type VARIABLE_SYMBOL ';'	(Rule 178)
	VariableDeclaration -> MY . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 179)
	VariableDeclaration -> MY . Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 180)
	VariableDeclaration -> MY . TYPE_FHREF FHREF_SYMBOL ';'	(Rule 181)

	TYPE_FHREF	shift, and go to state 215
	TYPE_INTEGER	shift, and go to state 55
	WORD	shift, and go to state 57
	WORD_SCOPED	shift, and go to state 56

	Type	go to state 216

State 136:

	Statement -> OPTIONAL-38 . Loop	(Rule 151)

	'for'	shift, and go to state 217
	'foreach'	shift, and go to state 223
	'while'	shift, and go to state 220

	LoopFor	go to state 222
	LoopForEach	go to state 218
	Loop	go to state 219
	LoopWhile	go to state 221

State 137:

	OperatorVoid -> OP01_PRINT . OPTIONAL-33 ListElements ';'	(Rule 116)
	OperatorVoid -> OP01_PRINT . FHREF_SYMBOL_BRACES ListElements ';'	(Rule 117)

	FHREF_SYMBOL_BRACES	shift, and go to state 227
	STDOUT_STDERR	shift, and go to state 225

	'%{'	reduce using rule 113 (OPTIONAL-33)
	'@{'	reduce using rule 113 (OPTIONAL-33)
	'undef'	reduce using rule 113 (OPTIONAL-33)
	CONSTANT_CALL_SCOPED	reduce using rule 113 (OPTIONAL-33)
	LBRACE	reduce using rule 113 (OPTIONAL-33)
	LBRACKET	reduce using rule 113 (OPTIONAL-33)
	LITERAL_NUMBER	reduce using rule 113 (OPTIONAL-33)
	LITERAL_STRING	reduce using rule 113 (OPTIONAL-33)
	LPAREN	reduce using rule 113 (OPTIONAL-33)
	MY	reduce using rule 113 (OPTIONAL-33)
	OP01_CLOSE	reduce using rule 113 (OPTIONAL-33)
	OP01_NAMED	reduce using rule 113 (OPTIONAL-33)
	OP01_OPEN	reduce using rule 113 (OPTIONAL-33)
	OP01_QW	reduce using rule 113 (OPTIONAL-33)
	OP03_MATH_INC_DEC	reduce using rule 113 (OPTIONAL-33)
	OP05_LOGICAL_NEG	reduce using rule 113 (OPTIONAL-33)
	OP05_MATH_NEG_LPAREN	reduce using rule 113 (OPTIONAL-33)
	OP10_NAMED_UNARY	reduce using rule 113 (OPTIONAL-33)
	OP22_LOGICAL_NEG	reduce using rule 113 (OPTIONAL-33)
	SELF	reduce using rule 113 (OPTIONAL-33)
	VARIABLE_SYMBOL	reduce using rule 113 (OPTIONAL-33)
	WORD	reduce using rule 113 (OPTIONAL-33)
	WORD_SCOPED	reduce using rule 113 (OPTIONAL-33)
	WORD_UPPERCASE	reduce using rule 113 (OPTIONAL-33)

	OPTIONAL-33	go to state 224
	PAREN-32	go to state 226

State 138:

	Expression -> WordScoped . LPAREN OPTIONAL-35 ')'	(Rule 131)
	Expression -> WordScoped . OP02_METHOD_THINARROW_NEW ')'	(Rule 133)

	LPAREN	shift, and go to state 229
	OP02_METHOD_THINARROW_NEW	shift, and go to state 228

State 139:

	Operator -> OP22_LOGICAL_NEG . SubExpression	(Rule 108)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	HashReference	go to state 100
	VariableSymbolOrSelf	go to state 118
	WordScoped	go to state 138
	SubExpression	go to state 230
	Expression	go to state 163
	ArrayDereference	go to state 134
	Variable	go to state 157
	Literal	go to state 130
	ArrayReference	go to state 94
	Operator	go to state 106
	HashDereference	go to state 121

State 140:

	Operator -> OP10_NAMED_UNARY . SubExpression	(Rule 98)
	Operator -> OP10_NAMED_UNARY .	(Rule 99)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	')'	reduce using rule 99 (Operator)
	';'	reduce using rule 99 (Operator)
	']'	reduce using rule 99 (Operator)
	'}'	reduce using rule 99 (Operator)
	OP04_MATH_POW	reduce using rule 99 (Operator)
	OP06_REGEX_MATCH	reduce using rule 99 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 99 (Operator)
	OP07_STRING_REPEAT	reduce using rule 99 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 99 (Operator)
	OP08_STRING_CAT	reduce using rule 99 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 99 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 99 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 99 (Operator)
	OP13_BITWISE_AND	reduce using rule 99 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 99 (Operator)
	OP15_LOGICAL_AND	reduce using rule 99 (Operator)
	OP16_LOGICAL_OR	reduce using rule 99 (Operator)
	OP17_LIST_RANGE	reduce using rule 99 (Operator)
	OP18_TERNARY	reduce using rule 99 (Operator)
	OP21_LIST_COMMA	reduce using rule 99 (Operator)
	OP23_LOGICAL_AND	reduce using rule 99 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 99 (Operator)

	ArrayReference	go to state 94
	Literal	go to state 130
	HashDereference	go to state 121
	Operator	go to state 106
	SubExpression	go to state 231
	Expression	go to state 163
	VariableSymbolOrSelf	go to state 118
	WordScoped	go to state 138
	HashReference	go to state 100
	Variable	go to state 157
	ArrayDereference	go to state 134

State 141:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 STAR-23 STAR-24 Properties . STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	$default	reduce using rule 62 (STAR-25)

	STAR-25	go to state 232

State 142:

	Properties -> 'our hashref $properties' . OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-27 '}' ';'	(Rule 67)
	Properties -> 'our hashref $properties' . OP19_VARIABLE_ASSIGN LBRACE '}' ';'	(Rule 68)

	OP19_VARIABLE_ASSIGN	shift, and go to state 233

State 143:

	STAR-24 -> STAR-24 Constant .	(Rule 59)

	$default	reduce using rule 59 (STAR-24)

State 144:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';' .	(Rule 45)

	$default	reduce using rule 45 (Constant)

State 145:

	TypeInnerConstant -> MY Type '$TYPED_' . WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 223)

	WORD_UPPERCASE	shift, and go to state 234

State 146:

	STAR-19 -> STAR-19 . Operation	(Rule 48)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 STAR-19 . '}' ';'	(Rule 50)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'if'	shift, and go to state 131
	'undef'	shift, and go to state 112
	'}'	shift, and go to state 235
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	MY	shift, and go to state 135
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 119
	OP01_NAMED_VOID	shift, and go to state 127
	OP01_NAMED_VOID_LPAREN	shift, and go to state 99
	OP01_NAMED_VOID_SCOLON	shift, and go to state 124
	OP01_OPEN	shift, and go to state 93
	OP01_PRINT	shift, and go to state 137
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP19_LOOP_CONTROL	shift, and go to state 126
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 115

	'for'	reduce using rule 149 (OPTIONAL-38)
	'foreach'	reduce using rule 149 (OPTIONAL-38)
	'while'	reduce using rule 149 (OPTIONAL-38)

	Literal	go to state 130
	Statement	go to state 109
	VariableDeclaration	go to state 129
	Operator	go to state 106
	VariableSymbolOrSelf	go to state 118
	WordScoped	go to state 138
	SubExpression	go to state 117
	LoopLabel	go to state 120
	Operation	go to state 236
	Variable	go to state 114
	OPTIONAL-38	go to state 136
	ArrayDereference	go to state 134
	PAREN-37	go to state 113
	ArrayReference	go to state 94
	Conditional	go to state 123
	HashDereference	go to state 121
	Expression	go to state 105
	HashReference	go to state 100
	OperatorVoid	go to state 103
	VariableModification	go to state 98

State 147:

	SubroutineArguments -> LPAREN_MY Type . VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 54)

	VARIABLE_SYMBOL	shift, and go to state 237

State 148:

	Operator -> OP01_OPEN MY . TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 85)

	TYPE_FHREF	shift, and go to state 238

State 149:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 150:

	OPTIONAL-53 -> TypeInner .	(Rule 210)

	$default	reduce using rule 210 (OPTIONAL-53)

State 151:

	HashDereference -> '%{' OPTIONAL-53 . HashReference '}'	(Rule 213)

	LBRACE	shift, and go to state 111

	HashReference	go to state 239

State 152:

	HashDereference -> '%{' Variable . '}'	(Rule 212)

	'}'	shift, and go to state 240

State 153:

	TypeInner -> MY . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 220)

	TYPE_INTEGER	shift, and go to state 55
	WORD	shift, and go to state 57
	WORD_SCOPED	shift, and go to state 56

	Type	go to state 241

State 154:

	Statement -> VariableModification ';' .	(Rule 154)

	$default	reduce using rule 154 (Statement)

State 155:

	ListElement -> TypeInner . SubExpression	(Rule 191)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	Variable	go to state 157
	ArrayDereference	go to state 134
	Expression	go to state 163
	WordScoped	go to state 138
	SubExpression	go to state 242
	VariableSymbolOrSelf	go to state 118
	HashReference	go to state 100
	HashDereference	go to state 121
	Operator	go to state 106
	ArrayReference	go to state 94
	Literal	go to state 130

State 156:

	ListElements -> ListElement . STAR-46	(Rule 187)

	$default	reduce using rule 186 (STAR-46)

	STAR-46	go to state 243

State 157:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 88)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-36 ')'	(Rule 132)
	SubExpression -> Variable .	(Rule 137)

	OP02_METHOD_THINARROW	shift, and go to state 182
	OP03_MATH_INC_DEC	shift, and go to state 180

	')'	reduce using rule 137 (SubExpression)
	';'	reduce using rule 137 (SubExpression)
	']'	reduce using rule 137 (SubExpression)
	'}'	reduce using rule 137 (SubExpression)
	OP04_MATH_POW	reduce using rule 137 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 137 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 137 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 137 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 137 (SubExpression)
	OP08_STRING_CAT	reduce using rule 137 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 137 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 137 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 137 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 137 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 137 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 137 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 137 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 137 (SubExpression)
	OP18_TERNARY	reduce using rule 137 (SubExpression)
	OP21_LIST_COMMA	reduce using rule 137 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 137 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 137 (SubExpression)

State 158:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	ListElement -> SubExpression .	(Rule 190)

	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197
	OP14_BITWISE_OR_XOR	shift, and go to state 189
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 196
	OP17_LIST_RANGE	shift, and go to state 185
	OP18_TERNARY	shift, and go to state 188
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 199

	')'	reduce using rule 190 (ListElement)
	';'	reduce using rule 190 (ListElement)
	']'	reduce using rule 190 (ListElement)
	OP21_LIST_COMMA	reduce using rule 190 (ListElement)

State 159:

	Operator -> OP01_NAMED . SubExpression	(Rule 83)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	Literal	go to state 130
	ArrayReference	go to state 94
	Operator	go to state 106
	HashDereference	go to state 121
	HashReference	go to state 100
	Expression	go to state 163
	SubExpression	go to state 244
	WordScoped	go to state 138
	VariableSymbolOrSelf	go to state 118
	ArrayDereference	go to state 134
	Variable	go to state 157

State 160:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 129)

	LPAREN	shift, and go to state 184

State 161:

	ListElement -> OP01_QW . PLUS-47 ')'	(Rule 192)

	WORD	shift, and go to state 246

	PLUS-47	go to state 245

State 162:

	OPTIONAL-34 -> ListElements .	(Rule 114)

	$default	reduce using rule 114 (OPTIONAL-34)

State 163:

	SubExpression -> Expression .	(Rule 134)

	$default	reduce using rule 134 (SubExpression)

State 164:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-34 . ')' ';'	(Rule 119)

	')'	shift, and go to state 247

State 165:

	ArrayDereference -> '@{' Variable . '}'	(Rule 198)

	'}'	shift, and go to state 248

State 166:

	OPTIONAL-49 -> TypeInner .	(Rule 196)

	$default	reduce using rule 196 (OPTIONAL-49)

State 167:

	ArrayDereference -> '@{' OPTIONAL-49 . ArrayReference '}'	(Rule 199)

	LBRACKET	shift, and go to state 107

	ArrayReference	go to state 249

State 168:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> OP05_LOGICAL_NEG SubExpression .	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 191

	')'	reduce using rule 90 (Operator)
	';'	reduce using rule 90 (Operator)
	']'	reduce using rule 90 (Operator)
	'}'	reduce using rule 90 (Operator)
	OP06_REGEX_MATCH	reduce using rule 90 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 90 (Operator)
	OP07_STRING_REPEAT	reduce using rule 90 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 90 (Operator)
	OP08_STRING_CAT	reduce using rule 90 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 90 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 90 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 90 (Operator)
	OP13_BITWISE_AND	reduce using rule 90 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 90 (Operator)
	OP15_LOGICAL_AND	reduce using rule 90 (Operator)
	OP16_LOGICAL_OR	reduce using rule 90 (Operator)
	OP17_LIST_RANGE	reduce using rule 90 (Operator)
	OP18_TERNARY	reduce using rule 90 (Operator)
	OP21_LIST_COMMA	reduce using rule 90 (Operator)
	OP23_LOGICAL_AND	reduce using rule 90 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 90 (Operator)

State 169:

	Operation -> Expression ';' .	(Rule 80)

	$default	reduce using rule 80 (Operation)

State 170:

	ArrayReference -> LBRACKET OPTIONAL-48 . ']'	(Rule 195)

	']'	shift, and go to state 250

State 171:

	OPTIONAL-48 -> ListElements .	(Rule 193)

	$default	reduce using rule 193 (OPTIONAL-48)

State 172:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> OP05_MATH_NEG_LPAREN SubExpression . ')'	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	')'	shift, and go to state 251
	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197
	OP14_BITWISE_OR_XOR	shift, and go to state 189
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 196
	OP17_LIST_RANGE	shift, and go to state 185
	OP18_TERNARY	shift, and go to state 188
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 199

State 173:

	VariableOrLiteralOrWord -> Literal .	(Rule 227)

	$default	reduce using rule 227 (VariableOrLiteralOrWord)

State 174:

	HashEntry -> HashDereference .	(Rule 203)

	$default	reduce using rule 203 (HashEntry)

State 175:

	VariableOrLiteralOrWord -> WORD .	(Rule 228)

	$default	reduce using rule 228 (VariableOrLiteralOrWord)

State 176:

	VariableOrLiteralOrWord -> Variable .	(Rule 226)

	$default	reduce using rule 226 (VariableOrLiteralOrWord)

State 177:

	HashEntry -> VariableOrLiteralOrWord . OP20_HASH_FATARROW OPTIONAL-50 SubExpression	(Rule 202)

	OP20_HASH_FATARROW	shift, and go to state 252

State 178:

	HashReference -> LBRACE HashEntry . STAR-52 '}'	(Rule 208)

	$default	reduce using rule 207 (STAR-52)

	STAR-52	go to state 253

State 179:

	HashReference -> LBRACE '}' .	(Rule 209)

	$default	reduce using rule 209 (HashReference)

State 180:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 88)

	$default	reduce using rule 88 (Operator)

State 181:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . SubExpressionOrStdin	(Rule 182)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	STDIN	shift, and go to state 254
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	VariableSymbolOrSelf	go to state 118
	Expression	go to state 163
	SubExpression	go to state 256
	WordScoped	go to state 138
	SubExpressionOrStdin	go to state 255
	HashReference	go to state 100
	Variable	go to state 157
	ArrayDereference	go to state 134
	ArrayReference	go to state 94
	Literal	go to state 130
	HashDereference	go to state 121
	Operator	go to state 106

State 182:

	Expression -> Variable OP02_METHOD_THINARROW . LPAREN OPTIONAL-36 ')'	(Rule 132)

	LPAREN	shift, and go to state 257

State 183:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . SubExpression	(Rule 183)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	ArrayReference	go to state 94
	Literal	go to state 130
	HashDereference	go to state 121
	Operator	go to state 106
	SubExpression	go to state 258
	Expression	go to state 163
	VariableSymbolOrSelf	go to state 118
	WordScoped	go to state 138
	HashReference	go to state 100
	Variable	go to state 157
	ArrayDereference	go to state 134

State 184:

	Expression -> WORD_UPPERCASE LPAREN . ')'	(Rule 129)

	')'	shift, and go to state 259

State 185:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 106)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	ArrayDereference	go to state 134
	Variable	go to state 157
	HashReference	go to state 100
	VariableSymbolOrSelf	go to state 118
	Expression	go to state 163
	SubExpression	go to state 260
	WordScoped	go to state 138
	Operator	go to state 106
	HashDereference	go to state 121
	Literal	go to state 130
	ArrayReference	go to state 94

State 186:

	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD . SubExpression	(Rule 94)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	ArrayDereference	go to state 134
	Variable	go to state 157
	HashReference	go to state 100
	WordScoped	go to state 138
	SubExpression	go to state 261
	VariableSymbolOrSelf	go to state 118
	Expression	go to state 163
	Operator	go to state 106
	HashDereference	go to state 121
	Literal	go to state 130
	ArrayReference	go to state 94

State 187:

	Operator -> SubExpression OP11_COMPARE_LT_GT . SubExpression	(Rule 100)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	Operator	go to state 106
	HashDereference	go to state 121
	Literal	go to state 130
	ArrayReference	go to state 94
	ArrayDereference	go to state 134
	Variable	go to state 157
	HashReference	go to state 100
	WordScoped	go to state 138
	VariableSymbolOrSelf	go to state 118
	SubExpression	go to state 262
	Expression	go to state 163

State 188:

	Operator -> SubExpression OP18_TERNARY . VariableOrLiteral COLON VariableOrLiteral	(Rule 107)

	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108

	VariableOrLiteral	go to state 265
	Variable	go to state 264
	Literal	go to state 263
	VariableSymbolOrSelf	go to state 118

State 189:

	Operator -> SubExpression OP14_BITWISE_OR_XOR . SubExpression	(Rule 103)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	Literal	go to state 130
	ArrayReference	go to state 94
	Operator	go to state 106
	HashDereference	go to state 121
	HashReference	go to state 100
	SubExpression	go to state 266
	Expression	go to state 163
	VariableSymbolOrSelf	go to state 118
	WordScoped	go to state 138
	ArrayDereference	go to state 134
	Variable	go to state 157

State 190:

	Operator -> SubExpression OP12_COMPARE_EQ_NE . SubExpression	(Rule 101)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	HashReference	go to state 100
	VariableSymbolOrSelf	go to state 118
	SubExpression	go to state 267
	Expression	go to state 163
	WordScoped	go to state 138
	ArrayDereference	go to state 134
	Variable	go to state 157
	Literal	go to state 130
	ArrayReference	go to state 94
	Operator	go to state 106
	HashDereference	go to state 121

State 191:

	Operator -> SubExpression OP04_MATH_POW . SubExpression	(Rule 89)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	ArrayDereference	go to state 134
	Variable	go to state 157
	HashReference	go to state 100
	WordScoped	go to state 138
	SubExpression	go to state 268
	VariableSymbolOrSelf	go to state 118
	Expression	go to state 163
	Operator	go to state 106
	HashDereference	go to state 121
	Literal	go to state 130
	ArrayReference	go to state 94

State 192:

	Operator -> SubExpression OP08_MATH_ADD_SUB . SubExpression	(Rule 95)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	HashReference	go to state 100
	Expression	go to state 163
	VariableSymbolOrSelf	go to state 118
	SubExpression	go to state 269
	WordScoped	go to state 138
	ArrayDereference	go to state 134
	Variable	go to state 157
	Literal	go to state 130
	ArrayReference	go to state 94
	Operator	go to state 106
	HashDereference	go to state 121

State 193:

	Operator -> SubExpression OP08_STRING_CAT . SubExpression	(Rule 96)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	Operator	go to state 106
	HashDereference	go to state 121
	Literal	go to state 130
	ArrayReference	go to state 94
	ArrayDereference	go to state 134
	Variable	go to state 157
	HashReference	go to state 100
	WordScoped	go to state 138
	Expression	go to state 163
	SubExpression	go to state 270
	VariableSymbolOrSelf	go to state 118

State 194:

	Operator -> SubExpression OP06_REGEX_MATCH . OP06_REGEX_PATTERN	(Rule 92)

	OP06_REGEX_PATTERN	shift, and go to state 271

State 195:

	Operator -> SubExpression OP15_LOGICAL_AND . SubExpression	(Rule 104)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	Variable	go to state 157
	ArrayDereference	go to state 134
	SubExpression	go to state 272
	Expression	go to state 163
	VariableSymbolOrSelf	go to state 118
	WordScoped	go to state 138
	HashReference	go to state 100
	HashDereference	go to state 121
	Operator	go to state 106
	ArrayReference	go to state 94
	Literal	go to state 130

State 196:

	Operator -> SubExpression OP16_LOGICAL_OR . SubExpression	(Rule 105)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	VariableSymbolOrSelf	go to state 118
	WordScoped	go to state 138
	SubExpression	go to state 273
	Expression	go to state 163
	HashReference	go to state 100
	Variable	go to state 157
	ArrayDereference	go to state 134
	ArrayReference	go to state 94
	Literal	go to state 130
	HashDereference	go to state 121
	Operator	go to state 106

State 197:

	Operator -> SubExpression OP13_BITWISE_AND . SubExpression	(Rule 102)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	Expression	go to state 163
	SubExpression	go to state 274
	VariableSymbolOrSelf	go to state 118
	WordScoped	go to state 138
	HashReference	go to state 100
	Variable	go to state 157
	ArrayDereference	go to state 134
	ArrayReference	go to state 94
	Literal	go to state 130
	HashDereference	go to state 121
	Operator	go to state 106

State 198:

	Operator -> SubExpression OP09_BITWISE_SHIFT . SubExpression	(Rule 97)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	HashDereference	go to state 121
	Operator	go to state 106
	ArrayReference	go to state 94
	Literal	go to state 130
	Variable	go to state 157
	ArrayDereference	go to state 134
	Expression	go to state 163
	WordScoped	go to state 138
	VariableSymbolOrSelf	go to state 118
	SubExpression	go to state 275
	HashReference	go to state 100

State 199:

	Operator -> SubExpression OP24_LOGICAL_OR_XOR . SubExpression	(Rule 110)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	ArrayDereference	go to state 134
	Variable	go to state 157
	HashReference	go to state 100
	SubExpression	go to state 276
	Expression	go to state 163
	VariableSymbolOrSelf	go to state 118
	WordScoped	go to state 138
	Operator	go to state 106
	HashDereference	go to state 121
	Literal	go to state 130
	ArrayReference	go to state 94

State 200:

	Operator -> SubExpression OP23_LOGICAL_AND . SubExpression	(Rule 109)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	HashReference	go to state 100
	Expression	go to state 163
	SubExpression	go to state 277
	VariableSymbolOrSelf	go to state 118
	WordScoped	go to state 138
	ArrayDereference	go to state 134
	Variable	go to state 157
	Literal	go to state 130
	ArrayReference	go to state 94
	Operator	go to state 106
	HashDereference	go to state 121

State 201:

	Operator -> SubExpression OP07_STRING_REPEAT . SubExpression	(Rule 93)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	ArrayReference	go to state 94
	Literal	go to state 130
	HashDereference	go to state 121
	Operator	go to state 106
	SubExpression	go to state 278
	VariableSymbolOrSelf	go to state 118
	WordScoped	go to state 138
	Expression	go to state 163
	HashReference	go to state 100
	Variable	go to state 157
	ArrayDereference	go to state 134

State 202:

	STAR-44 -> STAR-44 . VariableRetrieval	(Rule 172)
	Variable -> VariableSymbolOrSelf STAR-44 .	(Rule 174)

	OP02_ARRAY_THINARROW	shift, and go to state 280
	OP02_HASH_THINARROW	shift, and go to state 281

	')'	reduce using rule 174 (Variable)
	';'	reduce using rule 174 (Variable)
	']'	reduce using rule 174 (Variable)
	'}'	reduce using rule 174 (Variable)
	COLON	reduce using rule 174 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 174 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 174 (Variable)
	OP04_MATH_POW	reduce using rule 174 (Variable)
	OP06_REGEX_MATCH	reduce using rule 174 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 174 (Variable)
	OP07_STRING_REPEAT	reduce using rule 174 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 174 (Variable)
	OP08_STRING_CAT	reduce using rule 174 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 174 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 174 (Variable)
	OP12_COMPARE_EQ_NE	reduce using rule 174 (Variable)
	OP13_BITWISE_AND	reduce using rule 174 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 174 (Variable)
	OP15_LOGICAL_AND	reduce using rule 174 (Variable)
	OP16_LOGICAL_OR	reduce using rule 174 (Variable)
	OP17_LIST_RANGE	reduce using rule 174 (Variable)
	OP18_TERNARY	reduce using rule 174 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 174 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 174 (Variable)
	OP20_HASH_FATARROW	reduce using rule 174 (Variable)
	OP21_LIST_COMMA	reduce using rule 174 (Variable)
	OP23_LOGICAL_AND	reduce using rule 174 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 174 (Variable)

	VariableRetrieval	go to state 279

State 203:

	Operator -> OP01_NAMED SubExpression .	(Rule 83)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	ListElement -> SubExpression .	(Rule 190)

	')'	reduce using rule 83 (Operator)
	';'	reduce using rule 83 (Operator)
	OP04_MATH_POW	reduce using rule 83 (Operator)
	OP06_REGEX_MATCH	reduce using rule 83 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 83 (Operator)
	OP07_STRING_REPEAT	reduce using rule 83 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 83 (Operator)
	OP08_STRING_CAT	reduce using rule 83 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 83 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 83 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 83 (Operator)
	OP13_BITWISE_AND	reduce using rule 83 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 83 (Operator)
	OP15_LOGICAL_AND	reduce using rule 83 (Operator)
	OP16_LOGICAL_OR	reduce using rule 83 (Operator)
	OP17_LIST_RANGE	reduce using rule 83 (Operator)
	OP18_TERNARY	reduce using rule 83 (Operator)
	OP21_LIST_COMMA	reduce using rule 190 (ListElement)
	OP23_LOGICAL_AND	reduce using rule 83 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 83 (Operator)

State 204:

	OperatorVoid -> OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ';'	(Rule 121)

	OP21_LIST_COMMA	shift, and go to state 282

State 205:

	PAREN-37 -> LoopLabel COLON .	(Rule 147)

	$default	reduce using rule 147 (PAREN-37)

State 206:

	Operator -> OP01_NAMED . SubExpression	(Rule 83)
	Operator -> LPAREN OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ')'	(Rule 84)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	MY	shift, and go to state 153
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP01_QW	shift, and go to state 161
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	Literal	go to state 130
	ListElement	go to state 283
	ArrayReference	go to state 94
	Operator	go to state 106
	TypeInner	go to state 155
	HashDereference	go to state 121
	HashReference	go to state 100
	SubExpression	go to state 203
	VariableSymbolOrSelf	go to state 118
	Expression	go to state 163
	WordScoped	go to state 138
	ArrayDereference	go to state 134
	Variable	go to state 157

State 207:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	SubExpression -> LPAREN SubExpression . ')'	(Rule 142)

	')'	shift, and go to state 284
	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197
	OP14_BITWISE_OR_XOR	shift, and go to state 189
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 196
	OP17_LIST_RANGE	shift, and go to state 185
	OP18_TERNARY	shift, and go to state 188
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 199

State 208:

	Operator -> LPAREN OP01_PRINT . FHREF_SYMBOL_BRACES ListElements ')'	(Rule 82)

	FHREF_SYMBOL_BRACES	shift, and go to state 285

State 209:

	Operator -> OP01_CLOSE FHREF_SYMBOL .	(Rule 86)

	$default	reduce using rule 86 (Operator)

State 210:

	LoopLabel -> WORD_UPPERCASE .	(Rule 216)

	$default	reduce using rule 216 (LoopLabel)

State 211:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 123)

	';'	shift, and go to state 286

State 212:

	OperatorVoid -> OP01_NAMED_VOID ListElements . ';'	(Rule 120)

	';'	shift, and go to state 287

State 213:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 87)

	$default	reduce using rule 87 (Operator)

State 214:

	Conditional -> 'if' LPAREN . SubExpression ')' CodeBlock STAR-40 OPTIONAL-42	(Rule 161)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	SubExpression	go to state 288
	Expression	go to state 163
	VariableSymbolOrSelf	go to state 118
	WordScoped	go to state 138
	HashReference	go to state 100
	Variable	go to state 157
	ArrayDereference	go to state 134
	ArrayReference	go to state 94
	Literal	go to state 130
	HashDereference	go to state 121
	Operator	go to state 106

State 215:

	VariableDeclaration -> MY TYPE_FHREF . FHREF_SYMBOL ';'	(Rule 181)

	FHREF_SYMBOL	shift, and go to state 289

State 216:

	VariableDeclaration -> MY Type . VARIABLE_SYMBOL ';'	(Rule 178)
	VariableDeclaration -> MY Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 179)
	VariableDeclaration -> MY Type . VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 180)

	VARIABLE_SYMBOL	shift, and go to state 290

State 217:

	LoopFor -> 'for' . MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 165)
	LoopFor -> 'for' . LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpression ';' VARIABLE_SYMBOL OP11_COMPARE_LT_GT SubExpression ';' SubExpressionOrVarMod ')' CodeBlock	(Rule 166)

	LPAREN_MY	shift, and go to state 292
	MY	shift, and go to state 291

State 218:

	Loop -> LoopForEach .	(Rule 163)

	$default	reduce using rule 163 (Loop)

State 219:

	Statement -> OPTIONAL-38 Loop .	(Rule 151)

	$default	reduce using rule 151 (Statement)

State 220:

	LoopWhile -> 'while' . LPAREN SubExpression ')' CodeBlock	(Rule 168)

	LPAREN	shift, and go to state 293

State 221:

	Loop -> LoopWhile .	(Rule 164)

	$default	reduce using rule 164 (Loop)

State 222:

	Loop -> LoopFor .	(Rule 162)

	$default	reduce using rule 162 (Loop)

State 223:

	LoopForEach -> 'foreach' . MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 167)

	MY	shift, and go to state 294

State 224:

	OperatorVoid -> OP01_PRINT OPTIONAL-33 . ListElements ';'	(Rule 116)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	MY	shift, and go to state 153
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP01_QW	shift, and go to state 161
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	ArrayDereference	go to state 134
	ListElements	go to state 295
	Variable	go to state 157
	HashReference	go to state 100
	Expression	go to state 163
	SubExpression	go to state 158
	WordScoped	go to state 138
	VariableSymbolOrSelf	go to state 118
	Operator	go to state 106
	TypeInner	go to state 155
	HashDereference	go to state 121
	Literal	go to state 130
	ListElement	go to state 156
	ArrayReference	go to state 94

State 225:

	PAREN-32 -> STDOUT_STDERR .	(Rule 111)

	$default	reduce using rule 111 (PAREN-32)

State 226:

	OPTIONAL-33 -> PAREN-32 .	(Rule 112)

	$default	reduce using rule 112 (OPTIONAL-33)

State 227:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES . ListElements ';'	(Rule 117)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	MY	shift, and go to state 153
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP01_QW	shift, and go to state 161
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	ListElements	go to state 296
	Variable	go to state 157
	ArrayDereference	go to state 134
	Expression	go to state 163
	WordScoped	go to state 138
	SubExpression	go to state 158
	VariableSymbolOrSelf	go to state 118
	HashReference	go to state 100
	HashDereference	go to state 121
	TypeInner	go to state 155
	Operator	go to state 106
	ListElement	go to state 156
	ArrayReference	go to state 94
	Literal	go to state 130

State 228:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW . ')'	(Rule 133)

	')'	shift, and go to state 297

State 229:

	Expression -> WordScoped LPAREN . OPTIONAL-35 ')'	(Rule 131)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	MY	shift, and go to state 153
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP01_QW	shift, and go to state 161
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	')'	reduce using rule 125 (OPTIONAL-35)

	Operator	go to state 106
	HashDereference	go to state 121
	TypeInner	go to state 155
	Literal	go to state 130
	ArrayReference	go to state 94
	ListElement	go to state 156
	ArrayDereference	go to state 134
	OPTIONAL-35	go to state 299
	Variable	go to state 157
	ListElements	go to state 298
	HashReference	go to state 100
	WordScoped	go to state 138
	VariableSymbolOrSelf	go to state 118
	Expression	go to state 163
	SubExpression	go to state 158

State 230:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> OP22_LOGICAL_NEG SubExpression .	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197
	OP14_BITWISE_OR_XOR	shift, and go to state 189
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 196
	OP17_LIST_RANGE	shift, and go to state 185
	OP18_TERNARY	shift, and go to state 188

	')'	reduce using rule 108 (Operator)
	';'	reduce using rule 108 (Operator)
	']'	reduce using rule 108 (Operator)
	'}'	reduce using rule 108 (Operator)
	OP21_LIST_COMMA	reduce using rule 108 (Operator)
	OP23_LOGICAL_AND	reduce using rule 108 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 108 (Operator)

State 231:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> OP10_NAMED_UNARY SubExpression .	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198

	')'	reduce using rule 98 (Operator)
	';'	reduce using rule 98 (Operator)
	']'	reduce using rule 98 (Operator)
	'}'	reduce using rule 98 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 98 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 98 (Operator)
	OP13_BITWISE_AND	reduce using rule 98 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 98 (Operator)
	OP15_LOGICAL_AND	reduce using rule 98 (Operator)
	OP16_LOGICAL_OR	reduce using rule 98 (Operator)
	OP17_LIST_RANGE	reduce using rule 98 (Operator)
	OP18_TERNARY	reduce using rule 98 (Operator)
	OP21_LIST_COMMA	reduce using rule 98 (Operator)
	OP23_LOGICAL_AND	reduce using rule 98 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 98 (Operator)

State 232:

	STAR-25 -> STAR-25 . MethodOrSubroutine	(Rule 61)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 STAR-23 STAR-24 Properties STAR-25 . LITERAL_NUMBER ';'	(Rule 63)

	'our'	shift, and go to state 300
	LITERAL_NUMBER	shift, and go to state 303

	Method	go to state 301
	MethodOrSubroutine	go to state 302
	Subroutine	go to state 304

State 233:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN . LBRACE HashEntryProperties STAR-27 '}' ';'	(Rule 67)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN . LBRACE '}' ';'	(Rule 68)

	LBRACE	shift, and go to state 305

State 234:

	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE . OP19_VARIABLE_ASSIGN	(Rule 223)

	OP19_VARIABLE_ASSIGN	shift, and go to state 306

State 235:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 STAR-19 '}' . ';'	(Rule 50)

	';'	shift, and go to state 307

State 236:

	STAR-19 -> STAR-19 Operation .	(Rule 48)

	$default	reduce using rule 48 (STAR-19)

State 237:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL . STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 54)

	$default	reduce using rule 53 (STAR-21)

	STAR-21	go to state 308

State 238:

	Operator -> OP01_OPEN MY TYPE_FHREF . FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 85)

	FHREF_SYMBOL	shift, and go to state 309

State 239:

	HashDereference -> '%{' OPTIONAL-53 HashReference . '}'	(Rule 213)

	'}'	shift, and go to state 310

State 240:

	HashDereference -> '%{' Variable '}' .	(Rule 212)

	$default	reduce using rule 212 (HashDereference)

State 241:

	TypeInner -> MY Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 220)

	'$TYPED_'	shift, and go to state 311

State 242:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	ListElement -> TypeInner SubExpression .	(Rule 191)

	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197
	OP14_BITWISE_OR_XOR	shift, and go to state 189
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 196
	OP17_LIST_RANGE	shift, and go to state 185
	OP18_TERNARY	shift, and go to state 188
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 199

	')'	reduce using rule 191 (ListElement)
	';'	reduce using rule 191 (ListElement)
	']'	reduce using rule 191 (ListElement)
	OP21_LIST_COMMA	reduce using rule 191 (ListElement)

State 243:

	STAR-46 -> STAR-46 . PAREN-45	(Rule 185)
	ListElements -> ListElement STAR-46 .	(Rule 187)

	OP21_LIST_COMMA	shift, and go to state 313

	')'	reduce using rule 187 (ListElements)
	';'	reduce using rule 187 (ListElements)
	']'	reduce using rule 187 (ListElements)

	PAREN-45	go to state 312

State 244:

	Operator -> OP01_NAMED SubExpression .	(Rule 83)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	')'	reduce using rule 83 (Operator)
	';'	reduce using rule 83 (Operator)
	']'	reduce using rule 83 (Operator)
	'}'	reduce using rule 83 (Operator)
	OP04_MATH_POW	reduce using rule 83 (Operator)
	OP06_REGEX_MATCH	reduce using rule 83 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 83 (Operator)
	OP07_STRING_REPEAT	reduce using rule 83 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 83 (Operator)
	OP08_STRING_CAT	reduce using rule 83 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 83 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 83 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 83 (Operator)
	OP13_BITWISE_AND	reduce using rule 83 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 83 (Operator)
	OP15_LOGICAL_AND	reduce using rule 83 (Operator)
	OP16_LOGICAL_OR	reduce using rule 83 (Operator)
	OP17_LIST_RANGE	reduce using rule 83 (Operator)
	OP18_TERNARY	reduce using rule 83 (Operator)
	OP21_LIST_COMMA	reduce using rule 83 (Operator)
	OP23_LOGICAL_AND	reduce using rule 83 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 83 (Operator)

State 245:

	PLUS-47 -> PLUS-47 . WORD	(Rule 188)
	ListElement -> OP01_QW PLUS-47 . ')'	(Rule 192)

	')'	shift, and go to state 314
	WORD	shift, and go to state 315

State 246:

	PLUS-47 -> WORD .	(Rule 189)

	$default	reduce using rule 189 (PLUS-47)

State 247:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-34 ')' . ';'	(Rule 119)

	';'	shift, and go to state 316

State 248:

	ArrayDereference -> '@{' Variable '}' .	(Rule 198)

	$default	reduce using rule 198 (ArrayDereference)

State 249:

	ArrayDereference -> '@{' OPTIONAL-49 ArrayReference . '}'	(Rule 199)

	'}'	shift, and go to state 317

State 250:

	ArrayReference -> LBRACKET OPTIONAL-48 ']' .	(Rule 195)

	$default	reduce using rule 195 (ArrayReference)

State 251:

	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')' .	(Rule 91)

	$default	reduce using rule 91 (Operator)

State 252:

	HashEntry -> VariableOrLiteralOrWord OP20_HASH_FATARROW . OPTIONAL-50 SubExpression	(Rule 202)

	MY	shift, and go to state 153

	'%{'	reduce using rule 201 (OPTIONAL-50)
	'@{'	reduce using rule 201 (OPTIONAL-50)
	'undef'	reduce using rule 201 (OPTIONAL-50)
	CONSTANT_CALL_SCOPED	reduce using rule 201 (OPTIONAL-50)
	LBRACE	reduce using rule 201 (OPTIONAL-50)
	LBRACKET	reduce using rule 201 (OPTIONAL-50)
	LITERAL_NUMBER	reduce using rule 201 (OPTIONAL-50)
	LITERAL_STRING	reduce using rule 201 (OPTIONAL-50)
	LPAREN	reduce using rule 201 (OPTIONAL-50)
	OP01_CLOSE	reduce using rule 201 (OPTIONAL-50)
	OP01_NAMED	reduce using rule 201 (OPTIONAL-50)
	OP01_OPEN	reduce using rule 201 (OPTIONAL-50)
	OP03_MATH_INC_DEC	reduce using rule 201 (OPTIONAL-50)
	OP05_LOGICAL_NEG	reduce using rule 201 (OPTIONAL-50)
	OP05_MATH_NEG_LPAREN	reduce using rule 201 (OPTIONAL-50)
	OP10_NAMED_UNARY	reduce using rule 201 (OPTIONAL-50)
	OP22_LOGICAL_NEG	reduce using rule 201 (OPTIONAL-50)
	SELF	reduce using rule 201 (OPTIONAL-50)
	VARIABLE_SYMBOL	reduce using rule 201 (OPTIONAL-50)
	WORD	reduce using rule 201 (OPTIONAL-50)
	WORD_SCOPED	reduce using rule 201 (OPTIONAL-50)
	WORD_UPPERCASE	reduce using rule 201 (OPTIONAL-50)

	OPTIONAL-50	go to state 319
	TypeInner	go to state 318

State 253:

	STAR-52 -> STAR-52 . PAREN-51	(Rule 206)
	HashReference -> LBRACE HashEntry STAR-52 . '}'	(Rule 208)

	'}'	shift, and go to state 322
	OP21_LIST_COMMA	shift, and go to state 321

	PAREN-51	go to state 320

State 254:

	SubExpressionOrStdin -> STDIN .	(Rule 144)

	$default	reduce using rule 144 (SubExpressionOrStdin)

State 255:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin .	(Rule 182)

	$default	reduce using rule 182 (VariableModification)

State 256:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	SubExpressionOrStdin -> SubExpression .	(Rule 143)

	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197
	OP14_BITWISE_OR_XOR	shift, and go to state 189
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 196
	OP17_LIST_RANGE	shift, and go to state 185
	OP18_TERNARY	shift, and go to state 188
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 199

	')'	reduce using rule 143 (SubExpressionOrStdin)
	';'	reduce using rule 143 (SubExpressionOrStdin)

State 257:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN . OPTIONAL-36 ')'	(Rule 132)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	MY	shift, and go to state 153
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP01_QW	shift, and go to state 161
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	')'	reduce using rule 127 (OPTIONAL-36)

	Literal	go to state 130
	ListElement	go to state 156
	ArrayReference	go to state 94
	Operator	go to state 106
	HashDereference	go to state 121
	TypeInner	go to state 155
	OPTIONAL-36	go to state 323
	HashReference	go to state 100
	Expression	go to state 163
	SubExpression	go to state 158
	WordScoped	go to state 138
	VariableSymbolOrSelf	go to state 118
	ArrayDereference	go to state 134
	ListElements	go to state 324
	Variable	go to state 157

State 258:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression .	(Rule 183)

	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197
	OP14_BITWISE_OR_XOR	shift, and go to state 189
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 196
	OP17_LIST_RANGE	shift, and go to state 185
	OP18_TERNARY	shift, and go to state 188
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 199

	')'	reduce using rule 183 (VariableModification)
	';'	reduce using rule 183 (VariableModification)

State 259:

	Expression -> WORD_UPPERCASE LPAREN ')' .	(Rule 129)

	$default	reduce using rule 129 (Expression)

State 260:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197
	OP14_BITWISE_OR_XOR	shift, and go to state 189
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 196

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 261:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression .	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_STRING_REPEAT	shift, and go to state 201

	')'	reduce using rule 94 (Operator)
	';'	reduce using rule 94 (Operator)
	']'	reduce using rule 94 (Operator)
	'}'	reduce using rule 94 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 94 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 94 (Operator)
	OP08_STRING_CAT	reduce using rule 94 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 94 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 94 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 94 (Operator)
	OP13_BITWISE_AND	reduce using rule 94 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 94 (Operator)
	OP15_LOGICAL_AND	reduce using rule 94 (Operator)
	OP16_LOGICAL_OR	reduce using rule 94 (Operator)
	OP17_LIST_RANGE	reduce using rule 94 (Operator)
	OP18_TERNARY	reduce using rule 94 (Operator)
	OP21_LIST_COMMA	reduce using rule 94 (Operator)
	OP23_LOGICAL_AND	reduce using rule 94 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 94 (Operator)

State 262:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression .	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 100 (Operator)
	';'	reduce using rule 100 (Operator)
	']'	reduce using rule 100 (Operator)
	'}'	reduce using rule 100 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 100 (Operator)
	OP13_BITWISE_AND	reduce using rule 100 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 100 (Operator)
	OP15_LOGICAL_AND	reduce using rule 100 (Operator)
	OP16_LOGICAL_OR	reduce using rule 100 (Operator)
	OP17_LIST_RANGE	reduce using rule 100 (Operator)
	OP18_TERNARY	reduce using rule 100 (Operator)
	OP21_LIST_COMMA	reduce using rule 100 (Operator)
	OP23_LOGICAL_AND	reduce using rule 100 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 100 (Operator)

State 263:

	VariableOrLiteral -> Literal .	(Rule 225)

	$default	reduce using rule 225 (VariableOrLiteral)

State 264:

	VariableOrLiteral -> Variable .	(Rule 224)

	$default	reduce using rule 224 (VariableOrLiteral)

State 265:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral . COLON VariableOrLiteral	(Rule 107)

	COLON	shift, and go to state 325

State 266:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression .	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197

	')'	reduce using rule 103 (Operator)
	';'	reduce using rule 103 (Operator)
	']'	reduce using rule 103 (Operator)
	'}'	reduce using rule 103 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 103 (Operator)
	OP15_LOGICAL_AND	reduce using rule 103 (Operator)
	OP16_LOGICAL_OR	reduce using rule 103 (Operator)
	OP17_LIST_RANGE	reduce using rule 103 (Operator)
	OP18_TERNARY	reduce using rule 103 (Operator)
	OP21_LIST_COMMA	reduce using rule 103 (Operator)
	OP23_LOGICAL_AND	reduce using rule 103 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 103 (Operator)

State 267:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression .	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187

	OP12_COMPARE_EQ_NE	error (nonassociative)

	')'	reduce using rule 101 (Operator)
	';'	reduce using rule 101 (Operator)
	']'	reduce using rule 101 (Operator)
	'}'	reduce using rule 101 (Operator)
	OP13_BITWISE_AND	reduce using rule 101 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 101 (Operator)
	OP15_LOGICAL_AND	reduce using rule 101 (Operator)
	OP16_LOGICAL_OR	reduce using rule 101 (Operator)
	OP17_LIST_RANGE	reduce using rule 101 (Operator)
	OP18_TERNARY	reduce using rule 101 (Operator)
	OP21_LIST_COMMA	reduce using rule 101 (Operator)
	OP23_LOGICAL_AND	reduce using rule 101 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 101 (Operator)

State 268:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression OP04_MATH_POW SubExpression .	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 191

	')'	reduce using rule 89 (Operator)
	';'	reduce using rule 89 (Operator)
	']'	reduce using rule 89 (Operator)
	'}'	reduce using rule 89 (Operator)
	OP06_REGEX_MATCH	reduce using rule 89 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 89 (Operator)
	OP07_STRING_REPEAT	reduce using rule 89 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 89 (Operator)
	OP08_STRING_CAT	reduce using rule 89 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 89 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 89 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 89 (Operator)
	OP13_BITWISE_AND	reduce using rule 89 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 89 (Operator)
	OP15_LOGICAL_AND	reduce using rule 89 (Operator)
	OP16_LOGICAL_OR	reduce using rule 89 (Operator)
	OP17_LIST_RANGE	reduce using rule 89 (Operator)
	OP18_TERNARY	reduce using rule 89 (Operator)
	OP21_LIST_COMMA	reduce using rule 89 (Operator)
	OP23_LOGICAL_AND	reduce using rule 89 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 89 (Operator)

State 269:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression .	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201

	')'	reduce using rule 95 (Operator)
	';'	reduce using rule 95 (Operator)
	']'	reduce using rule 95 (Operator)
	'}'	reduce using rule 95 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 95 (Operator)
	OP08_STRING_CAT	reduce using rule 95 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 95 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 95 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 95 (Operator)
	OP13_BITWISE_AND	reduce using rule 95 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 95 (Operator)
	OP15_LOGICAL_AND	reduce using rule 95 (Operator)
	OP16_LOGICAL_OR	reduce using rule 95 (Operator)
	OP17_LIST_RANGE	reduce using rule 95 (Operator)
	OP18_TERNARY	reduce using rule 95 (Operator)
	OP21_LIST_COMMA	reduce using rule 95 (Operator)
	OP23_LOGICAL_AND	reduce using rule 95 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 95 (Operator)

State 270:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression OP08_STRING_CAT SubExpression .	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192

	')'	reduce using rule 96 (Operator)
	';'	reduce using rule 96 (Operator)
	']'	reduce using rule 96 (Operator)
	'}'	reduce using rule 96 (Operator)
	OP08_STRING_CAT	reduce using rule 96 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 96 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 96 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 96 (Operator)
	OP13_BITWISE_AND	reduce using rule 96 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 96 (Operator)
	OP15_LOGICAL_AND	reduce using rule 96 (Operator)
	OP16_LOGICAL_OR	reduce using rule 96 (Operator)
	OP17_LIST_RANGE	reduce using rule 96 (Operator)
	OP18_TERNARY	reduce using rule 96 (Operator)
	OP21_LIST_COMMA	reduce using rule 96 (Operator)
	OP23_LOGICAL_AND	reduce using rule 96 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 96 (Operator)

State 271:

	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN .	(Rule 92)

	$default	reduce using rule 92 (Operator)

State 272:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression OP15_LOGICAL_AND SubExpression .	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197
	OP14_BITWISE_OR_XOR	shift, and go to state 189

	')'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP15_LOGICAL_AND	reduce using rule 104 (Operator)
	OP16_LOGICAL_OR	reduce using rule 104 (Operator)
	OP17_LIST_RANGE	reduce using rule 104 (Operator)
	OP18_TERNARY	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 273:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression OP16_LOGICAL_OR SubExpression .	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197
	OP14_BITWISE_OR_XOR	shift, and go to state 189
	OP15_LOGICAL_AND	shift, and go to state 195

	')'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 274:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression OP13_BITWISE_AND SubExpression .	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190

	')'	reduce using rule 102 (Operator)
	';'	reduce using rule 102 (Operator)
	']'	reduce using rule 102 (Operator)
	'}'	reduce using rule 102 (Operator)
	OP13_BITWISE_AND	reduce using rule 102 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 102 (Operator)
	OP15_LOGICAL_AND	reduce using rule 102 (Operator)
	OP16_LOGICAL_OR	reduce using rule 102 (Operator)
	OP17_LIST_RANGE	reduce using rule 102 (Operator)
	OP18_TERNARY	reduce using rule 102 (Operator)
	OP21_LIST_COMMA	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 275:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression .	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193

	')'	reduce using rule 97 (Operator)
	';'	reduce using rule 97 (Operator)
	']'	reduce using rule 97 (Operator)
	'}'	reduce using rule 97 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 97 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 97 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 97 (Operator)
	OP13_BITWISE_AND	reduce using rule 97 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 97 (Operator)
	OP15_LOGICAL_AND	reduce using rule 97 (Operator)
	OP16_LOGICAL_OR	reduce using rule 97 (Operator)
	OP17_LIST_RANGE	reduce using rule 97 (Operator)
	OP18_TERNARY	reduce using rule 97 (Operator)
	OP21_LIST_COMMA	reduce using rule 97 (Operator)
	OP23_LOGICAL_AND	reduce using rule 97 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 97 (Operator)

State 276:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression .	(Rule 110)

	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197
	OP14_BITWISE_OR_XOR	shift, and go to state 189
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 196
	OP17_LIST_RANGE	shift, and go to state 185
	OP18_TERNARY	shift, and go to state 188
	OP23_LOGICAL_AND	shift, and go to state 200

	')'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 277:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression OP23_LOGICAL_AND SubExpression .	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197
	OP14_BITWISE_OR_XOR	shift, and go to state 189
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 196
	OP17_LIST_RANGE	shift, and go to state 185
	OP18_TERNARY	shift, and go to state 188

	')'	reduce using rule 109 (Operator)
	';'	reduce using rule 109 (Operator)
	']'	reduce using rule 109 (Operator)
	'}'	reduce using rule 109 (Operator)
	OP21_LIST_COMMA	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 278:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression OP07_STRING_REPEAT SubExpression .	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194

	')'	reduce using rule 93 (Operator)
	';'	reduce using rule 93 (Operator)
	']'	reduce using rule 93 (Operator)
	'}'	reduce using rule 93 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 93 (Operator)
	OP07_STRING_REPEAT	reduce using rule 93 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 93 (Operator)
	OP08_STRING_CAT	reduce using rule 93 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 93 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 93 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 93 (Operator)
	OP13_BITWISE_AND	reduce using rule 93 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 93 (Operator)
	OP15_LOGICAL_AND	reduce using rule 93 (Operator)
	OP16_LOGICAL_OR	reduce using rule 93 (Operator)
	OP17_LIST_RANGE	reduce using rule 93 (Operator)
	OP18_TERNARY	reduce using rule 93 (Operator)
	OP21_LIST_COMMA	reduce using rule 93 (Operator)
	OP23_LOGICAL_AND	reduce using rule 93 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 93 (Operator)

State 279:

	STAR-44 -> STAR-44 VariableRetrieval .	(Rule 172)

	$default	reduce using rule 172 (STAR-44)

State 280:

	VariableRetrieval -> OP02_ARRAY_THINARROW . SubExpression ']'	(Rule 175)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	Literal	go to state 130
	ArrayReference	go to state 94
	Operator	go to state 106
	HashDereference	go to state 121
	HashReference	go to state 100
	SubExpression	go to state 326
	Expression	go to state 163
	VariableSymbolOrSelf	go to state 118
	WordScoped	go to state 138
	ArrayDereference	go to state 134
	Variable	go to state 157

State 281:

	VariableRetrieval -> OP02_HASH_THINARROW . SubExpression '}'	(Rule 176)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 177)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 327
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	HashReference	go to state 100
	Expression	go to state 163
	WordScoped	go to state 138
	SubExpression	go to state 328
	VariableSymbolOrSelf	go to state 118
	ArrayDereference	go to state 134
	Variable	go to state 157
	Literal	go to state 130
	ArrayReference	go to state 94
	Operator	go to state 106
	HashDereference	go to state 121

State 282:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ';'	(Rule 121)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	MY	shift, and go to state 153
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP01_QW	shift, and go to state 161
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	ArrayDereference	go to state 134
	ListElements	go to state 329
	Variable	go to state 157
	HashReference	go to state 100
	WordScoped	go to state 138
	SubExpression	go to state 158
	VariableSymbolOrSelf	go to state 118
	Expression	go to state 163
	Operator	go to state 106
	TypeInner	go to state 155
	HashDereference	go to state 121
	Literal	go to state 130
	ListElement	go to state 156
	ArrayReference	go to state 94

State 283:

	Operator -> LPAREN OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ')'	(Rule 84)

	OP21_LIST_COMMA	shift, and go to state 330

State 284:

	SubExpression -> LPAREN SubExpression ')' .	(Rule 142)

	$default	reduce using rule 142 (SubExpression)

State 285:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES . ListElements ')'	(Rule 82)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	MY	shift, and go to state 153
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP01_QW	shift, and go to state 161
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	Variable	go to state 157
	ListElements	go to state 331
	ArrayDereference	go to state 134
	SubExpression	go to state 158
	WordScoped	go to state 138
	Expression	go to state 163
	VariableSymbolOrSelf	go to state 118
	HashReference	go to state 100
	HashDereference	go to state 121
	TypeInner	go to state 155
	Operator	go to state 106
	ArrayReference	go to state 94
	ListElement	go to state 156
	Literal	go to state 130

State 286:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 123)

	$default	reduce using rule 123 (OperatorVoid)

State 287:

	OperatorVoid -> OP01_NAMED_VOID ListElements ';' .	(Rule 120)

	$default	reduce using rule 120 (OperatorVoid)

State 288:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	Conditional -> 'if' LPAREN SubExpression . ')' CodeBlock STAR-40 OPTIONAL-42	(Rule 161)

	')'	shift, and go to state 332
	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197
	OP14_BITWISE_OR_XOR	shift, and go to state 189
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 196
	OP17_LIST_RANGE	shift, and go to state 185
	OP18_TERNARY	shift, and go to state 188
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 199

State 289:

	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL . ';'	(Rule 181)

	';'	shift, and go to state 333

State 290:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL . ';'	(Rule 178)
	VariableDeclaration -> MY Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 179)
	VariableDeclaration -> MY Type VARIABLE_SYMBOL . OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 180)

	';'	shift, and go to state 334
	OP02_ARRAY_THINARROW	shift, and go to state 335
	OP19_VARIABLE_ASSIGN	shift, and go to state 336

State 291:

	LoopFor -> 'for' MY . TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 165)

	TYPE_INTEGER	shift, and go to state 337

State 292:

	LoopFor -> 'for' LPAREN_MY . TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpression ';' VARIABLE_SYMBOL OP11_COMPARE_LT_GT SubExpression ';' SubExpressionOrVarMod ')' CodeBlock	(Rule 166)

	TYPE_INTEGER	shift, and go to state 338

State 293:

	LoopWhile -> 'while' LPAREN . SubExpression ')' CodeBlock	(Rule 168)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	ArrayDereference	go to state 134
	Variable	go to state 157
	HashReference	go to state 100
	VariableSymbolOrSelf	go to state 118
	WordScoped	go to state 138
	Expression	go to state 163
	SubExpression	go to state 339
	Operator	go to state 106
	HashDereference	go to state 121
	Literal	go to state 130
	ArrayReference	go to state 94

State 294:

	LoopForEach -> 'foreach' MY . Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 167)

	TYPE_INTEGER	shift, and go to state 55
	WORD	shift, and go to state 57
	WORD_SCOPED	shift, and go to state 56

	Type	go to state 340

State 295:

	OperatorVoid -> OP01_PRINT OPTIONAL-33 ListElements . ';'	(Rule 116)

	';'	shift, and go to state 341

State 296:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements . ';'	(Rule 117)

	';'	shift, and go to state 342

State 297:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW ')' .	(Rule 133)

	$default	reduce using rule 133 (Expression)

State 298:

	OPTIONAL-35 -> ListElements .	(Rule 124)

	$default	reduce using rule 124 (OPTIONAL-35)

State 299:

	Expression -> WordScoped LPAREN OPTIONAL-35 . ')'	(Rule 131)

	')'	shift, and go to state 343

State 300:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 STAR-19 '}' ';'	(Rule 50)
	Method -> 'our' . TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-28 STAR-29 '}' ';'	(Rule 73)

	TYPE_INTEGER	shift, and go to state 55
	TYPE_METHOD	shift, and go to state 344
	WORD	shift, and go to state 57
	WORD_SCOPED	shift, and go to state 56

	Type	go to state 54

State 301:

	MethodOrSubroutine -> Method .	(Rule 78)

	$default	reduce using rule 78 (MethodOrSubroutine)

State 302:

	STAR-25 -> STAR-25 MethodOrSubroutine .	(Rule 61)

	$default	reduce using rule 61 (STAR-25)

State 303:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER . ';'	(Rule 63)

	';'	shift, and go to state 345

State 304:

	MethodOrSubroutine -> Subroutine .	(Rule 79)

	$default	reduce using rule 79 (MethodOrSubroutine)

State 305:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE . HashEntryProperties STAR-27 '}' ';'	(Rule 67)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE . '}' ';'	(Rule 68)

	'}'	shift, and go to state 348
	WORD	shift, and go to state 347

	HashEntryProperties	go to state 346

State 306:

	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN .	(Rule 223)

	$default	reduce using rule 223 (TypeInnerConstant)

State 307:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 STAR-19 '}' ';' .	(Rule 50)

	$default	reduce using rule 50 (Subroutine)

State 308:

	STAR-21 -> STAR-21 . PAREN-20	(Rule 52)
	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-21 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 54)

	')'	shift, and go to state 350
	OP21_LIST_COMMA	shift, and go to state 351

	PAREN-20	go to state 349

State 309:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL . OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 85)

	OP21_LIST_COMMA	shift, and go to state 352

State 310:

	HashDereference -> '%{' OPTIONAL-53 HashReference '}' .	(Rule 213)

	$default	reduce using rule 213 (HashDereference)

State 311:

	TypeInner -> MY Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 220)

	WORD	shift, and go to state 353

State 312:

	STAR-46 -> STAR-46 PAREN-45 .	(Rule 185)

	$default	reduce using rule 185 (STAR-46)

State 313:

	PAREN-45 -> OP21_LIST_COMMA . ListElement	(Rule 184)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	MY	shift, and go to state 153
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP01_QW	shift, and go to state 161
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	HashDereference	go to state 121
	TypeInner	go to state 155
	Operator	go to state 106
	ArrayReference	go to state 94
	ListElement	go to state 354
	Literal	go to state 130
	Variable	go to state 157
	ArrayDereference	go to state 134
	VariableSymbolOrSelf	go to state 118
	Expression	go to state 163
	SubExpression	go to state 158
	WordScoped	go to state 138
	HashReference	go to state 100

State 314:

	ListElement -> OP01_QW PLUS-47 ')' .	(Rule 192)

	$default	reduce using rule 192 (ListElement)

State 315:

	PLUS-47 -> PLUS-47 WORD .	(Rule 188)

	$default	reduce using rule 188 (PLUS-47)

State 316:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-34 ')' ';' .	(Rule 119)

	$default	reduce using rule 119 (OperatorVoid)

State 317:

	ArrayDereference -> '@{' OPTIONAL-49 ArrayReference '}' .	(Rule 199)

	$default	reduce using rule 199 (ArrayDereference)

State 318:

	OPTIONAL-50 -> TypeInner .	(Rule 200)

	$default	reduce using rule 200 (OPTIONAL-50)

State 319:

	HashEntry -> VariableOrLiteralOrWord OP20_HASH_FATARROW OPTIONAL-50 . SubExpression	(Rule 202)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	Literal	go to state 130
	ArrayReference	go to state 94
	Operator	go to state 106
	HashDereference	go to state 121
	HashReference	go to state 100
	Expression	go to state 163
	WordScoped	go to state 138
	VariableSymbolOrSelf	go to state 118
	SubExpression	go to state 355
	ArrayDereference	go to state 134
	Variable	go to state 157

State 320:

	STAR-52 -> STAR-52 PAREN-51 .	(Rule 206)

	$default	reduce using rule 206 (STAR-52)

State 321:

	PAREN-51 -> OP21_LIST_COMMA . HashEntry	(Rule 205)

	'%{'	shift, and go to state 96
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 175

	Variable	go to state 176
	HashDereference	go to state 174
	HashEntry	go to state 356
	VariableSymbolOrSelf	go to state 118
	Literal	go to state 173
	VariableOrLiteralOrWord	go to state 177

State 322:

	HashReference -> LBRACE HashEntry STAR-52 '}' .	(Rule 208)

	$default	reduce using rule 208 (HashReference)

State 323:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-36 . ')'	(Rule 132)

	')'	shift, and go to state 357

State 324:

	OPTIONAL-36 -> ListElements .	(Rule 126)

	$default	reduce using rule 126 (OPTIONAL-36)

State 325:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON . VariableOrLiteral	(Rule 107)

	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108

	Variable	go to state 264
	VariableOrLiteral	go to state 358
	VariableSymbolOrSelf	go to state 118
	Literal	go to state 263

State 326:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression . ']'	(Rule 175)

	']'	shift, and go to state 359
	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197
	OP14_BITWISE_OR_XOR	shift, and go to state 189
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 196
	OP17_LIST_RANGE	shift, and go to state 185
	OP18_TERNARY	shift, and go to state 188
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 199

State 327:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 177)
	WordScoped -> WORD .	(Rule 214)

	'}'	shift, and go to state 360

	LPAREN	reduce using rule 214 (WordScoped)
	OP02_METHOD_THINARROW_NEW	reduce using rule 214 (WordScoped)

State 328:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	VariableRetrieval -> OP02_HASH_THINARROW SubExpression . '}'	(Rule 176)

	'}'	shift, and go to state 361
	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197
	OP14_BITWISE_OR_XOR	shift, and go to state 189
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 196
	OP17_LIST_RANGE	shift, and go to state 185
	OP18_TERNARY	shift, and go to state 188
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 199

State 329:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ';'	(Rule 121)

	';'	shift, and go to state 362

State 330:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ')'	(Rule 84)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	MY	shift, and go to state 153
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP01_QW	shift, and go to state 161
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	Literal	go to state 130
	ArrayReference	go to state 94
	ListElement	go to state 156
	Operator	go to state 106
	HashDereference	go to state 121
	TypeInner	go to state 155
	HashReference	go to state 100
	VariableSymbolOrSelf	go to state 118
	Expression	go to state 163
	SubExpression	go to state 158
	WordScoped	go to state 138
	ArrayDereference	go to state 134
	Variable	go to state 157
	ListElements	go to state 363

State 331:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements . ')'	(Rule 82)

	')'	shift, and go to state 364

State 332:

	Conditional -> 'if' LPAREN SubExpression ')' . CodeBlock STAR-40 OPTIONAL-42	(Rule 161)

	LBRACE	shift, and go to state 366

	CodeBlock	go to state 365

State 333:

	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL ';' .	(Rule 181)

	$default	reduce using rule 181 (VariableDeclaration)

State 334:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL ';' .	(Rule 178)

	$default	reduce using rule 178 (VariableDeclaration)

State 335:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW . SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 180)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	Literal	go to state 130
	ArrayReference	go to state 94
	Operator	go to state 106
	HashDereference	go to state 121
	HashReference	go to state 100
	Expression	go to state 163
	WordScoped	go to state 138
	VariableSymbolOrSelf	go to state 118
	SubExpression	go to state 367
	ArrayDereference	go to state 134
	Variable	go to state 157

State 336:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 179)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	STDIN	shift, and go to state 254
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	Literal	go to state 130
	ArrayReference	go to state 94
	Operator	go to state 106
	HashDereference	go to state 121
	HashReference	go to state 100
	SubExpressionOrStdin	go to state 368
	VariableSymbolOrSelf	go to state 118
	SubExpression	go to state 256
	Expression	go to state 163
	WordScoped	go to state 138
	ArrayDereference	go to state 134
	Variable	go to state 157

State 337:

	LoopFor -> 'for' MY TYPE_INTEGER . VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 165)

	VARIABLE_SYMBOL	shift, and go to state 369

State 338:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpression ';' VARIABLE_SYMBOL OP11_COMPARE_LT_GT SubExpression ';' SubExpressionOrVarMod ')' CodeBlock	(Rule 166)

	VARIABLE_SYMBOL	shift, and go to state 370

State 339:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	LoopWhile -> 'while' LPAREN SubExpression . ')' CodeBlock	(Rule 168)

	')'	shift, and go to state 371
	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197
	OP14_BITWISE_OR_XOR	shift, and go to state 189
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 196
	OP17_LIST_RANGE	shift, and go to state 185
	OP18_TERNARY	shift, and go to state 188
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 199

State 340:

	LoopForEach -> 'foreach' MY Type . VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 167)

	VARIABLE_SYMBOL	shift, and go to state 372

State 341:

	OperatorVoid -> OP01_PRINT OPTIONAL-33 ListElements ';' .	(Rule 116)

	$default	reduce using rule 116 (OperatorVoid)

State 342:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements ';' .	(Rule 117)

	$default	reduce using rule 117 (OperatorVoid)

State 343:

	Expression -> WordScoped LPAREN OPTIONAL-35 ')' .	(Rule 131)

	$default	reduce using rule 131 (Expression)

State 344:

	Method -> 'our' TYPE_METHOD . VARIABLE_SYMBOL '= sub {' OPTIONAL-28 STAR-29 '}' ';'	(Rule 73)

	VARIABLE_SYMBOL	shift, and go to state 373

State 345:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';' .	(Rule 63)

	$default	reduce using rule 63 (Class)

State 346:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties . STAR-27 '}' ';'	(Rule 67)

	$default	reduce using rule 66 (STAR-27)

	STAR-27	go to state 374

State 347:

	HashEntryProperties -> WORD . OP20_HASH_FATARROW TypeInnerProperties	(Rule 204)

	OP20_HASH_FATARROW	shift, and go to state 375

State 348:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' . ';'	(Rule 68)

	';'	shift, and go to state 376

State 349:

	STAR-21 -> STAR-21 PAREN-20 .	(Rule 52)

	$default	reduce using rule 52 (STAR-21)

State 350:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-21 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 54)

	OP19_VARIABLE_ASSIGN	shift, and go to state 377

State 351:

	PAREN-20 -> OP21_LIST_COMMA . MY Type VARIABLE_SYMBOL	(Rule 51)

	MY	shift, and go to state 378

State 352:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA . LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 85)

	LITERAL_STRING	shift, and go to state 379

State 353:

	TypeInner -> MY Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 220)

	OP19_VARIABLE_ASSIGN	shift, and go to state 380

State 354:

	PAREN-45 -> OP21_LIST_COMMA ListElement .	(Rule 184)

	$default	reduce using rule 184 (PAREN-45)

State 355:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	HashEntry -> VariableOrLiteralOrWord OP20_HASH_FATARROW OPTIONAL-50 SubExpression .	(Rule 202)

	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197
	OP14_BITWISE_OR_XOR	shift, and go to state 189
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 196
	OP17_LIST_RANGE	shift, and go to state 185
	OP18_TERNARY	shift, and go to state 188
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 199

	'}'	reduce using rule 202 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 202 (HashEntry)

State 356:

	PAREN-51 -> OP21_LIST_COMMA HashEntry .	(Rule 205)

	$default	reduce using rule 205 (PAREN-51)

State 357:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-36 ')' .	(Rule 132)

	$default	reduce using rule 132 (Expression)

State 358:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral .	(Rule 107)

	$default	reduce using rule 107 (Operator)

State 359:

	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']' .	(Rule 175)

	$default	reduce using rule 175 (VariableRetrieval)

State 360:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 177)

	$default	reduce using rule 177 (VariableRetrieval)

State 361:

	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}' .	(Rule 176)

	$default	reduce using rule 176 (VariableRetrieval)

State 362:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';' .	(Rule 121)

	$default	reduce using rule 121 (OperatorVoid)

State 363:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ')'	(Rule 84)

	')'	shift, and go to state 381

State 364:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')' .	(Rule 82)

	$default	reduce using rule 82 (Operator)

State 365:

	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock . STAR-40 OPTIONAL-42	(Rule 161)

	$default	reduce using rule 157 (STAR-40)

	STAR-40	go to state 382

State 366:

	CodeBlock -> LBRACE . PLUS-43 '}'	(Rule 171)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'if'	shift, and go to state 131
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	MY	shift, and go to state 135
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 119
	OP01_NAMED_VOID	shift, and go to state 127
	OP01_NAMED_VOID_LPAREN	shift, and go to state 99
	OP01_NAMED_VOID_SCOLON	shift, and go to state 124
	OP01_OPEN	shift, and go to state 93
	OP01_PRINT	shift, and go to state 137
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP19_LOOP_CONTROL	shift, and go to state 126
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 115

	'for'	reduce using rule 149 (OPTIONAL-38)
	'foreach'	reduce using rule 149 (OPTIONAL-38)
	'while'	reduce using rule 149 (OPTIONAL-38)

	OperatorVoid	go to state 103
	HashReference	go to state 100
	Expression	go to state 105
	VariableModification	go to state 98
	Conditional	go to state 123
	ArrayReference	go to state 94
	HashDereference	go to state 121
	Operation	go to state 384
	LoopLabel	go to state 120
	SubExpression	go to state 117
	WordScoped	go to state 138
	VariableSymbolOrSelf	go to state 118
	PAREN-37	go to state 113
	OPTIONAL-38	go to state 136
	ArrayDereference	go to state 134
	Variable	go to state 114
	Literal	go to state 130
	VariableDeclaration	go to state 129
	Operator	go to state 106
	PLUS-43	go to state 383
	Statement	go to state 109

State 367:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression . ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 180)

	']'	shift, and go to state 385
	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197
	OP14_BITWISE_OR_XOR	shift, and go to state 189
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 196
	OP17_LIST_RANGE	shift, and go to state 185
	OP18_TERNARY	shift, and go to state 188
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 199

State 368:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 179)

	';'	shift, and go to state 386

State 369:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL . LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 165)

	LPAREN	shift, and go to state 387

State 370:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN SubExpression ';' VARIABLE_SYMBOL OP11_COMPARE_LT_GT SubExpression ';' SubExpressionOrVarMod ')' CodeBlock	(Rule 166)

	OP19_VARIABLE_ASSIGN	shift, and go to state 388

State 371:

	LoopWhile -> 'while' LPAREN SubExpression ')' . CodeBlock	(Rule 168)

	LBRACE	shift, and go to state 366

	CodeBlock	go to state 389

State 372:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL . LPAREN ListElements ')' CodeBlock	(Rule 167)

	LPAREN	shift, and go to state 390

State 373:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL . '= sub {' OPTIONAL-28 STAR-29 '}' ';'	(Rule 73)

	'= sub {'	shift, and go to state 391

State 374:

	STAR-27 -> STAR-27 . PAREN-26	(Rule 65)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-27 . '}' ';'	(Rule 67)

	'}'	shift, and go to state 393
	OP21_LIST_COMMA	shift, and go to state 394

	PAREN-26	go to state 392

State 375:

	HashEntryProperties -> WORD OP20_HASH_FATARROW . TypeInnerProperties	(Rule 204)

	MY	shift, and go to state 395

	TypeInnerProperties	go to state 396

State 376:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';' .	(Rule 68)

	$default	reduce using rule 68 (Properties)

State 377:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 54)

	'@_;'	shift, and go to state 397

State 378:

	PAREN-20 -> OP21_LIST_COMMA MY . Type VARIABLE_SYMBOL	(Rule 51)

	TYPE_INTEGER	shift, and go to state 55
	WORD	shift, and go to state 57
	WORD_SCOPED	shift, and go to state 56

	Type	go to state 398

State 379:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING . OP21_LIST_COMMA SubExpression	(Rule 85)

	OP21_LIST_COMMA	shift, and go to state 399

State 380:

	TypeInner -> MY Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 220)

	$default	reduce using rule 220 (TypeInner)

State 381:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' .	(Rule 84)

	$default	reduce using rule 84 (Operator)

State 382:

	STAR-40 -> STAR-40 . PAREN-39	(Rule 156)
	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-40 . OPTIONAL-42	(Rule 161)

	'else'	shift, and go to state 402
	'elsif'	shift, and go to state 400

	$end	reduce using rule 160 (OPTIONAL-42)
	'%{'	reduce using rule 160 (OPTIONAL-42)
	'@{'	reduce using rule 160 (OPTIONAL-42)
	'for'	reduce using rule 160 (OPTIONAL-42)
	'foreach'	reduce using rule 160 (OPTIONAL-42)
	'if'	reduce using rule 160 (OPTIONAL-42)
	'undef'	reduce using rule 160 (OPTIONAL-42)
	'while'	reduce using rule 160 (OPTIONAL-42)
	'}'	reduce using rule 160 (OPTIONAL-42)
	CONSTANT_CALL_SCOPED	reduce using rule 160 (OPTIONAL-42)
	LBRACE	reduce using rule 160 (OPTIONAL-42)
	LBRACKET	reduce using rule 160 (OPTIONAL-42)
	LITERAL_NUMBER	reduce using rule 160 (OPTIONAL-42)
	LITERAL_STRING	reduce using rule 160 (OPTIONAL-42)
	LPAREN	reduce using rule 160 (OPTIONAL-42)
	MY	reduce using rule 160 (OPTIONAL-42)
	OP01_CLOSE	reduce using rule 160 (OPTIONAL-42)
	OP01_NAMED	reduce using rule 160 (OPTIONAL-42)
	OP01_NAMED_VOID	reduce using rule 160 (OPTIONAL-42)
	OP01_NAMED_VOID_LPAREN	reduce using rule 160 (OPTIONAL-42)
	OP01_NAMED_VOID_SCOLON	reduce using rule 160 (OPTIONAL-42)
	OP01_OPEN	reduce using rule 160 (OPTIONAL-42)
	OP01_PRINT	reduce using rule 160 (OPTIONAL-42)
	OP03_MATH_INC_DEC	reduce using rule 160 (OPTIONAL-42)
	OP05_LOGICAL_NEG	reduce using rule 160 (OPTIONAL-42)
	OP05_MATH_NEG_LPAREN	reduce using rule 160 (OPTIONAL-42)
	OP10_NAMED_UNARY	reduce using rule 160 (OPTIONAL-42)
	OP19_LOOP_CONTROL	reduce using rule 160 (OPTIONAL-42)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 160 (OPTIONAL-42)
	OP22_LOGICAL_NEG	reduce using rule 160 (OPTIONAL-42)
	SELF	reduce using rule 160 (OPTIONAL-42)
	VARIABLE_SYMBOL	reduce using rule 160 (OPTIONAL-42)
	WORD	reduce using rule 160 (OPTIONAL-42)
	WORD_SCOPED	reduce using rule 160 (OPTIONAL-42)
	WORD_UPPERCASE	reduce using rule 160 (OPTIONAL-42)

	OPTIONAL-42	go to state 404
	PAREN-39	go to state 401
	PAREN-41	go to state 403

State 383:

	PLUS-43 -> PLUS-43 . Operation	(Rule 169)
	CodeBlock -> LBRACE PLUS-43 . '}'	(Rule 171)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'if'	shift, and go to state 131
	'undef'	shift, and go to state 112
	'}'	shift, and go to state 406
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	MY	shift, and go to state 135
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 119
	OP01_NAMED_VOID	shift, and go to state 127
	OP01_NAMED_VOID_LPAREN	shift, and go to state 99
	OP01_NAMED_VOID_SCOLON	shift, and go to state 124
	OP01_OPEN	shift, and go to state 93
	OP01_PRINT	shift, and go to state 137
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP19_LOOP_CONTROL	shift, and go to state 126
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 115

	'for'	reduce using rule 149 (OPTIONAL-38)
	'foreach'	reduce using rule 149 (OPTIONAL-38)
	'while'	reduce using rule 149 (OPTIONAL-38)

	VariableSymbolOrSelf	go to state 118
	WordScoped	go to state 138
	SubExpression	go to state 117
	LoopLabel	go to state 120
	Operation	go to state 405
	Variable	go to state 114
	OPTIONAL-38	go to state 136
	ArrayDereference	go to state 134
	PAREN-37	go to state 113
	Literal	go to state 130
	Statement	go to state 109
	VariableDeclaration	go to state 129
	Operator	go to state 106
	Expression	go to state 105
	HashReference	go to state 100
	OperatorVoid	go to state 103
	VariableModification	go to state 98
	ArrayReference	go to state 94
	Conditional	go to state 123
	HashDereference	go to state 121

State 384:

	PLUS-43 -> Operation .	(Rule 170)

	$default	reduce using rule 170 (PLUS-43)

State 385:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' . OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 180)

	OP19_VARIABLE_ASSIGN	shift, and go to state 407

State 386:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 179)

	$default	reduce using rule 179 (VariableDeclaration)

State 387:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN . SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 165)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	SubExpression	go to state 408
	Expression	go to state 163
	VariableSymbolOrSelf	go to state 118
	WordScoped	go to state 138
	HashReference	go to state 100
	Variable	go to state 157
	ArrayDereference	go to state 134
	ArrayReference	go to state 94
	Literal	go to state 130
	HashDereference	go to state 121
	Operator	go to state 106

State 388:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . SubExpression ';' VARIABLE_SYMBOL OP11_COMPARE_LT_GT SubExpression ';' SubExpressionOrVarMod ')' CodeBlock	(Rule 166)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	ArrayReference	go to state 94
	Literal	go to state 130
	HashDereference	go to state 121
	Operator	go to state 106
	Expression	go to state 163
	WordScoped	go to state 138
	SubExpression	go to state 409
	VariableSymbolOrSelf	go to state 118
	HashReference	go to state 100
	Variable	go to state 157
	ArrayDereference	go to state 134

State 389:

	LoopWhile -> 'while' LPAREN SubExpression ')' CodeBlock .	(Rule 168)

	$default	reduce using rule 168 (LoopWhile)

State 390:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN . ListElements ')' CodeBlock	(Rule 167)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	MY	shift, and go to state 153
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP01_QW	shift, and go to state 161
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	Literal	go to state 130
	ListElement	go to state 156
	ArrayReference	go to state 94
	Operator	go to state 106
	HashDereference	go to state 121
	TypeInner	go to state 155
	HashReference	go to state 100
	WordScoped	go to state 138
	VariableSymbolOrSelf	go to state 118
	Expression	go to state 163
	SubExpression	go to state 158
	ArrayDereference	go to state 134
	ListElements	go to state 410
	Variable	go to state 157

State 391:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' . OPTIONAL-28 STAR-29 '}' ';'	(Rule 73)

	LPAREN_MY	shift, and go to state 411

	'%{'	reduce using rule 70 (OPTIONAL-28)
	'@{'	reduce using rule 70 (OPTIONAL-28)
	'for'	reduce using rule 70 (OPTIONAL-28)
	'foreach'	reduce using rule 70 (OPTIONAL-28)
	'if'	reduce using rule 70 (OPTIONAL-28)
	'undef'	reduce using rule 70 (OPTIONAL-28)
	'while'	reduce using rule 70 (OPTIONAL-28)
	'}'	reduce using rule 70 (OPTIONAL-28)
	CONSTANT_CALL_SCOPED	reduce using rule 70 (OPTIONAL-28)
	LBRACE	reduce using rule 70 (OPTIONAL-28)
	LBRACKET	reduce using rule 70 (OPTIONAL-28)
	LITERAL_NUMBER	reduce using rule 70 (OPTIONAL-28)
	LITERAL_STRING	reduce using rule 70 (OPTIONAL-28)
	LPAREN	reduce using rule 70 (OPTIONAL-28)
	MY	reduce using rule 70 (OPTIONAL-28)
	OP01_CLOSE	reduce using rule 70 (OPTIONAL-28)
	OP01_NAMED	reduce using rule 70 (OPTIONAL-28)
	OP01_NAMED_VOID	reduce using rule 70 (OPTIONAL-28)
	OP01_NAMED_VOID_LPAREN	reduce using rule 70 (OPTIONAL-28)
	OP01_NAMED_VOID_SCOLON	reduce using rule 70 (OPTIONAL-28)
	OP01_OPEN	reduce using rule 70 (OPTIONAL-28)
	OP01_PRINT	reduce using rule 70 (OPTIONAL-28)
	OP03_MATH_INC_DEC	reduce using rule 70 (OPTIONAL-28)
	OP05_LOGICAL_NEG	reduce using rule 70 (OPTIONAL-28)
	OP05_MATH_NEG_LPAREN	reduce using rule 70 (OPTIONAL-28)
	OP10_NAMED_UNARY	reduce using rule 70 (OPTIONAL-28)
	OP19_LOOP_CONTROL	reduce using rule 70 (OPTIONAL-28)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 70 (OPTIONAL-28)
	OP22_LOGICAL_NEG	reduce using rule 70 (OPTIONAL-28)
	SELF	reduce using rule 70 (OPTIONAL-28)
	VARIABLE_SYMBOL	reduce using rule 70 (OPTIONAL-28)
	WORD	reduce using rule 70 (OPTIONAL-28)
	WORD_SCOPED	reduce using rule 70 (OPTIONAL-28)
	WORD_UPPERCASE	reduce using rule 70 (OPTIONAL-28)

	OPTIONAL-28	go to state 413
	MethodArguments	go to state 412

State 392:

	STAR-27 -> STAR-27 PAREN-26 .	(Rule 65)

	$default	reduce using rule 65 (STAR-27)

State 393:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-27 '}' . ';'	(Rule 67)

	';'	shift, and go to state 414

State 394:

	PAREN-26 -> OP21_LIST_COMMA . HashEntryProperties	(Rule 64)

	WORD	shift, and go to state 347

	HashEntryProperties	go to state 415

State 395:

	TypeInnerProperties -> MY . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN SubExpression	(Rule 221)
	TypeInnerProperties -> MY . Type '$TYPED_' WORD OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 222)

	TYPE_INTEGER	shift, and go to state 55
	WORD	shift, and go to state 57
	WORD_SCOPED	shift, and go to state 56

	Type	go to state 416

State 396:

	HashEntryProperties -> WORD OP20_HASH_FATARROW TypeInnerProperties .	(Rule 204)

	$default	reduce using rule 204 (HashEntryProperties)

State 397:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 54)

	$default	reduce using rule 54 (SubroutineArguments)

State 398:

	PAREN-20 -> OP21_LIST_COMMA MY Type . VARIABLE_SYMBOL	(Rule 51)

	VARIABLE_SYMBOL	shift, and go to state 417

State 399:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA . SubExpression	(Rule 85)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	HashReference	go to state 100
	SubExpression	go to state 418
	Expression	go to state 163
	WordScoped	go to state 138
	VariableSymbolOrSelf	go to state 118
	ArrayDereference	go to state 134
	Variable	go to state 157
	Literal	go to state 130
	ArrayReference	go to state 94
	Operator	go to state 106
	HashDereference	go to state 121

State 400:

	PAREN-39 -> 'elsif' . LPAREN SubExpression ')' CodeBlock	(Rule 155)

	LPAREN	shift, and go to state 419

State 401:

	STAR-40 -> STAR-40 PAREN-39 .	(Rule 156)

	$default	reduce using rule 156 (STAR-40)

State 402:

	PAREN-41 -> 'else' . CodeBlock	(Rule 158)

	LBRACE	shift, and go to state 366

	CodeBlock	go to state 420

State 403:

	OPTIONAL-42 -> PAREN-41 .	(Rule 159)

	$default	reduce using rule 159 (OPTIONAL-42)

State 404:

	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-40 OPTIONAL-42 .	(Rule 161)

	$default	reduce using rule 161 (Conditional)

State 405:

	PLUS-43 -> PLUS-43 Operation .	(Rule 169)

	$default	reduce using rule 169 (PLUS-43)

State 406:

	CodeBlock -> LBRACE PLUS-43 '}' .	(Rule 171)

	$default	reduce using rule 171 (CodeBlock)

State 407:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN . 'undef' ';'	(Rule 180)

	'undef'	shift, and go to state 421

State 408:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression . OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 165)

	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197
	OP14_BITWISE_OR_XOR	shift, and go to state 189
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 196
	OP17_LIST_RANGE	shift, and go to state 422
	OP18_TERNARY	shift, and go to state 188
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 199

State 409:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpression . ';' VARIABLE_SYMBOL OP11_COMPARE_LT_GT SubExpression ';' SubExpressionOrVarMod ')' CodeBlock	(Rule 166)

	';'	shift, and go to state 423
	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197
	OP14_BITWISE_OR_XOR	shift, and go to state 189
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 196
	OP17_LIST_RANGE	shift, and go to state 185
	OP18_TERNARY	shift, and go to state 188
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 199

State 410:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements . ')' CodeBlock	(Rule 167)

	')'	shift, and go to state 424

State 411:

	MethodArguments -> LPAREN_MY . Type SELF STAR-31 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 77)

	TYPE_INTEGER	shift, and go to state 55
	WORD	shift, and go to state 57
	WORD_SCOPED	shift, and go to state 56

	Type	go to state 425

State 412:

	OPTIONAL-28 -> MethodArguments .	(Rule 69)

	$default	reduce using rule 69 (OPTIONAL-28)

State 413:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-28 . STAR-29 '}' ';'	(Rule 73)

	$default	reduce using rule 72 (STAR-29)

	STAR-29	go to state 426

State 414:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-27 '}' ';' .	(Rule 67)

	$default	reduce using rule 67 (Properties)

State 415:

	PAREN-26 -> OP21_LIST_COMMA HashEntryProperties .	(Rule 64)

	$default	reduce using rule 64 (PAREN-26)

State 416:

	TypeInnerProperties -> MY Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN SubExpression	(Rule 221)
	TypeInnerProperties -> MY Type . '$TYPED_' WORD OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 222)

	'$TYPED_'	shift, and go to state 427

State 417:

	PAREN-20 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL .	(Rule 51)

	$default	reduce using rule 51 (PAREN-20)

State 418:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression .	(Rule 85)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197
	OP14_BITWISE_OR_XOR	shift, and go to state 189
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 196
	OP17_LIST_RANGE	shift, and go to state 185
	OP18_TERNARY	shift, and go to state 188

	')'	reduce using rule 85 (Operator)
	';'	reduce using rule 85 (Operator)
	']'	reduce using rule 85 (Operator)
	'}'	reduce using rule 85 (Operator)
	OP21_LIST_COMMA	reduce using rule 85 (Operator)
	OP23_LOGICAL_AND	reduce using rule 85 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 85 (Operator)

State 419:

	PAREN-39 -> 'elsif' LPAREN . SubExpression ')' CodeBlock	(Rule 155)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	HashReference	go to state 100
	SubExpression	go to state 428
	WordScoped	go to state 138
	Expression	go to state 163
	VariableSymbolOrSelf	go to state 118
	ArrayDereference	go to state 134
	Variable	go to state 157
	Literal	go to state 130
	ArrayReference	go to state 94
	Operator	go to state 106
	HashDereference	go to state 121

State 420:

	PAREN-41 -> 'else' CodeBlock .	(Rule 158)

	$default	reduce using rule 158 (PAREN-41)

State 421:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' . ';'	(Rule 180)

	';'	shift, and go to state 429

State 422:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 106)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE . SubExpression ')' CodeBlock	(Rule 165)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	HashReference	go to state 100
	Expression	go to state 163
	WordScoped	go to state 138
	SubExpression	go to state 430
	VariableSymbolOrSelf	go to state 118
	ArrayDereference	go to state 134
	Variable	go to state 157
	Literal	go to state 130
	ArrayReference	go to state 94
	Operator	go to state 106
	HashDereference	go to state 121

State 423:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpression ';' . VARIABLE_SYMBOL OP11_COMPARE_LT_GT SubExpression ';' SubExpressionOrVarMod ')' CodeBlock	(Rule 166)

	VARIABLE_SYMBOL	shift, and go to state 431

State 424:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' . CodeBlock	(Rule 167)

	LBRACE	shift, and go to state 366

	CodeBlock	go to state 432

State 425:

	MethodArguments -> LPAREN_MY Type . SELF STAR-31 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 77)

	SELF	shift, and go to state 433

State 426:

	STAR-29 -> STAR-29 . Operation	(Rule 71)
	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-28 STAR-29 . '}' ';'	(Rule 73)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'if'	shift, and go to state 131
	'undef'	shift, and go to state 112
	'}'	shift, and go to state 434
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	MY	shift, and go to state 135
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 119
	OP01_NAMED_VOID	shift, and go to state 127
	OP01_NAMED_VOID_LPAREN	shift, and go to state 99
	OP01_NAMED_VOID_SCOLON	shift, and go to state 124
	OP01_OPEN	shift, and go to state 93
	OP01_PRINT	shift, and go to state 137
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP19_LOOP_CONTROL	shift, and go to state 126
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 101
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 115

	'for'	reduce using rule 149 (OPTIONAL-38)
	'foreach'	reduce using rule 149 (OPTIONAL-38)
	'while'	reduce using rule 149 (OPTIONAL-38)

	VariableModification	go to state 98
	Expression	go to state 105
	OperatorVoid	go to state 103
	HashReference	go to state 100
	HashDereference	go to state 121
	ArrayReference	go to state 94
	Conditional	go to state 123
	Variable	go to state 114
	OPTIONAL-38	go to state 136
	ArrayDereference	go to state 134
	PAREN-37	go to state 113
	LoopLabel	go to state 120
	VariableSymbolOrSelf	go to state 118
	SubExpression	go to state 117
	WordScoped	go to state 138
	Operation	go to state 435
	Statement	go to state 109
	VariableDeclaration	go to state 129
	Operator	go to state 106
	Literal	go to state 130

State 427:

	TypeInnerProperties -> MY Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN SubExpression	(Rule 221)
	TypeInnerProperties -> MY Type '$TYPED_' . WORD OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 222)

	WORD	shift, and go to state 436

State 428:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	PAREN-39 -> 'elsif' LPAREN SubExpression . ')' CodeBlock	(Rule 155)

	')'	shift, and go to state 437
	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197
	OP14_BITWISE_OR_XOR	shift, and go to state 189
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 196
	OP17_LIST_RANGE	shift, and go to state 185
	OP18_TERNARY	shift, and go to state 188
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 199

State 429:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';' .	(Rule 180)

	$default	reduce using rule 180 (VariableDeclaration)

State 430:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression . ')' CodeBlock	(Rule 165)

	')'	shift, and go to state 438
	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197
	OP14_BITWISE_OR_XOR	shift, and go to state 189
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 196

	OP17_LIST_RANGE	error (nonassociative)

	OP18_TERNARY	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 431:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpression ';' VARIABLE_SYMBOL . OP11_COMPARE_LT_GT SubExpression ';' SubExpressionOrVarMod ')' CodeBlock	(Rule 166)

	OP11_COMPARE_LT_GT	shift, and go to state 439

State 432:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock .	(Rule 167)

	$default	reduce using rule 167 (LoopForEach)

State 433:

	MethodArguments -> LPAREN_MY Type SELF . STAR-31 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 77)

	$default	reduce using rule 76 (STAR-31)

	STAR-31	go to state 440

State 434:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-28 STAR-29 '}' . ';'	(Rule 73)

	';'	shift, and go to state 441

State 435:

	STAR-29 -> STAR-29 Operation .	(Rule 71)

	$default	reduce using rule 71 (STAR-29)

State 436:

	TypeInnerProperties -> MY Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN SubExpression	(Rule 221)
	TypeInnerProperties -> MY Type '$TYPED_' WORD . OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 222)

	OP02_ARRAY_THINARROW	shift, and go to state 443
	OP19_VARIABLE_ASSIGN	shift, and go to state 442

State 437:

	PAREN-39 -> 'elsif' LPAREN SubExpression ')' . CodeBlock	(Rule 155)

	LBRACE	shift, and go to state 366

	CodeBlock	go to state 444

State 438:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' . CodeBlock	(Rule 165)

	LBRACE	shift, and go to state 366

	CodeBlock	go to state 445

State 439:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpression ';' VARIABLE_SYMBOL OP11_COMPARE_LT_GT . SubExpression ';' SubExpressionOrVarMod ')' CodeBlock	(Rule 166)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	Literal	go to state 130
	ArrayReference	go to state 94
	Operator	go to state 106
	HashDereference	go to state 121
	HashReference	go to state 100
	VariableSymbolOrSelf	go to state 118
	SubExpression	go to state 446
	Expression	go to state 163
	WordScoped	go to state 138
	ArrayDereference	go to state 134
	Variable	go to state 157

State 440:

	STAR-31 -> STAR-31 . PAREN-30	(Rule 75)
	MethodArguments -> LPAREN_MY Type SELF STAR-31 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 77)

	')'	shift, and go to state 447
	OP21_LIST_COMMA	shift, and go to state 448

	PAREN-30	go to state 449

State 441:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-28 STAR-29 '}' ';' .	(Rule 73)

	$default	reduce using rule 73 (Method)

State 442:

	TypeInnerProperties -> MY Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN . SubExpression	(Rule 221)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	Literal	go to state 130
	ArrayReference	go to state 94
	Operator	go to state 106
	HashDereference	go to state 121
	HashReference	go to state 100
	SubExpression	go to state 450
	Expression	go to state 163
	VariableSymbolOrSelf	go to state 118
	WordScoped	go to state 138
	ArrayDereference	go to state 134
	Variable	go to state 157

State 443:

	TypeInnerProperties -> MY Type '$TYPED_' WORD OP02_ARRAY_THINARROW . SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 222)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	ArrayDereference	go to state 134
	Variable	go to state 157
	HashReference	go to state 100
	Expression	go to state 163
	SubExpression	go to state 451
	VariableSymbolOrSelf	go to state 118
	WordScoped	go to state 138
	Operator	go to state 106
	HashDereference	go to state 121
	Literal	go to state 130
	ArrayReference	go to state 94

State 444:

	PAREN-39 -> 'elsif' LPAREN SubExpression ')' CodeBlock .	(Rule 155)

	$default	reduce using rule 155 (PAREN-39)

State 445:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock .	(Rule 165)

	$default	reduce using rule 165 (LoopFor)

State 446:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpression ';' VARIABLE_SYMBOL OP11_COMPARE_LT_GT SubExpression . ';' SubExpressionOrVarMod ')' CodeBlock	(Rule 166)

	';'	shift, and go to state 452
	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197
	OP14_BITWISE_OR_XOR	shift, and go to state 189
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 196
	OP17_LIST_RANGE	shift, and go to state 185
	OP18_TERNARY	shift, and go to state 188
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 199

State 447:

	MethodArguments -> LPAREN_MY Type SELF STAR-31 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 77)

	OP19_VARIABLE_ASSIGN	shift, and go to state 453

State 448:

	PAREN-30 -> OP21_LIST_COMMA . MY Type VARIABLE_SYMBOL	(Rule 74)

	MY	shift, and go to state 454

State 449:

	STAR-31 -> STAR-31 PAREN-30 .	(Rule 75)

	$default	reduce using rule 75 (STAR-31)

State 450:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	TypeInnerProperties -> MY Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN SubExpression .	(Rule 221)

	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197
	OP14_BITWISE_OR_XOR	shift, and go to state 189
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 196
	OP17_LIST_RANGE	shift, and go to state 185
	OP18_TERNARY	shift, and go to state 188
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 199

	'}'	reduce using rule 221 (TypeInnerProperties)
	OP21_LIST_COMMA	reduce using rule 221 (TypeInnerProperties)

State 451:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	TypeInnerProperties -> MY Type '$TYPED_' WORD OP02_ARRAY_THINARROW SubExpression . ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 222)

	']'	shift, and go to state 455
	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197
	OP14_BITWISE_OR_XOR	shift, and go to state 189
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 196
	OP17_LIST_RANGE	shift, and go to state 185
	OP18_TERNARY	shift, and go to state 188
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 199

State 452:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpression ';' VARIABLE_SYMBOL OP11_COMPARE_LT_GT SubExpression ';' . SubExpressionOrVarMod ')' CodeBlock	(Rule 166)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 112
	CONSTANT_CALL_SCOPED	shift, and go to state 133
	LBRACE	shift, and go to state 111
	LBRACKET	shift, and go to state 107
	LITERAL_NUMBER	shift, and go to state 87
	LITERAL_STRING	shift, and go to state 86
	LPAREN	shift, and go to state 122
	OP01_CLOSE	shift, and go to state 125
	OP01_NAMED	shift, and go to state 159
	OP01_OPEN	shift, and go to state 93
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 140
	OP22_LOGICAL_NEG	shift, and go to state 139
	SELF	shift, and go to state 97
	VARIABLE_SYMBOL	shift, and go to state 108
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 160

	Literal	go to state 130
	ArrayReference	go to state 94
	Operator	go to state 106
	SubExpressionOrVarMod	go to state 456
	HashDereference	go to state 121
	HashReference	go to state 100
	Expression	go to state 163
	WordScoped	go to state 138
	SubExpression	go to state 457
	VariableSymbolOrSelf	go to state 118
	ArrayDereference	go to state 134
	Variable	go to state 114
	VariableModification	go to state 458

State 453:

	MethodArguments -> LPAREN_MY Type SELF STAR-31 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 77)

	'@_;'	shift, and go to state 459

State 454:

	PAREN-30 -> OP21_LIST_COMMA MY . Type VARIABLE_SYMBOL	(Rule 74)

	TYPE_INTEGER	shift, and go to state 55
	WORD	shift, and go to state 57
	WORD_SCOPED	shift, and go to state 56

	Type	go to state 460

State 455:

	TypeInnerProperties -> MY Type '$TYPED_' WORD OP02_ARRAY_THINARROW SubExpression ']' . OP19_VARIABLE_ASSIGN 'undef'	(Rule 222)

	OP19_VARIABLE_ASSIGN	shift, and go to state 461

State 456:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpression ';' VARIABLE_SYMBOL OP11_COMPARE_LT_GT SubExpression ';' SubExpressionOrVarMod . ')' CodeBlock	(Rule 166)

	')'	shift, and go to state 462

State 457:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	SubExpressionOrVarMod -> SubExpression .	(Rule 145)

	OP04_MATH_POW	shift, and go to state 191
	OP06_REGEX_MATCH	shift, and go to state 194
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP07_STRING_REPEAT	shift, and go to state 201
	OP08_MATH_ADD_SUB	shift, and go to state 192
	OP08_STRING_CAT	shift, and go to state 193
	OP09_BITWISE_SHIFT	shift, and go to state 198
	OP11_COMPARE_LT_GT	shift, and go to state 187
	OP12_COMPARE_EQ_NE	shift, and go to state 190
	OP13_BITWISE_AND	shift, and go to state 197
	OP14_BITWISE_OR_XOR	shift, and go to state 189
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 196
	OP17_LIST_RANGE	shift, and go to state 185
	OP18_TERNARY	shift, and go to state 188
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 199

	')'	reduce using rule 145 (SubExpressionOrVarMod)

State 458:

	SubExpressionOrVarMod -> VariableModification .	(Rule 146)

	$default	reduce using rule 146 (SubExpressionOrVarMod)

State 459:

	MethodArguments -> LPAREN_MY Type SELF STAR-31 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 77)

	$default	reduce using rule 77 (MethodArguments)

State 460:

	PAREN-30 -> OP21_LIST_COMMA MY Type . VARIABLE_SYMBOL	(Rule 74)

	VARIABLE_SYMBOL	shift, and go to state 463

State 461:

	TypeInnerProperties -> MY Type '$TYPED_' WORD OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN . 'undef'	(Rule 222)

	'undef'	shift, and go to state 464

State 462:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpression ';' VARIABLE_SYMBOL OP11_COMPARE_LT_GT SubExpression ';' SubExpressionOrVarMod ')' . CodeBlock	(Rule 166)

	LBRACE	shift, and go to state 366

	CodeBlock	go to state 465

State 463:

	PAREN-30 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL .	(Rule 74)

	$default	reduce using rule 74 (PAREN-30)

State 464:

	TypeInnerProperties -> MY Type '$TYPED_' WORD OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' .	(Rule 222)

	$default	reduce using rule 222 (TypeInnerProperties)

State 465:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpression ';' VARIABLE_SYMBOL OP11_COMPARE_LT_GT SubExpression ';' SubExpressionOrVarMod ')' CodeBlock .	(Rule 166)

	$default	reduce using rule 166 (LoopFor)


Summary:
--------
Number of rules         : 233
Number of terminals     : 92
Number of non-terminals : 106
Number of states        : 466
