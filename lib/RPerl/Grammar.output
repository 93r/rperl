Conflicts:
----------
Conflict in state 139 between rule 98 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 139 between rule 98 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 139 between rule 98 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 139 between rule 98 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 139 between rule 98 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 139 between rule 98 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 139 between rule 98 and token OP08_STRING_CAT resolved as shift.
Conflict in state 139 between rule 98 and token OP04_MATH_POW resolved as shift.
Conflict in state 139 between rule 98 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 139 between rule 98 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 139 between rule 98 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 139 between rule 98 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 139 between rule 98 and token OP18_TERNARY resolved as reduce.
Conflict in state 139 between rule 98 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 139 between rule 98 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 139 between rule 98 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 139 between rule 98 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 143 between rule 90 and token OP04_MATH_POW resolved as shift.
Conflict in state 143 between rule 90 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 143 between rule 90 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 143 between rule 90 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 143 between rule 90 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 143 between rule 90 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 143 between rule 90 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 143 between rule 90 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 143 between rule 90 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 143 between rule 90 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 143 between rule 90 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 143 between rule 90 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 143 between rule 90 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 143 between rule 90 and token OP18_TERNARY resolved as reduce.
Conflict in state 143 between rule 90 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 143 between rule 90 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 143 between rule 90 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 177 between rule 83 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 177 between rule 83 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 177 between rule 83 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 177 between rule 83 and token OP04_MATH_POW resolved as reduce.
Conflict in state 177 between rule 83 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 177 between rule 83 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 177 between rule 83 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 177 between rule 83 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 177 between rule 83 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 177 between rule 83 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 177 between rule 83 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 177 between rule 83 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 177 between rule 83 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 177 between rule 83 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 177 between rule 83 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 177 between rule 83 and token OP18_TERNARY resolved as reduce.
Conflict in state 177 between rule 83 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 206 between rule 108 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 206 between rule 108 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 206 between rule 108 and token OP18_TERNARY resolved as shift.
Conflict in state 206 between rule 108 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 206 between rule 108 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 206 between rule 108 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 206 between rule 108 and token OP04_MATH_POW resolved as shift.
Conflict in state 206 between rule 108 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 206 between rule 108 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 206 between rule 108 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 206 between rule 108 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 206 between rule 108 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 206 between rule 108 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 206 between rule 108 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 206 between rule 108 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 206 between rule 108 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 206 between rule 108 and token OP08_STRING_CAT resolved as shift.
Conflict in state 229 between rule 83 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 229 between rule 83 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 229 between rule 83 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 229 between rule 83 and token OP04_MATH_POW resolved as reduce.
Conflict in state 229 between rule 83 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 229 between rule 83 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 229 between rule 83 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 229 between rule 83 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 229 between rule 83 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 229 between rule 83 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 229 between rule 83 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 229 between rule 83 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 229 between rule 83 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 229 between rule 83 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 229 between rule 83 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 229 between rule 83 and token OP18_TERNARY resolved as reduce.
Conflict in state 229 between rule 83 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 230 between rule 109 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 230 between rule 109 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 230 between rule 109 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 230 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 230 between rule 109 and token OP08_STRING_CAT resolved as shift.
Conflict in state 230 between rule 109 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 230 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 230 between rule 109 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 230 between rule 109 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 230 between rule 109 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 230 between rule 109 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 230 between rule 109 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 230 between rule 109 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 230 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 230 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 230 between rule 109 and token OP18_TERNARY resolved as shift.
Conflict in state 230 between rule 109 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 234 between rule 93 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 234 between rule 93 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 234 between rule 93 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 234 between rule 93 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 234 between rule 93 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 234 between rule 93 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 234 between rule 93 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 234 between rule 93 and token OP04_MATH_POW resolved as shift.
Conflict in state 234 between rule 93 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 234 between rule 93 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 234 between rule 93 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 234 between rule 93 and token OP18_TERNARY resolved as reduce.
Conflict in state 234 between rule 93 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 234 between rule 93 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 234 between rule 93 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 234 between rule 93 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 234 between rule 93 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 235 between rule 100 and token OP18_TERNARY resolved as reduce.
Conflict in state 235 between rule 100 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 235 between rule 100 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 235 between rule 100 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 235 between rule 100 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 235 between rule 100 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 235 between rule 100 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 235 between rule 100 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 235 between rule 100 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 235 between rule 100 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 235 between rule 100 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 235 between rule 100 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 235 between rule 100 and token OP08_STRING_CAT resolved as shift.
Conflict in state 235 between rule 100 and token OP04_MATH_POW resolved as shift.
Conflict in state 235 between rule 100 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 235 between rule 100 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 235 between rule 100 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 236 between rule 94 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 236 between rule 94 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 236 between rule 94 and token OP18_TERNARY resolved as reduce.
Conflict in state 236 between rule 94 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 236 between rule 94 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 236 between rule 94 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 236 between rule 94 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 236 between rule 94 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 236 between rule 94 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 236 between rule 94 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 236 between rule 94 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 236 between rule 94 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 236 between rule 94 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 236 between rule 94 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 236 between rule 94 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 236 between rule 94 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 236 between rule 94 and token OP04_MATH_POW resolved as shift.
Conflict in state 237 between rule 97 and token OP08_STRING_CAT resolved as shift.
Conflict in state 237 between rule 97 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 237 between rule 97 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 237 between rule 97 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 237 between rule 97 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 237 between rule 97 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 237 between rule 97 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 237 between rule 97 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 237 between rule 97 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 237 between rule 97 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 237 between rule 97 and token OP04_MATH_POW resolved as shift.
Conflict in state 237 between rule 97 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 237 between rule 97 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 237 between rule 97 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 237 between rule 97 and token OP18_TERNARY resolved as reduce.
Conflict in state 237 between rule 97 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 237 between rule 97 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 238 between rule 89 and token OP18_TERNARY resolved as reduce.
Conflict in state 238 between rule 89 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 238 between rule 89 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 238 between rule 89 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 238 between rule 89 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 238 between rule 89 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 238 between rule 89 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 238 between rule 89 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 238 between rule 89 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 238 between rule 89 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 238 between rule 89 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 238 between rule 89 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 238 between rule 89 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 238 between rule 89 and token OP04_MATH_POW resolved as shift.
Conflict in state 238 between rule 89 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 238 between rule 89 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 238 between rule 89 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 239 between rule 110 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 239 between rule 110 and token OP18_TERNARY resolved as shift.
Conflict in state 239 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 239 between rule 110 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 239 between rule 110 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 239 between rule 110 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 239 between rule 110 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 239 between rule 110 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 239 between rule 110 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 239 between rule 110 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 239 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 239 between rule 110 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 239 between rule 110 and token OP08_STRING_CAT resolved as shift.
Conflict in state 239 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 239 between rule 110 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 239 between rule 110 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 239 between rule 110 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 240 between rule 103 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 240 between rule 103 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 240 between rule 103 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 240 between rule 103 and token OP04_MATH_POW resolved as shift.
Conflict in state 240 between rule 103 and token OP08_STRING_CAT resolved as shift.
Conflict in state 240 between rule 103 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 240 between rule 103 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 240 between rule 103 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 240 between rule 103 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 240 between rule 103 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 240 between rule 103 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 240 between rule 103 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 240 between rule 103 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 240 between rule 103 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 240 between rule 103 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 240 between rule 103 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 240 between rule 103 and token OP18_TERNARY resolved as reduce.
Conflict in state 241 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 241 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 241 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 241 between rule 102 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 241 between rule 102 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 241 between rule 102 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 241 between rule 102 and token OP08_STRING_CAT resolved as shift.
Conflict in state 241 between rule 102 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 241 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 241 between rule 102 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 241 between rule 102 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 241 between rule 102 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 241 between rule 102 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 241 between rule 102 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 241 between rule 102 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 241 between rule 102 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 241 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 242 between rule 96 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 242 between rule 96 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 242 between rule 96 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 242 between rule 96 and token OP04_MATH_POW resolved as shift.
Conflict in state 242 between rule 96 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 242 between rule 96 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 242 between rule 96 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 242 between rule 96 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 242 between rule 96 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 242 between rule 96 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 242 between rule 96 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 242 between rule 96 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 242 between rule 96 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 242 between rule 96 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 242 between rule 96 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 242 between rule 96 and token OP18_TERNARY resolved as reduce.
Conflict in state 242 between rule 96 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 243 between rule 95 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 243 between rule 95 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 243 between rule 95 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 243 between rule 95 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 243 between rule 95 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 243 between rule 95 and token OP18_TERNARY resolved as reduce.
Conflict in state 243 between rule 95 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 243 between rule 95 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 243 between rule 95 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 243 between rule 95 and token OP04_MATH_POW resolved as shift.
Conflict in state 243 between rule 95 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 243 between rule 95 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 243 between rule 95 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 243 between rule 95 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 243 between rule 95 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 243 between rule 95 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 243 between rule 95 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 244 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 244 between rule 105 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 244 between rule 105 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 244 between rule 105 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 244 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 244 between rule 105 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 244 between rule 105 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 244 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 244 between rule 105 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 244 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 244 between rule 105 and token OP08_STRING_CAT resolved as shift.
Conflict in state 244 between rule 105 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 244 between rule 105 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 244 between rule 105 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 244 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 244 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 244 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 245 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 245 between rule 106 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 245 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 245 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 245 between rule 106 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 245 between rule 106 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 245 between rule 106 and token OP17_LIST_RANGE resolved as error.
Conflict in state 245 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 245 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 245 between rule 106 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 245 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 245 between rule 106 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 245 between rule 106 and token OP08_STRING_CAT resolved as shift.
Conflict in state 245 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 245 between rule 106 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 245 between rule 106 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 245 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 247 between rule 104 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 247 between rule 104 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 247 between rule 104 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 247 between rule 104 and token OP18_TERNARY resolved as reduce.
Conflict in state 247 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 247 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 247 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 247 between rule 104 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 247 between rule 104 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 247 between rule 104 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 247 between rule 104 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 247 between rule 104 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 247 between rule 104 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 247 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 247 between rule 104 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 247 between rule 104 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 247 between rule 104 and token OP08_STRING_CAT resolved as shift.
Conflict in state 248 between rule 101 and token OP12_COMPARE_EQ_NE resolved as error.
Conflict in state 248 between rule 101 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 248 between rule 101 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 248 between rule 101 and token OP04_MATH_POW resolved as shift.
Conflict in state 248 between rule 101 and token OP08_STRING_CAT resolved as shift.
Conflict in state 248 between rule 101 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 248 between rule 101 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 248 between rule 101 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 248 between rule 101 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 248 between rule 101 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 248 between rule 101 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 248 between rule 101 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 248 between rule 101 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 248 between rule 101 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 248 between rule 101 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 248 between rule 101 and token OP18_TERNARY resolved as reduce.
Conflict in state 248 between rule 101 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 408 between rule 85 and token OP08_STRING_CAT resolved as shift.
Conflict in state 408 between rule 85 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 408 between rule 85 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 408 between rule 85 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 408 between rule 85 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 408 between rule 85 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 408 between rule 85 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 408 between rule 85 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 408 between rule 85 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 408 between rule 85 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 408 between rule 85 and token OP04_MATH_POW resolved as shift.
Conflict in state 408 between rule 85 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 408 between rule 85 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 408 between rule 85 and token OP18_TERNARY resolved as shift.
Conflict in state 408 between rule 85 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 408 between rule 85 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 408 between rule 85 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 418 between rule 106 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 418 between rule 106 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 418 between rule 106 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 418 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 418 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 418 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 418 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 418 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 418 between rule 106 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 418 between rule 106 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 418 between rule 106 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 418 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 418 between rule 106 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 418 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 418 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 418 between rule 106 and token OP17_LIST_RANGE resolved as error.
Conflict in state 418 between rule 106 and token OP08_STRING_CAT resolved as shift.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG USE_RPERL OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> USE_RPERL
20:	OPTIONAL-9 -> /* empty */
21:	OPTIONAL-10 -> Critic
22:	OPTIONAL-10 -> /* empty */
23:	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped ';' Header
24:	Module -> Package
25:	Module -> Class
26:	STAR-11 -> STAR-11 Critic
27:	STAR-11 -> /* empty */
28:	STAR-12 -> STAR-12 Include
29:	STAR-12 -> /* empty */
30:	STAR-13 -> STAR-13 Constant
31:	STAR-13 -> /* empty */
32:	PLUS-14 -> PLUS-14 Subroutine
33:	PLUS-14 -> Subroutine
34:	Package -> STAR-11 STAR-12 STAR-13 PLUS-14 LITERAL_NUMBER ';'
35:	OPTIONAL-15 -> USE_RPERL_AFTER
36:	OPTIONAL-15 -> /* empty */
37:	Header -> 'use strict;' 'use warnings;' OPTIONAL-15 'our' VERSION_NUMBER_ASSIGN
38:	PLUS-16 -> PLUS-16 WORD
39:	PLUS-16 -> WORD
40:	Critic -> '## no critic qw(' PLUS-16 ')'
41:	PLUS-17 -> PLUS-17 WORD
42:	PLUS-17 -> WORD
43:	Include -> USE WordScoped ';'
44:	Include -> USE WordScoped OP01_QW PLUS-17 ')' ';'
45:	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'
46:	OPTIONAL-18 -> SubroutineArguments
47:	OPTIONAL-18 -> /* empty */
48:	STAR-19 -> STAR-19 Operation
49:	STAR-19 -> /* empty */
50:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 STAR-19 '}' ';'
51:	PAREN-20 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL
52:	STAR-21 -> STAR-21 PAREN-20
53:	STAR-21 -> /* empty */
54:	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;'
55:	STAR-22 -> STAR-22 Critic
56:	STAR-22 -> /* empty */
57:	STAR-23 -> STAR-23 Include
58:	STAR-23 -> /* empty */
59:	STAR-24 -> STAR-24 Constant
60:	STAR-24 -> /* empty */
61:	STAR-25 -> STAR-25 MethodOrSubroutine
62:	STAR-25 -> /* empty */
63:	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';'
64:	PAREN-26 -> OP21_LIST_COMMA HashEntryTyped
65:	STAR-27 -> STAR-27 PAREN-26
66:	STAR-27 -> /* empty */
67:	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-27 '}' ';'
68:	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';'
69:	OPTIONAL-28 -> MethodArguments
70:	OPTIONAL-28 -> /* empty */
71:	STAR-29 -> STAR-29 Operation
72:	STAR-29 -> /* empty */
73:	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-28 STAR-29 '}' ';'
74:	PAREN-30 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL
75:	STAR-31 -> STAR-31 PAREN-30
76:	STAR-31 -> /* empty */
77:	MethodArguments -> LPAREN_MY TYPE_SELF STAR-31 ')' OP19_VARIABLE_ASSIGN '@_;'
78:	MethodOrSubroutine -> Method
79:	MethodOrSubroutine -> Subroutine
80:	Operation -> Expression ';'
81:	Operation -> Statement
82:	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')'
83:	Operator -> OP01_NAMED SubExpression
84:	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'
85:	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression
86:	Operator -> OP01_CLOSE FHREF_SYMBOL
87:	Operator -> OP03_MATH_INC_DEC Variable
88:	Operator -> Variable OP03_MATH_INC_DEC
89:	Operator -> SubExpression OP04_MATH_POW SubExpression
90:	Operator -> OP05_LOGICAL_NEG SubExpression
91:	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')'
92:	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN
93:	Operator -> SubExpression OP07_STRING_REPEAT SubExpression
94:	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression
95:	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression
96:	Operator -> SubExpression OP08_STRING_CAT SubExpression
97:	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression
98:	Operator -> OP10_NAMED_UNARY SubExpression
99:	Operator -> OP10_NAMED_UNARY
100:	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression
101:	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression
102:	Operator -> SubExpression OP13_BITWISE_AND SubExpression
103:	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression
104:	Operator -> SubExpression OP15_LOGICAL_AND SubExpression
105:	Operator -> SubExpression OP16_LOGICAL_OR SubExpression
106:	Operator -> SubExpression OP17_LIST_RANGE SubExpression
107:	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral
108:	Operator -> OP22_LOGICAL_NEG SubExpression
109:	Operator -> SubExpression OP23_LOGICAL_AND SubExpression
110:	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression
111:	PAREN-32 -> STDOUT_STDERR
112:	OPTIONAL-33 -> PAREN-32
113:	OPTIONAL-33 -> /* empty */
114:	OPTIONAL-34 -> ListElements
115:	OPTIONAL-34 -> /* empty */
116:	OperatorVoid -> OP01_PRINT OPTIONAL-33 ListElements ';'
117:	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements ';'
118:	OperatorVoid -> OP01_NAMED_VOID_SCOLON
119:	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-34 ')' ';'
120:	OperatorVoid -> OP01_NAMED_VOID ListElements ';'
121:	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';'
122:	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON
123:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
124:	OPTIONAL-35 -> ListElements
125:	OPTIONAL-35 -> /* empty */
126:	OPTIONAL-36 -> ListElements
127:	OPTIONAL-36 -> /* empty */
128:	Expression -> Operator
129:	Expression -> WordScoped LPAREN OPTIONAL-35 ')'
130:	Expression -> WORD_UPPERCASE LPAREN ')'
131:	Expression -> WordScoped SCOPE WORD_UPPERCASE LPAREN ')'
132:	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-36 ')'
133:	Expression -> WordScoped OP02_METHOD_THINARROW_NEW ')'
134:	SubExpression -> Expression
135:	SubExpression -> 'undef'
136:	SubExpression -> Literal
137:	SubExpression -> Variable
138:	SubExpression -> ArrayReference
139:	SubExpression -> ArrayDereference
140:	SubExpression -> HashReference
141:	SubExpression -> HashDereference
142:	SubExpression -> LPAREN SubExpression ')'
143:	SubExpressionOrStdin -> SubExpression
144:	SubExpressionOrStdin -> STDIN
145:	PAREN-37 -> LoopLabel COLON
146:	OPTIONAL-38 -> PAREN-37
147:	OPTIONAL-38 -> /* empty */
148:	Statement -> Conditional
149:	Statement -> OPTIONAL-38 Loop
150:	Statement -> OperatorVoid
151:	Statement -> VariableDeclaration
152:	Statement -> VariableModification
153:	PAREN-39 -> 'elsif' LPAREN SubExpression ')' CodeBlock
154:	STAR-40 -> STAR-40 PAREN-39
155:	STAR-40 -> /* empty */
156:	PAREN-41 -> 'else' CodeBlock
157:	OPTIONAL-42 -> PAREN-41
158:	OPTIONAL-42 -> /* empty */
159:	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-40 OPTIONAL-42
160:	Loop -> LoopFor
161:	Loop -> LoopForEach
162:	Loop -> LoopWhile
163:	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock
164:	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock
165:	LoopWhile -> 'while' LPAREN SubExpression ')' CodeBlock
166:	PLUS-43 -> PLUS-43 Operation
167:	PLUS-43 -> Operation
168:	CodeBlock -> LBRACE PLUS-43 '}'
169:	STAR-44 -> STAR-44 VariableRetrieval
170:	STAR-44 -> /* empty */
171:	Variable -> VARIABLE_SYMBOL STAR-44
172:	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']'
173:	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}'
174:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
175:	VariableDeclaration -> MY Type VARIABLE_SYMBOL ';'
176:	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
177:	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL ';'
178:	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
179:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';'
180:	PAREN-45 -> OP21_LIST_COMMA ListElement
181:	STAR-46 -> STAR-46 PAREN-45
182:	STAR-46 -> /* empty */
183:	ListElements -> ListElement STAR-46
184:	PLUS-47 -> PLUS-47 WORD
185:	PLUS-47 -> WORD
186:	ListElement -> SubExpression
187:	ListElement -> TypeInner SubExpression
188:	ListElement -> OP01_QW PLUS-47 ')'
189:	OPTIONAL-48 -> ListElements
190:	OPTIONAL-48 -> /* empty */
191:	ArrayReference -> LBRACKET OPTIONAL-48 ']'
192:	OPTIONAL-49 -> TypeInner
193:	OPTIONAL-49 -> /* empty */
194:	ArrayDereference -> '@{' Variable '}'
195:	ArrayDereference -> '@{' OPTIONAL-49 ArrayReference '}'
196:	OPTIONAL-50 -> TypeInner
197:	OPTIONAL-50 -> /* empty */
198:	HashEntry -> VariableOrLiteralOrWord OP20_HASH_FATARROW OPTIONAL-50 SubExpression
199:	HashEntry -> HashDereference
200:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression
201:	HashEntryTyped -> HashDereference
202:	PAREN-51 -> OP21_LIST_COMMA HashEntry
203:	STAR-52 -> STAR-52 PAREN-51
204:	STAR-52 -> /* empty */
205:	HashReference -> LBRACE HashEntry STAR-52 '}'
206:	HashReference -> LBRACE '}'
207:	OPTIONAL-53 -> TypeInner
208:	OPTIONAL-53 -> /* empty */
209:	HashDereference -> '%{' Variable '}'
210:	HashDereference -> '%{' OPTIONAL-53 HashReference '}'
211:	WordScoped -> WORD
212:	WordScoped -> WORD_SCOPED
213:	LoopLabel -> WORD_UPPERCASE
214:	Type -> WORD
215:	Type -> WORD_SCOPED
216:	Type -> TYPE_INTEGER
217:	TypeInner -> MY Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
218:	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN
219:	VariableOrLiteral -> Variable
220:	VariableOrLiteral -> Literal
221:	VariableOrLiteralOrWord -> Variable
222:	VariableOrLiteralOrWord -> Literal
223:	VariableOrLiteralOrWord -> WORD
224:	Literal -> LITERAL_NUMBER
225:	Literal -> LITERAL_STRING

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	SHEBANG	shift, and go to state 3
	USE_RPERL	shift, and go to state 1

	'## no critic qw('	reduce using rule 20 (OPTIONAL-9)
	'package'	reduce using rule 20 (OPTIONAL-9)

	ModuleHeader	go to state 5
	PAREN-1	go to state 2
	OPTIONAL-9	go to state 6
	PLUS-2	go to state 7
	CompileUnit	go to state 8
	Program	go to state 4

State 1:

	OPTIONAL-9 -> USE_RPERL .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 2:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 3:

	Program -> SHEBANG . USE_RPERL OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	USE_RPERL	shift, and go to state 9

State 4:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 5:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent qw('	shift, and go to state 14

	'## no critic qw('	reduce using rule 27 (STAR-11)
	'our'	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	USE	reduce using rule 27 (STAR-11)

	Module	go to state 13
	Package	go to state 10
	Class	go to state 11
	STAR-11	go to state 12

State 6:

	ModuleHeader -> OPTIONAL-9 . OPTIONAL-10 'package' WordScoped ';' Header	(Rule 23)

	'## no critic qw('	shift, and go to state 15

	'package'	reduce using rule 22 (OPTIONAL-10)

	Critic	go to state 16
	OPTIONAL-10	go to state 17

State 7:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	USE_RPERL	shift, and go to state 1

	$end	reduce using rule 5 (CompileUnit)
	'## no critic qw('	reduce using rule 20 (OPTIONAL-9)
	'package'	reduce using rule 20 (OPTIONAL-9)

	OPTIONAL-9	go to state 6
	PAREN-1	go to state 18
	ModuleHeader	go to state 5

State 8:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 19

State 9:

	Program -> SHEBANG USE_RPERL . OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 15

	'use strict;'	reduce using rule 7 (OPTIONAL-3)

	OPTIONAL-3	go to state 21
	Critic	go to state 20

State 10:

	Module -> Package .	(Rule 24)

	$default	reduce using rule 24 (Module)

State 11:

	Module -> Class .	(Rule 25)

	$default	reduce using rule 25 (Module)

State 12:

	STAR-11 -> STAR-11 . Critic	(Rule 26)
	Package -> STAR-11 . STAR-12 STAR-13 PLUS-14 LITERAL_NUMBER ';'	(Rule 34)

	'## no critic qw('	shift, and go to state 15

	'our'	reduce using rule 29 (STAR-12)
	'use constant'	reduce using rule 29 (STAR-12)
	USE	reduce using rule 29 (STAR-12)

	STAR-12	go to state 22
	Critic	go to state 23

State 13:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 14:

	Class -> 'use parent qw(' . WordScoped ')' ';' Include STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	WordScoped	go to state 26

State 15:

	Critic -> '## no critic qw(' . PLUS-16 ')'	(Rule 40)

	WORD	shift, and go to state 28

	PLUS-16	go to state 27

State 16:

	OPTIONAL-10 -> Critic .	(Rule 21)

	$default	reduce using rule 21 (OPTIONAL-10)

State 17:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 . 'package' WordScoped ';' Header	(Rule 23)

	'package'	shift, and go to state 29

State 18:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 19:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 20:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 21:

	Program -> SHEBANG USE_RPERL OPTIONAL-3 . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 31

	Header	go to state 30

State 22:

	STAR-12 -> STAR-12 . Include	(Rule 28)
	Package -> STAR-11 STAR-12 . STAR-13 PLUS-14 LITERAL_NUMBER ';'	(Rule 34)

	USE	shift, and go to state 34

	'our'	reduce using rule 31 (STAR-13)
	'use constant'	reduce using rule 31 (STAR-13)

	Include	go to state 32
	STAR-13	go to state 33

State 23:

	STAR-11 -> STAR-11 Critic .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 24:

	WordScoped -> WORD .	(Rule 211)

	$default	reduce using rule 211 (WordScoped)

State 25:

	WordScoped -> WORD_SCOPED .	(Rule 212)

	$default	reduce using rule 212 (WordScoped)

State 26:

	Class -> 'use parent qw(' WordScoped . ')' ';' Include STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	')'	shift, and go to state 35

State 27:

	PLUS-16 -> PLUS-16 . WORD	(Rule 38)
	Critic -> '## no critic qw(' PLUS-16 . ')'	(Rule 40)

	')'	shift, and go to state 37
	WORD	shift, and go to state 36

State 28:

	PLUS-16 -> WORD .	(Rule 39)

	$default	reduce using rule 39 (PLUS-16)

State 29:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' . WordScoped ';' Header	(Rule 23)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	WordScoped	go to state 38

State 30:

	Program -> SHEBANG USE_RPERL OPTIONAL-3 Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 39

State 31:

	Header -> 'use strict;' . 'use warnings;' OPTIONAL-15 'our' VERSION_NUMBER_ASSIGN	(Rule 37)

	'use warnings;'	shift, and go to state 40

State 32:

	STAR-12 -> STAR-12 Include .	(Rule 28)

	$default	reduce using rule 28 (STAR-12)

State 33:

	STAR-13 -> STAR-13 . Constant	(Rule 30)
	Package -> STAR-11 STAR-12 STAR-13 . PLUS-14 LITERAL_NUMBER ';'	(Rule 34)

	'our'	shift, and go to state 43
	'use constant'	shift, and go to state 41

	Constant	go to state 44
	Subroutine	go to state 42
	PLUS-14	go to state 45

State 34:

	Include -> USE . WordScoped ';'	(Rule 43)
	Include -> USE . WordScoped OP01_QW PLUS-17 ')' ';'	(Rule 44)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	WordScoped	go to state 46

State 35:

	Class -> 'use parent qw(' WordScoped ')' . ';' Include STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	';'	shift, and go to state 47

State 36:

	PLUS-16 -> PLUS-16 WORD .	(Rule 38)

	$default	reduce using rule 38 (PLUS-16)

State 37:

	Critic -> '## no critic qw(' PLUS-16 ')' .	(Rule 40)

	$default	reduce using rule 40 (Critic)

State 38:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped . ';' Header	(Rule 23)

	';'	shift, and go to state 48

State 39:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG USE_RPERL OPTIONAL-3 Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 15

	'%{'	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'for'	reduce using rule 11 (STAR-5)
	'foreach'	reduce using rule 11 (STAR-5)
	'if'	reduce using rule 11 (STAR-5)
	'our'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'while'	reduce using rule 11 (STAR-5)
	LBRACE	reduce using rule 11 (STAR-5)
	LBRACKET	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	LPAREN	reduce using rule 11 (STAR-5)
	MY	reduce using rule 11 (STAR-5)
	OP01_CLOSE	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_LPAREN	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_SCOLON	reduce using rule 11 (STAR-5)
	OP01_OPEN	reduce using rule 11 (STAR-5)
	OP01_PRINT	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG_LPAREN	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	USE	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)
	WORD_UPPERCASE	reduce using rule 11 (STAR-5)

	STAR-5	go to state 49
	Critic	go to state 50

State 40:

	Header -> 'use strict;' 'use warnings;' . OPTIONAL-15 'our' VERSION_NUMBER_ASSIGN	(Rule 37)

	USE_RPERL_AFTER	shift, and go to state 51

	'our'	reduce using rule 36 (OPTIONAL-15)

	OPTIONAL-15	go to state 52

State 41:

	Constant -> 'use constant' . WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 45)

	WORD_UPPERCASE	shift, and go to state 53

State 42:

	PLUS-14 -> Subroutine .	(Rule 33)

	$default	reduce using rule 33 (PLUS-14)

State 43:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 STAR-19 '}' ';'	(Rule 50)

	TYPE_INTEGER	shift, and go to state 56
	WORD	shift, and go to state 55
	WORD_SCOPED	shift, and go to state 54

	Type	go to state 57

State 44:

	STAR-13 -> STAR-13 Constant .	(Rule 30)

	$default	reduce using rule 30 (STAR-13)

State 45:

	PLUS-14 -> PLUS-14 . Subroutine	(Rule 32)
	Package -> STAR-11 STAR-12 STAR-13 PLUS-14 . LITERAL_NUMBER ';'	(Rule 34)

	'our'	shift, and go to state 43
	LITERAL_NUMBER	shift, and go to state 58

	Subroutine	go to state 59

State 46:

	Include -> USE WordScoped . ';'	(Rule 43)
	Include -> USE WordScoped . OP01_QW PLUS-17 ')' ';'	(Rule 44)

	';'	shift, and go to state 60
	OP01_QW	shift, and go to state 61

State 47:

	Class -> 'use parent qw(' WordScoped ')' ';' . Include STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	USE	shift, and go to state 34

	Include	go to state 62

State 48:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped ';' . Header	(Rule 23)

	'use strict;'	shift, and go to state 31

	Header	go to state 63

State 49:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG USE_RPERL OPTIONAL-3 Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	USE	shift, and go to state 34

	'%{'	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'for'	reduce using rule 13 (STAR-6)
	'foreach'	reduce using rule 13 (STAR-6)
	'if'	reduce using rule 13 (STAR-6)
	'our'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while'	reduce using rule 13 (STAR-6)
	LBRACE	reduce using rule 13 (STAR-6)
	LBRACKET	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	LPAREN	reduce using rule 13 (STAR-6)
	MY	reduce using rule 13 (STAR-6)
	OP01_CLOSE	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_LPAREN	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_SCOLON	reduce using rule 13 (STAR-6)
	OP01_OPEN	reduce using rule 13 (STAR-6)
	OP01_PRINT	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG_LPAREN	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)
	WORD_UPPERCASE	reduce using rule 13 (STAR-6)

	STAR-6	go to state 64
	Include	go to state 65

State 50:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 51:

	OPTIONAL-15 -> USE_RPERL_AFTER .	(Rule 35)

	$default	reduce using rule 35 (OPTIONAL-15)

State 52:

	Header -> 'use strict;' 'use warnings;' OPTIONAL-15 . 'our' VERSION_NUMBER_ASSIGN	(Rule 37)

	'our'	shift, and go to state 66

State 53:

	Constant -> 'use constant' WORD_UPPERCASE . OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 45)

	OP20_HASH_FATARROW	shift, and go to state 67

State 54:

	Type -> WORD_SCOPED .	(Rule 215)

	$default	reduce using rule 215 (Type)

State 55:

	Type -> WORD .	(Rule 214)

	$default	reduce using rule 214 (Type)

State 56:

	Type -> TYPE_INTEGER .	(Rule 216)

	$default	reduce using rule 216 (Type)

State 57:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-18 STAR-19 '}' ';'	(Rule 50)

	VARIABLE_SYMBOL	shift, and go to state 68

State 58:

	Package -> STAR-11 STAR-12 STAR-13 PLUS-14 LITERAL_NUMBER . ';'	(Rule 34)

	';'	shift, and go to state 69

State 59:

	PLUS-14 -> PLUS-14 Subroutine .	(Rule 32)

	$default	reduce using rule 32 (PLUS-14)

State 60:

	Include -> USE WordScoped ';' .	(Rule 43)

	$default	reduce using rule 43 (Include)

State 61:

	Include -> USE WordScoped OP01_QW . PLUS-17 ')' ';'	(Rule 44)

	WORD	shift, and go to state 70

	PLUS-17	go to state 71

State 62:

	Class -> 'use parent qw(' WordScoped ')' ';' Include . STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	$default	reduce using rule 56 (STAR-22)

	STAR-22	go to state 72

State 63:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped ';' Header .	(Rule 23)

	$default	reduce using rule 23 (ModuleHeader)

State 64:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG USE_RPERL OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 41

	'%{'	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'for'	reduce using rule 15 (STAR-7)
	'foreach'	reduce using rule 15 (STAR-7)
	'if'	reduce using rule 15 (STAR-7)
	'our'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while'	reduce using rule 15 (STAR-7)
	LBRACE	reduce using rule 15 (STAR-7)
	LBRACKET	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	LPAREN	reduce using rule 15 (STAR-7)
	MY	reduce using rule 15 (STAR-7)
	OP01_CLOSE	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_LPAREN	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_SCOLON	reduce using rule 15 (STAR-7)
	OP01_OPEN	reduce using rule 15 (STAR-7)
	OP01_PRINT	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG_LPAREN	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)
	WORD_UPPERCASE	reduce using rule 15 (STAR-7)

	STAR-7	go to state 73
	Constant	go to state 74

State 65:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 66:

	Header -> 'use strict;' 'use warnings;' OPTIONAL-15 'our' . VERSION_NUMBER_ASSIGN	(Rule 37)

	VERSION_NUMBER_ASSIGN	shift, and go to state 75

State 67:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW . TypeInnerConstant Literal ';'	(Rule 45)

	MY	shift, and go to state 76

	TypeInnerConstant	go to state 77

State 68:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-18 STAR-19 '}' ';'	(Rule 50)

	'= sub {'	shift, and go to state 78

State 69:

	Package -> STAR-11 STAR-12 STAR-13 PLUS-14 LITERAL_NUMBER ';' .	(Rule 34)

	$default	reduce using rule 34 (Package)

State 70:

	PLUS-17 -> WORD .	(Rule 42)

	$default	reduce using rule 42 (PLUS-17)

State 71:

	PLUS-17 -> PLUS-17 . WORD	(Rule 41)
	Include -> USE WordScoped OP01_QW PLUS-17 . ')' ';'	(Rule 44)

	')'	shift, and go to state 80
	WORD	shift, and go to state 79

State 72:

	STAR-22 -> STAR-22 . Critic	(Rule 55)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 . STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	'## no critic qw('	shift, and go to state 15

	'our hashref $properties'	reduce using rule 58 (STAR-23)
	'use constant'	reduce using rule 58 (STAR-23)
	USE	reduce using rule 58 (STAR-23)

	Critic	go to state 82
	STAR-23	go to state 81

State 73:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG USE_RPERL OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'if'	shift, and go to state 103
	'our'	shift, and go to state 43
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	MY	shift, and go to state 104
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 101
	OP01_NAMED_VOID	shift, and go to state 121
	OP01_NAMED_VOID_LPAREN	shift, and go to state 96
	OP01_NAMED_VOID_SCOLON	shift, and go to state 90
	OP01_OPEN	shift, and go to state 125
	OP01_PRINT	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP19_LOOP_CONTROL	shift, and go to state 108
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 86
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 95

	'for'	reduce using rule 147 (OPTIONAL-38)
	'foreach'	reduce using rule 147 (OPTIONAL-38)
	'while'	reduce using rule 147 (OPTIONAL-38)

	SubExpression	go to state 89
	Conditional	go to state 88
	Statement	go to state 112
	OperatorVoid	go to state 110
	WordScoped	go to state 111
	Variable	go to state 107
	VariableModification	go to state 83
	VariableDeclaration	go to state 128
	PLUS-8	go to state 98
	ArrayDereference	go to state 127
	HashReference	go to state 99
	HashDereference	go to state 126
	Expression	go to state 94
	PAREN-37	go to state 124
	Subroutine	go to state 91
	OPTIONAL-38	go to state 122
	Operation	go to state 92
	LoopLabel	go to state 117
	Operator	go to state 120
	ArrayReference	go to state 119
	Literal	go to state 118

State 74:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 75:

	Header -> 'use strict;' 'use warnings;' OPTIONAL-15 'our' VERSION_NUMBER_ASSIGN .	(Rule 37)

	$default	reduce using rule 37 (Header)

State 76:

	TypeInnerConstant -> MY . Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 218)

	TYPE_INTEGER	shift, and go to state 56
	WORD	shift, and go to state 55
	WORD_SCOPED	shift, and go to state 54

	Type	go to state 130

State 77:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant . Literal ';'	(Rule 45)

	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85

	Literal	go to state 131

State 78:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-18 STAR-19 '}' ';'	(Rule 50)

	LPAREN_MY	shift, and go to state 134

	'%{'	reduce using rule 47 (OPTIONAL-18)
	'@{'	reduce using rule 47 (OPTIONAL-18)
	'for'	reduce using rule 47 (OPTIONAL-18)
	'foreach'	reduce using rule 47 (OPTIONAL-18)
	'if'	reduce using rule 47 (OPTIONAL-18)
	'undef'	reduce using rule 47 (OPTIONAL-18)
	'while'	reduce using rule 47 (OPTIONAL-18)
	'}'	reduce using rule 47 (OPTIONAL-18)
	LBRACE	reduce using rule 47 (OPTIONAL-18)
	LBRACKET	reduce using rule 47 (OPTIONAL-18)
	LITERAL_NUMBER	reduce using rule 47 (OPTIONAL-18)
	LITERAL_STRING	reduce using rule 47 (OPTIONAL-18)
	LPAREN	reduce using rule 47 (OPTIONAL-18)
	MY	reduce using rule 47 (OPTIONAL-18)
	OP01_CLOSE	reduce using rule 47 (OPTIONAL-18)
	OP01_NAMED	reduce using rule 47 (OPTIONAL-18)
	OP01_NAMED_VOID	reduce using rule 47 (OPTIONAL-18)
	OP01_NAMED_VOID_LPAREN	reduce using rule 47 (OPTIONAL-18)
	OP01_NAMED_VOID_SCOLON	reduce using rule 47 (OPTIONAL-18)
	OP01_OPEN	reduce using rule 47 (OPTIONAL-18)
	OP01_PRINT	reduce using rule 47 (OPTIONAL-18)
	OP03_MATH_INC_DEC	reduce using rule 47 (OPTIONAL-18)
	OP05_LOGICAL_NEG	reduce using rule 47 (OPTIONAL-18)
	OP05_MATH_NEG_LPAREN	reduce using rule 47 (OPTIONAL-18)
	OP10_NAMED_UNARY	reduce using rule 47 (OPTIONAL-18)
	OP19_LOOP_CONTROL	reduce using rule 47 (OPTIONAL-18)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 47 (OPTIONAL-18)
	OP22_LOGICAL_NEG	reduce using rule 47 (OPTIONAL-18)
	VARIABLE_SYMBOL	reduce using rule 47 (OPTIONAL-18)
	WORD	reduce using rule 47 (OPTIONAL-18)
	WORD_SCOPED	reduce using rule 47 (OPTIONAL-18)
	WORD_UPPERCASE	reduce using rule 47 (OPTIONAL-18)

	SubroutineArguments	go to state 133
	OPTIONAL-18	go to state 132

State 79:

	PLUS-17 -> PLUS-17 WORD .	(Rule 41)

	$default	reduce using rule 41 (PLUS-17)

State 80:

	Include -> USE WordScoped OP01_QW PLUS-17 ')' . ';'	(Rule 44)

	';'	shift, and go to state 135

State 81:

	STAR-23 -> STAR-23 . Include	(Rule 57)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 STAR-23 . STAR-24 Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	USE	shift, and go to state 34

	'our hashref $properties'	reduce using rule 60 (STAR-24)
	'use constant'	reduce using rule 60 (STAR-24)

	Include	go to state 137
	STAR-24	go to state 136

State 82:

	STAR-22 -> STAR-22 Critic .	(Rule 55)

	$default	reduce using rule 55 (STAR-22)

State 83:

	Statement -> VariableModification .	(Rule 152)

	$default	reduce using rule 152 (Statement)

State 84:

	Operator -> OP10_NAMED_UNARY . SubExpression	(Rule 98)
	Operator -> OP10_NAMED_UNARY .	(Rule 99)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	')'	reduce using rule 99 (Operator)
	';'	reduce using rule 99 (Operator)
	']'	reduce using rule 99 (Operator)
	'}'	reduce using rule 99 (Operator)
	OP04_MATH_POW	reduce using rule 99 (Operator)
	OP06_REGEX_MATCH	reduce using rule 99 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 99 (Operator)
	OP07_STRING_REPEAT	reduce using rule 99 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 99 (Operator)
	OP08_STRING_CAT	reduce using rule 99 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 99 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 99 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 99 (Operator)
	OP13_BITWISE_AND	reduce using rule 99 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 99 (Operator)
	OP15_LOGICAL_AND	reduce using rule 99 (Operator)
	OP16_LOGICAL_OR	reduce using rule 99 (Operator)
	OP17_LIST_RANGE	reduce using rule 99 (Operator)
	OP18_TERNARY	reduce using rule 99 (Operator)
	OP21_LIST_COMMA	reduce using rule 99 (Operator)
	OP23_LOGICAL_AND	reduce using rule 99 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 99 (Operator)

	Variable	go to state 138
	Literal	go to state 118
	ArrayReference	go to state 119
	Operator	go to state 120
	HashReference	go to state 99
	ArrayDereference	go to state 127
	SubExpression	go to state 139
	WordScoped	go to state 111
	Expression	go to state 141
	HashDereference	go to state 126

State 85:

	Literal -> LITERAL_STRING .	(Rule 225)

	$default	reduce using rule 225 (Literal)

State 86:

	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON .	(Rule 122)

	$default	reduce using rule 122 (OperatorVoid)

State 87:

	Operator -> OP05_LOGICAL_NEG . SubExpression	(Rule 90)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	Operator	go to state 120
	ArrayReference	go to state 119
	Literal	go to state 118
	Variable	go to state 138
	HashDereference	go to state 126
	Expression	go to state 141
	WordScoped	go to state 111
	SubExpression	go to state 143
	ArrayDereference	go to state 127
	HashReference	go to state 99

State 88:

	Statement -> Conditional .	(Rule 148)

	$default	reduce using rule 148 (Statement)

State 89:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 147
	OP12_COMPARE_EQ_NE	shift, and go to state 160
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 159
	OP16_LOGICAL_OR	shift, and go to state 156
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 145
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 151

State 90:

	OperatorVoid -> OP01_NAMED_VOID_SCOLON .	(Rule 118)

	$default	reduce using rule 118 (OperatorVoid)

State 91:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 92:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 93:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 87)

	VARIABLE_SYMBOL	shift, and go to state 116

	Variable	go to state 161

State 94:

	Operation -> Expression . ';'	(Rule 80)
	SubExpression -> Expression .	(Rule 134)

	';'	shift, and go to state 162

	OP04_MATH_POW	reduce using rule 134 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 134 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 134 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 134 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 134 (SubExpression)
	OP08_STRING_CAT	reduce using rule 134 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 134 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 134 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 134 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 134 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 134 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 134 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 134 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 134 (SubExpression)
	OP18_TERNARY	reduce using rule 134 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 134 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 134 (SubExpression)

State 95:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 130)
	LoopLabel -> WORD_UPPERCASE .	(Rule 213)

	LPAREN	shift, and go to state 163

	COLON	reduce using rule 213 (LoopLabel)

State 96:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN . OPTIONAL-34 ')' ';'	(Rule 119)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	MY	shift, and go to state 164
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP01_QW	shift, and go to state 166
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	')'	reduce using rule 115 (OPTIONAL-34)

	Operator	go to state 120
	Literal	go to state 118
	ArrayReference	go to state 119
	Variable	go to state 138
	ListElement	go to state 168
	HashDereference	go to state 126
	TypeInner	go to state 167
	Expression	go to state 141
	WordScoped	go to state 111
	ListElements	go to state 165
	OPTIONAL-34	go to state 169
	SubExpression	go to state 170
	ArrayDereference	go to state 127
	HashReference	go to state 99

State 97:

	Operator -> OP01_CLOSE . FHREF_SYMBOL	(Rule 86)

	FHREF_SYMBOL	shift, and go to state 171

State 98:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG USE_RPERL OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'if'	shift, and go to state 103
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	MY	shift, and go to state 104
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 101
	OP01_NAMED_VOID	shift, and go to state 121
	OP01_NAMED_VOID_LPAREN	shift, and go to state 96
	OP01_NAMED_VOID_SCOLON	shift, and go to state 90
	OP01_OPEN	shift, and go to state 125
	OP01_PRINT	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP19_LOOP_CONTROL	shift, and go to state 108
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 86
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 95

	$end	reduce using rule 18 (Program)
	'for'	reduce using rule 147 (OPTIONAL-38)
	'foreach'	reduce using rule 147 (OPTIONAL-38)
	'while'	reduce using rule 147 (OPTIONAL-38)

	Variable	go to state 107
	VariableModification	go to state 83
	SubExpression	go to state 89
	Conditional	go to state 88
	Statement	go to state 112
	OperatorVoid	go to state 110
	WordScoped	go to state 111
	OPTIONAL-38	go to state 122
	Operation	go to state 172
	LoopLabel	go to state 117
	Operator	go to state 120
	Literal	go to state 118
	ArrayReference	go to state 119
	VariableDeclaration	go to state 128
	ArrayDereference	go to state 127
	HashReference	go to state 99
	HashDereference	go to state 126
	PAREN-37	go to state 124
	Expression	go to state 94

State 99:

	SubExpression -> HashReference .	(Rule 140)

	$default	reduce using rule 140 (SubExpression)

State 100:

	Operator -> LPAREN . OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')'	(Rule 82)
	Operator -> LPAREN . OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'	(Rule 84)
	SubExpression -> LPAREN . SubExpression ')'	(Rule 142)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 174
	OP01_OPEN	shift, and go to state 125
	OP01_PRINT	shift, and go to state 175
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	WordScoped	go to state 111
	Expression	go to state 141
	HashDereference	go to state 126
	HashReference	go to state 99
	ArrayDereference	go to state 127
	SubExpression	go to state 173
	Literal	go to state 118
	ArrayReference	go to state 119
	Operator	go to state 120
	Variable	go to state 138

State 101:

	Operator -> OP01_NAMED . SubExpression	(Rule 83)
	OperatorVoid -> OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ';'	(Rule 121)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	MY	shift, and go to state 164
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP01_QW	shift, and go to state 166
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	Literal	go to state 118
	ArrayReference	go to state 119
	Operator	go to state 120
	ListElement	go to state 176
	Variable	go to state 138
	WordScoped	go to state 111
	TypeInner	go to state 167
	Expression	go to state 141
	HashDereference	go to state 126
	HashReference	go to state 99
	ArrayDereference	go to state 127
	SubExpression	go to state 177

State 102:

	HashDereference -> '%{' . Variable '}'	(Rule 209)
	HashDereference -> '%{' . OPTIONAL-53 HashReference '}'	(Rule 210)

	MY	shift, and go to state 164
	VARIABLE_SYMBOL	shift, and go to state 116

	LBRACE	reduce using rule 208 (OPTIONAL-53)

	OPTIONAL-53	go to state 179
	Variable	go to state 180
	TypeInner	go to state 178

State 103:

	Conditional -> 'if' . LPAREN SubExpression ')' CodeBlock STAR-40 OPTIONAL-42	(Rule 159)

	LPAREN	shift, and go to state 181

State 104:

	VariableDeclaration -> MY . Type VARIABLE_SYMBOL ';'	(Rule 175)
	VariableDeclaration -> MY . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 176)
	VariableDeclaration -> MY . TYPE_FHREF FHREF_SYMBOL ';'	(Rule 177)

	TYPE_FHREF	shift, and go to state 182
	TYPE_INTEGER	shift, and go to state 56
	WORD	shift, and go to state 55
	WORD_SCOPED	shift, and go to state 54

	Type	go to state 183

State 105:

	SubExpression -> 'undef' .	(Rule 135)

	$default	reduce using rule 135 (SubExpression)

State 106:

	ArrayReference -> LBRACKET . OPTIONAL-48 ']'	(Rule 191)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	MY	shift, and go to state 164
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP01_QW	shift, and go to state 166
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	']'	reduce using rule 190 (OPTIONAL-48)

	OPTIONAL-48	go to state 185
	ListElement	go to state 168
	Variable	go to state 138
	Literal	go to state 118
	ArrayReference	go to state 119
	Operator	go to state 120
	HashReference	go to state 99
	ArrayDereference	go to state 127
	SubExpression	go to state 170
	ListElements	go to state 184
	WordScoped	go to state 111
	TypeInner	go to state 167
	Expression	go to state 141
	HashDereference	go to state 126

State 107:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 88)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-36 ')'	(Rule 132)
	SubExpression -> Variable .	(Rule 137)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 178)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY SubExpression ';'	(Rule 179)

	OP02_METHOD_THINARROW	shift, and go to state 186
	OP03_MATH_INC_DEC	shift, and go to state 189
	OP19_VARIABLE_ASSIGN	shift, and go to state 187
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 188

	OP04_MATH_POW	reduce using rule 137 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 137 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 137 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 137 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 137 (SubExpression)
	OP08_STRING_CAT	reduce using rule 137 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 137 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 137 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 137 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 137 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 137 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 137 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 137 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 137 (SubExpression)
	OP18_TERNARY	reduce using rule 137 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 137 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 137 (SubExpression)

State 108:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 123)

	WORD_UPPERCASE	shift, and go to state 191

	LoopLabel	go to state 190

State 109:

	OperatorVoid -> OP01_PRINT . OPTIONAL-33 ListElements ';'	(Rule 116)
	OperatorVoid -> OP01_PRINT . FHREF_SYMBOL_BRACES ListElements ';'	(Rule 117)

	FHREF_SYMBOL_BRACES	shift, and go to state 195
	STDOUT_STDERR	shift, and go to state 194

	'%{'	reduce using rule 113 (OPTIONAL-33)
	'@{'	reduce using rule 113 (OPTIONAL-33)
	'undef'	reduce using rule 113 (OPTIONAL-33)
	LBRACE	reduce using rule 113 (OPTIONAL-33)
	LBRACKET	reduce using rule 113 (OPTIONAL-33)
	LITERAL_NUMBER	reduce using rule 113 (OPTIONAL-33)
	LITERAL_STRING	reduce using rule 113 (OPTIONAL-33)
	LPAREN	reduce using rule 113 (OPTIONAL-33)
	MY	reduce using rule 113 (OPTIONAL-33)
	OP01_CLOSE	reduce using rule 113 (OPTIONAL-33)
	OP01_NAMED	reduce using rule 113 (OPTIONAL-33)
	OP01_OPEN	reduce using rule 113 (OPTIONAL-33)
	OP01_QW	reduce using rule 113 (OPTIONAL-33)
	OP03_MATH_INC_DEC	reduce using rule 113 (OPTIONAL-33)
	OP05_LOGICAL_NEG	reduce using rule 113 (OPTIONAL-33)
	OP05_MATH_NEG_LPAREN	reduce using rule 113 (OPTIONAL-33)
	OP10_NAMED_UNARY	reduce using rule 113 (OPTIONAL-33)
	OP22_LOGICAL_NEG	reduce using rule 113 (OPTIONAL-33)
	VARIABLE_SYMBOL	reduce using rule 113 (OPTIONAL-33)
	WORD	reduce using rule 113 (OPTIONAL-33)
	WORD_SCOPED	reduce using rule 113 (OPTIONAL-33)
	WORD_UPPERCASE	reduce using rule 113 (OPTIONAL-33)

	OPTIONAL-33	go to state 192
	PAREN-32	go to state 193

State 110:

	Statement -> OperatorVoid .	(Rule 150)

	$default	reduce using rule 150 (Statement)

State 111:

	Expression -> WordScoped . LPAREN OPTIONAL-35 ')'	(Rule 129)
	Expression -> WordScoped . SCOPE WORD_UPPERCASE LPAREN ')'	(Rule 131)
	Expression -> WordScoped . OP02_METHOD_THINARROW_NEW ')'	(Rule 133)

	LPAREN	shift, and go to state 197
	OP02_METHOD_THINARROW_NEW	shift, and go to state 198
	SCOPE	shift, and go to state 196

State 112:

	Operation -> Statement .	(Rule 81)

	$default	reduce using rule 81 (Operation)

State 113:

	HashReference -> LBRACE . HashEntry STAR-52 '}'	(Rule 205)
	HashReference -> LBRACE . '}'	(Rule 206)

	'%{'	shift, and go to state 102
	'}'	shift, and go to state 205
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 201

	Variable	go to state 200
	VariableOrLiteralOrWord	go to state 202
	HashDereference	go to state 203
	HashEntry	go to state 199
	Literal	go to state 204

State 114:

	Literal -> LITERAL_NUMBER .	(Rule 224)

	$default	reduce using rule 224 (Literal)

State 115:

	Operator -> OP22_LOGICAL_NEG . SubExpression	(Rule 108)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	HashDereference	go to state 126
	Expression	go to state 141
	WordScoped	go to state 111
	SubExpression	go to state 206
	ArrayDereference	go to state 127
	HashReference	go to state 99
	Operator	go to state 120
	Literal	go to state 118
	ArrayReference	go to state 119
	Variable	go to state 138

State 116:

	Variable -> VARIABLE_SYMBOL . STAR-44	(Rule 171)

	$default	reduce using rule 170 (STAR-44)

	STAR-44	go to state 207

State 117:

	PAREN-37 -> LoopLabel . COLON	(Rule 145)

	COLON	shift, and go to state 208

State 118:

	SubExpression -> Literal .	(Rule 136)

	$default	reduce using rule 136 (SubExpression)

State 119:

	SubExpression -> ArrayReference .	(Rule 138)

	$default	reduce using rule 138 (SubExpression)

State 120:

	Expression -> Operator .	(Rule 128)

	$default	reduce using rule 128 (Expression)

State 121:

	OperatorVoid -> OP01_NAMED_VOID . ListElements ';'	(Rule 120)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	MY	shift, and go to state 164
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP01_QW	shift, and go to state 166
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	HashReference	go to state 99
	ArrayDereference	go to state 127
	SubExpression	go to state 170
	ListElements	go to state 209
	WordScoped	go to state 111
	TypeInner	go to state 167
	Expression	go to state 141
	HashDereference	go to state 126
	ListElement	go to state 168
	Variable	go to state 138
	ArrayReference	go to state 119
	Literal	go to state 118
	Operator	go to state 120

State 122:

	Statement -> OPTIONAL-38 . Loop	(Rule 149)

	'for'	shift, and go to state 214
	'foreach'	shift, and go to state 211
	'while'	shift, and go to state 213

	LoopWhile	go to state 210
	LoopFor	go to state 216
	LoopForEach	go to state 215
	Loop	go to state 212

State 123:

	ArrayDereference -> '@{' . Variable '}'	(Rule 194)
	ArrayDereference -> '@{' . OPTIONAL-49 ArrayReference '}'	(Rule 195)

	MY	shift, and go to state 164
	VARIABLE_SYMBOL	shift, and go to state 116

	LBRACKET	reduce using rule 193 (OPTIONAL-49)

	Variable	go to state 219
	OPTIONAL-49	go to state 218
	TypeInner	go to state 217

State 124:

	OPTIONAL-38 -> PAREN-37 .	(Rule 146)

	$default	reduce using rule 146 (OPTIONAL-38)

State 125:

	Operator -> OP01_OPEN . MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 85)

	MY	shift, and go to state 220

State 126:

	SubExpression -> HashDereference .	(Rule 141)

	$default	reduce using rule 141 (SubExpression)

State 127:

	SubExpression -> ArrayDereference .	(Rule 139)

	$default	reduce using rule 139 (SubExpression)

State 128:

	Statement -> VariableDeclaration .	(Rule 151)

	$default	reduce using rule 151 (Statement)

State 129:

	Operator -> OP05_MATH_NEG_LPAREN . SubExpression ')'	(Rule 91)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	Operator	go to state 120
	Literal	go to state 118
	ArrayReference	go to state 119
	Variable	go to state 138
	WordScoped	go to state 111
	HashDereference	go to state 126
	Expression	go to state 141
	HashReference	go to state 99
	SubExpression	go to state 221
	ArrayDereference	go to state 127

State 130:

	TypeInnerConstant -> MY Type . '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 218)

	'$TYPED_'	shift, and go to state 222

State 131:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal . ';'	(Rule 45)

	';'	shift, and go to state 223

State 132:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 . STAR-19 '}' ';'	(Rule 50)

	$default	reduce using rule 49 (STAR-19)

	STAR-19	go to state 224

State 133:

	OPTIONAL-18 -> SubroutineArguments .	(Rule 46)

	$default	reduce using rule 46 (OPTIONAL-18)

State 134:

	SubroutineArguments -> LPAREN_MY . Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 54)

	TYPE_INTEGER	shift, and go to state 56
	WORD	shift, and go to state 55
	WORD_SCOPED	shift, and go to state 54

	Type	go to state 225

State 135:

	Include -> USE WordScoped OP01_QW PLUS-17 ')' ';' .	(Rule 44)

	$default	reduce using rule 44 (Include)

State 136:

	STAR-24 -> STAR-24 . Constant	(Rule 59)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 STAR-23 STAR-24 . Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	'our hashref $properties'	shift, and go to state 226
	'use constant'	shift, and go to state 41

	Properties	go to state 227
	Constant	go to state 228

State 137:

	STAR-23 -> STAR-23 Include .	(Rule 57)

	$default	reduce using rule 57 (STAR-23)

State 138:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 88)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-36 ')'	(Rule 132)
	SubExpression -> Variable .	(Rule 137)

	OP02_METHOD_THINARROW	shift, and go to state 186
	OP03_MATH_INC_DEC	shift, and go to state 189

	')'	reduce using rule 137 (SubExpression)
	';'	reduce using rule 137 (SubExpression)
	']'	reduce using rule 137 (SubExpression)
	'}'	reduce using rule 137 (SubExpression)
	OP04_MATH_POW	reduce using rule 137 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 137 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 137 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 137 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 137 (SubExpression)
	OP08_STRING_CAT	reduce using rule 137 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 137 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 137 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 137 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 137 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 137 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 137 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 137 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 137 (SubExpression)
	OP18_TERNARY	reduce using rule 137 (SubExpression)
	OP21_LIST_COMMA	reduce using rule 137 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 137 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 137 (SubExpression)

State 139:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> OP10_NAMED_UNARY SubExpression .	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 149

	')'	reduce using rule 98 (Operator)
	';'	reduce using rule 98 (Operator)
	']'	reduce using rule 98 (Operator)
	'}'	reduce using rule 98 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 98 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 98 (Operator)
	OP13_BITWISE_AND	reduce using rule 98 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 98 (Operator)
	OP15_LOGICAL_AND	reduce using rule 98 (Operator)
	OP16_LOGICAL_OR	reduce using rule 98 (Operator)
	OP17_LIST_RANGE	reduce using rule 98 (Operator)
	OP18_TERNARY	reduce using rule 98 (Operator)
	OP21_LIST_COMMA	reduce using rule 98 (Operator)
	OP23_LOGICAL_AND	reduce using rule 98 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 98 (Operator)

State 140:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 130)

	LPAREN	shift, and go to state 163

State 141:

	SubExpression -> Expression .	(Rule 134)

	$default	reduce using rule 134 (SubExpression)

State 142:

	Operator -> OP01_NAMED . SubExpression	(Rule 83)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	Variable	go to state 138
	ArrayReference	go to state 119
	Literal	go to state 118
	Operator	go to state 120
	HashReference	go to state 99
	ArrayDereference	go to state 127
	SubExpression	go to state 229
	WordScoped	go to state 111
	Expression	go to state 141
	HashDereference	go to state 126

State 143:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> OP05_LOGICAL_NEG SubExpression .	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 150

	')'	reduce using rule 90 (Operator)
	';'	reduce using rule 90 (Operator)
	']'	reduce using rule 90 (Operator)
	'}'	reduce using rule 90 (Operator)
	OP06_REGEX_MATCH	reduce using rule 90 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 90 (Operator)
	OP07_STRING_REPEAT	reduce using rule 90 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 90 (Operator)
	OP08_STRING_CAT	reduce using rule 90 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 90 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 90 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 90 (Operator)
	OP13_BITWISE_AND	reduce using rule 90 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 90 (Operator)
	OP15_LOGICAL_AND	reduce using rule 90 (Operator)
	OP16_LOGICAL_OR	reduce using rule 90 (Operator)
	OP17_LIST_RANGE	reduce using rule 90 (Operator)
	OP18_TERNARY	reduce using rule 90 (Operator)
	OP21_LIST_COMMA	reduce using rule 90 (Operator)
	OP23_LOGICAL_AND	reduce using rule 90 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 90 (Operator)

State 144:

	Operator -> SubExpression OP23_LOGICAL_AND . SubExpression	(Rule 109)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	HashReference	go to state 99
	SubExpression	go to state 230
	ArrayDereference	go to state 127
	WordScoped	go to state 111
	HashDereference	go to state 126
	Expression	go to state 141
	Variable	go to state 138
	Operator	go to state 120
	ArrayReference	go to state 119
	Literal	go to state 118

State 145:

	Operator -> SubExpression OP18_TERNARY . VariableOrLiteral COLON VariableOrLiteral	(Rule 107)

	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	VARIABLE_SYMBOL	shift, and go to state 116

	VariableOrLiteral	go to state 233
	Variable	go to state 232
	Literal	go to state 231

State 146:

	Operator -> SubExpression OP07_STRING_REPEAT . SubExpression	(Rule 93)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	WordScoped	go to state 111
	HashDereference	go to state 126
	Expression	go to state 141
	HashReference	go to state 99
	SubExpression	go to state 234
	ArrayDereference	go to state 127
	Operator	go to state 120
	ArrayReference	go to state 119
	Literal	go to state 118
	Variable	go to state 138

State 147:

	Operator -> SubExpression OP11_COMPARE_LT_GT . SubExpression	(Rule 100)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	HashReference	go to state 99
	SubExpression	go to state 235
	ArrayDereference	go to state 127
	WordScoped	go to state 111
	HashDereference	go to state 126
	Expression	go to state 141
	Variable	go to state 138
	Operator	go to state 120
	Literal	go to state 118
	ArrayReference	go to state 119

State 148:

	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD . SubExpression	(Rule 94)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	Variable	go to state 138
	ArrayReference	go to state 119
	Literal	go to state 118
	Operator	go to state 120
	HashReference	go to state 99
	ArrayDereference	go to state 127
	SubExpression	go to state 236
	WordScoped	go to state 111
	Expression	go to state 141
	HashDereference	go to state 126

State 149:

	Operator -> SubExpression OP09_BITWISE_SHIFT . SubExpression	(Rule 97)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	ArrayDereference	go to state 127
	SubExpression	go to state 237
	HashReference	go to state 99
	Expression	go to state 141
	HashDereference	go to state 126
	WordScoped	go to state 111
	Variable	go to state 138
	Literal	go to state 118
	ArrayReference	go to state 119
	Operator	go to state 120

State 150:

	Operator -> SubExpression OP04_MATH_POW . SubExpression	(Rule 89)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	ArrayDereference	go to state 127
	SubExpression	go to state 238
	HashReference	go to state 99
	Expression	go to state 141
	HashDereference	go to state 126
	WordScoped	go to state 111
	Variable	go to state 138
	ArrayReference	go to state 119
	Literal	go to state 118
	Operator	go to state 120

State 151:

	Operator -> SubExpression OP24_LOGICAL_OR_XOR . SubExpression	(Rule 110)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	Variable	go to state 138
	Operator	go to state 120
	ArrayReference	go to state 119
	Literal	go to state 118
	SubExpression	go to state 239
	ArrayDereference	go to state 127
	HashReference	go to state 99
	HashDereference	go to state 126
	Expression	go to state 141
	WordScoped	go to state 111

State 152:

	Operator -> SubExpression OP14_BITWISE_OR_XOR . SubExpression	(Rule 103)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	Variable	go to state 138
	Literal	go to state 118
	ArrayReference	go to state 119
	Operator	go to state 120
	ArrayDereference	go to state 127
	SubExpression	go to state 240
	HashReference	go to state 99
	Expression	go to state 141
	HashDereference	go to state 126
	WordScoped	go to state 111

State 153:

	Operator -> SubExpression OP13_BITWISE_AND . SubExpression	(Rule 102)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	Operator	go to state 120
	ArrayReference	go to state 119
	Literal	go to state 118
	Variable	go to state 138
	WordScoped	go to state 111
	HashDereference	go to state 126
	Expression	go to state 141
	HashReference	go to state 99
	SubExpression	go to state 241
	ArrayDereference	go to state 127

State 154:

	Operator -> SubExpression OP08_STRING_CAT . SubExpression	(Rule 96)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	SubExpression	go to state 242
	ArrayDereference	go to state 127
	HashReference	go to state 99
	HashDereference	go to state 126
	Expression	go to state 141
	WordScoped	go to state 111
	Variable	go to state 138
	Operator	go to state 120
	Literal	go to state 118
	ArrayReference	go to state 119

State 155:

	Operator -> SubExpression OP08_MATH_ADD_SUB . SubExpression	(Rule 95)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	ArrayDereference	go to state 127
	SubExpression	go to state 243
	HashReference	go to state 99
	Expression	go to state 141
	HashDereference	go to state 126
	WordScoped	go to state 111
	Variable	go to state 138
	Literal	go to state 118
	ArrayReference	go to state 119
	Operator	go to state 120

State 156:

	Operator -> SubExpression OP16_LOGICAL_OR . SubExpression	(Rule 105)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	Variable	go to state 138
	Operator	go to state 120
	ArrayReference	go to state 119
	Literal	go to state 118
	HashReference	go to state 99
	SubExpression	go to state 244
	ArrayDereference	go to state 127
	WordScoped	go to state 111
	HashDereference	go to state 126
	Expression	go to state 141

State 157:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 106)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	WordScoped	go to state 111
	Expression	go to state 141
	HashDereference	go to state 126
	HashReference	go to state 99
	ArrayDereference	go to state 127
	SubExpression	go to state 245
	ArrayReference	go to state 119
	Literal	go to state 118
	Operator	go to state 120
	Variable	go to state 138

State 158:

	Operator -> SubExpression OP06_REGEX_MATCH . OP06_REGEX_PATTERN	(Rule 92)

	OP06_REGEX_PATTERN	shift, and go to state 246

State 159:

	Operator -> SubExpression OP15_LOGICAL_AND . SubExpression	(Rule 104)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	Operator	go to state 120
	Literal	go to state 118
	ArrayReference	go to state 119
	Variable	go to state 138
	HashDereference	go to state 126
	Expression	go to state 141
	WordScoped	go to state 111
	SubExpression	go to state 247
	ArrayDereference	go to state 127
	HashReference	go to state 99

State 160:

	Operator -> SubExpression OP12_COMPARE_EQ_NE . SubExpression	(Rule 101)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	Variable	go to state 138
	ArrayReference	go to state 119
	Literal	go to state 118
	Operator	go to state 120
	HashReference	go to state 99
	ArrayDereference	go to state 127
	SubExpression	go to state 248
	WordScoped	go to state 111
	Expression	go to state 141
	HashDereference	go to state 126

State 161:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 87)

	$default	reduce using rule 87 (Operator)

State 162:

	Operation -> Expression ';' .	(Rule 80)

	$default	reduce using rule 80 (Operation)

State 163:

	Expression -> WORD_UPPERCASE LPAREN . ')'	(Rule 130)

	')'	shift, and go to state 249

State 164:

	TypeInner -> MY . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 217)

	TYPE_INTEGER	shift, and go to state 56
	WORD	shift, and go to state 55
	WORD_SCOPED	shift, and go to state 54

	Type	go to state 250

State 165:

	OPTIONAL-34 -> ListElements .	(Rule 114)

	$default	reduce using rule 114 (OPTIONAL-34)

State 166:

	ListElement -> OP01_QW . PLUS-47 ')'	(Rule 188)

	WORD	shift, and go to state 252

	PLUS-47	go to state 251

State 167:

	ListElement -> TypeInner . SubExpression	(Rule 187)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	HashReference	go to state 99
	ArrayDereference	go to state 127
	SubExpression	go to state 253
	WordScoped	go to state 111
	Expression	go to state 141
	HashDereference	go to state 126
	Variable	go to state 138
	Literal	go to state 118
	ArrayReference	go to state 119
	Operator	go to state 120

State 168:

	ListElements -> ListElement . STAR-46	(Rule 183)

	$default	reduce using rule 182 (STAR-46)

	STAR-46	go to state 254

State 169:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-34 . ')' ';'	(Rule 119)

	')'	shift, and go to state 255

State 170:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	ListElement -> SubExpression .	(Rule 186)

	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 147
	OP12_COMPARE_EQ_NE	shift, and go to state 160
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 159
	OP16_LOGICAL_OR	shift, and go to state 156
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 145
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 151

	')'	reduce using rule 186 (ListElement)
	';'	reduce using rule 186 (ListElement)
	']'	reduce using rule 186 (ListElement)
	OP21_LIST_COMMA	reduce using rule 186 (ListElement)

State 171:

	Operator -> OP01_CLOSE FHREF_SYMBOL .	(Rule 86)

	$default	reduce using rule 86 (Operator)

State 172:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 173:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	SubExpression -> LPAREN SubExpression . ')'	(Rule 142)

	')'	shift, and go to state 256
	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 147
	OP12_COMPARE_EQ_NE	shift, and go to state 160
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 159
	OP16_LOGICAL_OR	shift, and go to state 156
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 145
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 151

State 174:

	Operator -> OP01_NAMED . SubExpression	(Rule 83)
	Operator -> LPAREN OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ')'	(Rule 84)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	MY	shift, and go to state 164
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP01_QW	shift, and go to state 166
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	Expression	go to state 141
	TypeInner	go to state 167
	HashDereference	go to state 126
	WordScoped	go to state 111
	ArrayDereference	go to state 127
	SubExpression	go to state 177
	HashReference	go to state 99
	Literal	go to state 118
	ArrayReference	go to state 119
	Operator	go to state 120
	ListElement	go to state 257
	Variable	go to state 138

State 175:

	Operator -> LPAREN OP01_PRINT . FHREF_SYMBOL_BRACES ListElements ')'	(Rule 82)

	FHREF_SYMBOL_BRACES	shift, and go to state 258

State 176:

	OperatorVoid -> OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ';'	(Rule 121)

	OP21_LIST_COMMA	shift, and go to state 259

State 177:

	Operator -> OP01_NAMED SubExpression .	(Rule 83)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	ListElement -> SubExpression .	(Rule 186)

	')'	reduce using rule 83 (Operator)
	';'	reduce using rule 83 (Operator)
	OP04_MATH_POW	reduce using rule 83 (Operator)
	OP06_REGEX_MATCH	reduce using rule 83 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 83 (Operator)
	OP07_STRING_REPEAT	reduce using rule 83 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 83 (Operator)
	OP08_STRING_CAT	reduce using rule 83 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 83 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 83 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 83 (Operator)
	OP13_BITWISE_AND	reduce using rule 83 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 83 (Operator)
	OP15_LOGICAL_AND	reduce using rule 83 (Operator)
	OP16_LOGICAL_OR	reduce using rule 83 (Operator)
	OP17_LIST_RANGE	reduce using rule 83 (Operator)
	OP18_TERNARY	reduce using rule 83 (Operator)
	OP21_LIST_COMMA	reduce using rule 186 (ListElement)
	OP23_LOGICAL_AND	reduce using rule 83 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 83 (Operator)

State 178:

	OPTIONAL-53 -> TypeInner .	(Rule 207)

	$default	reduce using rule 207 (OPTIONAL-53)

State 179:

	HashDereference -> '%{' OPTIONAL-53 . HashReference '}'	(Rule 210)

	LBRACE	shift, and go to state 113

	HashReference	go to state 260

State 180:

	HashDereference -> '%{' Variable . '}'	(Rule 209)

	'}'	shift, and go to state 261

State 181:

	Conditional -> 'if' LPAREN . SubExpression ')' CodeBlock STAR-40 OPTIONAL-42	(Rule 159)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	HashReference	go to state 99
	ArrayDereference	go to state 127
	SubExpression	go to state 262
	WordScoped	go to state 111
	Expression	go to state 141
	HashDereference	go to state 126
	Variable	go to state 138
	ArrayReference	go to state 119
	Literal	go to state 118
	Operator	go to state 120

State 182:

	VariableDeclaration -> MY TYPE_FHREF . FHREF_SYMBOL ';'	(Rule 177)

	FHREF_SYMBOL	shift, and go to state 263

State 183:

	VariableDeclaration -> MY Type . VARIABLE_SYMBOL ';'	(Rule 175)
	VariableDeclaration -> MY Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 176)

	VARIABLE_SYMBOL	shift, and go to state 264

State 184:

	OPTIONAL-48 -> ListElements .	(Rule 189)

	$default	reduce using rule 189 (OPTIONAL-48)

State 185:

	ArrayReference -> LBRACKET OPTIONAL-48 . ']'	(Rule 191)

	']'	shift, and go to state 265

State 186:

	Expression -> Variable OP02_METHOD_THINARROW . LPAREN OPTIONAL-36 ')'	(Rule 132)

	LPAREN	shift, and go to state 266

State 187:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 178)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	STDIN	shift, and go to state 268
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	HashDereference	go to state 126
	Expression	go to state 141
	WordScoped	go to state 111
	SubExpression	go to state 269
	ArrayDereference	go to state 127
	HashReference	go to state 99
	Operator	go to state 120
	SubExpressionOrStdin	go to state 267
	Literal	go to state 118
	ArrayReference	go to state 119
	Variable	go to state 138

State 188:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . SubExpression ';'	(Rule 179)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	WordScoped	go to state 111
	HashDereference	go to state 126
	Expression	go to state 141
	HashReference	go to state 99
	SubExpression	go to state 270
	ArrayDereference	go to state 127
	Operator	go to state 120
	ArrayReference	go to state 119
	Literal	go to state 118
	Variable	go to state 138

State 189:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 88)

	$default	reduce using rule 88 (Operator)

State 190:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 123)

	';'	shift, and go to state 271

State 191:

	LoopLabel -> WORD_UPPERCASE .	(Rule 213)

	$default	reduce using rule 213 (LoopLabel)

State 192:

	OperatorVoid -> OP01_PRINT OPTIONAL-33 . ListElements ';'	(Rule 116)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	MY	shift, and go to state 164
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP01_QW	shift, and go to state 166
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	ArrayReference	go to state 119
	Literal	go to state 118
	Operator	go to state 120
	ListElement	go to state 168
	Variable	go to state 138
	TypeInner	go to state 167
	Expression	go to state 141
	HashDereference	go to state 126
	WordScoped	go to state 111
	ListElements	go to state 272
	ArrayDereference	go to state 127
	SubExpression	go to state 170
	HashReference	go to state 99

State 193:

	OPTIONAL-33 -> PAREN-32 .	(Rule 112)

	$default	reduce using rule 112 (OPTIONAL-33)

State 194:

	PAREN-32 -> STDOUT_STDERR .	(Rule 111)

	$default	reduce using rule 111 (PAREN-32)

State 195:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES . ListElements ';'	(Rule 117)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	MY	shift, and go to state 164
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP01_QW	shift, and go to state 166
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	Operator	go to state 120
	ArrayReference	go to state 119
	Literal	go to state 118
	Variable	go to state 138
	ListElement	go to state 168
	WordScoped	go to state 111
	ListElements	go to state 273
	HashDereference	go to state 126
	Expression	go to state 141
	TypeInner	go to state 167
	HashReference	go to state 99
	SubExpression	go to state 170
	ArrayDereference	go to state 127

State 196:

	Expression -> WordScoped SCOPE . WORD_UPPERCASE LPAREN ')'	(Rule 131)

	WORD_UPPERCASE	shift, and go to state 274

State 197:

	Expression -> WordScoped LPAREN . OPTIONAL-35 ')'	(Rule 129)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	MY	shift, and go to state 164
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP01_QW	shift, and go to state 166
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	')'	reduce using rule 125 (OPTIONAL-35)

	Operator	go to state 120
	OPTIONAL-35	go to state 276
	Literal	go to state 118
	ArrayReference	go to state 119
	Variable	go to state 138
	ListElement	go to state 168
	ListElements	go to state 275
	WordScoped	go to state 111
	HashDereference	go to state 126
	TypeInner	go to state 167
	Expression	go to state 141
	HashReference	go to state 99
	SubExpression	go to state 170
	ArrayDereference	go to state 127

State 198:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW . ')'	(Rule 133)

	')'	shift, and go to state 277

State 199:

	HashReference -> LBRACE HashEntry . STAR-52 '}'	(Rule 205)

	$default	reduce using rule 204 (STAR-52)

	STAR-52	go to state 278

State 200:

	VariableOrLiteralOrWord -> Variable .	(Rule 221)

	$default	reduce using rule 221 (VariableOrLiteralOrWord)

State 201:

	VariableOrLiteralOrWord -> WORD .	(Rule 223)

	$default	reduce using rule 223 (VariableOrLiteralOrWord)

State 202:

	HashEntry -> VariableOrLiteralOrWord . OP20_HASH_FATARROW OPTIONAL-50 SubExpression	(Rule 198)

	OP20_HASH_FATARROW	shift, and go to state 279

State 203:

	HashEntry -> HashDereference .	(Rule 199)

	$default	reduce using rule 199 (HashEntry)

State 204:

	VariableOrLiteralOrWord -> Literal .	(Rule 222)

	$default	reduce using rule 222 (VariableOrLiteralOrWord)

State 205:

	HashReference -> LBRACE '}' .	(Rule 206)

	$default	reduce using rule 206 (HashReference)

State 206:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> OP22_LOGICAL_NEG SubExpression .	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 147
	OP12_COMPARE_EQ_NE	shift, and go to state 160
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 159
	OP16_LOGICAL_OR	shift, and go to state 156
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 145

	')'	reduce using rule 108 (Operator)
	';'	reduce using rule 108 (Operator)
	']'	reduce using rule 108 (Operator)
	'}'	reduce using rule 108 (Operator)
	OP21_LIST_COMMA	reduce using rule 108 (Operator)
	OP23_LOGICAL_AND	reduce using rule 108 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 108 (Operator)

State 207:

	STAR-44 -> STAR-44 . VariableRetrieval	(Rule 169)
	Variable -> VARIABLE_SYMBOL STAR-44 .	(Rule 171)

	OP02_ARRAY_THINARROW	shift, and go to state 280
	OP02_HASH_THINARROW	shift, and go to state 282

	')'	reduce using rule 171 (Variable)
	';'	reduce using rule 171 (Variable)
	']'	reduce using rule 171 (Variable)
	'}'	reduce using rule 171 (Variable)
	COLON	reduce using rule 171 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 171 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 171 (Variable)
	OP04_MATH_POW	reduce using rule 171 (Variable)
	OP06_REGEX_MATCH	reduce using rule 171 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 171 (Variable)
	OP07_STRING_REPEAT	reduce using rule 171 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 171 (Variable)
	OP08_STRING_CAT	reduce using rule 171 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 171 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 171 (Variable)
	OP12_COMPARE_EQ_NE	reduce using rule 171 (Variable)
	OP13_BITWISE_AND	reduce using rule 171 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 171 (Variable)
	OP15_LOGICAL_AND	reduce using rule 171 (Variable)
	OP16_LOGICAL_OR	reduce using rule 171 (Variable)
	OP17_LIST_RANGE	reduce using rule 171 (Variable)
	OP18_TERNARY	reduce using rule 171 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 171 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 171 (Variable)
	OP20_HASH_FATARROW	reduce using rule 171 (Variable)
	OP21_LIST_COMMA	reduce using rule 171 (Variable)
	OP23_LOGICAL_AND	reduce using rule 171 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 171 (Variable)

	VariableRetrieval	go to state 281

State 208:

	PAREN-37 -> LoopLabel COLON .	(Rule 145)

	$default	reduce using rule 145 (PAREN-37)

State 209:

	OperatorVoid -> OP01_NAMED_VOID ListElements . ';'	(Rule 120)

	';'	shift, and go to state 283

State 210:

	Loop -> LoopWhile .	(Rule 162)

	$default	reduce using rule 162 (Loop)

State 211:

	LoopForEach -> 'foreach' . MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 164)

	MY	shift, and go to state 284

State 212:

	Statement -> OPTIONAL-38 Loop .	(Rule 149)

	$default	reduce using rule 149 (Statement)

State 213:

	LoopWhile -> 'while' . LPAREN SubExpression ')' CodeBlock	(Rule 165)

	LPAREN	shift, and go to state 285

State 214:

	LoopFor -> 'for' . MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 163)

	MY	shift, and go to state 286

State 215:

	Loop -> LoopForEach .	(Rule 161)

	$default	reduce using rule 161 (Loop)

State 216:

	Loop -> LoopFor .	(Rule 160)

	$default	reduce using rule 160 (Loop)

State 217:

	OPTIONAL-49 -> TypeInner .	(Rule 192)

	$default	reduce using rule 192 (OPTIONAL-49)

State 218:

	ArrayDereference -> '@{' OPTIONAL-49 . ArrayReference '}'	(Rule 195)

	LBRACKET	shift, and go to state 106

	ArrayReference	go to state 287

State 219:

	ArrayDereference -> '@{' Variable . '}'	(Rule 194)

	'}'	shift, and go to state 288

State 220:

	Operator -> OP01_OPEN MY . TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 85)

	TYPE_FHREF	shift, and go to state 289

State 221:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> OP05_MATH_NEG_LPAREN SubExpression . ')'	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	')'	shift, and go to state 290
	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 147
	OP12_COMPARE_EQ_NE	shift, and go to state 160
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 159
	OP16_LOGICAL_OR	shift, and go to state 156
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 145
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 151

State 222:

	TypeInnerConstant -> MY Type '$TYPED_' . WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 218)

	WORD_UPPERCASE	shift, and go to state 291

State 223:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';' .	(Rule 45)

	$default	reduce using rule 45 (Constant)

State 224:

	STAR-19 -> STAR-19 . Operation	(Rule 48)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 STAR-19 . '}' ';'	(Rule 50)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'if'	shift, and go to state 103
	'undef'	shift, and go to state 105
	'}'	shift, and go to state 292
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	MY	shift, and go to state 104
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 101
	OP01_NAMED_VOID	shift, and go to state 121
	OP01_NAMED_VOID_LPAREN	shift, and go to state 96
	OP01_NAMED_VOID_SCOLON	shift, and go to state 90
	OP01_OPEN	shift, and go to state 125
	OP01_PRINT	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP19_LOOP_CONTROL	shift, and go to state 108
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 86
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 95

	'for'	reduce using rule 147 (OPTIONAL-38)
	'foreach'	reduce using rule 147 (OPTIONAL-38)
	'while'	reduce using rule 147 (OPTIONAL-38)

	VariableModification	go to state 83
	Variable	go to state 107
	Statement	go to state 112
	SubExpression	go to state 89
	Conditional	go to state 88
	WordScoped	go to state 111
	OperatorVoid	go to state 110
	OPTIONAL-38	go to state 122
	Operation	go to state 293
	Operator	go to state 120
	ArrayReference	go to state 119
	Literal	go to state 118
	LoopLabel	go to state 117
	HashReference	go to state 99
	VariableDeclaration	go to state 128
	ArrayDereference	go to state 127
	HashDereference	go to state 126
	PAREN-37	go to state 124
	Expression	go to state 94

State 225:

	SubroutineArguments -> LPAREN_MY Type . VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 54)

	VARIABLE_SYMBOL	shift, and go to state 294

State 226:

	Properties -> 'our hashref $properties' . OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-27 '}' ';'	(Rule 67)
	Properties -> 'our hashref $properties' . OP19_VARIABLE_ASSIGN LBRACE '}' ';'	(Rule 68)

	OP19_VARIABLE_ASSIGN	shift, and go to state 295

State 227:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 STAR-23 STAR-24 Properties . STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	$default	reduce using rule 62 (STAR-25)

	STAR-25	go to state 296

State 228:

	STAR-24 -> STAR-24 Constant .	(Rule 59)

	$default	reduce using rule 59 (STAR-24)

State 229:

	Operator -> OP01_NAMED SubExpression .	(Rule 83)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	')'	reduce using rule 83 (Operator)
	';'	reduce using rule 83 (Operator)
	']'	reduce using rule 83 (Operator)
	'}'	reduce using rule 83 (Operator)
	OP04_MATH_POW	reduce using rule 83 (Operator)
	OP06_REGEX_MATCH	reduce using rule 83 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 83 (Operator)
	OP07_STRING_REPEAT	reduce using rule 83 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 83 (Operator)
	OP08_STRING_CAT	reduce using rule 83 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 83 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 83 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 83 (Operator)
	OP13_BITWISE_AND	reduce using rule 83 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 83 (Operator)
	OP15_LOGICAL_AND	reduce using rule 83 (Operator)
	OP16_LOGICAL_OR	reduce using rule 83 (Operator)
	OP17_LIST_RANGE	reduce using rule 83 (Operator)
	OP18_TERNARY	reduce using rule 83 (Operator)
	OP21_LIST_COMMA	reduce using rule 83 (Operator)
	OP23_LOGICAL_AND	reduce using rule 83 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 83 (Operator)

State 230:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression OP23_LOGICAL_AND SubExpression .	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 147
	OP12_COMPARE_EQ_NE	shift, and go to state 160
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 159
	OP16_LOGICAL_OR	shift, and go to state 156
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 145

	')'	reduce using rule 109 (Operator)
	';'	reduce using rule 109 (Operator)
	']'	reduce using rule 109 (Operator)
	'}'	reduce using rule 109 (Operator)
	OP21_LIST_COMMA	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 231:

	VariableOrLiteral -> Literal .	(Rule 220)

	$default	reduce using rule 220 (VariableOrLiteral)

State 232:

	VariableOrLiteral -> Variable .	(Rule 219)

	$default	reduce using rule 219 (VariableOrLiteral)

State 233:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral . COLON VariableOrLiteral	(Rule 107)

	COLON	shift, and go to state 297

State 234:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression OP07_STRING_REPEAT SubExpression .	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158

	')'	reduce using rule 93 (Operator)
	';'	reduce using rule 93 (Operator)
	']'	reduce using rule 93 (Operator)
	'}'	reduce using rule 93 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 93 (Operator)
	OP07_STRING_REPEAT	reduce using rule 93 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 93 (Operator)
	OP08_STRING_CAT	reduce using rule 93 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 93 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 93 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 93 (Operator)
	OP13_BITWISE_AND	reduce using rule 93 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 93 (Operator)
	OP15_LOGICAL_AND	reduce using rule 93 (Operator)
	OP16_LOGICAL_OR	reduce using rule 93 (Operator)
	OP17_LIST_RANGE	reduce using rule 93 (Operator)
	OP18_TERNARY	reduce using rule 93 (Operator)
	OP21_LIST_COMMA	reduce using rule 93 (Operator)
	OP23_LOGICAL_AND	reduce using rule 93 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 93 (Operator)

State 235:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression .	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 149

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 100 (Operator)
	';'	reduce using rule 100 (Operator)
	']'	reduce using rule 100 (Operator)
	'}'	reduce using rule 100 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 100 (Operator)
	OP13_BITWISE_AND	reduce using rule 100 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 100 (Operator)
	OP15_LOGICAL_AND	reduce using rule 100 (Operator)
	OP16_LOGICAL_OR	reduce using rule 100 (Operator)
	OP17_LIST_RANGE	reduce using rule 100 (Operator)
	OP18_TERNARY	reduce using rule 100 (Operator)
	OP21_LIST_COMMA	reduce using rule 100 (Operator)
	OP23_LOGICAL_AND	reduce using rule 100 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 100 (Operator)

State 236:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression .	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 146

	')'	reduce using rule 94 (Operator)
	';'	reduce using rule 94 (Operator)
	']'	reduce using rule 94 (Operator)
	'}'	reduce using rule 94 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 94 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 94 (Operator)
	OP08_STRING_CAT	reduce using rule 94 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 94 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 94 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 94 (Operator)
	OP13_BITWISE_AND	reduce using rule 94 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 94 (Operator)
	OP15_LOGICAL_AND	reduce using rule 94 (Operator)
	OP16_LOGICAL_OR	reduce using rule 94 (Operator)
	OP17_LIST_RANGE	reduce using rule 94 (Operator)
	OP18_TERNARY	reduce using rule 94 (Operator)
	OP21_LIST_COMMA	reduce using rule 94 (Operator)
	OP23_LOGICAL_AND	reduce using rule 94 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 94 (Operator)

State 237:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression .	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154

	')'	reduce using rule 97 (Operator)
	';'	reduce using rule 97 (Operator)
	']'	reduce using rule 97 (Operator)
	'}'	reduce using rule 97 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 97 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 97 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 97 (Operator)
	OP13_BITWISE_AND	reduce using rule 97 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 97 (Operator)
	OP15_LOGICAL_AND	reduce using rule 97 (Operator)
	OP16_LOGICAL_OR	reduce using rule 97 (Operator)
	OP17_LIST_RANGE	reduce using rule 97 (Operator)
	OP18_TERNARY	reduce using rule 97 (Operator)
	OP21_LIST_COMMA	reduce using rule 97 (Operator)
	OP23_LOGICAL_AND	reduce using rule 97 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 97 (Operator)

State 238:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression OP04_MATH_POW SubExpression .	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 150

	')'	reduce using rule 89 (Operator)
	';'	reduce using rule 89 (Operator)
	']'	reduce using rule 89 (Operator)
	'}'	reduce using rule 89 (Operator)
	OP06_REGEX_MATCH	reduce using rule 89 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 89 (Operator)
	OP07_STRING_REPEAT	reduce using rule 89 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 89 (Operator)
	OP08_STRING_CAT	reduce using rule 89 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 89 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 89 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 89 (Operator)
	OP13_BITWISE_AND	reduce using rule 89 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 89 (Operator)
	OP15_LOGICAL_AND	reduce using rule 89 (Operator)
	OP16_LOGICAL_OR	reduce using rule 89 (Operator)
	OP17_LIST_RANGE	reduce using rule 89 (Operator)
	OP18_TERNARY	reduce using rule 89 (Operator)
	OP21_LIST_COMMA	reduce using rule 89 (Operator)
	OP23_LOGICAL_AND	reduce using rule 89 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 89 (Operator)

State 239:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression .	(Rule 110)

	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 147
	OP12_COMPARE_EQ_NE	shift, and go to state 160
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 159
	OP16_LOGICAL_OR	shift, and go to state 156
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 145
	OP23_LOGICAL_AND	shift, and go to state 144

	')'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 240:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression .	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 147
	OP12_COMPARE_EQ_NE	shift, and go to state 160
	OP13_BITWISE_AND	shift, and go to state 153

	')'	reduce using rule 103 (Operator)
	';'	reduce using rule 103 (Operator)
	']'	reduce using rule 103 (Operator)
	'}'	reduce using rule 103 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 103 (Operator)
	OP15_LOGICAL_AND	reduce using rule 103 (Operator)
	OP16_LOGICAL_OR	reduce using rule 103 (Operator)
	OP17_LIST_RANGE	reduce using rule 103 (Operator)
	OP18_TERNARY	reduce using rule 103 (Operator)
	OP21_LIST_COMMA	reduce using rule 103 (Operator)
	OP23_LOGICAL_AND	reduce using rule 103 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 103 (Operator)

State 241:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression OP13_BITWISE_AND SubExpression .	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 147
	OP12_COMPARE_EQ_NE	shift, and go to state 160

	')'	reduce using rule 102 (Operator)
	';'	reduce using rule 102 (Operator)
	']'	reduce using rule 102 (Operator)
	'}'	reduce using rule 102 (Operator)
	OP13_BITWISE_AND	reduce using rule 102 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 102 (Operator)
	OP15_LOGICAL_AND	reduce using rule 102 (Operator)
	OP16_LOGICAL_OR	reduce using rule 102 (Operator)
	OP17_LIST_RANGE	reduce using rule 102 (Operator)
	OP18_TERNARY	reduce using rule 102 (Operator)
	OP21_LIST_COMMA	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 242:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression OP08_STRING_CAT SubExpression .	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155

	')'	reduce using rule 96 (Operator)
	';'	reduce using rule 96 (Operator)
	']'	reduce using rule 96 (Operator)
	'}'	reduce using rule 96 (Operator)
	OP08_STRING_CAT	reduce using rule 96 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 96 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 96 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 96 (Operator)
	OP13_BITWISE_AND	reduce using rule 96 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 96 (Operator)
	OP15_LOGICAL_AND	reduce using rule 96 (Operator)
	OP16_LOGICAL_OR	reduce using rule 96 (Operator)
	OP17_LIST_RANGE	reduce using rule 96 (Operator)
	OP18_TERNARY	reduce using rule 96 (Operator)
	OP21_LIST_COMMA	reduce using rule 96 (Operator)
	OP23_LOGICAL_AND	reduce using rule 96 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 96 (Operator)

State 243:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression .	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146

	')'	reduce using rule 95 (Operator)
	';'	reduce using rule 95 (Operator)
	']'	reduce using rule 95 (Operator)
	'}'	reduce using rule 95 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 95 (Operator)
	OP08_STRING_CAT	reduce using rule 95 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 95 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 95 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 95 (Operator)
	OP13_BITWISE_AND	reduce using rule 95 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 95 (Operator)
	OP15_LOGICAL_AND	reduce using rule 95 (Operator)
	OP16_LOGICAL_OR	reduce using rule 95 (Operator)
	OP17_LIST_RANGE	reduce using rule 95 (Operator)
	OP18_TERNARY	reduce using rule 95 (Operator)
	OP21_LIST_COMMA	reduce using rule 95 (Operator)
	OP23_LOGICAL_AND	reduce using rule 95 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 95 (Operator)

State 244:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression OP16_LOGICAL_OR SubExpression .	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 147
	OP12_COMPARE_EQ_NE	shift, and go to state 160
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 159

	')'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 245:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 147
	OP12_COMPARE_EQ_NE	shift, and go to state 160
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 159
	OP16_LOGICAL_OR	shift, and go to state 156

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 246:

	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN .	(Rule 92)

	$default	reduce using rule 92 (Operator)

State 247:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression OP15_LOGICAL_AND SubExpression .	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 147
	OP12_COMPARE_EQ_NE	shift, and go to state 160
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 152

	')'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP15_LOGICAL_AND	reduce using rule 104 (Operator)
	OP16_LOGICAL_OR	reduce using rule 104 (Operator)
	OP17_LIST_RANGE	reduce using rule 104 (Operator)
	OP18_TERNARY	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 248:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression .	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 147

	OP12_COMPARE_EQ_NE	error (nonassociative)

	')'	reduce using rule 101 (Operator)
	';'	reduce using rule 101 (Operator)
	']'	reduce using rule 101 (Operator)
	'}'	reduce using rule 101 (Operator)
	OP13_BITWISE_AND	reduce using rule 101 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 101 (Operator)
	OP15_LOGICAL_AND	reduce using rule 101 (Operator)
	OP16_LOGICAL_OR	reduce using rule 101 (Operator)
	OP17_LIST_RANGE	reduce using rule 101 (Operator)
	OP18_TERNARY	reduce using rule 101 (Operator)
	OP21_LIST_COMMA	reduce using rule 101 (Operator)
	OP23_LOGICAL_AND	reduce using rule 101 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 101 (Operator)

State 249:

	Expression -> WORD_UPPERCASE LPAREN ')' .	(Rule 130)

	$default	reduce using rule 130 (Expression)

State 250:

	TypeInner -> MY Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 217)

	'$TYPED_'	shift, and go to state 298

State 251:

	PLUS-47 -> PLUS-47 . WORD	(Rule 184)
	ListElement -> OP01_QW PLUS-47 . ')'	(Rule 188)

	')'	shift, and go to state 300
	WORD	shift, and go to state 299

State 252:

	PLUS-47 -> WORD .	(Rule 185)

	$default	reduce using rule 185 (PLUS-47)

State 253:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	ListElement -> TypeInner SubExpression .	(Rule 187)

	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 147
	OP12_COMPARE_EQ_NE	shift, and go to state 160
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 159
	OP16_LOGICAL_OR	shift, and go to state 156
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 145
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 151

	')'	reduce using rule 187 (ListElement)
	';'	reduce using rule 187 (ListElement)
	']'	reduce using rule 187 (ListElement)
	OP21_LIST_COMMA	reduce using rule 187 (ListElement)

State 254:

	STAR-46 -> STAR-46 . PAREN-45	(Rule 181)
	ListElements -> ListElement STAR-46 .	(Rule 183)

	OP21_LIST_COMMA	shift, and go to state 301

	')'	reduce using rule 183 (ListElements)
	';'	reduce using rule 183 (ListElements)
	']'	reduce using rule 183 (ListElements)

	PAREN-45	go to state 302

State 255:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-34 ')' . ';'	(Rule 119)

	';'	shift, and go to state 303

State 256:

	SubExpression -> LPAREN SubExpression ')' .	(Rule 142)

	$default	reduce using rule 142 (SubExpression)

State 257:

	Operator -> LPAREN OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ')'	(Rule 84)

	OP21_LIST_COMMA	shift, and go to state 304

State 258:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES . ListElements ')'	(Rule 82)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	MY	shift, and go to state 164
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP01_QW	shift, and go to state 166
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	HashReference	go to state 99
	ArrayDereference	go to state 127
	SubExpression	go to state 170
	WordScoped	go to state 111
	ListElements	go to state 305
	TypeInner	go to state 167
	Expression	go to state 141
	HashDereference	go to state 126
	ListElement	go to state 168
	Variable	go to state 138
	ArrayReference	go to state 119
	Literal	go to state 118
	Operator	go to state 120

State 259:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ';'	(Rule 121)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	MY	shift, and go to state 164
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP01_QW	shift, and go to state 166
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	ArrayReference	go to state 119
	Literal	go to state 118
	Operator	go to state 120
	ListElement	go to state 168
	Variable	go to state 138
	ListElements	go to state 306
	WordScoped	go to state 111
	Expression	go to state 141
	TypeInner	go to state 167
	HashDereference	go to state 126
	HashReference	go to state 99
	ArrayDereference	go to state 127
	SubExpression	go to state 170

State 260:

	HashDereference -> '%{' OPTIONAL-53 HashReference . '}'	(Rule 210)

	'}'	shift, and go to state 307

State 261:

	HashDereference -> '%{' Variable '}' .	(Rule 209)

	$default	reduce using rule 209 (HashDereference)

State 262:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	Conditional -> 'if' LPAREN SubExpression . ')' CodeBlock STAR-40 OPTIONAL-42	(Rule 159)

	')'	shift, and go to state 308
	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 147
	OP12_COMPARE_EQ_NE	shift, and go to state 160
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 159
	OP16_LOGICAL_OR	shift, and go to state 156
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 145
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 151

State 263:

	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL . ';'	(Rule 177)

	';'	shift, and go to state 309

State 264:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL . ';'	(Rule 175)
	VariableDeclaration -> MY Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 176)

	';'	shift, and go to state 311
	OP19_VARIABLE_ASSIGN	shift, and go to state 310

State 265:

	ArrayReference -> LBRACKET OPTIONAL-48 ']' .	(Rule 191)

	$default	reduce using rule 191 (ArrayReference)

State 266:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN . OPTIONAL-36 ')'	(Rule 132)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	MY	shift, and go to state 164
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP01_QW	shift, and go to state 166
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	')'	reduce using rule 127 (OPTIONAL-36)

	WordScoped	go to state 111
	ListElements	go to state 313
	HashDereference	go to state 126
	Expression	go to state 141
	TypeInner	go to state 167
	HashReference	go to state 99
	OPTIONAL-36	go to state 312
	SubExpression	go to state 170
	ArrayDereference	go to state 127
	Operator	go to state 120
	Literal	go to state 118
	ArrayReference	go to state 119
	Variable	go to state 138
	ListElement	go to state 168

State 267:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 178)

	';'	shift, and go to state 314

State 268:

	SubExpressionOrStdin -> STDIN .	(Rule 144)

	$default	reduce using rule 144 (SubExpressionOrStdin)

State 269:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	SubExpressionOrStdin -> SubExpression .	(Rule 143)

	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 147
	OP12_COMPARE_EQ_NE	shift, and go to state 160
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 159
	OP16_LOGICAL_OR	shift, and go to state 156
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 145
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 151

	';'	reduce using rule 143 (SubExpressionOrStdin)

State 270:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression . ';'	(Rule 179)

	';'	shift, and go to state 315
	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 147
	OP12_COMPARE_EQ_NE	shift, and go to state 160
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 159
	OP16_LOGICAL_OR	shift, and go to state 156
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 145
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 151

State 271:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 123)

	$default	reduce using rule 123 (OperatorVoid)

State 272:

	OperatorVoid -> OP01_PRINT OPTIONAL-33 ListElements . ';'	(Rule 116)

	';'	shift, and go to state 316

State 273:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements . ';'	(Rule 117)

	';'	shift, and go to state 317

State 274:

	Expression -> WordScoped SCOPE WORD_UPPERCASE . LPAREN ')'	(Rule 131)

	LPAREN	shift, and go to state 318

State 275:

	OPTIONAL-35 -> ListElements .	(Rule 124)

	$default	reduce using rule 124 (OPTIONAL-35)

State 276:

	Expression -> WordScoped LPAREN OPTIONAL-35 . ')'	(Rule 129)

	')'	shift, and go to state 319

State 277:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW ')' .	(Rule 133)

	$default	reduce using rule 133 (Expression)

State 278:

	STAR-52 -> STAR-52 . PAREN-51	(Rule 203)
	HashReference -> LBRACE HashEntry STAR-52 . '}'	(Rule 205)

	'}'	shift, and go to state 320
	OP21_LIST_COMMA	shift, and go to state 322

	PAREN-51	go to state 321

State 279:

	HashEntry -> VariableOrLiteralOrWord OP20_HASH_FATARROW . OPTIONAL-50 SubExpression	(Rule 198)

	MY	shift, and go to state 164

	'%{'	reduce using rule 197 (OPTIONAL-50)
	'@{'	reduce using rule 197 (OPTIONAL-50)
	'undef'	reduce using rule 197 (OPTIONAL-50)
	LBRACE	reduce using rule 197 (OPTIONAL-50)
	LBRACKET	reduce using rule 197 (OPTIONAL-50)
	LITERAL_NUMBER	reduce using rule 197 (OPTIONAL-50)
	LITERAL_STRING	reduce using rule 197 (OPTIONAL-50)
	LPAREN	reduce using rule 197 (OPTIONAL-50)
	OP01_CLOSE	reduce using rule 197 (OPTIONAL-50)
	OP01_NAMED	reduce using rule 197 (OPTIONAL-50)
	OP01_OPEN	reduce using rule 197 (OPTIONAL-50)
	OP03_MATH_INC_DEC	reduce using rule 197 (OPTIONAL-50)
	OP05_LOGICAL_NEG	reduce using rule 197 (OPTIONAL-50)
	OP05_MATH_NEG_LPAREN	reduce using rule 197 (OPTIONAL-50)
	OP10_NAMED_UNARY	reduce using rule 197 (OPTIONAL-50)
	OP22_LOGICAL_NEG	reduce using rule 197 (OPTIONAL-50)
	VARIABLE_SYMBOL	reduce using rule 197 (OPTIONAL-50)
	WORD	reduce using rule 197 (OPTIONAL-50)
	WORD_SCOPED	reduce using rule 197 (OPTIONAL-50)
	WORD_UPPERCASE	reduce using rule 197 (OPTIONAL-50)

	TypeInner	go to state 324
	OPTIONAL-50	go to state 323

State 280:

	VariableRetrieval -> OP02_ARRAY_THINARROW . SubExpression ']'	(Rule 172)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	Operator	go to state 120
	Literal	go to state 118
	ArrayReference	go to state 119
	Variable	go to state 138
	WordScoped	go to state 111
	HashDereference	go to state 126
	Expression	go to state 141
	HashReference	go to state 99
	SubExpression	go to state 325
	ArrayDereference	go to state 127

State 281:

	STAR-44 -> STAR-44 VariableRetrieval .	(Rule 169)

	$default	reduce using rule 169 (STAR-44)

State 282:

	VariableRetrieval -> OP02_HASH_THINARROW . SubExpression '}'	(Rule 173)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 174)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 327
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	Variable	go to state 138
	ArrayReference	go to state 119
	Literal	go to state 118
	Operator	go to state 120
	ArrayDereference	go to state 127
	SubExpression	go to state 326
	HashReference	go to state 99
	Expression	go to state 141
	HashDereference	go to state 126
	WordScoped	go to state 111

State 283:

	OperatorVoid -> OP01_NAMED_VOID ListElements ';' .	(Rule 120)

	$default	reduce using rule 120 (OperatorVoid)

State 284:

	LoopForEach -> 'foreach' MY . Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 164)

	TYPE_INTEGER	shift, and go to state 56
	WORD	shift, and go to state 55
	WORD_SCOPED	shift, and go to state 54

	Type	go to state 328

State 285:

	LoopWhile -> 'while' LPAREN . SubExpression ')' CodeBlock	(Rule 165)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	WordScoped	go to state 111
	Expression	go to state 141
	HashDereference	go to state 126
	HashReference	go to state 99
	ArrayDereference	go to state 127
	SubExpression	go to state 329
	Literal	go to state 118
	ArrayReference	go to state 119
	Operator	go to state 120
	Variable	go to state 138

State 286:

	LoopFor -> 'for' MY . TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 163)

	TYPE_INTEGER	shift, and go to state 330

State 287:

	ArrayDereference -> '@{' OPTIONAL-49 ArrayReference . '}'	(Rule 195)

	'}'	shift, and go to state 331

State 288:

	ArrayDereference -> '@{' Variable '}' .	(Rule 194)

	$default	reduce using rule 194 (ArrayDereference)

State 289:

	Operator -> OP01_OPEN MY TYPE_FHREF . FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 85)

	FHREF_SYMBOL	shift, and go to state 332

State 290:

	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')' .	(Rule 91)

	$default	reduce using rule 91 (Operator)

State 291:

	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE . OP19_VARIABLE_ASSIGN	(Rule 218)

	OP19_VARIABLE_ASSIGN	shift, and go to state 333

State 292:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 STAR-19 '}' . ';'	(Rule 50)

	';'	shift, and go to state 334

State 293:

	STAR-19 -> STAR-19 Operation .	(Rule 48)

	$default	reduce using rule 48 (STAR-19)

State 294:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL . STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 54)

	$default	reduce using rule 53 (STAR-21)

	STAR-21	go to state 335

State 295:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN . LBRACE HashEntryTyped STAR-27 '}' ';'	(Rule 67)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN . LBRACE '}' ';'	(Rule 68)

	LBRACE	shift, and go to state 336

State 296:

	STAR-25 -> STAR-25 . MethodOrSubroutine	(Rule 61)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 STAR-23 STAR-24 Properties STAR-25 . LITERAL_NUMBER ';'	(Rule 63)

	'our'	shift, and go to state 340
	LITERAL_NUMBER	shift, and go to state 339

	Method	go to state 337
	MethodOrSubroutine	go to state 338
	Subroutine	go to state 341

State 297:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON . VariableOrLiteral	(Rule 107)

	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	VARIABLE_SYMBOL	shift, and go to state 116

	VariableOrLiteral	go to state 342
	Variable	go to state 232
	Literal	go to state 231

State 298:

	TypeInner -> MY Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 217)

	WORD	shift, and go to state 343

State 299:

	PLUS-47 -> PLUS-47 WORD .	(Rule 184)

	$default	reduce using rule 184 (PLUS-47)

State 300:

	ListElement -> OP01_QW PLUS-47 ')' .	(Rule 188)

	$default	reduce using rule 188 (ListElement)

State 301:

	PAREN-45 -> OP21_LIST_COMMA . ListElement	(Rule 180)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	MY	shift, and go to state 164
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP01_QW	shift, and go to state 166
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	ArrayDereference	go to state 127
	SubExpression	go to state 170
	HashReference	go to state 99
	TypeInner	go to state 167
	Expression	go to state 141
	HashDereference	go to state 126
	WordScoped	go to state 111
	ListElement	go to state 344
	Variable	go to state 138
	ArrayReference	go to state 119
	Literal	go to state 118
	Operator	go to state 120

State 302:

	STAR-46 -> STAR-46 PAREN-45 .	(Rule 181)

	$default	reduce using rule 181 (STAR-46)

State 303:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-34 ')' ';' .	(Rule 119)

	$default	reduce using rule 119 (OperatorVoid)

State 304:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ')'	(Rule 84)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	MY	shift, and go to state 164
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP01_QW	shift, and go to state 166
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	Variable	go to state 138
	ListElement	go to state 168
	Operator	go to state 120
	ArrayReference	go to state 119
	Literal	go to state 118
	SubExpression	go to state 170
	ArrayDereference	go to state 127
	HashReference	go to state 99
	HashDereference	go to state 126
	TypeInner	go to state 167
	Expression	go to state 141
	ListElements	go to state 345
	WordScoped	go to state 111

State 305:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements . ')'	(Rule 82)

	')'	shift, and go to state 346

State 306:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ';'	(Rule 121)

	';'	shift, and go to state 347

State 307:

	HashDereference -> '%{' OPTIONAL-53 HashReference '}' .	(Rule 210)

	$default	reduce using rule 210 (HashDereference)

State 308:

	Conditional -> 'if' LPAREN SubExpression ')' . CodeBlock STAR-40 OPTIONAL-42	(Rule 159)

	LBRACE	shift, and go to state 348

	CodeBlock	go to state 349

State 309:

	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL ';' .	(Rule 177)

	$default	reduce using rule 177 (VariableDeclaration)

State 310:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 176)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	STDIN	shift, and go to state 268
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	HashDereference	go to state 126
	Expression	go to state 141
	WordScoped	go to state 111
	SubExpression	go to state 269
	ArrayDereference	go to state 127
	HashReference	go to state 99
	Operator	go to state 120
	SubExpressionOrStdin	go to state 350
	ArrayReference	go to state 119
	Literal	go to state 118
	Variable	go to state 138

State 311:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL ';' .	(Rule 175)

	$default	reduce using rule 175 (VariableDeclaration)

State 312:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-36 . ')'	(Rule 132)

	')'	shift, and go to state 351

State 313:

	OPTIONAL-36 -> ListElements .	(Rule 126)

	$default	reduce using rule 126 (OPTIONAL-36)

State 314:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 178)

	$default	reduce using rule 178 (VariableModification)

State 315:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';' .	(Rule 179)

	$default	reduce using rule 179 (VariableModification)

State 316:

	OperatorVoid -> OP01_PRINT OPTIONAL-33 ListElements ';' .	(Rule 116)

	$default	reduce using rule 116 (OperatorVoid)

State 317:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements ';' .	(Rule 117)

	$default	reduce using rule 117 (OperatorVoid)

State 318:

	Expression -> WordScoped SCOPE WORD_UPPERCASE LPAREN . ')'	(Rule 131)

	')'	shift, and go to state 352

State 319:

	Expression -> WordScoped LPAREN OPTIONAL-35 ')' .	(Rule 129)

	$default	reduce using rule 129 (Expression)

State 320:

	HashReference -> LBRACE HashEntry STAR-52 '}' .	(Rule 205)

	$default	reduce using rule 205 (HashReference)

State 321:

	STAR-52 -> STAR-52 PAREN-51 .	(Rule 203)

	$default	reduce using rule 203 (STAR-52)

State 322:

	PAREN-51 -> OP21_LIST_COMMA . HashEntry	(Rule 202)

	'%{'	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 201

	VariableOrLiteralOrWord	go to state 202
	Variable	go to state 200
	HashEntry	go to state 353
	HashDereference	go to state 203
	Literal	go to state 204

State 323:

	HashEntry -> VariableOrLiteralOrWord OP20_HASH_FATARROW OPTIONAL-50 . SubExpression	(Rule 198)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	Variable	go to state 138
	Operator	go to state 120
	Literal	go to state 118
	ArrayReference	go to state 119
	SubExpression	go to state 354
	ArrayDereference	go to state 127
	HashReference	go to state 99
	HashDereference	go to state 126
	Expression	go to state 141
	WordScoped	go to state 111

State 324:

	OPTIONAL-50 -> TypeInner .	(Rule 196)

	$default	reduce using rule 196 (OPTIONAL-50)

State 325:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression . ']'	(Rule 172)

	']'	shift, and go to state 355
	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 147
	OP12_COMPARE_EQ_NE	shift, and go to state 160
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 159
	OP16_LOGICAL_OR	shift, and go to state 156
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 145
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 151

State 326:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	VariableRetrieval -> OP02_HASH_THINARROW SubExpression . '}'	(Rule 173)

	'}'	shift, and go to state 356
	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 147
	OP12_COMPARE_EQ_NE	shift, and go to state 160
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 159
	OP16_LOGICAL_OR	shift, and go to state 156
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 145
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 151

State 327:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 174)
	WordScoped -> WORD .	(Rule 211)

	'}'	shift, and go to state 357

	LPAREN	reduce using rule 211 (WordScoped)
	OP02_METHOD_THINARROW_NEW	reduce using rule 211 (WordScoped)
	SCOPE	reduce using rule 211 (WordScoped)

State 328:

	LoopForEach -> 'foreach' MY Type . VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 164)

	VARIABLE_SYMBOL	shift, and go to state 358

State 329:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	LoopWhile -> 'while' LPAREN SubExpression . ')' CodeBlock	(Rule 165)

	')'	shift, and go to state 359
	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 147
	OP12_COMPARE_EQ_NE	shift, and go to state 160
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 159
	OP16_LOGICAL_OR	shift, and go to state 156
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 145
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 151

State 330:

	LoopFor -> 'for' MY TYPE_INTEGER . VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 163)

	VARIABLE_SYMBOL	shift, and go to state 360

State 331:

	ArrayDereference -> '@{' OPTIONAL-49 ArrayReference '}' .	(Rule 195)

	$default	reduce using rule 195 (ArrayDereference)

State 332:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL . OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 85)

	OP21_LIST_COMMA	shift, and go to state 361

State 333:

	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN .	(Rule 218)

	$default	reduce using rule 218 (TypeInnerConstant)

State 334:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 STAR-19 '}' ';' .	(Rule 50)

	$default	reduce using rule 50 (Subroutine)

State 335:

	STAR-21 -> STAR-21 . PAREN-20	(Rule 52)
	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-21 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 54)

	')'	shift, and go to state 362
	OP21_LIST_COMMA	shift, and go to state 363

	PAREN-20	go to state 364

State 336:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE . HashEntryTyped STAR-27 '}' ';'	(Rule 67)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE . '}' ';'	(Rule 68)

	'%{'	shift, and go to state 102
	'}'	shift, and go to state 368
	WORD	shift, and go to state 365

	HashDereference	go to state 366
	HashEntryTyped	go to state 367

State 337:

	MethodOrSubroutine -> Method .	(Rule 78)

	$default	reduce using rule 78 (MethodOrSubroutine)

State 338:

	STAR-25 -> STAR-25 MethodOrSubroutine .	(Rule 61)

	$default	reduce using rule 61 (STAR-25)

State 339:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER . ';'	(Rule 63)

	';'	shift, and go to state 369

State 340:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 STAR-19 '}' ';'	(Rule 50)
	Method -> 'our' . TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-28 STAR-29 '}' ';'	(Rule 73)

	TYPE_INTEGER	shift, and go to state 56
	TYPE_METHOD	shift, and go to state 370
	WORD	shift, and go to state 55
	WORD_SCOPED	shift, and go to state 54

	Type	go to state 57

State 341:

	MethodOrSubroutine -> Subroutine .	(Rule 79)

	$default	reduce using rule 79 (MethodOrSubroutine)

State 342:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral .	(Rule 107)

	$default	reduce using rule 107 (Operator)

State 343:

	TypeInner -> MY Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 217)

	OP19_VARIABLE_ASSIGN	shift, and go to state 371

State 344:

	PAREN-45 -> OP21_LIST_COMMA ListElement .	(Rule 180)

	$default	reduce using rule 180 (PAREN-45)

State 345:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ')'	(Rule 84)

	')'	shift, and go to state 372

State 346:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')' .	(Rule 82)

	$default	reduce using rule 82 (Operator)

State 347:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';' .	(Rule 121)

	$default	reduce using rule 121 (OperatorVoid)

State 348:

	CodeBlock -> LBRACE . PLUS-43 '}'	(Rule 168)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'if'	shift, and go to state 103
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	MY	shift, and go to state 104
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 101
	OP01_NAMED_VOID	shift, and go to state 121
	OP01_NAMED_VOID_LPAREN	shift, and go to state 96
	OP01_NAMED_VOID_SCOLON	shift, and go to state 90
	OP01_OPEN	shift, and go to state 125
	OP01_PRINT	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP19_LOOP_CONTROL	shift, and go to state 108
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 86
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 95

	'for'	reduce using rule 147 (OPTIONAL-38)
	'foreach'	reduce using rule 147 (OPTIONAL-38)
	'while'	reduce using rule 147 (OPTIONAL-38)

	VariableModification	go to state 83
	Variable	go to state 107
	WordScoped	go to state 111
	OperatorVoid	go to state 110
	Statement	go to state 112
	SubExpression	go to state 89
	Conditional	go to state 88
	Operator	go to state 120
	Literal	go to state 118
	ArrayReference	go to state 119
	LoopLabel	go to state 117
	OPTIONAL-38	go to state 122
	Operation	go to state 374
	HashDereference	go to state 126
	Expression	go to state 94
	PAREN-37	go to state 124
	HashReference	go to state 99
	VariableDeclaration	go to state 128
	PLUS-43	go to state 373
	ArrayDereference	go to state 127

State 349:

	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock . STAR-40 OPTIONAL-42	(Rule 159)

	$default	reduce using rule 155 (STAR-40)

	STAR-40	go to state 375

State 350:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 176)

	';'	shift, and go to state 376

State 351:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-36 ')' .	(Rule 132)

	$default	reduce using rule 132 (Expression)

State 352:

	Expression -> WordScoped SCOPE WORD_UPPERCASE LPAREN ')' .	(Rule 131)

	$default	reduce using rule 131 (Expression)

State 353:

	PAREN-51 -> OP21_LIST_COMMA HashEntry .	(Rule 202)

	$default	reduce using rule 202 (PAREN-51)

State 354:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	HashEntry -> VariableOrLiteralOrWord OP20_HASH_FATARROW OPTIONAL-50 SubExpression .	(Rule 198)

	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 147
	OP12_COMPARE_EQ_NE	shift, and go to state 160
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 159
	OP16_LOGICAL_OR	shift, and go to state 156
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 145
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 151

	'}'	reduce using rule 198 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 198 (HashEntry)

State 355:

	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']' .	(Rule 172)

	$default	reduce using rule 172 (VariableRetrieval)

State 356:

	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}' .	(Rule 173)

	$default	reduce using rule 173 (VariableRetrieval)

State 357:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 174)

	$default	reduce using rule 174 (VariableRetrieval)

State 358:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL . LPAREN ListElements ')' CodeBlock	(Rule 164)

	LPAREN	shift, and go to state 377

State 359:

	LoopWhile -> 'while' LPAREN SubExpression ')' . CodeBlock	(Rule 165)

	LBRACE	shift, and go to state 348

	CodeBlock	go to state 378

State 360:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL . LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 163)

	LPAREN	shift, and go to state 379

State 361:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA . LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 85)

	LITERAL_STRING	shift, and go to state 380

State 362:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-21 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 54)

	OP19_VARIABLE_ASSIGN	shift, and go to state 381

State 363:

	PAREN-20 -> OP21_LIST_COMMA . MY Type VARIABLE_SYMBOL	(Rule 51)

	MY	shift, and go to state 382

State 364:

	STAR-21 -> STAR-21 PAREN-20 .	(Rule 52)

	$default	reduce using rule 52 (STAR-21)

State 365:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner SubExpression	(Rule 200)

	OP20_HASH_FATARROW	shift, and go to state 383

State 366:

	HashEntryTyped -> HashDereference .	(Rule 201)

	$default	reduce using rule 201 (HashEntryTyped)

State 367:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped . STAR-27 '}' ';'	(Rule 67)

	$default	reduce using rule 66 (STAR-27)

	STAR-27	go to state 384

State 368:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' . ';'	(Rule 68)

	';'	shift, and go to state 385

State 369:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';' .	(Rule 63)

	$default	reduce using rule 63 (Class)

State 370:

	Method -> 'our' TYPE_METHOD . VARIABLE_SYMBOL '= sub {' OPTIONAL-28 STAR-29 '}' ';'	(Rule 73)

	VARIABLE_SYMBOL	shift, and go to state 386

State 371:

	TypeInner -> MY Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 217)

	$default	reduce using rule 217 (TypeInner)

State 372:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' .	(Rule 84)

	$default	reduce using rule 84 (Operator)

State 373:

	PLUS-43 -> PLUS-43 . Operation	(Rule 166)
	CodeBlock -> LBRACE PLUS-43 . '}'	(Rule 168)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'if'	shift, and go to state 103
	'undef'	shift, and go to state 105
	'}'	shift, and go to state 388
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	MY	shift, and go to state 104
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 101
	OP01_NAMED_VOID	shift, and go to state 121
	OP01_NAMED_VOID_LPAREN	shift, and go to state 96
	OP01_NAMED_VOID_SCOLON	shift, and go to state 90
	OP01_OPEN	shift, and go to state 125
	OP01_PRINT	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP19_LOOP_CONTROL	shift, and go to state 108
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 86
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 95

	'for'	reduce using rule 147 (OPTIONAL-38)
	'foreach'	reduce using rule 147 (OPTIONAL-38)
	'while'	reduce using rule 147 (OPTIONAL-38)

	VariableModification	go to state 83
	Variable	go to state 107
	Statement	go to state 112
	Conditional	go to state 88
	SubExpression	go to state 89
	OperatorVoid	go to state 110
	WordScoped	go to state 111
	Operation	go to state 387
	OPTIONAL-38	go to state 122
	ArrayReference	go to state 119
	Literal	go to state 118
	Operator	go to state 120
	LoopLabel	go to state 117
	HashReference	go to state 99
	ArrayDereference	go to state 127
	VariableDeclaration	go to state 128
	Expression	go to state 94
	PAREN-37	go to state 124
	HashDereference	go to state 126

State 374:

	PLUS-43 -> Operation .	(Rule 167)

	$default	reduce using rule 167 (PLUS-43)

State 375:

	STAR-40 -> STAR-40 . PAREN-39	(Rule 154)
	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-40 . OPTIONAL-42	(Rule 159)

	'else'	shift, and go to state 393
	'elsif'	shift, and go to state 390

	$end	reduce using rule 158 (OPTIONAL-42)
	'%{'	reduce using rule 158 (OPTIONAL-42)
	'@{'	reduce using rule 158 (OPTIONAL-42)
	'for'	reduce using rule 158 (OPTIONAL-42)
	'foreach'	reduce using rule 158 (OPTIONAL-42)
	'if'	reduce using rule 158 (OPTIONAL-42)
	'undef'	reduce using rule 158 (OPTIONAL-42)
	'while'	reduce using rule 158 (OPTIONAL-42)
	'}'	reduce using rule 158 (OPTIONAL-42)
	LBRACE	reduce using rule 158 (OPTIONAL-42)
	LBRACKET	reduce using rule 158 (OPTIONAL-42)
	LITERAL_NUMBER	reduce using rule 158 (OPTIONAL-42)
	LITERAL_STRING	reduce using rule 158 (OPTIONAL-42)
	LPAREN	reduce using rule 158 (OPTIONAL-42)
	MY	reduce using rule 158 (OPTIONAL-42)
	OP01_CLOSE	reduce using rule 158 (OPTIONAL-42)
	OP01_NAMED	reduce using rule 158 (OPTIONAL-42)
	OP01_NAMED_VOID	reduce using rule 158 (OPTIONAL-42)
	OP01_NAMED_VOID_LPAREN	reduce using rule 158 (OPTIONAL-42)
	OP01_NAMED_VOID_SCOLON	reduce using rule 158 (OPTIONAL-42)
	OP01_OPEN	reduce using rule 158 (OPTIONAL-42)
	OP01_PRINT	reduce using rule 158 (OPTIONAL-42)
	OP03_MATH_INC_DEC	reduce using rule 158 (OPTIONAL-42)
	OP05_LOGICAL_NEG	reduce using rule 158 (OPTIONAL-42)
	OP05_MATH_NEG_LPAREN	reduce using rule 158 (OPTIONAL-42)
	OP10_NAMED_UNARY	reduce using rule 158 (OPTIONAL-42)
	OP19_LOOP_CONTROL	reduce using rule 158 (OPTIONAL-42)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 158 (OPTIONAL-42)
	OP22_LOGICAL_NEG	reduce using rule 158 (OPTIONAL-42)
	VARIABLE_SYMBOL	reduce using rule 158 (OPTIONAL-42)
	WORD	reduce using rule 158 (OPTIONAL-42)
	WORD_SCOPED	reduce using rule 158 (OPTIONAL-42)
	WORD_UPPERCASE	reduce using rule 158 (OPTIONAL-42)

	PAREN-39	go to state 391
	PAREN-41	go to state 392
	OPTIONAL-42	go to state 389

State 376:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 176)

	$default	reduce using rule 176 (VariableDeclaration)

State 377:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN . ListElements ')' CodeBlock	(Rule 164)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	MY	shift, and go to state 164
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP01_QW	shift, and go to state 166
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	TypeInner	go to state 167
	Expression	go to state 141
	HashDereference	go to state 126
	ListElements	go to state 394
	WordScoped	go to state 111
	ArrayDereference	go to state 127
	SubExpression	go to state 170
	HashReference	go to state 99
	ArrayReference	go to state 119
	Literal	go to state 118
	Operator	go to state 120
	ListElement	go to state 168
	Variable	go to state 138

State 378:

	LoopWhile -> 'while' LPAREN SubExpression ')' CodeBlock .	(Rule 165)

	$default	reduce using rule 165 (LoopWhile)

State 379:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN . SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 163)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	HashDereference	go to state 126
	Expression	go to state 141
	WordScoped	go to state 111
	SubExpression	go to state 395
	ArrayDereference	go to state 127
	HashReference	go to state 99
	Operator	go to state 120
	Literal	go to state 118
	ArrayReference	go to state 119
	Variable	go to state 138

State 380:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING . OP21_LIST_COMMA SubExpression	(Rule 85)

	OP21_LIST_COMMA	shift, and go to state 396

State 381:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 54)

	'@_;'	shift, and go to state 397

State 382:

	PAREN-20 -> OP21_LIST_COMMA MY . Type VARIABLE_SYMBOL	(Rule 51)

	TYPE_INTEGER	shift, and go to state 56
	WORD	shift, and go to state 55
	WORD_SCOPED	shift, and go to state 54

	Type	go to state 398

State 383:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner SubExpression	(Rule 200)

	MY	shift, and go to state 164

	TypeInner	go to state 399

State 384:

	STAR-27 -> STAR-27 . PAREN-26	(Rule 65)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-27 . '}' ';'	(Rule 67)

	'}'	shift, and go to state 400
	OP21_LIST_COMMA	shift, and go to state 401

	PAREN-26	go to state 402

State 385:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';' .	(Rule 68)

	$default	reduce using rule 68 (Properties)

State 386:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL . '= sub {' OPTIONAL-28 STAR-29 '}' ';'	(Rule 73)

	'= sub {'	shift, and go to state 403

State 387:

	PLUS-43 -> PLUS-43 Operation .	(Rule 166)

	$default	reduce using rule 166 (PLUS-43)

State 388:

	CodeBlock -> LBRACE PLUS-43 '}' .	(Rule 168)

	$default	reduce using rule 168 (CodeBlock)

State 389:

	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-40 OPTIONAL-42 .	(Rule 159)

	$default	reduce using rule 159 (Conditional)

State 390:

	PAREN-39 -> 'elsif' . LPAREN SubExpression ')' CodeBlock	(Rule 153)

	LPAREN	shift, and go to state 404

State 391:

	STAR-40 -> STAR-40 PAREN-39 .	(Rule 154)

	$default	reduce using rule 154 (STAR-40)

State 392:

	OPTIONAL-42 -> PAREN-41 .	(Rule 157)

	$default	reduce using rule 157 (OPTIONAL-42)

State 393:

	PAREN-41 -> 'else' . CodeBlock	(Rule 156)

	LBRACE	shift, and go to state 348

	CodeBlock	go to state 405

State 394:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements . ')' CodeBlock	(Rule 164)

	')'	shift, and go to state 406

State 395:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression . OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 163)

	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 147
	OP12_COMPARE_EQ_NE	shift, and go to state 160
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 159
	OP16_LOGICAL_OR	shift, and go to state 156
	OP17_LIST_RANGE	shift, and go to state 407
	OP18_TERNARY	shift, and go to state 145
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 151

State 396:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA . SubExpression	(Rule 85)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	Expression	go to state 141
	HashDereference	go to state 126
	WordScoped	go to state 111
	ArrayDereference	go to state 127
	SubExpression	go to state 408
	HashReference	go to state 99
	Literal	go to state 118
	ArrayReference	go to state 119
	Operator	go to state 120
	Variable	go to state 138

State 397:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 54)

	$default	reduce using rule 54 (SubroutineArguments)

State 398:

	PAREN-20 -> OP21_LIST_COMMA MY Type . VARIABLE_SYMBOL	(Rule 51)

	VARIABLE_SYMBOL	shift, and go to state 409

State 399:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . SubExpression	(Rule 200)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	Variable	go to state 138
	ArrayReference	go to state 119
	Literal	go to state 118
	Operator	go to state 120
	HashReference	go to state 99
	ArrayDereference	go to state 127
	SubExpression	go to state 410
	WordScoped	go to state 111
	Expression	go to state 141
	HashDereference	go to state 126

State 400:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-27 '}' . ';'	(Rule 67)

	';'	shift, and go to state 411

State 401:

	PAREN-26 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 64)

	'%{'	shift, and go to state 102
	WORD	shift, and go to state 365

	HashEntryTyped	go to state 412
	HashDereference	go to state 366

State 402:

	STAR-27 -> STAR-27 PAREN-26 .	(Rule 65)

	$default	reduce using rule 65 (STAR-27)

State 403:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' . OPTIONAL-28 STAR-29 '}' ';'	(Rule 73)

	LPAREN_MY	shift, and go to state 415

	'%{'	reduce using rule 70 (OPTIONAL-28)
	'@{'	reduce using rule 70 (OPTIONAL-28)
	'for'	reduce using rule 70 (OPTIONAL-28)
	'foreach'	reduce using rule 70 (OPTIONAL-28)
	'if'	reduce using rule 70 (OPTIONAL-28)
	'undef'	reduce using rule 70 (OPTIONAL-28)
	'while'	reduce using rule 70 (OPTIONAL-28)
	'}'	reduce using rule 70 (OPTIONAL-28)
	LBRACE	reduce using rule 70 (OPTIONAL-28)
	LBRACKET	reduce using rule 70 (OPTIONAL-28)
	LITERAL_NUMBER	reduce using rule 70 (OPTIONAL-28)
	LITERAL_STRING	reduce using rule 70 (OPTIONAL-28)
	LPAREN	reduce using rule 70 (OPTIONAL-28)
	MY	reduce using rule 70 (OPTIONAL-28)
	OP01_CLOSE	reduce using rule 70 (OPTIONAL-28)
	OP01_NAMED	reduce using rule 70 (OPTIONAL-28)
	OP01_NAMED_VOID	reduce using rule 70 (OPTIONAL-28)
	OP01_NAMED_VOID_LPAREN	reduce using rule 70 (OPTIONAL-28)
	OP01_NAMED_VOID_SCOLON	reduce using rule 70 (OPTIONAL-28)
	OP01_OPEN	reduce using rule 70 (OPTIONAL-28)
	OP01_PRINT	reduce using rule 70 (OPTIONAL-28)
	OP03_MATH_INC_DEC	reduce using rule 70 (OPTIONAL-28)
	OP05_LOGICAL_NEG	reduce using rule 70 (OPTIONAL-28)
	OP05_MATH_NEG_LPAREN	reduce using rule 70 (OPTIONAL-28)
	OP10_NAMED_UNARY	reduce using rule 70 (OPTIONAL-28)
	OP19_LOOP_CONTROL	reduce using rule 70 (OPTIONAL-28)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 70 (OPTIONAL-28)
	OP22_LOGICAL_NEG	reduce using rule 70 (OPTIONAL-28)
	VARIABLE_SYMBOL	reduce using rule 70 (OPTIONAL-28)
	WORD	reduce using rule 70 (OPTIONAL-28)
	WORD_SCOPED	reduce using rule 70 (OPTIONAL-28)
	WORD_UPPERCASE	reduce using rule 70 (OPTIONAL-28)

	MethodArguments	go to state 414
	OPTIONAL-28	go to state 413

State 404:

	PAREN-39 -> 'elsif' LPAREN . SubExpression ')' CodeBlock	(Rule 153)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	Literal	go to state 118
	ArrayReference	go to state 119
	Operator	go to state 120
	Variable	go to state 138
	WordScoped	go to state 111
	Expression	go to state 141
	HashDereference	go to state 126
	HashReference	go to state 99
	ArrayDereference	go to state 127
	SubExpression	go to state 416

State 405:

	PAREN-41 -> 'else' CodeBlock .	(Rule 156)

	$default	reduce using rule 156 (PAREN-41)

State 406:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' . CodeBlock	(Rule 164)

	LBRACE	shift, and go to state 348

	CodeBlock	go to state 417

State 407:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 106)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE . SubExpression ')' CodeBlock	(Rule 163)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 142
	OP01_OPEN	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 140

	Variable	go to state 138
	ArrayReference	go to state 119
	Literal	go to state 118
	Operator	go to state 120
	ArrayDereference	go to state 127
	SubExpression	go to state 418
	HashReference	go to state 99
	Expression	go to state 141
	HashDereference	go to state 126
	WordScoped	go to state 111

State 408:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression .	(Rule 85)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 147
	OP12_COMPARE_EQ_NE	shift, and go to state 160
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 159
	OP16_LOGICAL_OR	shift, and go to state 156
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 145

	')'	reduce using rule 85 (Operator)
	';'	reduce using rule 85 (Operator)
	']'	reduce using rule 85 (Operator)
	'}'	reduce using rule 85 (Operator)
	OP21_LIST_COMMA	reduce using rule 85 (Operator)
	OP23_LOGICAL_AND	reduce using rule 85 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 85 (Operator)

State 409:

	PAREN-20 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL .	(Rule 51)

	$default	reduce using rule 51 (PAREN-20)

State 410:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression .	(Rule 200)

	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 147
	OP12_COMPARE_EQ_NE	shift, and go to state 160
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 159
	OP16_LOGICAL_OR	shift, and go to state 156
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 145
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 151

	'}'	reduce using rule 200 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 200 (HashEntryTyped)

State 411:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-27 '}' ';' .	(Rule 67)

	$default	reduce using rule 67 (Properties)

State 412:

	PAREN-26 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 64)

	$default	reduce using rule 64 (PAREN-26)

State 413:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-28 . STAR-29 '}' ';'	(Rule 73)

	$default	reduce using rule 72 (STAR-29)

	STAR-29	go to state 419

State 414:

	OPTIONAL-28 -> MethodArguments .	(Rule 69)

	$default	reduce using rule 69 (OPTIONAL-28)

State 415:

	MethodArguments -> LPAREN_MY . TYPE_SELF STAR-31 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 77)

	TYPE_SELF	shift, and go to state 420

State 416:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	PAREN-39 -> 'elsif' LPAREN SubExpression . ')' CodeBlock	(Rule 153)

	')'	shift, and go to state 421
	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 147
	OP12_COMPARE_EQ_NE	shift, and go to state 160
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 159
	OP16_LOGICAL_OR	shift, and go to state 156
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 145
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 151

State 417:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock .	(Rule 164)

	$default	reduce using rule 164 (LoopForEach)

State 418:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression . ')' CodeBlock	(Rule 163)

	')'	shift, and go to state 422
	OP04_MATH_POW	shift, and go to state 150
	OP06_REGEX_MATCH	shift, and go to state 158
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 148
	OP07_STRING_REPEAT	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 149
	OP11_COMPARE_LT_GT	shift, and go to state 147
	OP12_COMPARE_EQ_NE	shift, and go to state 160
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 159
	OP16_LOGICAL_OR	shift, and go to state 156

	OP17_LIST_RANGE	error (nonassociative)

	OP18_TERNARY	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 419:

	STAR-29 -> STAR-29 . Operation	(Rule 71)
	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-28 STAR-29 . '}' ';'	(Rule 73)

	'%{'	shift, and go to state 102
	'@{'	shift, and go to state 123
	'if'	shift, and go to state 103
	'undef'	shift, and go to state 105
	'}'	shift, and go to state 424
	LBRACE	shift, and go to state 113
	LBRACKET	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 114
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 100
	MY	shift, and go to state 104
	OP01_CLOSE	shift, and go to state 97
	OP01_NAMED	shift, and go to state 101
	OP01_NAMED_VOID	shift, and go to state 121
	OP01_NAMED_VOID_LPAREN	shift, and go to state 96
	OP01_NAMED_VOID_SCOLON	shift, and go to state 90
	OP01_OPEN	shift, and go to state 125
	OP01_PRINT	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 93
	OP05_LOGICAL_NEG	shift, and go to state 87
	OP05_MATH_NEG_LPAREN	shift, and go to state 129
	OP10_NAMED_UNARY	shift, and go to state 84
	OP19_LOOP_CONTROL	shift, and go to state 108
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 86
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 116
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 95

	'for'	reduce using rule 147 (OPTIONAL-38)
	'foreach'	reduce using rule 147 (OPTIONAL-38)
	'while'	reduce using rule 147 (OPTIONAL-38)

	OPTIONAL-38	go to state 122
	Operation	go to state 423
	Operator	go to state 120
	ArrayReference	go to state 119
	Literal	go to state 118
	LoopLabel	go to state 117
	HashReference	go to state 99
	VariableDeclaration	go to state 128
	ArrayDereference	go to state 127
	HashDereference	go to state 126
	Expression	go to state 94
	PAREN-37	go to state 124
	VariableModification	go to state 83
	Variable	go to state 107
	Statement	go to state 112
	SubExpression	go to state 89
	Conditional	go to state 88
	WordScoped	go to state 111
	OperatorVoid	go to state 110

State 420:

	MethodArguments -> LPAREN_MY TYPE_SELF . STAR-31 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 77)

	$default	reduce using rule 76 (STAR-31)

	STAR-31	go to state 425

State 421:

	PAREN-39 -> 'elsif' LPAREN SubExpression ')' . CodeBlock	(Rule 153)

	LBRACE	shift, and go to state 348

	CodeBlock	go to state 426

State 422:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' . CodeBlock	(Rule 163)

	LBRACE	shift, and go to state 348

	CodeBlock	go to state 427

State 423:

	STAR-29 -> STAR-29 Operation .	(Rule 71)

	$default	reduce using rule 71 (STAR-29)

State 424:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-28 STAR-29 '}' . ';'	(Rule 73)

	';'	shift, and go to state 428

State 425:

	STAR-31 -> STAR-31 . PAREN-30	(Rule 75)
	MethodArguments -> LPAREN_MY TYPE_SELF STAR-31 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 77)

	')'	shift, and go to state 430
	OP21_LIST_COMMA	shift, and go to state 431

	PAREN-30	go to state 429

State 426:

	PAREN-39 -> 'elsif' LPAREN SubExpression ')' CodeBlock .	(Rule 153)

	$default	reduce using rule 153 (PAREN-39)

State 427:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock .	(Rule 163)

	$default	reduce using rule 163 (LoopFor)

State 428:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-28 STAR-29 '}' ';' .	(Rule 73)

	$default	reduce using rule 73 (Method)

State 429:

	STAR-31 -> STAR-31 PAREN-30 .	(Rule 75)

	$default	reduce using rule 75 (STAR-31)

State 430:

	MethodArguments -> LPAREN_MY TYPE_SELF STAR-31 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 77)

	OP19_VARIABLE_ASSIGN	shift, and go to state 432

State 431:

	PAREN-30 -> OP21_LIST_COMMA . MY Type VARIABLE_SYMBOL	(Rule 74)

	MY	shift, and go to state 433

State 432:

	MethodArguments -> LPAREN_MY TYPE_SELF STAR-31 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 77)

	'@_;'	shift, and go to state 434

State 433:

	PAREN-30 -> OP21_LIST_COMMA MY . Type VARIABLE_SYMBOL	(Rule 74)

	TYPE_INTEGER	shift, and go to state 56
	WORD	shift, and go to state 55
	WORD_SCOPED	shift, and go to state 54

	Type	go to state 435

State 434:

	MethodArguments -> LPAREN_MY TYPE_SELF STAR-31 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 77)

	$default	reduce using rule 77 (MethodArguments)

State 435:

	PAREN-30 -> OP21_LIST_COMMA MY Type . VARIABLE_SYMBOL	(Rule 74)

	VARIABLE_SYMBOL	shift, and go to state 436

State 436:

	PAREN-30 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL .	(Rule 74)

	$default	reduce using rule 74 (PAREN-30)


Summary:
--------
Number of rules         : 226
Number of terminals     : 92
Number of non-terminals : 103
Number of states        : 437
