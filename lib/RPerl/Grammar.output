Conflicts:
----------
Conflict in state 158 between rule 115 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 158 between rule 115 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 158 between rule 115 and token OP18_TERNARY resolved as reduce.
Conflict in state 158 between rule 115 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 158 between rule 115 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 158 between rule 115 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 158 between rule 115 and token OP08_STRING_CAT resolved as shift.
Conflict in state 158 between rule 115 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 158 between rule 115 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 158 between rule 115 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 158 between rule 115 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 158 between rule 115 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 158 between rule 115 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 158 between rule 115 and token OP04_MATH_POW resolved as shift.
Conflict in state 158 between rule 115 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 158 between rule 115 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 158 between rule 115 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 193 between rule 99 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 193 between rule 99 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 193 between rule 99 and token OP06_REGEX_BIND resolved as reduce.
Conflict in state 193 between rule 99 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 193 between rule 99 and token OP04_MATH_POW resolved as reduce.
Conflict in state 193 between rule 99 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 193 between rule 99 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 193 between rule 99 and token OP18_TERNARY resolved as reduce.
Conflict in state 193 between rule 99 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 193 between rule 99 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 193 between rule 99 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 193 between rule 99 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 193 between rule 99 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 193 between rule 99 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 193 between rule 99 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 193 between rule 99 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 193 between rule 99 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 260 between rule 126 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 260 between rule 126 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 260 between rule 126 and token OP18_TERNARY resolved as shift.
Conflict in state 260 between rule 126 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 260 between rule 126 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 260 between rule 126 and token OP08_STRING_CAT resolved as shift.
Conflict in state 260 between rule 126 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 260 between rule 126 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 260 between rule 126 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 260 between rule 126 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 260 between rule 126 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 260 between rule 126 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 260 between rule 126 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 260 between rule 126 and token OP04_MATH_POW resolved as shift.
Conflict in state 260 between rule 126 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 260 between rule 126 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 260 between rule 126 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 261 between rule 107 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 261 between rule 107 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 261 between rule 107 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 261 between rule 107 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 261 between rule 107 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 261 between rule 107 and token OP06_REGEX_BIND resolved as reduce.
Conflict in state 261 between rule 107 and token OP04_MATH_POW resolved as shift.
Conflict in state 261 between rule 107 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 261 between rule 107 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 261 between rule 107 and token OP18_TERNARY resolved as reduce.
Conflict in state 261 between rule 107 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 261 between rule 107 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 261 between rule 107 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 261 between rule 107 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 261 between rule 107 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 261 between rule 107 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 261 between rule 107 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 268 between rule 99 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 268 between rule 99 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 268 between rule 99 and token OP18_TERNARY resolved as reduce.
Conflict in state 268 between rule 99 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 268 between rule 99 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 268 between rule 99 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 268 between rule 99 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 268 between rule 99 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 268 between rule 99 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 268 between rule 99 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 268 between rule 99 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 268 between rule 99 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 268 between rule 99 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 268 between rule 99 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 268 between rule 99 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 268 between rule 99 and token OP04_MATH_POW resolved as reduce.
Conflict in state 268 between rule 99 and token OP06_REGEX_BIND resolved as reduce.
Conflict in state 314 between rule 111 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 314 between rule 111 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 314 between rule 111 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 314 between rule 111 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 314 between rule 111 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 314 between rule 111 and token OP04_MATH_POW resolved as shift.
Conflict in state 314 between rule 111 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 314 between rule 111 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 314 between rule 111 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 314 between rule 111 and token OP18_TERNARY resolved as reduce.
Conflict in state 314 between rule 111 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 314 between rule 111 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 314 between rule 111 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 314 between rule 111 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 314 between rule 111 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 314 between rule 111 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 314 between rule 111 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 315 between rule 127 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 315 between rule 127 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 315 between rule 127 and token OP18_TERNARY resolved as shift.
Conflict in state 315 between rule 127 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 315 between rule 127 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 315 between rule 127 and token OP08_STRING_CAT resolved as shift.
Conflict in state 315 between rule 127 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 315 between rule 127 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 315 between rule 127 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 315 between rule 127 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 315 between rule 127 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 315 between rule 127 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 315 between rule 127 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 315 between rule 127 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 315 between rule 127 and token OP04_MATH_POW resolved as shift.
Conflict in state 315 between rule 127 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 315 between rule 127 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 316 between rule 113 and token OP18_TERNARY resolved as reduce.
Conflict in state 316 between rule 113 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 316 between rule 113 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 316 between rule 113 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 316 between rule 113 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 316 between rule 113 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 316 between rule 113 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 316 between rule 113 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 316 between rule 113 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 316 between rule 113 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 316 between rule 113 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 316 between rule 113 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 316 between rule 113 and token OP04_MATH_POW resolved as shift.
Conflict in state 316 between rule 113 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 316 between rule 113 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 316 between rule 113 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 316 between rule 113 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 317 between rule 120 and token OP18_TERNARY resolved as reduce.
Conflict in state 317 between rule 120 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 317 between rule 120 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 317 between rule 120 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 317 between rule 120 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 317 between rule 120 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 317 between rule 120 and token OP08_STRING_CAT resolved as shift.
Conflict in state 317 between rule 120 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 317 between rule 120 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 317 between rule 120 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 317 between rule 120 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 317 between rule 120 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 317 between rule 120 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 317 between rule 120 and token OP04_MATH_POW resolved as shift.
Conflict in state 317 between rule 120 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 317 between rule 120 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 317 between rule 120 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 318 between rule 128 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 318 between rule 128 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 318 between rule 128 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 318 between rule 128 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 318 between rule 128 and token OP04_MATH_POW resolved as shift.
Conflict in state 318 between rule 128 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 318 between rule 128 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 318 between rule 128 and token OP18_TERNARY resolved as shift.
Conflict in state 318 between rule 128 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 318 between rule 128 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 318 between rule 128 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 318 between rule 128 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 318 between rule 128 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 318 between rule 128 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 318 between rule 128 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 318 between rule 128 and token OP08_STRING_CAT resolved as shift.
Conflict in state 318 between rule 128 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 319 between rule 122 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 319 between rule 122 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 319 between rule 122 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 319 between rule 122 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 319 between rule 122 and token OP08_STRING_CAT resolved as shift.
Conflict in state 319 between rule 122 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 319 between rule 122 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 319 between rule 122 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 319 between rule 122 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 319 between rule 122 and token OP18_TERNARY resolved as reduce.
Conflict in state 319 between rule 122 and token OP04_MATH_POW resolved as shift.
Conflict in state 319 between rule 122 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 319 between rule 122 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 319 between rule 122 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 319 between rule 122 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 319 between rule 122 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 319 between rule 122 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 320 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 320 between rule 105 and token OP06_REGEX_BIND resolved as reduce.
Conflict in state 320 between rule 105 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 320 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 320 between rule 105 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 320 between rule 105 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 320 between rule 105 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 320 between rule 105 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 320 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 320 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 320 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 320 between rule 105 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 320 between rule 105 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 320 between rule 105 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 320 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 320 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 320 between rule 105 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 321 between rule 118 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 321 between rule 118 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 321 between rule 118 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 321 between rule 118 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 321 between rule 118 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 321 between rule 118 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 321 between rule 118 and token OP08_STRING_CAT resolved as shift.
Conflict in state 321 between rule 118 and token OP18_TERNARY resolved as reduce.
Conflict in state 321 between rule 118 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 321 between rule 118 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 321 between rule 118 and token OP04_MATH_POW resolved as shift.
Conflict in state 321 between rule 118 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 321 between rule 118 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 321 between rule 118 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 321 between rule 118 and token OP12_COMPARE_EQ_NE resolved as error.
Conflict in state 321 between rule 118 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 321 between rule 118 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 322 between rule 121 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 322 between rule 121 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 322 between rule 121 and token OP08_STRING_CAT resolved as shift.
Conflict in state 322 between rule 121 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 322 between rule 121 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 322 between rule 121 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 322 between rule 121 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 322 between rule 121 and token OP18_TERNARY resolved as reduce.
Conflict in state 322 between rule 121 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 322 between rule 121 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 322 between rule 121 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 322 between rule 121 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 322 between rule 121 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 322 between rule 121 and token OP04_MATH_POW resolved as shift.
Conflict in state 322 between rule 121 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 322 between rule 121 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 322 between rule 121 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 323 between rule 117 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 323 between rule 117 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 323 between rule 117 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 323 between rule 117 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 323 between rule 117 and token OP08_STRING_CAT resolved as shift.
Conflict in state 323 between rule 117 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 323 between rule 117 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 323 between rule 117 and token OP18_TERNARY resolved as reduce.
Conflict in state 323 between rule 117 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 323 between rule 117 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 323 between rule 117 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 323 between rule 117 and token OP04_MATH_POW resolved as shift.
Conflict in state 323 between rule 117 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 323 between rule 117 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 323 between rule 117 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 323 between rule 117 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 323 between rule 117 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 327 between rule 114 and token OP18_TERNARY resolved as reduce.
Conflict in state 327 between rule 114 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 327 between rule 114 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 327 between rule 114 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 327 between rule 114 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 327 between rule 114 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 327 between rule 114 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 327 between rule 114 and token OP08_STRING_CAT resolved as shift.
Conflict in state 327 between rule 114 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 327 between rule 114 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 327 between rule 114 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 327 between rule 114 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 327 between rule 114 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 327 between rule 114 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 327 between rule 114 and token OP04_MATH_POW resolved as shift.
Conflict in state 327 between rule 114 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 327 between rule 114 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 328 between rule 112 and token OP18_TERNARY resolved as reduce.
Conflict in state 328 between rule 112 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 328 between rule 112 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 328 between rule 112 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 328 between rule 112 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 328 between rule 112 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 328 between rule 112 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 328 between rule 112 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 328 between rule 112 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 328 between rule 112 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 328 between rule 112 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 328 between rule 112 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 328 between rule 112 and token OP04_MATH_POW resolved as shift.
Conflict in state 328 between rule 112 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 328 between rule 112 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 328 between rule 112 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 328 between rule 112 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 330 between rule 123 and token OP18_TERNARY resolved as reduce.
Conflict in state 330 between rule 123 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 330 between rule 123 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 330 between rule 123 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 330 between rule 123 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 330 between rule 123 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 330 between rule 123 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 330 between rule 123 and token OP08_STRING_CAT resolved as shift.
Conflict in state 330 between rule 123 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 330 between rule 123 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 330 between rule 123 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 330 between rule 123 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 330 between rule 123 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 330 between rule 123 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 330 between rule 123 and token OP04_MATH_POW resolved as shift.
Conflict in state 330 between rule 123 and token OP17_LIST_RANGE resolved as error.
Conflict in state 330 between rule 123 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 331 between rule 119 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 331 between rule 119 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 331 between rule 119 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 331 between rule 119 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 331 between rule 119 and token OP08_STRING_CAT resolved as shift.
Conflict in state 331 between rule 119 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 331 between rule 119 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 331 between rule 119 and token OP18_TERNARY resolved as reduce.
Conflict in state 331 between rule 119 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 331 between rule 119 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 331 between rule 119 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 331 between rule 119 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 331 between rule 119 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 331 between rule 119 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 331 between rule 119 and token OP04_MATH_POW resolved as shift.
Conflict in state 331 between rule 119 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 331 between rule 119 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 332 between rule 110 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 332 between rule 110 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 332 between rule 110 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 332 between rule 110 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 332 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 332 between rule 110 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 332 between rule 110 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 332 between rule 110 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 332 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 332 between rule 110 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 332 between rule 110 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 332 between rule 110 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 332 between rule 110 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 332 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 332 between rule 110 and token OP18_TERNARY resolved as reduce.
Conflict in state 332 between rule 110 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 332 between rule 110 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 460 between rule 101 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 460 between rule 101 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 460 between rule 101 and token OP18_TERNARY resolved as shift.
Conflict in state 460 between rule 101 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 460 between rule 101 and token OP08_STRING_CAT resolved as shift.
Conflict in state 460 between rule 101 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 460 between rule 101 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 460 between rule 101 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 460 between rule 101 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 460 between rule 101 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 460 between rule 101 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 460 between rule 101 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 460 between rule 101 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 460 between rule 101 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 460 between rule 101 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 460 between rule 101 and token OP04_MATH_POW resolved as shift.
Conflict in state 460 between rule 101 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 474 between rule 123 and token OP18_TERNARY resolved as reduce.
Conflict in state 474 between rule 123 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 474 between rule 123 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 474 between rule 123 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 474 between rule 123 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 474 between rule 123 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 474 between rule 123 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 474 between rule 123 and token OP08_STRING_CAT resolved as shift.
Conflict in state 474 between rule 123 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 474 between rule 123 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 474 between rule 123 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 474 between rule 123 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 474 between rule 123 and token OP17_LIST_RANGE resolved as error.
Conflict in state 474 between rule 123 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 474 between rule 123 and token OP04_MATH_POW resolved as shift.
Conflict in state 474 between rule 123 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 474 between rule 123 and token OP06_REGEX_BIND resolved as shift.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> Critic
20:	OPTIONAL-9 -> /* empty */
21:	OPTIONAL-10 -> USE_RPERL
22:	OPTIONAL-10 -> /* empty */
23:	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped ';' Header
24:	Module -> Package
25:	Module -> Class
26:	STAR-11 -> STAR-11 Critic
27:	STAR-11 -> /* empty */
28:	OPTIONAL-12 -> Exports
29:	OPTIONAL-12 -> /* empty */
30:	STAR-13 -> STAR-13 Include
31:	STAR-13 -> /* empty */
32:	STAR-14 -> STAR-14 Constant
33:	STAR-14 -> /* empty */
34:	PLUS-15 -> PLUS-15 Subroutine
35:	PLUS-15 -> Subroutine
36:	Package -> STAR-11 OPTIONAL-12 STAR-13 STAR-14 PLUS-15 LITERAL_NUMBER ';'
37:	OPTIONAL-16 -> USE_RPERL_AFTER
38:	OPTIONAL-16 -> /* empty */
39:	Header -> 'use strict;' 'use warnings;' OPTIONAL-16 OUR VERSION_NUMBER_ASSIGN
40:	PLUS-17 -> PLUS-17 WORD
41:	PLUS-17 -> WORD
42:	Critic -> '## no critic qw(' PLUS-17 ')'
43:	PAREN-18 -> OUR_EXPORT OP01_QW ';'
44:	OPTIONAL-19 -> PAREN-18
45:	OPTIONAL-19 -> /* empty */
46:	PAREN-20 -> OUR_EXPORT_OK OP01_QW ';'
47:	OPTIONAL-21 -> PAREN-20
48:	OPTIONAL-21 -> /* empty */
49:	Exports -> USE_EXPORTER OPTIONAL-19 OPTIONAL-21
50:	OPTIONAL-22 -> OP01_QW
51:	OPTIONAL-22 -> /* empty */
52:	Include -> USE WordScoped ';'
53:	Include -> USE WordScoped OP01_QW ';'
54:	Include -> 'BEGIN {' WordScoped OP02_METHOD_THINARROW_IMP OPTIONAL-22 ')' ';' '}'
55:	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'
56:	OPTIONAL-23 -> SubroutineArguments
57:	OPTIONAL-23 -> /* empty */
58:	STAR-24 -> STAR-24 Operation
59:	STAR-24 -> /* empty */
60:	Subroutine -> SUB WORD LBRACE LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-23 STAR-24 '}'
61:	PAREN-25 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL
62:	STAR-26 -> STAR-26 PAREN-25
63:	STAR-26 -> /* empty */
64:	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-26 ')' OP19_VARIABLE_ASSIGN '@ARG;'
65:	STAR-27 -> STAR-27 Critic
66:	STAR-27 -> /* empty */
67:	OPTIONAL-28 -> Exports
68:	OPTIONAL-28 -> /* empty */
69:	STAR-29 -> STAR-29 Include
70:	STAR-29 -> /* empty */
71:	STAR-30 -> STAR-30 Constant
72:	STAR-30 -> /* empty */
73:	STAR-31 -> STAR-31 SubroutineOrMethod
74:	STAR-31 -> /* empty */
75:	Class -> UseParent WordScoped ')' ';' Include STAR-27 OPTIONAL-28 STAR-29 STAR-30 Properties STAR-31 LITERAL_NUMBER ';'
76:	UseParent -> 'use parent qw('
77:	UseParent -> 'use parent -norequire, qw('
78:	PAREN-32 -> OP21_LIST_COMMA HashEntryProperties
79:	STAR-33 -> STAR-33 PAREN-32
80:	STAR-33 -> /* empty */
81:	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-33 '}' ';'
82:	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';'
83:	OPTIONAL-34 -> MethodArguments
84:	OPTIONAL-34 -> /* empty */
85:	STAR-35 -> STAR-35 Operation
86:	STAR-35 -> /* empty */
87:	Method -> SUB WORD LBRACE LBRACE MY TYPE_METHOD '$RETURN_TYPE' '}' ';' OPTIONAL-34 STAR-35 '}'
88:	PAREN-36 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL
89:	STAR-37 -> STAR-37 PAREN-36
90:	STAR-37 -> /* empty */
91:	MethodArguments -> LPAREN_MY Type SELF STAR-37 ')' OP19_VARIABLE_ASSIGN '@ARG;'
92:	SubroutineOrMethod -> Subroutine
93:	SubroutineOrMethod -> Method
94:	Operation -> Expression ';'
95:	Operation -> OP01_NAMED_SCOLON
96:	Operation -> OP10_NAMED_UNARY_SCOLON
97:	Operation -> Statement
98:	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')'
99:	Operator -> OP01_NAMED SubExpression
100:	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'
101:	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression
102:	Operator -> OP01_CLOSE FHREF_SYMBOL
103:	Operator -> OP03_MATH_INC_DEC Variable
104:	Operator -> Variable OP03_MATH_INC_DEC
105:	Operator -> SubExpression OP04_MATH_POW SubExpression
106:	Operator -> OP05_BITWISE_NEG_LPAREN SubExpression ')'
107:	Operator -> OP05_LOGICAL_NEG SubExpression
108:	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')'
109:	Operator -> SubExpression OP06_REGEX_BIND OP06_REGEX_PATTERN
110:	Operator -> SubExpression OP07_STRING_REPEAT SubExpression
111:	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression
112:	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression
113:	Operator -> SubExpression OP08_STRING_CAT SubExpression
114:	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression
115:	Operator -> OP10_NAMED_UNARY SubExpression
116:	Operator -> OP10_NAMED_UNARY
117:	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression
118:	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression
119:	Operator -> SubExpression OP13_BITWISE_AND SubExpression
120:	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression
121:	Operator -> SubExpression OP15_LOGICAL_AND SubExpression
122:	Operator -> SubExpression OP16_LOGICAL_OR SubExpression
123:	Operator -> SubExpression OP17_LIST_RANGE SubExpression
124:	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral
125:	Operator -> OP22_LOGICAL_NEG_LPAREN SubExpression ')'
126:	Operator -> OP22_LOGICAL_NEG SubExpression
127:	Operator -> SubExpression OP23_LOGICAL_AND SubExpression
128:	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression
129:	PAREN-38 -> STDOUT_STDERR
130:	OPTIONAL-39 -> PAREN-38
131:	OPTIONAL-39 -> /* empty */
132:	OPTIONAL-40 -> ListElements
133:	OPTIONAL-40 -> /* empty */
134:	OperatorVoid -> OP01_PRINT OPTIONAL-39 ListElements ';'
135:	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements ';'
136:	OperatorVoid -> OP01_NAMED_VOID_SCOLON
137:	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-40 ')' ';'
138:	OperatorVoid -> OP01_NAMED_VOID ListElements ';'
139:	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';'
140:	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON
141:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
142:	OPTIONAL-41 -> ListElements
143:	OPTIONAL-41 -> /* empty */
144:	OPTIONAL-42 -> ListElements
145:	OPTIONAL-42 -> /* empty */
146:	OPTIONAL-43 -> HashReference
147:	OPTIONAL-43 -> /* empty */
148:	Expression -> Operator
149:	Expression -> WORD_UPPERCASE LPAREN ')'
150:	Expression -> CONSTANT_CALL_SCOPED
151:	Expression -> WordScoped LPAREN OPTIONAL-41 ')'
152:	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-42 ')'
153:	Expression -> WordScoped OP02_METHOD_THINARROW_NEW OPTIONAL-43 ')'
154:	SubExpression -> Expression
155:	SubExpression -> 'undef'
156:	SubExpression -> Literal
157:	SubExpression -> Variable
158:	SubExpression -> ArrayReference
159:	SubExpression -> ArrayDereference
160:	SubExpression -> HashReference
161:	SubExpression -> HashDereference
162:	SubExpression -> LPAREN SubExpression ')'
163:	SubExpressionOrInput -> SubExpression
164:	SubExpressionOrInput -> FHREF_SYMBOL_IN
165:	SubExpressionOrInput -> STDIN
166:	SubExpressionOrVarMod -> SubExpression
167:	SubExpressionOrVarMod -> VariableModification
168:	PAREN-44 -> LoopLabel COLON
169:	OPTIONAL-45 -> PAREN-44
170:	OPTIONAL-45 -> /* empty */
171:	Statement -> Conditional
172:	Statement -> OPTIONAL-45 Loop
173:	Statement -> OperatorVoid
174:	Statement -> VariableDeclaration
175:	Statement -> VariableModification ';'
176:	PAREN-46 -> 'elsif' LPAREN SubExpression ')' CodeBlock
177:	STAR-47 -> STAR-47 PAREN-46
178:	STAR-47 -> /* empty */
179:	PAREN-48 -> 'else' CodeBlock
180:	OPTIONAL-49 -> PAREN-48
181:	OPTIONAL-49 -> /* empty */
182:	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-47 OPTIONAL-49
183:	Loop -> LoopFor
184:	Loop -> LoopForEach
185:	Loop -> LoopWhile
186:	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock
187:	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock
188:	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock
189:	LoopWhile -> 'while' LPAREN SubExpression ')' CodeBlock
190:	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrInput ')' CodeBlock
191:	PLUS-50 -> PLUS-50 Operation
192:	PLUS-50 -> Operation
193:	CodeBlock -> LBRACE PLUS-50 '}'
194:	STAR-51 -> STAR-51 VariableRetrieval
195:	STAR-51 -> /* empty */
196:	Variable -> VariableSymbolOrSelf STAR-51
197:	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']'
198:	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}'
199:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
200:	VariableDeclaration -> MY Type VARIABLE_SYMBOL ';'
201:	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExpIn
202:	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'
203:	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL ';'
204:	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrInput
205:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression
206:	PAREN-52 -> OP21_LIST_COMMA ListElement
207:	STAR-53 -> STAR-53 PAREN-52
208:	STAR-53 -> /* empty */
209:	ListElements -> ListElement STAR-53
210:	ListElement -> SubExpression
211:	ListElement -> TypeInner SubExpression
212:	ListElement -> OP01_QW
213:	ListElement -> ARGV
214:	OPTIONAL-54 -> ListElements
215:	OPTIONAL-54 -> /* empty */
216:	ArrayReference -> LBRACKET OPTIONAL-54 ']'
217:	OPTIONAL-55 -> TypeInner
218:	OPTIONAL-55 -> /* empty */
219:	ArrayDereference -> '@{' Variable '}'
220:	ArrayDereference -> '@{' OPTIONAL-55 ArrayReference '}'
221:	OPTIONAL-56 -> TypeInner
222:	OPTIONAL-56 -> /* empty */
223:	HashEntry -> VarOrLitOrOpStrOrWord OP20_HASH_FATARROW OPTIONAL-56 SubExpression
224:	HashEntry -> HashDereference
225:	HashEntry -> ENV
226:	HashEntryProperties -> OpStringOrWord OP20_HASH_FATARROW TypeInnerProperties
227:	PAREN-57 -> OP21_LIST_COMMA HashEntry
228:	STAR-58 -> STAR-58 PAREN-57
229:	STAR-58 -> /* empty */
230:	HashReference -> LBRACE HashEntry STAR-58 '}'
231:	HashReference -> LBRACE '}'
232:	OPTIONAL-59 -> TypeInner
233:	OPTIONAL-59 -> /* empty */
234:	HashDereference -> '%{' Variable '}'
235:	HashDereference -> '%{' OPTIONAL-59 HashReference '}'
236:	WordScoped -> WORD
237:	WordScoped -> WORD_SCOPED
238:	LoopLabel -> WORD_UPPERCASE
239:	Type -> WORD
240:	Type -> WORD_SCOPED
241:	Type -> TYPE_INTEGER
242:	TypeInner -> MY Type '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN
243:	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN SubExpression
244:	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'
245:	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN
246:	VariableOrLiteral -> Variable
247:	VariableOrLiteral -> Literal
248:	VarOrLitOrOpStrOrWord -> Variable
249:	VarOrLitOrOpStrOrWord -> Literal
250:	VarOrLitOrOpStrOrWord -> OpStringOrWord
251:	VariableSymbolOrSelf -> VARIABLE_SYMBOL
252:	VariableSymbolOrSelf -> SELF
253:	Literal -> LITERAL_NUMBER
254:	Literal -> LITERAL_STRING
255:	OpNamedScolonOrSubExp -> OP01_NAMED_SCOLON
256:	OpNamedScolonOrSubExp -> OP10_NAMED_UNARY_SCOLON
257:	OpNamedScolonOrSubExp -> SubExpression ';'
258:	OpNamedScolonOrSubExpIn -> OP01_NAMED_SCOLON
259:	OpNamedScolonOrSubExpIn -> OP10_NAMED_UNARY_SCOLON
260:	OpNamedScolonOrSubExpIn -> SubExpressionOrInput ';'
261:	OpStringOrWord -> OP24_LOGICAL_OR_XOR
262:	OpStringOrWord -> OP23_LOGICAL_AND
263:	OpStringOrWord -> OP22_LOGICAL_NEG
264:	OpStringOrWord -> OP19_LOOP_CONTROL_SCOLON
265:	OpStringOrWord -> OP19_LOOP_CONTROL
266:	OpStringOrWord -> OP12_COMPARE_EQ_NE
267:	OpStringOrWord -> OP11_COMPARE_LT_GT
268:	OpStringOrWord -> OP10_NAMED_UNARY
269:	OpStringOrWord -> OP08_MATH_ADD_SUB
270:	OpStringOrWord -> OP07_MATH_MULT_DIV_MOD
271:	OpStringOrWord -> OP07_STRING_REPEAT
272:	OpStringOrWord -> OP01_NAMED
273:	OpStringOrWord -> OP01_CLOSE
274:	OpStringOrWord -> OP01_OPEN
275:	OpStringOrWord -> OP01_NAMED_VOID
276:	OpStringOrWord -> OP01_PRINT
277:	OpStringOrWord -> WORD

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'## no critic qw('	shift, and go to state 3
	SHEBANG	shift, and go to state 1

	'package'	reduce using rule 20 (OPTIONAL-9)
	USE_RPERL	reduce using rule 20 (OPTIONAL-9)

	Critic	go to state 9
	OPTIONAL-9	go to state 7
	CompileUnit	go to state 6
	ModuleHeader	go to state 5
	PLUS-2	go to state 2
	Program	go to state 8
	PAREN-1	go to state 4

State 1:

	Program -> SHEBANG . OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 3

	USE_RPERL	reduce using rule 7 (OPTIONAL-3)

	OPTIONAL-3	go to state 10
	Critic	go to state 11

State 2:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	'## no critic qw('	shift, and go to state 3

	$end	reduce using rule 5 (CompileUnit)
	'package'	reduce using rule 20 (OPTIONAL-9)
	USE_RPERL	reduce using rule 20 (OPTIONAL-9)

	Critic	go to state 9
	OPTIONAL-9	go to state 7
	ModuleHeader	go to state 5
	PAREN-1	go to state 12

State 3:

	Critic -> '## no critic qw(' . PLUS-17 ')'	(Rule 42)

	WORD	shift, and go to state 14

	PLUS-17	go to state 13

State 4:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 5:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent -norequire, qw('	shift, and go to state 19
	'use parent qw('	shift, and go to state 18

	'## no critic qw('	reduce using rule 27 (STAR-11)
	'BEGIN {'	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	SUB	reduce using rule 27 (STAR-11)
	USE	reduce using rule 27 (STAR-11)
	USE_EXPORTER	reduce using rule 27 (STAR-11)

	Module	go to state 20
	Class	go to state 15
	UseParent	go to state 21
	Package	go to state 16
	STAR-11	go to state 17

State 6:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 22

State 7:

	ModuleHeader -> OPTIONAL-9 . OPTIONAL-10 'package' WordScoped ';' Header	(Rule 23)

	USE_RPERL	shift, and go to state 24

	'package'	reduce using rule 22 (OPTIONAL-10)

	OPTIONAL-10	go to state 23

State 8:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 9:

	OPTIONAL-9 -> Critic .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 10:

	Program -> SHEBANG OPTIONAL-3 . USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	USE_RPERL	shift, and go to state 25

State 11:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 12:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 13:

	PLUS-17 -> PLUS-17 . WORD	(Rule 40)
	Critic -> '## no critic qw(' PLUS-17 . ')'	(Rule 42)

	')'	shift, and go to state 27
	WORD	shift, and go to state 26

State 14:

	PLUS-17 -> WORD .	(Rule 41)

	$default	reduce using rule 41 (PLUS-17)

State 15:

	Module -> Class .	(Rule 25)

	$default	reduce using rule 25 (Module)

State 16:

	Module -> Package .	(Rule 24)

	$default	reduce using rule 24 (Module)

State 17:

	STAR-11 -> STAR-11 . Critic	(Rule 26)
	Package -> STAR-11 . OPTIONAL-12 STAR-13 STAR-14 PLUS-15 LITERAL_NUMBER ';'	(Rule 36)

	'## no critic qw('	shift, and go to state 3
	USE_EXPORTER	shift, and go to state 30

	'BEGIN {'	reduce using rule 29 (OPTIONAL-12)
	'use constant'	reduce using rule 29 (OPTIONAL-12)
	SUB	reduce using rule 29 (OPTIONAL-12)
	USE	reduce using rule 29 (OPTIONAL-12)

	Exports	go to state 31
	Critic	go to state 28
	OPTIONAL-12	go to state 29

State 18:

	UseParent -> 'use parent qw(' .	(Rule 76)

	$default	reduce using rule 76 (UseParent)

State 19:

	UseParent -> 'use parent -norequire, qw(' .	(Rule 77)

	$default	reduce using rule 77 (UseParent)

State 20:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 21:

	Class -> UseParent . WordScoped ')' ';' Include STAR-27 OPTIONAL-28 STAR-29 STAR-30 Properties STAR-31 LITERAL_NUMBER ';'	(Rule 75)

	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32

	WordScoped	go to state 33

State 22:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 23:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 . 'package' WordScoped ';' Header	(Rule 23)

	'package'	shift, and go to state 35

State 24:

	OPTIONAL-10 -> USE_RPERL .	(Rule 21)

	$default	reduce using rule 21 (OPTIONAL-10)

State 25:

	Program -> SHEBANG OPTIONAL-3 USE_RPERL . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 37

	Header	go to state 36

State 26:

	PLUS-17 -> PLUS-17 WORD .	(Rule 40)

	$default	reduce using rule 40 (PLUS-17)

State 27:

	Critic -> '## no critic qw(' PLUS-17 ')' .	(Rule 42)

	$default	reduce using rule 42 (Critic)

State 28:

	STAR-11 -> STAR-11 Critic .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 29:

	Package -> STAR-11 OPTIONAL-12 . STAR-13 STAR-14 PLUS-15 LITERAL_NUMBER ';'	(Rule 36)

	$default	reduce using rule 31 (STAR-13)

	STAR-13	go to state 38

State 30:

	Exports -> USE_EXPORTER . OPTIONAL-19 OPTIONAL-21	(Rule 49)

	OUR_EXPORT	shift, and go to state 40

	'BEGIN {'	reduce using rule 45 (OPTIONAL-19)
	'our hashref $properties'	reduce using rule 45 (OPTIONAL-19)
	'use constant'	reduce using rule 45 (OPTIONAL-19)
	OUR_EXPORT_OK	reduce using rule 45 (OPTIONAL-19)
	SUB	reduce using rule 45 (OPTIONAL-19)
	USE	reduce using rule 45 (OPTIONAL-19)

	PAREN-18	go to state 41
	OPTIONAL-19	go to state 39

State 31:

	OPTIONAL-12 -> Exports .	(Rule 28)

	$default	reduce using rule 28 (OPTIONAL-12)

State 32:

	WordScoped -> WORD_SCOPED .	(Rule 237)

	$default	reduce using rule 237 (WordScoped)

State 33:

	Class -> UseParent WordScoped . ')' ';' Include STAR-27 OPTIONAL-28 STAR-29 STAR-30 Properties STAR-31 LITERAL_NUMBER ';'	(Rule 75)

	')'	shift, and go to state 42

State 34:

	WordScoped -> WORD .	(Rule 236)

	$default	reduce using rule 236 (WordScoped)

State 35:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' . WordScoped ';' Header	(Rule 23)

	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32

	WordScoped	go to state 43

State 36:

	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 44

State 37:

	Header -> 'use strict;' . 'use warnings;' OPTIONAL-16 OUR VERSION_NUMBER_ASSIGN	(Rule 39)

	'use warnings;'	shift, and go to state 45

State 38:

	STAR-13 -> STAR-13 . Include	(Rule 30)
	Package -> STAR-11 OPTIONAL-12 STAR-13 . STAR-14 PLUS-15 LITERAL_NUMBER ';'	(Rule 36)

	'BEGIN {'	shift, and go to state 48
	USE	shift, and go to state 46

	'use constant'	reduce using rule 33 (STAR-14)
	SUB	reduce using rule 33 (STAR-14)

	STAR-14	go to state 47
	Include	go to state 49

State 39:

	Exports -> USE_EXPORTER OPTIONAL-19 . OPTIONAL-21	(Rule 49)

	OUR_EXPORT_OK	shift, and go to state 52

	'BEGIN {'	reduce using rule 48 (OPTIONAL-21)
	'our hashref $properties'	reduce using rule 48 (OPTIONAL-21)
	'use constant'	reduce using rule 48 (OPTIONAL-21)
	SUB	reduce using rule 48 (OPTIONAL-21)
	USE	reduce using rule 48 (OPTIONAL-21)

	OPTIONAL-21	go to state 51
	PAREN-20	go to state 50

State 40:

	PAREN-18 -> OUR_EXPORT . OP01_QW ';'	(Rule 43)

	OP01_QW	shift, and go to state 53

State 41:

	OPTIONAL-19 -> PAREN-18 .	(Rule 44)

	$default	reduce using rule 44 (OPTIONAL-19)

State 42:

	Class -> UseParent WordScoped ')' . ';' Include STAR-27 OPTIONAL-28 STAR-29 STAR-30 Properties STAR-31 LITERAL_NUMBER ';'	(Rule 75)

	';'	shift, and go to state 54

State 43:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped . ';' Header	(Rule 23)

	';'	shift, and go to state 55

State 44:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 3

	'%{'	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'BEGIN {'	reduce using rule 11 (STAR-5)
	'for'	reduce using rule 11 (STAR-5)
	'foreach'	reduce using rule 11 (STAR-5)
	'if'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'while'	reduce using rule 11 (STAR-5)
	CONSTANT_CALL_SCOPED	reduce using rule 11 (STAR-5)
	LBRACE	reduce using rule 11 (STAR-5)
	LBRACKET	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	LPAREN	reduce using rule 11 (STAR-5)
	MY	reduce using rule 11 (STAR-5)
	OP01_CLOSE	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_SCOLON	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_LPAREN	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_SCOLON	reduce using rule 11 (STAR-5)
	OP01_OPEN	reduce using rule 11 (STAR-5)
	OP01_PRINT	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG_LPAREN	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY_SCOLON	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NEG_LPAREN	reduce using rule 11 (STAR-5)
	SELF	reduce using rule 11 (STAR-5)
	SUB	reduce using rule 11 (STAR-5)
	USE	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)
	WORD_UPPERCASE	reduce using rule 11 (STAR-5)

	Critic	go to state 57
	STAR-5	go to state 56

State 45:

	Header -> 'use strict;' 'use warnings;' . OPTIONAL-16 OUR VERSION_NUMBER_ASSIGN	(Rule 39)

	USE_RPERL_AFTER	shift, and go to state 59

	OUR	reduce using rule 38 (OPTIONAL-16)

	OPTIONAL-16	go to state 58

State 46:

	Include -> USE . WordScoped ';'	(Rule 52)
	Include -> USE . WordScoped OP01_QW ';'	(Rule 53)

	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32

	WordScoped	go to state 60

State 47:

	STAR-14 -> STAR-14 . Constant	(Rule 32)
	Package -> STAR-11 OPTIONAL-12 STAR-13 STAR-14 . PLUS-15 LITERAL_NUMBER ';'	(Rule 36)

	'use constant'	shift, and go to state 65
	SUB	shift, and go to state 63

	Subroutine	go to state 64
	Constant	go to state 62
	PLUS-15	go to state 61

State 48:

	Include -> 'BEGIN {' . WordScoped OP02_METHOD_THINARROW_IMP OPTIONAL-22 ')' ';' '}'	(Rule 54)

	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32

	WordScoped	go to state 66

State 49:

	STAR-13 -> STAR-13 Include .	(Rule 30)

	$default	reduce using rule 30 (STAR-13)

State 50:

	OPTIONAL-21 -> PAREN-20 .	(Rule 47)

	$default	reduce using rule 47 (OPTIONAL-21)

State 51:

	Exports -> USE_EXPORTER OPTIONAL-19 OPTIONAL-21 .	(Rule 49)

	$default	reduce using rule 49 (Exports)

State 52:

	PAREN-20 -> OUR_EXPORT_OK . OP01_QW ';'	(Rule 46)

	OP01_QW	shift, and go to state 67

State 53:

	PAREN-18 -> OUR_EXPORT OP01_QW . ';'	(Rule 43)

	';'	shift, and go to state 68

State 54:

	Class -> UseParent WordScoped ')' ';' . Include STAR-27 OPTIONAL-28 STAR-29 STAR-30 Properties STAR-31 LITERAL_NUMBER ';'	(Rule 75)

	'BEGIN {'	shift, and go to state 48
	USE	shift, and go to state 46

	Include	go to state 69

State 55:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped ';' . Header	(Rule 23)

	'use strict;'	shift, and go to state 37

	Header	go to state 70

State 56:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	'BEGIN {'	shift, and go to state 48
	USE	shift, and go to state 46

	'%{'	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'for'	reduce using rule 13 (STAR-6)
	'foreach'	reduce using rule 13 (STAR-6)
	'if'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while'	reduce using rule 13 (STAR-6)
	CONSTANT_CALL_SCOPED	reduce using rule 13 (STAR-6)
	LBRACE	reduce using rule 13 (STAR-6)
	LBRACKET	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	LPAREN	reduce using rule 13 (STAR-6)
	MY	reduce using rule 13 (STAR-6)
	OP01_CLOSE	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_SCOLON	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_LPAREN	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_SCOLON	reduce using rule 13 (STAR-6)
	OP01_OPEN	reduce using rule 13 (STAR-6)
	OP01_PRINT	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG_LPAREN	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY_SCOLON	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NEG_LPAREN	reduce using rule 13 (STAR-6)
	SELF	reduce using rule 13 (STAR-6)
	SUB	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)
	WORD_UPPERCASE	reduce using rule 13 (STAR-6)

	Include	go to state 71
	STAR-6	go to state 72

State 57:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 58:

	Header -> 'use strict;' 'use warnings;' OPTIONAL-16 . OUR VERSION_NUMBER_ASSIGN	(Rule 39)

	OUR	shift, and go to state 73

State 59:

	OPTIONAL-16 -> USE_RPERL_AFTER .	(Rule 37)

	$default	reduce using rule 37 (OPTIONAL-16)

State 60:

	Include -> USE WordScoped . ';'	(Rule 52)
	Include -> USE WordScoped . OP01_QW ';'	(Rule 53)

	';'	shift, and go to state 74
	OP01_QW	shift, and go to state 75

State 61:

	PLUS-15 -> PLUS-15 . Subroutine	(Rule 34)
	Package -> STAR-11 OPTIONAL-12 STAR-13 STAR-14 PLUS-15 . LITERAL_NUMBER ';'	(Rule 36)

	LITERAL_NUMBER	shift, and go to state 77
	SUB	shift, and go to state 63

	Subroutine	go to state 76

State 62:

	STAR-14 -> STAR-14 Constant .	(Rule 32)

	$default	reduce using rule 32 (STAR-14)

State 63:

	Subroutine -> SUB . WORD LBRACE LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-23 STAR-24 '}'	(Rule 60)

	WORD	shift, and go to state 78

State 64:

	PLUS-15 -> Subroutine .	(Rule 35)

	$default	reduce using rule 35 (PLUS-15)

State 65:

	Constant -> 'use constant' . WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 55)

	WORD_UPPERCASE	shift, and go to state 79

State 66:

	Include -> 'BEGIN {' WordScoped . OP02_METHOD_THINARROW_IMP OPTIONAL-22 ')' ';' '}'	(Rule 54)

	OP02_METHOD_THINARROW_IMP	shift, and go to state 80

State 67:

	PAREN-20 -> OUR_EXPORT_OK OP01_QW . ';'	(Rule 46)

	';'	shift, and go to state 81

State 68:

	PAREN-18 -> OUR_EXPORT OP01_QW ';' .	(Rule 43)

	$default	reduce using rule 43 (PAREN-18)

State 69:

	Class -> UseParent WordScoped ')' ';' Include . STAR-27 OPTIONAL-28 STAR-29 STAR-30 Properties STAR-31 LITERAL_NUMBER ';'	(Rule 75)

	$default	reduce using rule 66 (STAR-27)

	STAR-27	go to state 82

State 70:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped ';' Header .	(Rule 23)

	$default	reduce using rule 23 (ModuleHeader)

State 71:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 72:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 65

	'%{'	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'for'	reduce using rule 15 (STAR-7)
	'foreach'	reduce using rule 15 (STAR-7)
	'if'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while'	reduce using rule 15 (STAR-7)
	CONSTANT_CALL_SCOPED	reduce using rule 15 (STAR-7)
	LBRACE	reduce using rule 15 (STAR-7)
	LBRACKET	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	LPAREN	reduce using rule 15 (STAR-7)
	MY	reduce using rule 15 (STAR-7)
	OP01_CLOSE	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_SCOLON	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_LPAREN	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_SCOLON	reduce using rule 15 (STAR-7)
	OP01_OPEN	reduce using rule 15 (STAR-7)
	OP01_PRINT	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG_LPAREN	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY_SCOLON	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NEG_LPAREN	reduce using rule 15 (STAR-7)
	SELF	reduce using rule 15 (STAR-7)
	SUB	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)
	WORD_UPPERCASE	reduce using rule 15 (STAR-7)

	Constant	go to state 83
	STAR-7	go to state 84

State 73:

	Header -> 'use strict;' 'use warnings;' OPTIONAL-16 OUR . VERSION_NUMBER_ASSIGN	(Rule 39)

	VERSION_NUMBER_ASSIGN	shift, and go to state 85

State 74:

	Include -> USE WordScoped ';' .	(Rule 52)

	$default	reduce using rule 52 (Include)

State 75:

	Include -> USE WordScoped OP01_QW . ';'	(Rule 53)

	';'	shift, and go to state 86

State 76:

	PLUS-15 -> PLUS-15 Subroutine .	(Rule 34)

	$default	reduce using rule 34 (PLUS-15)

State 77:

	Package -> STAR-11 OPTIONAL-12 STAR-13 STAR-14 PLUS-15 LITERAL_NUMBER . ';'	(Rule 36)

	';'	shift, and go to state 87

State 78:

	Subroutine -> SUB WORD . LBRACE LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-23 STAR-24 '}'	(Rule 60)

	LBRACE	shift, and go to state 88

State 79:

	Constant -> 'use constant' WORD_UPPERCASE . OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 55)

	OP20_HASH_FATARROW	shift, and go to state 89

State 80:

	Include -> 'BEGIN {' WordScoped OP02_METHOD_THINARROW_IMP . OPTIONAL-22 ')' ';' '}'	(Rule 54)

	OP01_QW	shift, and go to state 90

	')'	reduce using rule 51 (OPTIONAL-22)

	OPTIONAL-22	go to state 91

State 81:

	PAREN-20 -> OUR_EXPORT_OK OP01_QW ';' .	(Rule 46)

	$default	reduce using rule 46 (PAREN-20)

State 82:

	STAR-27 -> STAR-27 . Critic	(Rule 65)
	Class -> UseParent WordScoped ')' ';' Include STAR-27 . OPTIONAL-28 STAR-29 STAR-30 Properties STAR-31 LITERAL_NUMBER ';'	(Rule 75)

	'## no critic qw('	shift, and go to state 3
	USE_EXPORTER	shift, and go to state 30

	'BEGIN {'	reduce using rule 68 (OPTIONAL-28)
	'our hashref $properties'	reduce using rule 68 (OPTIONAL-28)
	'use constant'	reduce using rule 68 (OPTIONAL-28)
	USE	reduce using rule 68 (OPTIONAL-28)

	Critic	go to state 94
	OPTIONAL-28	go to state 93
	Exports	go to state 92

State 83:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 84:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'if'	shift, and go to state 137
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	MY	shift, and go to state 121
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 116
	OP01_NAMED_SCOLON	shift, and go to state 100
	OP01_NAMED_VOID	shift, and go to state 138
	OP01_NAMED_VOID_LPAREN	shift, and go to state 119
	OP01_NAMED_VOID_SCOLON	shift, and go to state 128
	OP01_OPEN	shift, and go to state 133
	OP01_PRINT	shift, and go to state 98
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 142
	OP19_LOOP_CONTROL	shift, and go to state 129
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 131
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	SUB	shift, and go to state 63
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 139

	'for'	reduce using rule 170 (OPTIONAL-45)
	'foreach'	reduce using rule 170 (OPTIONAL-45)
	'while'	reduce using rule 170 (OPTIONAL-45)

	Subroutine	go to state 97
	LoopLabel	go to state 95
	WordScoped	go to state 127
	VariableSymbolOrSelf	go to state 125
	Statement	go to state 102
	PLUS-8	go to state 101
	Literal	go to state 122
	Operation	go to state 124
	ArrayReference	go to state 120
	VariableDeclaration	go to state 106
	OperatorVoid	go to state 134
	Operator	go to state 104
	HashReference	go to state 130
	Variable	go to state 114
	Conditional	go to state 112
	SubExpression	go to state 145
	ArrayDereference	go to state 144
	VariableModification	go to state 143
	OPTIONAL-45	go to state 109
	HashDereference	go to state 108
	Expression	go to state 136
	PAREN-44	go to state 107

State 85:

	Header -> 'use strict;' 'use warnings;' OPTIONAL-16 OUR VERSION_NUMBER_ASSIGN .	(Rule 39)

	$default	reduce using rule 39 (Header)

State 86:

	Include -> USE WordScoped OP01_QW ';' .	(Rule 53)

	$default	reduce using rule 53 (Include)

State 87:

	Package -> STAR-11 OPTIONAL-12 STAR-13 STAR-14 PLUS-15 LITERAL_NUMBER ';' .	(Rule 36)

	$default	reduce using rule 36 (Package)

State 88:

	Subroutine -> SUB WORD LBRACE . LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-23 STAR-24 '}'	(Rule 60)

	LBRACE	shift, and go to state 149

State 89:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW . TypeInnerConstant Literal ';'	(Rule 55)

	MY	shift, and go to state 151

	TypeInnerConstant	go to state 150

State 90:

	OPTIONAL-22 -> OP01_QW .	(Rule 50)

	$default	reduce using rule 50 (OPTIONAL-22)

State 91:

	Include -> 'BEGIN {' WordScoped OP02_METHOD_THINARROW_IMP OPTIONAL-22 . ')' ';' '}'	(Rule 54)

	')'	shift, and go to state 152

State 92:

	OPTIONAL-28 -> Exports .	(Rule 67)

	$default	reduce using rule 67 (OPTIONAL-28)

State 93:

	Class -> UseParent WordScoped ')' ';' Include STAR-27 OPTIONAL-28 . STAR-29 STAR-30 Properties STAR-31 LITERAL_NUMBER ';'	(Rule 75)

	$default	reduce using rule 70 (STAR-29)

	STAR-29	go to state 153

State 94:

	STAR-27 -> STAR-27 Critic .	(Rule 65)

	$default	reduce using rule 65 (STAR-27)

State 95:

	PAREN-44 -> LoopLabel . COLON	(Rule 168)

	COLON	shift, and go to state 154

State 96:

	Operator -> OP10_NAMED_UNARY . SubExpression	(Rule 115)
	Operator -> OP10_NAMED_UNARY .	(Rule 116)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	')'	reduce using rule 116 (Operator)
	';'	reduce using rule 116 (Operator)
	']'	reduce using rule 116 (Operator)
	'}'	reduce using rule 116 (Operator)
	OP04_MATH_POW	reduce using rule 116 (Operator)
	OP06_REGEX_BIND	reduce using rule 116 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 116 (Operator)
	OP07_STRING_REPEAT	reduce using rule 116 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 116 (Operator)
	OP08_STRING_CAT	reduce using rule 116 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 116 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 116 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 116 (Operator)
	OP13_BITWISE_AND	reduce using rule 116 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 116 (Operator)
	OP15_LOGICAL_AND	reduce using rule 116 (Operator)
	OP16_LOGICAL_OR	reduce using rule 116 (Operator)
	OP17_LIST_RANGE	reduce using rule 116 (Operator)
	OP18_TERNARY	reduce using rule 116 (Operator)
	OP21_LIST_COMMA	reduce using rule 116 (Operator)
	OP23_LOGICAL_AND	reduce using rule 116 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 116 (Operator)

	SubExpression	go to state 158
	Variable	go to state 159
	WordScoped	go to state 127
	VariableSymbolOrSelf	go to state 125
	ArrayDereference	go to state 144
	Literal	go to state 122
	ArrayReference	go to state 120
	Expression	go to state 157
	HashDereference	go to state 108
	Operator	go to state 104
	HashReference	go to state 130

State 97:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 98:

	OperatorVoid -> OP01_PRINT . OPTIONAL-39 ListElements ';'	(Rule 134)
	OperatorVoid -> OP01_PRINT . FHREF_SYMBOL_BRACES ListElements ';'	(Rule 135)

	FHREF_SYMBOL_BRACES	shift, and go to state 161
	STDOUT_STDERR	shift, and go to state 163

	'%{'	reduce using rule 131 (OPTIONAL-39)
	'@{'	reduce using rule 131 (OPTIONAL-39)
	'undef'	reduce using rule 131 (OPTIONAL-39)
	ARGV	reduce using rule 131 (OPTIONAL-39)
	CONSTANT_CALL_SCOPED	reduce using rule 131 (OPTIONAL-39)
	LBRACE	reduce using rule 131 (OPTIONAL-39)
	LBRACKET	reduce using rule 131 (OPTIONAL-39)
	LITERAL_NUMBER	reduce using rule 131 (OPTIONAL-39)
	LITERAL_STRING	reduce using rule 131 (OPTIONAL-39)
	LPAREN	reduce using rule 131 (OPTIONAL-39)
	MY	reduce using rule 131 (OPTIONAL-39)
	OP01_CLOSE	reduce using rule 131 (OPTIONAL-39)
	OP01_NAMED	reduce using rule 131 (OPTIONAL-39)
	OP01_OPEN	reduce using rule 131 (OPTIONAL-39)
	OP01_QW	reduce using rule 131 (OPTIONAL-39)
	OP03_MATH_INC_DEC	reduce using rule 131 (OPTIONAL-39)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 131 (OPTIONAL-39)
	OP05_LOGICAL_NEG	reduce using rule 131 (OPTIONAL-39)
	OP05_MATH_NEG_LPAREN	reduce using rule 131 (OPTIONAL-39)
	OP10_NAMED_UNARY	reduce using rule 131 (OPTIONAL-39)
	OP22_LOGICAL_NEG	reduce using rule 131 (OPTIONAL-39)
	OP22_LOGICAL_NEG_LPAREN	reduce using rule 131 (OPTIONAL-39)
	SELF	reduce using rule 131 (OPTIONAL-39)
	VARIABLE_SYMBOL	reduce using rule 131 (OPTIONAL-39)
	WORD	reduce using rule 131 (OPTIONAL-39)
	WORD_SCOPED	reduce using rule 131 (OPTIONAL-39)
	WORD_UPPERCASE	reduce using rule 131 (OPTIONAL-39)

	PAREN-38	go to state 162
	OPTIONAL-39	go to state 160

State 99:

	ArrayDereference -> '@{' . Variable '}'	(Rule 219)
	ArrayDereference -> '@{' . OPTIONAL-55 ArrayReference '}'	(Rule 220)

	MY	shift, and go to state 164
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105

	LBRACKET	reduce using rule 218 (OPTIONAL-55)

	VariableSymbolOrSelf	go to state 125
	Variable	go to state 167
	OPTIONAL-55	go to state 166
	TypeInner	go to state 165

State 100:

	Operation -> OP01_NAMED_SCOLON .	(Rule 95)

	$default	reduce using rule 95 (Operation)

State 101:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'if'	shift, and go to state 137
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	MY	shift, and go to state 121
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 116
	OP01_NAMED_SCOLON	shift, and go to state 100
	OP01_NAMED_VOID	shift, and go to state 138
	OP01_NAMED_VOID_LPAREN	shift, and go to state 119
	OP01_NAMED_VOID_SCOLON	shift, and go to state 128
	OP01_OPEN	shift, and go to state 133
	OP01_PRINT	shift, and go to state 98
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 142
	OP19_LOOP_CONTROL	shift, and go to state 129
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 131
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 139

	$end	reduce using rule 18 (Program)
	'for'	reduce using rule 170 (OPTIONAL-45)
	'foreach'	reduce using rule 170 (OPTIONAL-45)
	'while'	reduce using rule 170 (OPTIONAL-45)

	OPTIONAL-45	go to state 109
	PAREN-44	go to state 107
	Expression	go to state 136
	HashDereference	go to state 108
	Conditional	go to state 112
	SubExpression	go to state 145
	Variable	go to state 114
	ArrayDereference	go to state 144
	VariableModification	go to state 143
	Operator	go to state 104
	HashReference	go to state 130
	OperatorVoid	go to state 134
	VariableDeclaration	go to state 106
	Operation	go to state 168
	Literal	go to state 122
	ArrayReference	go to state 120
	Statement	go to state 102
	VariableSymbolOrSelf	go to state 125
	WordScoped	go to state 127
	LoopLabel	go to state 95

State 102:

	Operation -> Statement .	(Rule 97)

	$default	reduce using rule 97 (Operation)

State 103:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 103)

	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105

	VariableSymbolOrSelf	go to state 125
	Variable	go to state 169

State 104:

	Expression -> Operator .	(Rule 148)

	$default	reduce using rule 148 (Expression)

State 105:

	VariableSymbolOrSelf -> VARIABLE_SYMBOL .	(Rule 251)

	$default	reduce using rule 251 (VariableSymbolOrSelf)

State 106:

	Statement -> VariableDeclaration .	(Rule 174)

	$default	reduce using rule 174 (Statement)

State 107:

	OPTIONAL-45 -> PAREN-44 .	(Rule 169)

	$default	reduce using rule 169 (OPTIONAL-45)

State 108:

	SubExpression -> HashDereference .	(Rule 161)

	$default	reduce using rule 161 (SubExpression)

State 109:

	Statement -> OPTIONAL-45 . Loop	(Rule 172)

	'for'	shift, and go to state 176
	'foreach'	shift, and go to state 174
	'while'	shift, and go to state 170

	LoopForEach	go to state 175
	LoopFor	go to state 173
	LoopWhile	go to state 171
	Loop	go to state 172

State 110:

	Operator -> OP05_MATH_NEG_LPAREN . SubExpression ')'	(Rule 108)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	VariableSymbolOrSelf	go to state 125
	Variable	go to state 159
	WordScoped	go to state 127
	SubExpression	go to state 177
	ArrayDereference	go to state 144
	Literal	go to state 122
	HashDereference	go to state 108
	Expression	go to state 157
	ArrayReference	go to state 120
	Operator	go to state 104
	HashReference	go to state 130

State 111:

	Operator -> OP01_CLOSE . FHREF_SYMBOL	(Rule 102)

	FHREF_SYMBOL	shift, and go to state 178

State 112:

	Statement -> Conditional .	(Rule 171)

	$default	reduce using rule 171 (Statement)

State 113:

	ArrayReference -> LBRACKET . OPTIONAL-54 ']'	(Rule 216)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	ARGV	shift, and go to state 183
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	MY	shift, and go to state 164
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP01_QW	shift, and go to state 181
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	']'	reduce using rule 215 (OPTIONAL-54)

	Literal	go to state 122
	HashDereference	go to state 108
	Expression	go to state 157
	ArrayReference	go to state 120
	Variable	go to state 159
	WordScoped	go to state 127
	VariableSymbolOrSelf	go to state 125
	SubExpression	go to state 184
	ListElements	go to state 180
	ArrayDereference	go to state 144
	Operator	go to state 104
	HashReference	go to state 130
	ListElement	go to state 182
	OPTIONAL-54	go to state 179
	TypeInner	go to state 185

State 114:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 104)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-42 ')'	(Rule 152)
	SubExpression -> Variable .	(Rule 157)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN SubExpressionOrInput	(Rule 204)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY SubExpression	(Rule 205)

	OP02_METHOD_THINARROW	shift, and go to state 186
	OP03_MATH_INC_DEC	shift, and go to state 187
	OP19_VARIABLE_ASSIGN	shift, and go to state 188
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 189

	')'	reduce using rule 157 (SubExpression)
	OP04_MATH_POW	reduce using rule 157 (SubExpression)
	OP06_REGEX_BIND	reduce using rule 157 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 157 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 157 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 157 (SubExpression)
	OP08_STRING_CAT	reduce using rule 157 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 157 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 157 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 157 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 157 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 157 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 157 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 157 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 157 (SubExpression)
	OP18_TERNARY	reduce using rule 157 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 157 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 157 (SubExpression)

State 115:

	Operator -> LPAREN . OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')'	(Rule 98)
	Operator -> LPAREN . OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'	(Rule 100)
	SubExpression -> LPAREN . SubExpression ')'	(Rule 162)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 192
	OP01_OPEN	shift, and go to state 133
	OP01_PRINT	shift, and go to state 190
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	WordScoped	go to state 127
	Variable	go to state 159
	VariableSymbolOrSelf	go to state 125
	SubExpression	go to state 191
	ArrayDereference	go to state 144
	Literal	go to state 122
	HashDereference	go to state 108
	ArrayReference	go to state 120
	Expression	go to state 157
	Operator	go to state 104
	HashReference	go to state 130

State 116:

	Operator -> OP01_NAMED . SubExpression	(Rule 99)
	OperatorVoid -> OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ';'	(Rule 139)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	ARGV	shift, and go to state 183
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	MY	shift, and go to state 164
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP01_QW	shift, and go to state 181
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	ArrayDereference	go to state 144
	VariableSymbolOrSelf	go to state 125
	Variable	go to state 159
	WordScoped	go to state 127
	SubExpression	go to state 193
	HashDereference	go to state 108
	ArrayReference	go to state 120
	Expression	go to state 157
	Literal	go to state 122
	TypeInner	go to state 185
	ListElement	go to state 194
	HashReference	go to state 130
	Operator	go to state 104

State 117:

	Operator -> OP22_LOGICAL_NEG_LPAREN . SubExpression ')'	(Rule 125)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	Operator	go to state 104
	HashReference	go to state 130
	SubExpression	go to state 195
	Variable	go to state 159
	VariableSymbolOrSelf	go to state 125
	WordScoped	go to state 127
	ArrayDereference	go to state 144
	Literal	go to state 122
	Expression	go to state 157
	ArrayReference	go to state 120
	HashDereference	go to state 108

State 118:

	HashDereference -> '%{' . Variable '}'	(Rule 234)
	HashDereference -> '%{' . OPTIONAL-59 HashReference '}'	(Rule 235)

	MY	shift, and go to state 164
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105

	LBRACE	reduce using rule 233 (OPTIONAL-59)

	TypeInner	go to state 198
	VariableSymbolOrSelf	go to state 125
	Variable	go to state 197
	OPTIONAL-59	go to state 196

State 119:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN . OPTIONAL-40 ')' ';'	(Rule 137)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	ARGV	shift, and go to state 183
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	MY	shift, and go to state 164
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP01_QW	shift, and go to state 181
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	')'	reduce using rule 133 (OPTIONAL-40)

	ListElements	go to state 200
	ArrayDereference	go to state 144
	SubExpression	go to state 184
	Variable	go to state 159
	WordScoped	go to state 127
	VariableSymbolOrSelf	go to state 125
	Expression	go to state 157
	ArrayReference	go to state 120
	HashDereference	go to state 108
	Literal	go to state 122
	OPTIONAL-40	go to state 199
	TypeInner	go to state 185
	ListElement	go to state 182
	HashReference	go to state 130
	Operator	go to state 104

State 120:

	SubExpression -> ArrayReference .	(Rule 158)

	$default	reduce using rule 158 (SubExpression)

State 121:

	VariableDeclaration -> MY . Type VARIABLE_SYMBOL ';'	(Rule 200)
	VariableDeclaration -> MY . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExpIn	(Rule 201)
	VariableDeclaration -> MY . Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 202)
	VariableDeclaration -> MY . TYPE_FHREF FHREF_SYMBOL ';'	(Rule 203)

	TYPE_FHREF	shift, and go to state 203
	TYPE_INTEGER	shift, and go to state 205
	WORD	shift, and go to state 204
	WORD_SCOPED	shift, and go to state 202

	Type	go to state 201

State 122:

	SubExpression -> Literal .	(Rule 156)

	$default	reduce using rule 156 (SubExpression)

State 123:

	Expression -> CONSTANT_CALL_SCOPED .	(Rule 150)

	$default	reduce using rule 150 (Expression)

State 124:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 125:

	Variable -> VariableSymbolOrSelf . STAR-51	(Rule 196)

	$default	reduce using rule 195 (STAR-51)

	STAR-51	go to state 206

State 126:

	SubExpression -> 'undef' .	(Rule 155)

	$default	reduce using rule 155 (SubExpression)

State 127:

	Expression -> WordScoped . LPAREN OPTIONAL-41 ')'	(Rule 151)
	Expression -> WordScoped . OP02_METHOD_THINARROW_NEW OPTIONAL-43 ')'	(Rule 153)

	LPAREN	shift, and go to state 207
	OP02_METHOD_THINARROW_NEW	shift, and go to state 208

State 128:

	OperatorVoid -> OP01_NAMED_VOID_SCOLON .	(Rule 136)

	$default	reduce using rule 136 (OperatorVoid)

State 129:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 141)

	WORD_UPPERCASE	shift, and go to state 210

	LoopLabel	go to state 209

State 130:

	SubExpression -> HashReference .	(Rule 160)

	$default	reduce using rule 160 (SubExpression)

State 131:

	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON .	(Rule 140)

	$default	reduce using rule 140 (OperatorVoid)

State 132:

	VariableSymbolOrSelf -> SELF .	(Rule 252)

	$default	reduce using rule 252 (VariableSymbolOrSelf)

State 133:

	Operator -> OP01_OPEN . MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 101)

	MY	shift, and go to state 211

State 134:

	Statement -> OperatorVoid .	(Rule 173)

	$default	reduce using rule 173 (Statement)

State 135:

	Literal -> LITERAL_NUMBER .	(Rule 253)

	$default	reduce using rule 253 (Literal)

State 136:

	Operation -> Expression . ';'	(Rule 94)
	SubExpression -> Expression .	(Rule 154)

	';'	shift, and go to state 212

	OP04_MATH_POW	reduce using rule 154 (SubExpression)
	OP06_REGEX_BIND	reduce using rule 154 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 154 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 154 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 154 (SubExpression)
	OP08_STRING_CAT	reduce using rule 154 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 154 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 154 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 154 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 154 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 154 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 154 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 154 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 154 (SubExpression)
	OP18_TERNARY	reduce using rule 154 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 154 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 154 (SubExpression)

State 137:

	Conditional -> 'if' . LPAREN SubExpression ')' CodeBlock STAR-47 OPTIONAL-49	(Rule 182)

	LPAREN	shift, and go to state 213

State 138:

	OperatorVoid -> OP01_NAMED_VOID . ListElements ';'	(Rule 138)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	ARGV	shift, and go to state 183
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	MY	shift, and go to state 164
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP01_QW	shift, and go to state 181
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	Literal	go to state 122
	HashDereference	go to state 108
	Expression	go to state 157
	ArrayReference	go to state 120
	WordScoped	go to state 127
	VariableSymbolOrSelf	go to state 125
	Variable	go to state 159
	SubExpression	go to state 184
	ListElements	go to state 214
	ArrayDereference	go to state 144
	Operator	go to state 104
	HashReference	go to state 130
	ListElement	go to state 182
	TypeInner	go to state 185

State 139:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 149)
	LoopLabel -> WORD_UPPERCASE .	(Rule 238)

	LPAREN	shift, and go to state 215

	COLON	reduce using rule 238 (LoopLabel)

State 140:

	HashReference -> LBRACE . HashEntry STAR-58 '}'	(Rule 230)
	HashReference -> LBRACE . '}'	(Rule 231)

	'%{'	shift, and go to state 118
	'}'	shift, and go to state 230
	ENV	shift, and go to state 222
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	OP01_CLOSE	shift, and go to state 237
	OP01_NAMED	shift, and go to state 220
	OP01_NAMED_VOID	shift, and go to state 221
	OP01_OPEN	shift, and go to state 228
	OP01_PRINT	shift, and go to state 235
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 218
	OP07_STRING_REPEAT	shift, and go to state 240
	OP08_MATH_ADD_SUB	shift, and go to state 238
	OP10_NAMED_UNARY	shift, and go to state 234
	OP11_COMPARE_LT_GT	shift, and go to state 232
	OP12_COMPARE_EQ_NE	shift, and go to state 225
	OP19_LOOP_CONTROL	shift, and go to state 226
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 227
	OP22_LOGICAL_NEG	shift, and go to state 224
	OP23_LOGICAL_AND	shift, and go to state 219
	OP24_LOGICAL_OR_XOR	shift, and go to state 216
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 233

	HashDereference	go to state 236
	HashEntry	go to state 231
	Literal	go to state 217
	VarOrLitOrOpStrOrWord	go to state 223
	OpStringOrWord	go to state 229
	VariableSymbolOrSelf	go to state 125
	Variable	go to state 239

State 141:

	Operator -> OP05_BITWISE_NEG_LPAREN . SubExpression ')'	(Rule 106)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	SubExpression	go to state 241
	Variable	go to state 159
	VariableSymbolOrSelf	go to state 125
	WordScoped	go to state 127
	ArrayDereference	go to state 144
	Literal	go to state 122
	Expression	go to state 157
	ArrayReference	go to state 120
	HashDereference	go to state 108
	Operator	go to state 104
	HashReference	go to state 130

State 142:

	Operation -> OP10_NAMED_UNARY_SCOLON .	(Rule 96)

	$default	reduce using rule 96 (Operation)

State 143:

	Statement -> VariableModification . ';'	(Rule 175)

	';'	shift, and go to state 242

State 144:

	SubExpression -> ArrayDereference .	(Rule 159)

	$default	reduce using rule 159 (SubExpression)

State 145:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)

	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246
	OP15_LOGICAL_AND	shift, and go to state 251
	OP16_LOGICAL_OR	shift, and go to state 248
	OP17_LIST_RANGE	shift, and go to state 257
	OP18_TERNARY	shift, and go to state 253
	OP23_LOGICAL_AND	shift, and go to state 244
	OP24_LOGICAL_OR_XOR	shift, and go to state 247

State 146:

	Operator -> OP22_LOGICAL_NEG . SubExpression	(Rule 126)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	VariableSymbolOrSelf	go to state 125
	WordScoped	go to state 127
	Variable	go to state 159
	SubExpression	go to state 260
	ArrayDereference	go to state 144
	Literal	go to state 122
	HashDereference	go to state 108
	Expression	go to state 157
	ArrayReference	go to state 120
	Operator	go to state 104
	HashReference	go to state 130

State 147:

	Literal -> LITERAL_STRING .	(Rule 254)

	$default	reduce using rule 254 (Literal)

State 148:

	Operator -> OP05_LOGICAL_NEG . SubExpression	(Rule 107)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	HashDereference	go to state 108
	ArrayReference	go to state 120
	Expression	go to state 157
	Literal	go to state 122
	ArrayDereference	go to state 144
	VariableSymbolOrSelf	go to state 125
	Variable	go to state 159
	WordScoped	go to state 127
	SubExpression	go to state 261
	HashReference	go to state 130
	Operator	go to state 104

State 149:

	Subroutine -> SUB WORD LBRACE LBRACE . MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-23 STAR-24 '}'	(Rule 60)

	MY	shift, and go to state 262

State 150:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant . Literal ';'	(Rule 55)

	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147

	Literal	go to state 263

State 151:

	TypeInnerConstant -> MY . Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 245)

	TYPE_INTEGER	shift, and go to state 205
	WORD	shift, and go to state 204
	WORD_SCOPED	shift, and go to state 202

	Type	go to state 264

State 152:

	Include -> 'BEGIN {' WordScoped OP02_METHOD_THINARROW_IMP OPTIONAL-22 ')' . ';' '}'	(Rule 54)

	';'	shift, and go to state 265

State 153:

	STAR-29 -> STAR-29 . Include	(Rule 69)
	Class -> UseParent WordScoped ')' ';' Include STAR-27 OPTIONAL-28 STAR-29 . STAR-30 Properties STAR-31 LITERAL_NUMBER ';'	(Rule 75)

	'BEGIN {'	shift, and go to state 48
	USE	shift, and go to state 46

	'our hashref $properties'	reduce using rule 72 (STAR-30)
	'use constant'	reduce using rule 72 (STAR-30)

	STAR-30	go to state 266
	Include	go to state 267

State 154:

	PAREN-44 -> LoopLabel COLON .	(Rule 168)

	$default	reduce using rule 168 (PAREN-44)

State 155:

	Operator -> OP01_NAMED . SubExpression	(Rule 99)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	ArrayDereference	go to state 144
	WordScoped	go to state 127
	VariableSymbolOrSelf	go to state 125
	Variable	go to state 159
	SubExpression	go to state 268
	HashDereference	go to state 108
	Expression	go to state 157
	ArrayReference	go to state 120
	Literal	go to state 122
	HashReference	go to state 130
	Operator	go to state 104

State 156:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 149)

	LPAREN	shift, and go to state 215

State 157:

	SubExpression -> Expression .	(Rule 154)

	$default	reduce using rule 154 (SubExpression)

State 158:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> OP10_NAMED_UNARY SubExpression .	(Rule 115)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)

	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254

	')'	reduce using rule 115 (Operator)
	';'	reduce using rule 115 (Operator)
	']'	reduce using rule 115 (Operator)
	'}'	reduce using rule 115 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 115 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 115 (Operator)
	OP13_BITWISE_AND	reduce using rule 115 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 115 (Operator)
	OP15_LOGICAL_AND	reduce using rule 115 (Operator)
	OP16_LOGICAL_OR	reduce using rule 115 (Operator)
	OP17_LIST_RANGE	reduce using rule 115 (Operator)
	OP18_TERNARY	reduce using rule 115 (Operator)
	OP21_LIST_COMMA	reduce using rule 115 (Operator)
	OP23_LOGICAL_AND	reduce using rule 115 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 115 (Operator)

State 159:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 104)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-42 ')'	(Rule 152)
	SubExpression -> Variable .	(Rule 157)

	OP02_METHOD_THINARROW	shift, and go to state 186
	OP03_MATH_INC_DEC	shift, and go to state 187

	')'	reduce using rule 157 (SubExpression)
	';'	reduce using rule 157 (SubExpression)
	']'	reduce using rule 157 (SubExpression)
	'}'	reduce using rule 157 (SubExpression)
	OP04_MATH_POW	reduce using rule 157 (SubExpression)
	OP06_REGEX_BIND	reduce using rule 157 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 157 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 157 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 157 (SubExpression)
	OP08_STRING_CAT	reduce using rule 157 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 157 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 157 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 157 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 157 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 157 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 157 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 157 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 157 (SubExpression)
	OP18_TERNARY	reduce using rule 157 (SubExpression)
	OP21_LIST_COMMA	reduce using rule 157 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 157 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 157 (SubExpression)

State 160:

	OperatorVoid -> OP01_PRINT OPTIONAL-39 . ListElements ';'	(Rule 134)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	ARGV	shift, and go to state 183
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	MY	shift, and go to state 164
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP01_QW	shift, and go to state 181
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	HashReference	go to state 130
	Operator	go to state 104
	TypeInner	go to state 185
	ListElement	go to state 182
	Expression	go to state 157
	ArrayReference	go to state 120
	HashDereference	go to state 108
	Literal	go to state 122
	ListElements	go to state 269
	ArrayDereference	go to state 144
	SubExpression	go to state 184
	WordScoped	go to state 127
	VariableSymbolOrSelf	go to state 125
	Variable	go to state 159

State 161:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES . ListElements ';'	(Rule 135)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	ARGV	shift, and go to state 183
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	MY	shift, and go to state 164
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP01_QW	shift, and go to state 181
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	SubExpression	go to state 184
	WordScoped	go to state 127
	Variable	go to state 159
	VariableSymbolOrSelf	go to state 125
	ArrayDereference	go to state 144
	ListElements	go to state 270
	Literal	go to state 122
	ArrayReference	go to state 120
	Expression	go to state 157
	HashDereference	go to state 108
	ListElement	go to state 182
	TypeInner	go to state 185
	Operator	go to state 104
	HashReference	go to state 130

State 162:

	OPTIONAL-39 -> PAREN-38 .	(Rule 130)

	$default	reduce using rule 130 (OPTIONAL-39)

State 163:

	PAREN-38 -> STDOUT_STDERR .	(Rule 129)

	$default	reduce using rule 129 (PAREN-38)

State 164:

	TypeInner -> MY . Type '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN	(Rule 242)

	TYPE_INTEGER	shift, and go to state 205
	WORD	shift, and go to state 204
	WORD_SCOPED	shift, and go to state 202

	Type	go to state 271

State 165:

	OPTIONAL-55 -> TypeInner .	(Rule 217)

	$default	reduce using rule 217 (OPTIONAL-55)

State 166:

	ArrayDereference -> '@{' OPTIONAL-55 . ArrayReference '}'	(Rule 220)

	LBRACKET	shift, and go to state 113

	ArrayReference	go to state 272

State 167:

	ArrayDereference -> '@{' Variable . '}'	(Rule 219)

	'}'	shift, and go to state 273

State 168:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 169:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 103)

	$default	reduce using rule 103 (Operator)

State 170:

	LoopWhile -> 'while' . LPAREN SubExpression ')' CodeBlock	(Rule 189)
	LoopWhile -> 'while' . LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrInput ')' CodeBlock	(Rule 190)

	LPAREN	shift, and go to state 275
	LPAREN_MY	shift, and go to state 274

State 171:

	Loop -> LoopWhile .	(Rule 185)

	$default	reduce using rule 185 (Loop)

State 172:

	Statement -> OPTIONAL-45 Loop .	(Rule 172)

	$default	reduce using rule 172 (Statement)

State 173:

	Loop -> LoopFor .	(Rule 183)

	$default	reduce using rule 183 (Loop)

State 174:

	LoopForEach -> 'foreach' . MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 188)

	MY	shift, and go to state 276

State 175:

	Loop -> LoopForEach .	(Rule 184)

	$default	reduce using rule 184 (Loop)

State 176:

	LoopFor -> 'for' . MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 186)
	LoopFor -> 'for' . LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 187)

	LPAREN_MY	shift, and go to state 277
	MY	shift, and go to state 278

State 177:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> OP05_MATH_NEG_LPAREN SubExpression . ')'	(Rule 108)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)

	')'	shift, and go to state 279
	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246
	OP15_LOGICAL_AND	shift, and go to state 251
	OP16_LOGICAL_OR	shift, and go to state 248
	OP17_LIST_RANGE	shift, and go to state 257
	OP18_TERNARY	shift, and go to state 253
	OP23_LOGICAL_AND	shift, and go to state 244
	OP24_LOGICAL_OR_XOR	shift, and go to state 247

State 178:

	Operator -> OP01_CLOSE FHREF_SYMBOL .	(Rule 102)

	$default	reduce using rule 102 (Operator)

State 179:

	ArrayReference -> LBRACKET OPTIONAL-54 . ']'	(Rule 216)

	']'	shift, and go to state 280

State 180:

	OPTIONAL-54 -> ListElements .	(Rule 214)

	$default	reduce using rule 214 (OPTIONAL-54)

State 181:

	ListElement -> OP01_QW .	(Rule 212)

	$default	reduce using rule 212 (ListElement)

State 182:

	ListElements -> ListElement . STAR-53	(Rule 209)

	$default	reduce using rule 208 (STAR-53)

	STAR-53	go to state 281

State 183:

	ListElement -> ARGV .	(Rule 213)

	$default	reduce using rule 213 (ListElement)

State 184:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)
	ListElement -> SubExpression .	(Rule 210)

	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246
	OP15_LOGICAL_AND	shift, and go to state 251
	OP16_LOGICAL_OR	shift, and go to state 248
	OP17_LIST_RANGE	shift, and go to state 257
	OP18_TERNARY	shift, and go to state 253
	OP23_LOGICAL_AND	shift, and go to state 244
	OP24_LOGICAL_OR_XOR	shift, and go to state 247

	')'	reduce using rule 210 (ListElement)
	';'	reduce using rule 210 (ListElement)
	']'	reduce using rule 210 (ListElement)
	OP21_LIST_COMMA	reduce using rule 210 (ListElement)

State 185:

	ListElement -> TypeInner . SubExpression	(Rule 211)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	ArrayDereference	go to state 144
	VariableSymbolOrSelf	go to state 125
	WordScoped	go to state 127
	Variable	go to state 159
	SubExpression	go to state 282
	HashDereference	go to state 108
	ArrayReference	go to state 120
	Expression	go to state 157
	Literal	go to state 122
	HashReference	go to state 130
	Operator	go to state 104

State 186:

	Expression -> Variable OP02_METHOD_THINARROW . LPAREN OPTIONAL-42 ')'	(Rule 152)

	LPAREN	shift, and go to state 283

State 187:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 104)

	$default	reduce using rule 104 (Operator)

State 188:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . SubExpressionOrInput	(Rule 204)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	FHREF_SYMBOL_IN	shift, and go to state 285
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	STDIN	shift, and go to state 287
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	Expression	go to state 157
	ArrayReference	go to state 120
	SubExpressionOrInput	go to state 284
	HashDereference	go to state 108
	Literal	go to state 122
	ArrayDereference	go to state 144
	SubExpression	go to state 286
	VariableSymbolOrSelf	go to state 125
	WordScoped	go to state 127
	Variable	go to state 159
	HashReference	go to state 130
	Operator	go to state 104

State 189:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . SubExpression	(Rule 205)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	HashReference	go to state 130
	Operator	go to state 104
	ArrayReference	go to state 120
	Expression	go to state 157
	HashDereference	go to state 108
	Literal	go to state 122
	ArrayDereference	go to state 144
	SubExpression	go to state 288
	WordScoped	go to state 127
	VariableSymbolOrSelf	go to state 125
	Variable	go to state 159

State 190:

	Operator -> LPAREN OP01_PRINT . FHREF_SYMBOL_BRACES ListElements ')'	(Rule 98)

	FHREF_SYMBOL_BRACES	shift, and go to state 289

State 191:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)
	SubExpression -> LPAREN SubExpression . ')'	(Rule 162)

	')'	shift, and go to state 290
	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246
	OP15_LOGICAL_AND	shift, and go to state 251
	OP16_LOGICAL_OR	shift, and go to state 248
	OP17_LIST_RANGE	shift, and go to state 257
	OP18_TERNARY	shift, and go to state 253
	OP23_LOGICAL_AND	shift, and go to state 244
	OP24_LOGICAL_OR_XOR	shift, and go to state 247

State 192:

	Operator -> OP01_NAMED . SubExpression	(Rule 99)
	Operator -> LPAREN OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ')'	(Rule 100)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	ARGV	shift, and go to state 183
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	MY	shift, and go to state 164
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP01_QW	shift, and go to state 181
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	Literal	go to state 122
	HashDereference	go to state 108
	ArrayReference	go to state 120
	Expression	go to state 157
	Variable	go to state 159
	WordScoped	go to state 127
	VariableSymbolOrSelf	go to state 125
	SubExpression	go to state 193
	ArrayDereference	go to state 144
	Operator	go to state 104
	HashReference	go to state 130
	ListElement	go to state 291
	TypeInner	go to state 185

State 193:

	Operator -> OP01_NAMED SubExpression .	(Rule 99)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)
	ListElement -> SubExpression .	(Rule 210)

	')'	reduce using rule 99 (Operator)
	';'	reduce using rule 99 (Operator)
	OP04_MATH_POW	reduce using rule 99 (Operator)
	OP06_REGEX_BIND	reduce using rule 99 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 99 (Operator)
	OP07_STRING_REPEAT	reduce using rule 99 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 99 (Operator)
	OP08_STRING_CAT	reduce using rule 99 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 99 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 99 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 99 (Operator)
	OP13_BITWISE_AND	reduce using rule 99 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 99 (Operator)
	OP15_LOGICAL_AND	reduce using rule 99 (Operator)
	OP16_LOGICAL_OR	reduce using rule 99 (Operator)
	OP17_LIST_RANGE	reduce using rule 99 (Operator)
	OP18_TERNARY	reduce using rule 99 (Operator)
	OP21_LIST_COMMA	reduce using rule 210 (ListElement)
	OP23_LOGICAL_AND	reduce using rule 99 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 99 (Operator)

State 194:

	OperatorVoid -> OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ';'	(Rule 139)

	OP21_LIST_COMMA	shift, and go to state 292

State 195:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> OP22_LOGICAL_NEG_LPAREN SubExpression . ')'	(Rule 125)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)

	')'	shift, and go to state 293
	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246
	OP15_LOGICAL_AND	shift, and go to state 251
	OP16_LOGICAL_OR	shift, and go to state 248
	OP17_LIST_RANGE	shift, and go to state 257
	OP18_TERNARY	shift, and go to state 253
	OP23_LOGICAL_AND	shift, and go to state 244
	OP24_LOGICAL_OR_XOR	shift, and go to state 247

State 196:

	HashDereference -> '%{' OPTIONAL-59 . HashReference '}'	(Rule 235)

	LBRACE	shift, and go to state 140

	HashReference	go to state 294

State 197:

	HashDereference -> '%{' Variable . '}'	(Rule 234)

	'}'	shift, and go to state 295

State 198:

	OPTIONAL-59 -> TypeInner .	(Rule 232)

	$default	reduce using rule 232 (OPTIONAL-59)

State 199:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-40 . ')' ';'	(Rule 137)

	')'	shift, and go to state 296

State 200:

	OPTIONAL-40 -> ListElements .	(Rule 132)

	$default	reduce using rule 132 (OPTIONAL-40)

State 201:

	VariableDeclaration -> MY Type . VARIABLE_SYMBOL ';'	(Rule 200)
	VariableDeclaration -> MY Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExpIn	(Rule 201)
	VariableDeclaration -> MY Type . VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 202)

	VARIABLE_SYMBOL	shift, and go to state 297

State 202:

	Type -> WORD_SCOPED .	(Rule 240)

	$default	reduce using rule 240 (Type)

State 203:

	VariableDeclaration -> MY TYPE_FHREF . FHREF_SYMBOL ';'	(Rule 203)

	FHREF_SYMBOL	shift, and go to state 298

State 204:

	Type -> WORD .	(Rule 239)

	$default	reduce using rule 239 (Type)

State 205:

	Type -> TYPE_INTEGER .	(Rule 241)

	$default	reduce using rule 241 (Type)

State 206:

	STAR-51 -> STAR-51 . VariableRetrieval	(Rule 194)
	Variable -> VariableSymbolOrSelf STAR-51 .	(Rule 196)

	OP02_ARRAY_THINARROW	shift, and go to state 300
	OP02_HASH_THINARROW	shift, and go to state 301

	')'	reduce using rule 196 (Variable)
	';'	reduce using rule 196 (Variable)
	']'	reduce using rule 196 (Variable)
	'}'	reduce using rule 196 (Variable)
	COLON	reduce using rule 196 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 196 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 196 (Variable)
	OP04_MATH_POW	reduce using rule 196 (Variable)
	OP06_REGEX_BIND	reduce using rule 196 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 196 (Variable)
	OP07_STRING_REPEAT	reduce using rule 196 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 196 (Variable)
	OP08_STRING_CAT	reduce using rule 196 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 196 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 196 (Variable)
	OP12_COMPARE_EQ_NE	reduce using rule 196 (Variable)
	OP13_BITWISE_AND	reduce using rule 196 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 196 (Variable)
	OP15_LOGICAL_AND	reduce using rule 196 (Variable)
	OP16_LOGICAL_OR	reduce using rule 196 (Variable)
	OP17_LIST_RANGE	reduce using rule 196 (Variable)
	OP18_TERNARY	reduce using rule 196 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 196 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 196 (Variable)
	OP20_HASH_FATARROW	reduce using rule 196 (Variable)
	OP21_LIST_COMMA	reduce using rule 196 (Variable)
	OP23_LOGICAL_AND	reduce using rule 196 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 196 (Variable)

	VariableRetrieval	go to state 299

State 207:

	Expression -> WordScoped LPAREN . OPTIONAL-41 ')'	(Rule 151)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	ARGV	shift, and go to state 183
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	MY	shift, and go to state 164
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP01_QW	shift, and go to state 181
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	')'	reduce using rule 143 (OPTIONAL-41)

	HashDereference	go to state 108
	Expression	go to state 157
	ArrayReference	go to state 120
	Literal	go to state 122
	OPTIONAL-41	go to state 302
	ArrayDereference	go to state 144
	ListElements	go to state 303
	Variable	go to state 159
	VariableSymbolOrSelf	go to state 125
	WordScoped	go to state 127
	SubExpression	go to state 184
	HashReference	go to state 130
	Operator	go to state 104
	TypeInner	go to state 185
	ListElement	go to state 182

State 208:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW . OPTIONAL-43 ')'	(Rule 153)

	LBRACE	shift, and go to state 140

	')'	reduce using rule 147 (OPTIONAL-43)

	OPTIONAL-43	go to state 305
	HashReference	go to state 304

State 209:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 141)

	';'	shift, and go to state 306

State 210:

	LoopLabel -> WORD_UPPERCASE .	(Rule 238)

	$default	reduce using rule 238 (LoopLabel)

State 211:

	Operator -> OP01_OPEN MY . TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 101)

	TYPE_FHREF	shift, and go to state 307

State 212:

	Operation -> Expression ';' .	(Rule 94)

	$default	reduce using rule 94 (Operation)

State 213:

	Conditional -> 'if' LPAREN . SubExpression ')' CodeBlock STAR-47 OPTIONAL-49	(Rule 182)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	Operator	go to state 104
	HashReference	go to state 130
	SubExpression	go to state 308
	WordScoped	go to state 127
	VariableSymbolOrSelf	go to state 125
	Variable	go to state 159
	ArrayDereference	go to state 144
	Literal	go to state 122
	Expression	go to state 157
	ArrayReference	go to state 120
	HashDereference	go to state 108

State 214:

	OperatorVoid -> OP01_NAMED_VOID ListElements . ';'	(Rule 138)

	';'	shift, and go to state 309

State 215:

	Expression -> WORD_UPPERCASE LPAREN . ')'	(Rule 149)

	')'	shift, and go to state 310

State 216:

	OpStringOrWord -> OP24_LOGICAL_OR_XOR .	(Rule 261)

	$default	reduce using rule 261 (OpStringOrWord)

State 217:

	VarOrLitOrOpStrOrWord -> Literal .	(Rule 249)

	$default	reduce using rule 249 (VarOrLitOrOpStrOrWord)

State 218:

	OpStringOrWord -> OP07_MATH_MULT_DIV_MOD .	(Rule 270)

	$default	reduce using rule 270 (OpStringOrWord)

State 219:

	OpStringOrWord -> OP23_LOGICAL_AND .	(Rule 262)

	$default	reduce using rule 262 (OpStringOrWord)

State 220:

	OpStringOrWord -> OP01_NAMED .	(Rule 272)

	$default	reduce using rule 272 (OpStringOrWord)

State 221:

	OpStringOrWord -> OP01_NAMED_VOID .	(Rule 275)

	$default	reduce using rule 275 (OpStringOrWord)

State 222:

	HashEntry -> ENV .	(Rule 225)

	$default	reduce using rule 225 (HashEntry)

State 223:

	HashEntry -> VarOrLitOrOpStrOrWord . OP20_HASH_FATARROW OPTIONAL-56 SubExpression	(Rule 223)

	OP20_HASH_FATARROW	shift, and go to state 311

State 224:

	OpStringOrWord -> OP22_LOGICAL_NEG .	(Rule 263)

	$default	reduce using rule 263 (OpStringOrWord)

State 225:

	OpStringOrWord -> OP12_COMPARE_EQ_NE .	(Rule 266)

	$default	reduce using rule 266 (OpStringOrWord)

State 226:

	OpStringOrWord -> OP19_LOOP_CONTROL .	(Rule 265)

	$default	reduce using rule 265 (OpStringOrWord)

State 227:

	OpStringOrWord -> OP19_LOOP_CONTROL_SCOLON .	(Rule 264)

	$default	reduce using rule 264 (OpStringOrWord)

State 228:

	OpStringOrWord -> OP01_OPEN .	(Rule 274)

	$default	reduce using rule 274 (OpStringOrWord)

State 229:

	VarOrLitOrOpStrOrWord -> OpStringOrWord .	(Rule 250)

	$default	reduce using rule 250 (VarOrLitOrOpStrOrWord)

State 230:

	HashReference -> LBRACE '}' .	(Rule 231)

	$default	reduce using rule 231 (HashReference)

State 231:

	HashReference -> LBRACE HashEntry . STAR-58 '}'	(Rule 230)

	$default	reduce using rule 229 (STAR-58)

	STAR-58	go to state 312

State 232:

	OpStringOrWord -> OP11_COMPARE_LT_GT .	(Rule 267)

	$default	reduce using rule 267 (OpStringOrWord)

State 233:

	OpStringOrWord -> WORD .	(Rule 277)

	$default	reduce using rule 277 (OpStringOrWord)

State 234:

	OpStringOrWord -> OP10_NAMED_UNARY .	(Rule 268)

	$default	reduce using rule 268 (OpStringOrWord)

State 235:

	OpStringOrWord -> OP01_PRINT .	(Rule 276)

	$default	reduce using rule 276 (OpStringOrWord)

State 236:

	HashEntry -> HashDereference .	(Rule 224)

	$default	reduce using rule 224 (HashEntry)

State 237:

	OpStringOrWord -> OP01_CLOSE .	(Rule 273)

	$default	reduce using rule 273 (OpStringOrWord)

State 238:

	OpStringOrWord -> OP08_MATH_ADD_SUB .	(Rule 269)

	$default	reduce using rule 269 (OpStringOrWord)

State 239:

	VarOrLitOrOpStrOrWord -> Variable .	(Rule 248)

	$default	reduce using rule 248 (VarOrLitOrOpStrOrWord)

State 240:

	OpStringOrWord -> OP07_STRING_REPEAT .	(Rule 271)

	$default	reduce using rule 271 (OpStringOrWord)

State 241:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> OP05_BITWISE_NEG_LPAREN SubExpression . ')'	(Rule 106)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)

	')'	shift, and go to state 313
	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246
	OP15_LOGICAL_AND	shift, and go to state 251
	OP16_LOGICAL_OR	shift, and go to state 248
	OP17_LIST_RANGE	shift, and go to state 257
	OP18_TERNARY	shift, and go to state 253
	OP23_LOGICAL_AND	shift, and go to state 244
	OP24_LOGICAL_OR_XOR	shift, and go to state 247

State 242:

	Statement -> VariableModification ';' .	(Rule 175)

	$default	reduce using rule 175 (Statement)

State 243:

	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD . SubExpression	(Rule 111)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	HashReference	go to state 130
	Operator	go to state 104
	HashDereference	go to state 108
	ArrayReference	go to state 120
	Expression	go to state 157
	Literal	go to state 122
	ArrayDereference	go to state 144
	Variable	go to state 159
	WordScoped	go to state 127
	VariableSymbolOrSelf	go to state 125
	SubExpression	go to state 314

State 244:

	Operator -> SubExpression OP23_LOGICAL_AND . SubExpression	(Rule 127)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	Variable	go to state 159
	WordScoped	go to state 127
	VariableSymbolOrSelf	go to state 125
	SubExpression	go to state 315
	ArrayDereference	go to state 144
	Literal	go to state 122
	HashDereference	go to state 108
	ArrayReference	go to state 120
	Expression	go to state 157
	Operator	go to state 104
	HashReference	go to state 130

State 245:

	Operator -> SubExpression OP08_STRING_CAT . SubExpression	(Rule 113)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	HashReference	go to state 130
	Operator	go to state 104
	ArrayDereference	go to state 144
	VariableSymbolOrSelf	go to state 125
	Variable	go to state 159
	WordScoped	go to state 127
	SubExpression	go to state 316
	HashDereference	go to state 108
	Expression	go to state 157
	ArrayReference	go to state 120
	Literal	go to state 122

State 246:

	Operator -> SubExpression OP14_BITWISE_OR_XOR . SubExpression	(Rule 120)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	HashReference	go to state 130
	Operator	go to state 104
	ArrayDereference	go to state 144
	SubExpression	go to state 317
	WordScoped	go to state 127
	Variable	go to state 159
	VariableSymbolOrSelf	go to state 125
	ArrayReference	go to state 120
	Expression	go to state 157
	HashDereference	go to state 108
	Literal	go to state 122

State 247:

	Operator -> SubExpression OP24_LOGICAL_OR_XOR . SubExpression	(Rule 128)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	Operator	go to state 104
	HashReference	go to state 130
	Literal	go to state 122
	HashDereference	go to state 108
	Expression	go to state 157
	ArrayReference	go to state 120
	VariableSymbolOrSelf	go to state 125
	Variable	go to state 159
	WordScoped	go to state 127
	SubExpression	go to state 318
	ArrayDereference	go to state 144

State 248:

	Operator -> SubExpression OP16_LOGICAL_OR . SubExpression	(Rule 122)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	HashReference	go to state 130
	Operator	go to state 104
	ArrayReference	go to state 120
	Expression	go to state 157
	HashDereference	go to state 108
	Literal	go to state 122
	ArrayDereference	go to state 144
	SubExpression	go to state 319
	WordScoped	go to state 127
	Variable	go to state 159
	VariableSymbolOrSelf	go to state 125

State 249:

	Operator -> SubExpression OP04_MATH_POW . SubExpression	(Rule 105)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	Operator	go to state 104
	HashReference	go to state 130
	Variable	go to state 159
	VariableSymbolOrSelf	go to state 125
	WordScoped	go to state 127
	SubExpression	go to state 320
	ArrayDereference	go to state 144
	Literal	go to state 122
	HashDereference	go to state 108
	Expression	go to state 157
	ArrayReference	go to state 120

State 250:

	Operator -> SubExpression OP12_COMPARE_EQ_NE . SubExpression	(Rule 118)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	Literal	go to state 122
	HashDereference	go to state 108
	ArrayReference	go to state 120
	Expression	go to state 157
	Variable	go to state 159
	WordScoped	go to state 127
	VariableSymbolOrSelf	go to state 125
	SubExpression	go to state 321
	ArrayDereference	go to state 144
	Operator	go to state 104
	HashReference	go to state 130

State 251:

	Operator -> SubExpression OP15_LOGICAL_AND . SubExpression	(Rule 121)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	HashReference	go to state 130
	Operator	go to state 104
	ArrayDereference	go to state 144
	Variable	go to state 159
	VariableSymbolOrSelf	go to state 125
	WordScoped	go to state 127
	SubExpression	go to state 322
	HashDereference	go to state 108
	ArrayReference	go to state 120
	Expression	go to state 157
	Literal	go to state 122

State 252:

	Operator -> SubExpression OP11_COMPARE_LT_GT . SubExpression	(Rule 117)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	Operator	go to state 104
	HashReference	go to state 130
	VariableSymbolOrSelf	go to state 125
	Variable	go to state 159
	WordScoped	go to state 127
	SubExpression	go to state 323
	ArrayDereference	go to state 144
	Literal	go to state 122
	HashDereference	go to state 108
	ArrayReference	go to state 120
	Expression	go to state 157

State 253:

	Operator -> SubExpression OP18_TERNARY . VariableOrLiteral COLON VariableOrLiteral	(Rule 124)

	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105

	VariableOrLiteral	go to state 325
	Variable	go to state 324
	VariableSymbolOrSelf	go to state 125
	Literal	go to state 326

State 254:

	Operator -> SubExpression OP09_BITWISE_SHIFT . SubExpression	(Rule 114)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	Literal	go to state 122
	HashDereference	go to state 108
	ArrayReference	go to state 120
	Expression	go to state 157
	VariableSymbolOrSelf	go to state 125
	Variable	go to state 159
	WordScoped	go to state 127
	SubExpression	go to state 327
	ArrayDereference	go to state 144
	Operator	go to state 104
	HashReference	go to state 130

State 255:

	Operator -> SubExpression OP08_MATH_ADD_SUB . SubExpression	(Rule 112)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	Expression	go to state 157
	ArrayReference	go to state 120
	HashDereference	go to state 108
	Literal	go to state 122
	ArrayDereference	go to state 144
	SubExpression	go to state 328
	VariableSymbolOrSelf	go to state 125
	Variable	go to state 159
	WordScoped	go to state 127
	HashReference	go to state 130
	Operator	go to state 104

State 256:

	Operator -> SubExpression OP06_REGEX_BIND . OP06_REGEX_PATTERN	(Rule 109)

	OP06_REGEX_PATTERN	shift, and go to state 329

State 257:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 123)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	HashDereference	go to state 108
	Expression	go to state 157
	ArrayReference	go to state 120
	Literal	go to state 122
	ArrayDereference	go to state 144
	VariableSymbolOrSelf	go to state 125
	Variable	go to state 159
	WordScoped	go to state 127
	SubExpression	go to state 330
	HashReference	go to state 130
	Operator	go to state 104

State 258:

	Operator -> SubExpression OP13_BITWISE_AND . SubExpression	(Rule 119)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	Operator	go to state 104
	HashReference	go to state 130
	WordScoped	go to state 127
	VariableSymbolOrSelf	go to state 125
	Variable	go to state 159
	SubExpression	go to state 331
	ArrayDereference	go to state 144
	Literal	go to state 122
	HashDereference	go to state 108
	ArrayReference	go to state 120
	Expression	go to state 157

State 259:

	Operator -> SubExpression OP07_STRING_REPEAT . SubExpression	(Rule 110)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	ArrayDereference	go to state 144
	Variable	go to state 159
	WordScoped	go to state 127
	VariableSymbolOrSelf	go to state 125
	SubExpression	go to state 332
	HashDereference	go to state 108
	Expression	go to state 157
	ArrayReference	go to state 120
	Literal	go to state 122
	HashReference	go to state 130
	Operator	go to state 104

State 260:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> OP22_LOGICAL_NEG SubExpression .	(Rule 126)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)

	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246
	OP15_LOGICAL_AND	shift, and go to state 251
	OP16_LOGICAL_OR	shift, and go to state 248
	OP17_LIST_RANGE	shift, and go to state 257
	OP18_TERNARY	shift, and go to state 253

	')'	reduce using rule 126 (Operator)
	';'	reduce using rule 126 (Operator)
	']'	reduce using rule 126 (Operator)
	'}'	reduce using rule 126 (Operator)
	OP21_LIST_COMMA	reduce using rule 126 (Operator)
	OP23_LOGICAL_AND	reduce using rule 126 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 126 (Operator)

State 261:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> OP05_LOGICAL_NEG SubExpression .	(Rule 107)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)

	OP04_MATH_POW	shift, and go to state 249

	')'	reduce using rule 107 (Operator)
	';'	reduce using rule 107 (Operator)
	']'	reduce using rule 107 (Operator)
	'}'	reduce using rule 107 (Operator)
	OP06_REGEX_BIND	reduce using rule 107 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 107 (Operator)
	OP07_STRING_REPEAT	reduce using rule 107 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 107 (Operator)
	OP08_STRING_CAT	reduce using rule 107 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 107 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 107 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 107 (Operator)
	OP13_BITWISE_AND	reduce using rule 107 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 107 (Operator)
	OP15_LOGICAL_AND	reduce using rule 107 (Operator)
	OP16_LOGICAL_OR	reduce using rule 107 (Operator)
	OP17_LIST_RANGE	reduce using rule 107 (Operator)
	OP18_TERNARY	reduce using rule 107 (Operator)
	OP21_LIST_COMMA	reduce using rule 107 (Operator)
	OP23_LOGICAL_AND	reduce using rule 107 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 107 (Operator)

State 262:

	Subroutine -> SUB WORD LBRACE LBRACE MY . Type '$RETURN_TYPE' '}' ';' OPTIONAL-23 STAR-24 '}'	(Rule 60)

	TYPE_INTEGER	shift, and go to state 205
	WORD	shift, and go to state 204
	WORD_SCOPED	shift, and go to state 202

	Type	go to state 333

State 263:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal . ';'	(Rule 55)

	';'	shift, and go to state 334

State 264:

	TypeInnerConstant -> MY Type . '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 245)

	'$TYPED_'	shift, and go to state 335

State 265:

	Include -> 'BEGIN {' WordScoped OP02_METHOD_THINARROW_IMP OPTIONAL-22 ')' ';' . '}'	(Rule 54)

	'}'	shift, and go to state 336

State 266:

	STAR-30 -> STAR-30 . Constant	(Rule 71)
	Class -> UseParent WordScoped ')' ';' Include STAR-27 OPTIONAL-28 STAR-29 STAR-30 . Properties STAR-31 LITERAL_NUMBER ';'	(Rule 75)

	'our hashref $properties'	shift, and go to state 337
	'use constant'	shift, and go to state 65

	Properties	go to state 339
	Constant	go to state 338

State 267:

	STAR-29 -> STAR-29 Include .	(Rule 69)

	$default	reduce using rule 69 (STAR-29)

State 268:

	Operator -> OP01_NAMED SubExpression .	(Rule 99)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)

	')'	reduce using rule 99 (Operator)
	';'	reduce using rule 99 (Operator)
	']'	reduce using rule 99 (Operator)
	'}'	reduce using rule 99 (Operator)
	OP04_MATH_POW	reduce using rule 99 (Operator)
	OP06_REGEX_BIND	reduce using rule 99 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 99 (Operator)
	OP07_STRING_REPEAT	reduce using rule 99 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 99 (Operator)
	OP08_STRING_CAT	reduce using rule 99 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 99 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 99 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 99 (Operator)
	OP13_BITWISE_AND	reduce using rule 99 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 99 (Operator)
	OP15_LOGICAL_AND	reduce using rule 99 (Operator)
	OP16_LOGICAL_OR	reduce using rule 99 (Operator)
	OP17_LIST_RANGE	reduce using rule 99 (Operator)
	OP18_TERNARY	reduce using rule 99 (Operator)
	OP21_LIST_COMMA	reduce using rule 99 (Operator)
	OP23_LOGICAL_AND	reduce using rule 99 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 99 (Operator)

State 269:

	OperatorVoid -> OP01_PRINT OPTIONAL-39 ListElements . ';'	(Rule 134)

	';'	shift, and go to state 340

State 270:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements . ';'	(Rule 135)

	';'	shift, and go to state 341

State 271:

	TypeInner -> MY Type . '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN	(Rule 242)

	'$TYPED_'	shift, and go to state 342

State 272:

	ArrayDereference -> '@{' OPTIONAL-55 ArrayReference . '}'	(Rule 220)

	'}'	shift, and go to state 343

State 273:

	ArrayDereference -> '@{' Variable '}' .	(Rule 219)

	$default	reduce using rule 219 (ArrayDereference)

State 274:

	LoopWhile -> 'while' LPAREN_MY . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrInput ')' CodeBlock	(Rule 190)

	TYPE_INTEGER	shift, and go to state 205
	WORD	shift, and go to state 204
	WORD_SCOPED	shift, and go to state 202

	Type	go to state 344

State 275:

	LoopWhile -> 'while' LPAREN . SubExpression ')' CodeBlock	(Rule 189)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	HashDereference	go to state 108
	ArrayReference	go to state 120
	Expression	go to state 157
	Literal	go to state 122
	ArrayDereference	go to state 144
	WordScoped	go to state 127
	Variable	go to state 159
	VariableSymbolOrSelf	go to state 125
	SubExpression	go to state 345
	HashReference	go to state 130
	Operator	go to state 104

State 276:

	LoopForEach -> 'foreach' MY . Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 188)

	TYPE_INTEGER	shift, and go to state 205
	WORD	shift, and go to state 204
	WORD_SCOPED	shift, and go to state 202

	Type	go to state 346

State 277:

	LoopFor -> 'for' LPAREN_MY . TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 187)

	TYPE_INTEGER	shift, and go to state 347

State 278:

	LoopFor -> 'for' MY . TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 186)

	TYPE_INTEGER	shift, and go to state 348

State 279:

	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')' .	(Rule 108)

	$default	reduce using rule 108 (Operator)

State 280:

	ArrayReference -> LBRACKET OPTIONAL-54 ']' .	(Rule 216)

	$default	reduce using rule 216 (ArrayReference)

State 281:

	STAR-53 -> STAR-53 . PAREN-52	(Rule 207)
	ListElements -> ListElement STAR-53 .	(Rule 209)

	OP21_LIST_COMMA	shift, and go to state 350

	')'	reduce using rule 209 (ListElements)
	';'	reduce using rule 209 (ListElements)
	']'	reduce using rule 209 (ListElements)

	PAREN-52	go to state 349

State 282:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)
	ListElement -> TypeInner SubExpression .	(Rule 211)

	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246
	OP15_LOGICAL_AND	shift, and go to state 251
	OP16_LOGICAL_OR	shift, and go to state 248
	OP17_LIST_RANGE	shift, and go to state 257
	OP18_TERNARY	shift, and go to state 253
	OP23_LOGICAL_AND	shift, and go to state 244
	OP24_LOGICAL_OR_XOR	shift, and go to state 247

	')'	reduce using rule 211 (ListElement)
	';'	reduce using rule 211 (ListElement)
	']'	reduce using rule 211 (ListElement)
	OP21_LIST_COMMA	reduce using rule 211 (ListElement)

State 283:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN . OPTIONAL-42 ')'	(Rule 152)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	ARGV	shift, and go to state 183
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	MY	shift, and go to state 164
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP01_QW	shift, and go to state 181
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	')'	reduce using rule 145 (OPTIONAL-42)

	WordScoped	go to state 127
	Variable	go to state 159
	VariableSymbolOrSelf	go to state 125
	SubExpression	go to state 184
	ArrayDereference	go to state 144
	ListElements	go to state 351
	OPTIONAL-42	go to state 352
	Literal	go to state 122
	HashDereference	go to state 108
	Expression	go to state 157
	ArrayReference	go to state 120
	ListElement	go to state 182
	TypeInner	go to state 185
	Operator	go to state 104
	HashReference	go to state 130

State 284:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrInput .	(Rule 204)

	$default	reduce using rule 204 (VariableModification)

State 285:

	SubExpressionOrInput -> FHREF_SYMBOL_IN .	(Rule 164)

	$default	reduce using rule 164 (SubExpressionOrInput)

State 286:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)
	SubExpressionOrInput -> SubExpression .	(Rule 163)

	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246
	OP15_LOGICAL_AND	shift, and go to state 251
	OP16_LOGICAL_OR	shift, and go to state 248
	OP17_LIST_RANGE	shift, and go to state 257
	OP18_TERNARY	shift, and go to state 253
	OP23_LOGICAL_AND	shift, and go to state 244
	OP24_LOGICAL_OR_XOR	shift, and go to state 247

	')'	reduce using rule 163 (SubExpressionOrInput)
	';'	reduce using rule 163 (SubExpressionOrInput)

State 287:

	SubExpressionOrInput -> STDIN .	(Rule 165)

	$default	reduce using rule 165 (SubExpressionOrInput)

State 288:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression .	(Rule 205)

	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246
	OP15_LOGICAL_AND	shift, and go to state 251
	OP16_LOGICAL_OR	shift, and go to state 248
	OP17_LIST_RANGE	shift, and go to state 257
	OP18_TERNARY	shift, and go to state 253
	OP23_LOGICAL_AND	shift, and go to state 244
	OP24_LOGICAL_OR_XOR	shift, and go to state 247

	')'	reduce using rule 205 (VariableModification)
	';'	reduce using rule 205 (VariableModification)

State 289:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES . ListElements ')'	(Rule 98)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	ARGV	shift, and go to state 183
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	MY	shift, and go to state 164
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP01_QW	shift, and go to state 181
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	TypeInner	go to state 185
	ListElement	go to state 182
	HashReference	go to state 130
	Operator	go to state 104
	ArrayDereference	go to state 144
	ListElements	go to state 353
	VariableSymbolOrSelf	go to state 125
	Variable	go to state 159
	WordScoped	go to state 127
	SubExpression	go to state 184
	HashDereference	go to state 108
	Expression	go to state 157
	ArrayReference	go to state 120
	Literal	go to state 122

State 290:

	SubExpression -> LPAREN SubExpression ')' .	(Rule 162)

	$default	reduce using rule 162 (SubExpression)

State 291:

	Operator -> LPAREN OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ')'	(Rule 100)

	OP21_LIST_COMMA	shift, and go to state 354

State 292:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ';'	(Rule 139)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	ARGV	shift, and go to state 183
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	MY	shift, and go to state 164
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP01_QW	shift, and go to state 181
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	SubExpression	go to state 184
	WordScoped	go to state 127
	VariableSymbolOrSelf	go to state 125
	Variable	go to state 159
	ArrayDereference	go to state 144
	ListElements	go to state 355
	Literal	go to state 122
	ArrayReference	go to state 120
	Expression	go to state 157
	HashDereference	go to state 108
	ListElement	go to state 182
	TypeInner	go to state 185
	Operator	go to state 104
	HashReference	go to state 130

State 293:

	Operator -> OP22_LOGICAL_NEG_LPAREN SubExpression ')' .	(Rule 125)

	$default	reduce using rule 125 (Operator)

State 294:

	HashDereference -> '%{' OPTIONAL-59 HashReference . '}'	(Rule 235)

	'}'	shift, and go to state 356

State 295:

	HashDereference -> '%{' Variable '}' .	(Rule 234)

	$default	reduce using rule 234 (HashDereference)

State 296:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-40 ')' . ';'	(Rule 137)

	';'	shift, and go to state 357

State 297:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL . ';'	(Rule 200)
	VariableDeclaration -> MY Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExpIn	(Rule 201)
	VariableDeclaration -> MY Type VARIABLE_SYMBOL . OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 202)

	';'	shift, and go to state 360
	OP02_ARRAY_THINARROW	shift, and go to state 359
	OP19_VARIABLE_ASSIGN	shift, and go to state 358

State 298:

	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL . ';'	(Rule 203)

	';'	shift, and go to state 361

State 299:

	STAR-51 -> STAR-51 VariableRetrieval .	(Rule 194)

	$default	reduce using rule 194 (STAR-51)

State 300:

	VariableRetrieval -> OP02_ARRAY_THINARROW . SubExpression ']'	(Rule 197)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	Operator	go to state 104
	HashReference	go to state 130
	Literal	go to state 122
	ArrayReference	go to state 120
	Expression	go to state 157
	HashDereference	go to state 108
	SubExpression	go to state 362
	WordScoped	go to state 127
	Variable	go to state 159
	VariableSymbolOrSelf	go to state 125
	ArrayDereference	go to state 144

State 301:

	VariableRetrieval -> OP02_HASH_THINARROW . SubExpression '}'	(Rule 198)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 199)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 363
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	HashDereference	go to state 108
	Expression	go to state 157
	ArrayReference	go to state 120
	Literal	go to state 122
	ArrayDereference	go to state 144
	Variable	go to state 159
	WordScoped	go to state 127
	VariableSymbolOrSelf	go to state 125
	SubExpression	go to state 364
	HashReference	go to state 130
	Operator	go to state 104

State 302:

	Expression -> WordScoped LPAREN OPTIONAL-41 . ')'	(Rule 151)

	')'	shift, and go to state 365

State 303:

	OPTIONAL-41 -> ListElements .	(Rule 142)

	$default	reduce using rule 142 (OPTIONAL-41)

State 304:

	OPTIONAL-43 -> HashReference .	(Rule 146)

	$default	reduce using rule 146 (OPTIONAL-43)

State 305:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW OPTIONAL-43 . ')'	(Rule 153)

	')'	shift, and go to state 366

State 306:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 141)

	$default	reduce using rule 141 (OperatorVoid)

State 307:

	Operator -> OP01_OPEN MY TYPE_FHREF . FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 101)

	FHREF_SYMBOL	shift, and go to state 367

State 308:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)
	Conditional -> 'if' LPAREN SubExpression . ')' CodeBlock STAR-47 OPTIONAL-49	(Rule 182)

	')'	shift, and go to state 368
	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246
	OP15_LOGICAL_AND	shift, and go to state 251
	OP16_LOGICAL_OR	shift, and go to state 248
	OP17_LIST_RANGE	shift, and go to state 257
	OP18_TERNARY	shift, and go to state 253
	OP23_LOGICAL_AND	shift, and go to state 244
	OP24_LOGICAL_OR_XOR	shift, and go to state 247

State 309:

	OperatorVoid -> OP01_NAMED_VOID ListElements ';' .	(Rule 138)

	$default	reduce using rule 138 (OperatorVoid)

State 310:

	Expression -> WORD_UPPERCASE LPAREN ')' .	(Rule 149)

	$default	reduce using rule 149 (Expression)

State 311:

	HashEntry -> VarOrLitOrOpStrOrWord OP20_HASH_FATARROW . OPTIONAL-56 SubExpression	(Rule 223)

	MY	shift, and go to state 164

	'%{'	reduce using rule 222 (OPTIONAL-56)
	'@{'	reduce using rule 222 (OPTIONAL-56)
	'undef'	reduce using rule 222 (OPTIONAL-56)
	CONSTANT_CALL_SCOPED	reduce using rule 222 (OPTIONAL-56)
	LBRACE	reduce using rule 222 (OPTIONAL-56)
	LBRACKET	reduce using rule 222 (OPTIONAL-56)
	LITERAL_NUMBER	reduce using rule 222 (OPTIONAL-56)
	LITERAL_STRING	reduce using rule 222 (OPTIONAL-56)
	LPAREN	reduce using rule 222 (OPTIONAL-56)
	OP01_CLOSE	reduce using rule 222 (OPTIONAL-56)
	OP01_NAMED	reduce using rule 222 (OPTIONAL-56)
	OP01_OPEN	reduce using rule 222 (OPTIONAL-56)
	OP03_MATH_INC_DEC	reduce using rule 222 (OPTIONAL-56)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 222 (OPTIONAL-56)
	OP05_LOGICAL_NEG	reduce using rule 222 (OPTIONAL-56)
	OP05_MATH_NEG_LPAREN	reduce using rule 222 (OPTIONAL-56)
	OP10_NAMED_UNARY	reduce using rule 222 (OPTIONAL-56)
	OP22_LOGICAL_NEG	reduce using rule 222 (OPTIONAL-56)
	OP22_LOGICAL_NEG_LPAREN	reduce using rule 222 (OPTIONAL-56)
	SELF	reduce using rule 222 (OPTIONAL-56)
	VARIABLE_SYMBOL	reduce using rule 222 (OPTIONAL-56)
	WORD	reduce using rule 222 (OPTIONAL-56)
	WORD_SCOPED	reduce using rule 222 (OPTIONAL-56)
	WORD_UPPERCASE	reduce using rule 222 (OPTIONAL-56)

	TypeInner	go to state 370
	OPTIONAL-56	go to state 369

State 312:

	STAR-58 -> STAR-58 . PAREN-57	(Rule 228)
	HashReference -> LBRACE HashEntry STAR-58 . '}'	(Rule 230)

	'}'	shift, and go to state 373
	OP21_LIST_COMMA	shift, and go to state 372

	PAREN-57	go to state 371

State 313:

	Operator -> OP05_BITWISE_NEG_LPAREN SubExpression ')' .	(Rule 106)

	$default	reduce using rule 106 (Operator)

State 314:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression .	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)

	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_STRING_REPEAT	shift, and go to state 259

	')'	reduce using rule 111 (Operator)
	';'	reduce using rule 111 (Operator)
	']'	reduce using rule 111 (Operator)
	'}'	reduce using rule 111 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 111 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 111 (Operator)
	OP08_STRING_CAT	reduce using rule 111 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 111 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 111 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 111 (Operator)
	OP13_BITWISE_AND	reduce using rule 111 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 111 (Operator)
	OP15_LOGICAL_AND	reduce using rule 111 (Operator)
	OP16_LOGICAL_OR	reduce using rule 111 (Operator)
	OP17_LIST_RANGE	reduce using rule 111 (Operator)
	OP18_TERNARY	reduce using rule 111 (Operator)
	OP21_LIST_COMMA	reduce using rule 111 (Operator)
	OP23_LOGICAL_AND	reduce using rule 111 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 111 (Operator)

State 315:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression OP23_LOGICAL_AND SubExpression .	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)

	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246
	OP15_LOGICAL_AND	shift, and go to state 251
	OP16_LOGICAL_OR	shift, and go to state 248
	OP17_LIST_RANGE	shift, and go to state 257
	OP18_TERNARY	shift, and go to state 253

	')'	reduce using rule 127 (Operator)
	';'	reduce using rule 127 (Operator)
	']'	reduce using rule 127 (Operator)
	'}'	reduce using rule 127 (Operator)
	OP21_LIST_COMMA	reduce using rule 127 (Operator)
	OP23_LOGICAL_AND	reduce using rule 127 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 127 (Operator)

State 316:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression OP08_STRING_CAT SubExpression .	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)

	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255

	')'	reduce using rule 113 (Operator)
	';'	reduce using rule 113 (Operator)
	']'	reduce using rule 113 (Operator)
	'}'	reduce using rule 113 (Operator)
	OP08_STRING_CAT	reduce using rule 113 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 113 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 113 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 113 (Operator)
	OP13_BITWISE_AND	reduce using rule 113 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 113 (Operator)
	OP15_LOGICAL_AND	reduce using rule 113 (Operator)
	OP16_LOGICAL_OR	reduce using rule 113 (Operator)
	OP17_LIST_RANGE	reduce using rule 113 (Operator)
	OP18_TERNARY	reduce using rule 113 (Operator)
	OP21_LIST_COMMA	reduce using rule 113 (Operator)
	OP23_LOGICAL_AND	reduce using rule 113 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 113 (Operator)

State 317:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression .	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)

	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258

	')'	reduce using rule 120 (Operator)
	';'	reduce using rule 120 (Operator)
	']'	reduce using rule 120 (Operator)
	'}'	reduce using rule 120 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 120 (Operator)
	OP15_LOGICAL_AND	reduce using rule 120 (Operator)
	OP16_LOGICAL_OR	reduce using rule 120 (Operator)
	OP17_LIST_RANGE	reduce using rule 120 (Operator)
	OP18_TERNARY	reduce using rule 120 (Operator)
	OP21_LIST_COMMA	reduce using rule 120 (Operator)
	OP23_LOGICAL_AND	reduce using rule 120 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 120 (Operator)

State 318:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)
	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression .	(Rule 128)

	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246
	OP15_LOGICAL_AND	shift, and go to state 251
	OP16_LOGICAL_OR	shift, and go to state 248
	OP17_LIST_RANGE	shift, and go to state 257
	OP18_TERNARY	shift, and go to state 253
	OP23_LOGICAL_AND	shift, and go to state 244

	')'	reduce using rule 128 (Operator)
	';'	reduce using rule 128 (Operator)
	']'	reduce using rule 128 (Operator)
	'}'	reduce using rule 128 (Operator)
	OP21_LIST_COMMA	reduce using rule 128 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 128 (Operator)

State 319:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression OP16_LOGICAL_OR SubExpression .	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)

	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246
	OP15_LOGICAL_AND	shift, and go to state 251

	')'	reduce using rule 122 (Operator)
	';'	reduce using rule 122 (Operator)
	']'	reduce using rule 122 (Operator)
	'}'	reduce using rule 122 (Operator)
	OP16_LOGICAL_OR	reduce using rule 122 (Operator)
	OP17_LIST_RANGE	reduce using rule 122 (Operator)
	OP18_TERNARY	reduce using rule 122 (Operator)
	OP21_LIST_COMMA	reduce using rule 122 (Operator)
	OP23_LOGICAL_AND	reduce using rule 122 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 122 (Operator)

State 320:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression OP04_MATH_POW SubExpression .	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)

	OP04_MATH_POW	shift, and go to state 249

	')'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP06_REGEX_BIND	reduce using rule 105 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 105 (Operator)
	OP07_STRING_REPEAT	reduce using rule 105 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 105 (Operator)
	OP08_STRING_CAT	reduce using rule 105 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 105 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 105 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 105 (Operator)
	OP13_BITWISE_AND	reduce using rule 105 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 105 (Operator)
	OP15_LOGICAL_AND	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 321:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression .	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)

	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252

	OP12_COMPARE_EQ_NE	error (nonassociative)

	')'	reduce using rule 118 (Operator)
	';'	reduce using rule 118 (Operator)
	']'	reduce using rule 118 (Operator)
	'}'	reduce using rule 118 (Operator)
	OP13_BITWISE_AND	reduce using rule 118 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 118 (Operator)
	OP15_LOGICAL_AND	reduce using rule 118 (Operator)
	OP16_LOGICAL_OR	reduce using rule 118 (Operator)
	OP17_LIST_RANGE	reduce using rule 118 (Operator)
	OP18_TERNARY	reduce using rule 118 (Operator)
	OP21_LIST_COMMA	reduce using rule 118 (Operator)
	OP23_LOGICAL_AND	reduce using rule 118 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 118 (Operator)

State 322:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression OP15_LOGICAL_AND SubExpression .	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)

	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246

	')'	reduce using rule 121 (Operator)
	';'	reduce using rule 121 (Operator)
	']'	reduce using rule 121 (Operator)
	'}'	reduce using rule 121 (Operator)
	OP15_LOGICAL_AND	reduce using rule 121 (Operator)
	OP16_LOGICAL_OR	reduce using rule 121 (Operator)
	OP17_LIST_RANGE	reduce using rule 121 (Operator)
	OP18_TERNARY	reduce using rule 121 (Operator)
	OP21_LIST_COMMA	reduce using rule 121 (Operator)
	OP23_LOGICAL_AND	reduce using rule 121 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 121 (Operator)

State 323:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression .	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)

	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 117 (Operator)
	';'	reduce using rule 117 (Operator)
	']'	reduce using rule 117 (Operator)
	'}'	reduce using rule 117 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 117 (Operator)
	OP13_BITWISE_AND	reduce using rule 117 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 117 (Operator)
	OP15_LOGICAL_AND	reduce using rule 117 (Operator)
	OP16_LOGICAL_OR	reduce using rule 117 (Operator)
	OP17_LIST_RANGE	reduce using rule 117 (Operator)
	OP18_TERNARY	reduce using rule 117 (Operator)
	OP21_LIST_COMMA	reduce using rule 117 (Operator)
	OP23_LOGICAL_AND	reduce using rule 117 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 117 (Operator)

State 324:

	VariableOrLiteral -> Variable .	(Rule 246)

	$default	reduce using rule 246 (VariableOrLiteral)

State 325:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral . COLON VariableOrLiteral	(Rule 124)

	COLON	shift, and go to state 374

State 326:

	VariableOrLiteral -> Literal .	(Rule 247)

	$default	reduce using rule 247 (VariableOrLiteral)

State 327:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression .	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)

	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245

	')'	reduce using rule 114 (Operator)
	';'	reduce using rule 114 (Operator)
	']'	reduce using rule 114 (Operator)
	'}'	reduce using rule 114 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 114 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 114 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 114 (Operator)
	OP13_BITWISE_AND	reduce using rule 114 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 114 (Operator)
	OP15_LOGICAL_AND	reduce using rule 114 (Operator)
	OP16_LOGICAL_OR	reduce using rule 114 (Operator)
	OP17_LIST_RANGE	reduce using rule 114 (Operator)
	OP18_TERNARY	reduce using rule 114 (Operator)
	OP21_LIST_COMMA	reduce using rule 114 (Operator)
	OP23_LOGICAL_AND	reduce using rule 114 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 114 (Operator)

State 328:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression .	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)

	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259

	')'	reduce using rule 112 (Operator)
	';'	reduce using rule 112 (Operator)
	']'	reduce using rule 112 (Operator)
	'}'	reduce using rule 112 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 112 (Operator)
	OP08_STRING_CAT	reduce using rule 112 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 112 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 112 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 112 (Operator)
	OP13_BITWISE_AND	reduce using rule 112 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 112 (Operator)
	OP15_LOGICAL_AND	reduce using rule 112 (Operator)
	OP16_LOGICAL_OR	reduce using rule 112 (Operator)
	OP17_LIST_RANGE	reduce using rule 112 (Operator)
	OP18_TERNARY	reduce using rule 112 (Operator)
	OP21_LIST_COMMA	reduce using rule 112 (Operator)
	OP23_LOGICAL_AND	reduce using rule 112 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 112 (Operator)

State 329:

	Operator -> SubExpression OP06_REGEX_BIND OP06_REGEX_PATTERN .	(Rule 109)

	$default	reduce using rule 109 (Operator)

State 330:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)

	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246
	OP15_LOGICAL_AND	shift, and go to state 251
	OP16_LOGICAL_OR	shift, and go to state 248

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 123 (Operator)
	';'	reduce using rule 123 (Operator)
	']'	reduce using rule 123 (Operator)
	'}'	reduce using rule 123 (Operator)
	OP18_TERNARY	reduce using rule 123 (Operator)
	OP21_LIST_COMMA	reduce using rule 123 (Operator)
	OP23_LOGICAL_AND	reduce using rule 123 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 123 (Operator)

State 331:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression OP13_BITWISE_AND SubExpression .	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)

	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250

	')'	reduce using rule 119 (Operator)
	';'	reduce using rule 119 (Operator)
	']'	reduce using rule 119 (Operator)
	'}'	reduce using rule 119 (Operator)
	OP13_BITWISE_AND	reduce using rule 119 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 119 (Operator)
	OP15_LOGICAL_AND	reduce using rule 119 (Operator)
	OP16_LOGICAL_OR	reduce using rule 119 (Operator)
	OP17_LIST_RANGE	reduce using rule 119 (Operator)
	OP18_TERNARY	reduce using rule 119 (Operator)
	OP21_LIST_COMMA	reduce using rule 119 (Operator)
	OP23_LOGICAL_AND	reduce using rule 119 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 119 (Operator)

State 332:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression OP07_STRING_REPEAT SubExpression .	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)

	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256

	')'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 110 (Operator)
	OP07_STRING_REPEAT	reduce using rule 110 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 110 (Operator)
	OP08_STRING_CAT	reduce using rule 110 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 110 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 110 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 110 (Operator)
	OP13_BITWISE_AND	reduce using rule 110 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 110 (Operator)
	OP15_LOGICAL_AND	reduce using rule 110 (Operator)
	OP16_LOGICAL_OR	reduce using rule 110 (Operator)
	OP17_LIST_RANGE	reduce using rule 110 (Operator)
	OP18_TERNARY	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP23_LOGICAL_AND	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 333:

	Subroutine -> SUB WORD LBRACE LBRACE MY Type . '$RETURN_TYPE' '}' ';' OPTIONAL-23 STAR-24 '}'	(Rule 60)

	'$RETURN_TYPE'	shift, and go to state 375

State 334:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';' .	(Rule 55)

	$default	reduce using rule 55 (Constant)

State 335:

	TypeInnerConstant -> MY Type '$TYPED_' . WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 245)

	WORD_UPPERCASE	shift, and go to state 376

State 336:

	Include -> 'BEGIN {' WordScoped OP02_METHOD_THINARROW_IMP OPTIONAL-22 ')' ';' '}' .	(Rule 54)

	$default	reduce using rule 54 (Include)

State 337:

	Properties -> 'our hashref $properties' . OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-33 '}' ';'	(Rule 81)
	Properties -> 'our hashref $properties' . OP19_VARIABLE_ASSIGN LBRACE '}' ';'	(Rule 82)

	OP19_VARIABLE_ASSIGN	shift, and go to state 377

State 338:

	STAR-30 -> STAR-30 Constant .	(Rule 71)

	$default	reduce using rule 71 (STAR-30)

State 339:

	Class -> UseParent WordScoped ')' ';' Include STAR-27 OPTIONAL-28 STAR-29 STAR-30 Properties . STAR-31 LITERAL_NUMBER ';'	(Rule 75)

	$default	reduce using rule 74 (STAR-31)

	STAR-31	go to state 378

State 340:

	OperatorVoid -> OP01_PRINT OPTIONAL-39 ListElements ';' .	(Rule 134)

	$default	reduce using rule 134 (OperatorVoid)

State 341:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements ';' .	(Rule 135)

	$default	reduce using rule 135 (OperatorVoid)

State 342:

	TypeInner -> MY Type '$TYPED_' . OpStringOrWord OP19_VARIABLE_ASSIGN	(Rule 242)

	OP01_CLOSE	shift, and go to state 237
	OP01_NAMED	shift, and go to state 220
	OP01_NAMED_VOID	shift, and go to state 221
	OP01_OPEN	shift, and go to state 228
	OP01_PRINT	shift, and go to state 235
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 218
	OP07_STRING_REPEAT	shift, and go to state 240
	OP08_MATH_ADD_SUB	shift, and go to state 238
	OP10_NAMED_UNARY	shift, and go to state 234
	OP11_COMPARE_LT_GT	shift, and go to state 232
	OP12_COMPARE_EQ_NE	shift, and go to state 225
	OP19_LOOP_CONTROL	shift, and go to state 226
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 227
	OP22_LOGICAL_NEG	shift, and go to state 224
	OP23_LOGICAL_AND	shift, and go to state 219
	OP24_LOGICAL_OR_XOR	shift, and go to state 216
	WORD	shift, and go to state 233

	OpStringOrWord	go to state 379

State 343:

	ArrayDereference -> '@{' OPTIONAL-55 ArrayReference '}' .	(Rule 220)

	$default	reduce using rule 220 (ArrayDereference)

State 344:

	LoopWhile -> 'while' LPAREN_MY Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrInput ')' CodeBlock	(Rule 190)

	VARIABLE_SYMBOL	shift, and go to state 380

State 345:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)
	LoopWhile -> 'while' LPAREN SubExpression . ')' CodeBlock	(Rule 189)

	')'	shift, and go to state 381
	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246
	OP15_LOGICAL_AND	shift, and go to state 251
	OP16_LOGICAL_OR	shift, and go to state 248
	OP17_LIST_RANGE	shift, and go to state 257
	OP18_TERNARY	shift, and go to state 253
	OP23_LOGICAL_AND	shift, and go to state 244
	OP24_LOGICAL_OR_XOR	shift, and go to state 247

State 346:

	LoopForEach -> 'foreach' MY Type . VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 188)

	VARIABLE_SYMBOL	shift, and go to state 382

State 347:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 187)

	VARIABLE_SYMBOL	shift, and go to state 383

State 348:

	LoopFor -> 'for' MY TYPE_INTEGER . VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 186)

	VARIABLE_SYMBOL	shift, and go to state 384

State 349:

	STAR-53 -> STAR-53 PAREN-52 .	(Rule 207)

	$default	reduce using rule 207 (STAR-53)

State 350:

	PAREN-52 -> OP21_LIST_COMMA . ListElement	(Rule 206)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	ARGV	shift, and go to state 183
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	MY	shift, and go to state 164
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP01_QW	shift, and go to state 181
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	Variable	go to state 159
	VariableSymbolOrSelf	go to state 125
	WordScoped	go to state 127
	SubExpression	go to state 184
	ArrayDereference	go to state 144
	Literal	go to state 122
	HashDereference	go to state 108
	ArrayReference	go to state 120
	Expression	go to state 157
	ListElement	go to state 385
	TypeInner	go to state 185
	Operator	go to state 104
	HashReference	go to state 130

State 351:

	OPTIONAL-42 -> ListElements .	(Rule 144)

	$default	reduce using rule 144 (OPTIONAL-42)

State 352:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-42 . ')'	(Rule 152)

	')'	shift, and go to state 386

State 353:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements . ')'	(Rule 98)

	')'	shift, and go to state 387

State 354:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ')'	(Rule 100)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	ARGV	shift, and go to state 183
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	MY	shift, and go to state 164
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP01_QW	shift, and go to state 181
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	TypeInner	go to state 185
	ListElement	go to state 182
	HashReference	go to state 130
	Operator	go to state 104
	ArrayDereference	go to state 144
	ListElements	go to state 388
	VariableSymbolOrSelf	go to state 125
	WordScoped	go to state 127
	Variable	go to state 159
	SubExpression	go to state 184
	HashDereference	go to state 108
	Expression	go to state 157
	ArrayReference	go to state 120
	Literal	go to state 122

State 355:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ';'	(Rule 139)

	';'	shift, and go to state 389

State 356:

	HashDereference -> '%{' OPTIONAL-59 HashReference '}' .	(Rule 235)

	$default	reduce using rule 235 (HashDereference)

State 357:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-40 ')' ';' .	(Rule 137)

	$default	reduce using rule 137 (OperatorVoid)

State 358:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . OpNamedScolonOrSubExpIn	(Rule 201)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	FHREF_SYMBOL_IN	shift, and go to state 285
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_NAMED_SCOLON	shift, and go to state 391
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 393
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	STDIN	shift, and go to state 287
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	OpNamedScolonOrSubExpIn	go to state 390
	Operator	go to state 104
	HashReference	go to state 130
	VariableSymbolOrSelf	go to state 125
	WordScoped	go to state 127
	Variable	go to state 159
	SubExpression	go to state 286
	ArrayDereference	go to state 144
	Literal	go to state 122
	HashDereference	go to state 108
	Expression	go to state 157
	ArrayReference	go to state 120
	SubExpressionOrInput	go to state 392

State 359:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW . SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 202)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	HashDereference	go to state 108
	Expression	go to state 157
	ArrayReference	go to state 120
	Literal	go to state 122
	ArrayDereference	go to state 144
	WordScoped	go to state 127
	Variable	go to state 159
	VariableSymbolOrSelf	go to state 125
	SubExpression	go to state 394
	HashReference	go to state 130
	Operator	go to state 104

State 360:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL ';' .	(Rule 200)

	$default	reduce using rule 200 (VariableDeclaration)

State 361:

	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL ';' .	(Rule 203)

	$default	reduce using rule 203 (VariableDeclaration)

State 362:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)
	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression . ']'	(Rule 197)

	']'	shift, and go to state 395
	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246
	OP15_LOGICAL_AND	shift, and go to state 251
	OP16_LOGICAL_OR	shift, and go to state 248
	OP17_LIST_RANGE	shift, and go to state 257
	OP18_TERNARY	shift, and go to state 253
	OP23_LOGICAL_AND	shift, and go to state 244
	OP24_LOGICAL_OR_XOR	shift, and go to state 247

State 363:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 199)
	WordScoped -> WORD .	(Rule 236)

	'}'	shift, and go to state 396

	LPAREN	reduce using rule 236 (WordScoped)
	OP02_METHOD_THINARROW_NEW	reduce using rule 236 (WordScoped)

State 364:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)
	VariableRetrieval -> OP02_HASH_THINARROW SubExpression . '}'	(Rule 198)

	'}'	shift, and go to state 397
	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246
	OP15_LOGICAL_AND	shift, and go to state 251
	OP16_LOGICAL_OR	shift, and go to state 248
	OP17_LIST_RANGE	shift, and go to state 257
	OP18_TERNARY	shift, and go to state 253
	OP23_LOGICAL_AND	shift, and go to state 244
	OP24_LOGICAL_OR_XOR	shift, and go to state 247

State 365:

	Expression -> WordScoped LPAREN OPTIONAL-41 ')' .	(Rule 151)

	$default	reduce using rule 151 (Expression)

State 366:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW OPTIONAL-43 ')' .	(Rule 153)

	$default	reduce using rule 153 (Expression)

State 367:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL . OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 101)

	OP21_LIST_COMMA	shift, and go to state 398

State 368:

	Conditional -> 'if' LPAREN SubExpression ')' . CodeBlock STAR-47 OPTIONAL-49	(Rule 182)

	LBRACE	shift, and go to state 399

	CodeBlock	go to state 400

State 369:

	HashEntry -> VarOrLitOrOpStrOrWord OP20_HASH_FATARROW OPTIONAL-56 . SubExpression	(Rule 223)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	Operator	go to state 104
	HashReference	go to state 130
	Literal	go to state 122
	ArrayReference	go to state 120
	Expression	go to state 157
	HashDereference	go to state 108
	SubExpression	go to state 401
	Variable	go to state 159
	WordScoped	go to state 127
	VariableSymbolOrSelf	go to state 125
	ArrayDereference	go to state 144

State 370:

	OPTIONAL-56 -> TypeInner .	(Rule 221)

	$default	reduce using rule 221 (OPTIONAL-56)

State 371:

	STAR-58 -> STAR-58 PAREN-57 .	(Rule 228)

	$default	reduce using rule 228 (STAR-58)

State 372:

	PAREN-57 -> OP21_LIST_COMMA . HashEntry	(Rule 227)

	'%{'	shift, and go to state 118
	ENV	shift, and go to state 222
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	OP01_CLOSE	shift, and go to state 237
	OP01_NAMED	shift, and go to state 220
	OP01_NAMED_VOID	shift, and go to state 221
	OP01_OPEN	shift, and go to state 228
	OP01_PRINT	shift, and go to state 235
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 218
	OP07_STRING_REPEAT	shift, and go to state 240
	OP08_MATH_ADD_SUB	shift, and go to state 238
	OP10_NAMED_UNARY	shift, and go to state 234
	OP11_COMPARE_LT_GT	shift, and go to state 232
	OP12_COMPARE_EQ_NE	shift, and go to state 225
	OP19_LOOP_CONTROL	shift, and go to state 226
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 227
	OP22_LOGICAL_NEG	shift, and go to state 224
	OP23_LOGICAL_AND	shift, and go to state 219
	OP24_LOGICAL_OR_XOR	shift, and go to state 216
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 233

	Variable	go to state 239
	VariableSymbolOrSelf	go to state 125
	OpStringOrWord	go to state 229
	VarOrLitOrOpStrOrWord	go to state 223
	HashDereference	go to state 236
	HashEntry	go to state 402
	Literal	go to state 217

State 373:

	HashReference -> LBRACE HashEntry STAR-58 '}' .	(Rule 230)

	$default	reduce using rule 230 (HashReference)

State 374:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON . VariableOrLiteral	(Rule 124)

	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105

	Literal	go to state 326
	VariableSymbolOrSelf	go to state 125
	Variable	go to state 324
	VariableOrLiteral	go to state 403

State 375:

	Subroutine -> SUB WORD LBRACE LBRACE MY Type '$RETURN_TYPE' . '}' ';' OPTIONAL-23 STAR-24 '}'	(Rule 60)

	'}'	shift, and go to state 404

State 376:

	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE . OP19_VARIABLE_ASSIGN	(Rule 245)

	OP19_VARIABLE_ASSIGN	shift, and go to state 405

State 377:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN . LBRACE HashEntryProperties STAR-33 '}' ';'	(Rule 81)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN . LBRACE '}' ';'	(Rule 82)

	LBRACE	shift, and go to state 406

State 378:

	STAR-31 -> STAR-31 . SubroutineOrMethod	(Rule 73)
	Class -> UseParent WordScoped ')' ';' Include STAR-27 OPTIONAL-28 STAR-29 STAR-30 Properties STAR-31 . LITERAL_NUMBER ';'	(Rule 75)

	LITERAL_NUMBER	shift, and go to state 408
	SUB	shift, and go to state 407

	SubroutineOrMethod	go to state 410
	Method	go to state 409
	Subroutine	go to state 411

State 379:

	TypeInner -> MY Type '$TYPED_' OpStringOrWord . OP19_VARIABLE_ASSIGN	(Rule 242)

	OP19_VARIABLE_ASSIGN	shift, and go to state 412

State 380:

	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN SubExpressionOrInput ')' CodeBlock	(Rule 190)

	OP19_VARIABLE_ASSIGN	shift, and go to state 413

State 381:

	LoopWhile -> 'while' LPAREN SubExpression ')' . CodeBlock	(Rule 189)

	LBRACE	shift, and go to state 399

	CodeBlock	go to state 414

State 382:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL . LPAREN ListElements ')' CodeBlock	(Rule 188)

	LPAREN	shift, and go to state 415

State 383:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 187)

	OP19_VARIABLE_ASSIGN	shift, and go to state 416

State 384:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL . LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 186)

	LPAREN	shift, and go to state 417

State 385:

	PAREN-52 -> OP21_LIST_COMMA ListElement .	(Rule 206)

	$default	reduce using rule 206 (PAREN-52)

State 386:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-42 ')' .	(Rule 152)

	$default	reduce using rule 152 (Expression)

State 387:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')' .	(Rule 98)

	$default	reduce using rule 98 (Operator)

State 388:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ')'	(Rule 100)

	')'	shift, and go to state 418

State 389:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';' .	(Rule 139)

	$default	reduce using rule 139 (OperatorVoid)

State 390:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExpIn .	(Rule 201)

	$default	reduce using rule 201 (VariableDeclaration)

State 391:

	OpNamedScolonOrSubExpIn -> OP01_NAMED_SCOLON .	(Rule 258)

	$default	reduce using rule 258 (OpNamedScolonOrSubExpIn)

State 392:

	OpNamedScolonOrSubExpIn -> SubExpressionOrInput . ';'	(Rule 260)

	';'	shift, and go to state 419

State 393:

	OpNamedScolonOrSubExpIn -> OP10_NAMED_UNARY_SCOLON .	(Rule 259)

	$default	reduce using rule 259 (OpNamedScolonOrSubExpIn)

State 394:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)
	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression . ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 202)

	']'	shift, and go to state 420
	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246
	OP15_LOGICAL_AND	shift, and go to state 251
	OP16_LOGICAL_OR	shift, and go to state 248
	OP17_LIST_RANGE	shift, and go to state 257
	OP18_TERNARY	shift, and go to state 253
	OP23_LOGICAL_AND	shift, and go to state 244
	OP24_LOGICAL_OR_XOR	shift, and go to state 247

State 395:

	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']' .	(Rule 197)

	$default	reduce using rule 197 (VariableRetrieval)

State 396:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 199)

	$default	reduce using rule 199 (VariableRetrieval)

State 397:

	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}' .	(Rule 198)

	$default	reduce using rule 198 (VariableRetrieval)

State 398:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA . LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 101)

	LITERAL_STRING	shift, and go to state 421

State 399:

	CodeBlock -> LBRACE . PLUS-50 '}'	(Rule 193)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'if'	shift, and go to state 137
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	MY	shift, and go to state 121
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 116
	OP01_NAMED_SCOLON	shift, and go to state 100
	OP01_NAMED_VOID	shift, and go to state 138
	OP01_NAMED_VOID_LPAREN	shift, and go to state 119
	OP01_NAMED_VOID_SCOLON	shift, and go to state 128
	OP01_OPEN	shift, and go to state 133
	OP01_PRINT	shift, and go to state 98
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 142
	OP19_LOOP_CONTROL	shift, and go to state 129
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 131
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 139

	'for'	reduce using rule 170 (OPTIONAL-45)
	'foreach'	reduce using rule 170 (OPTIONAL-45)
	'while'	reduce using rule 170 (OPTIONAL-45)

	Statement	go to state 102
	VariableSymbolOrSelf	go to state 125
	WordScoped	go to state 127
	Operation	go to state 422
	Literal	go to state 122
	ArrayReference	go to state 120
	PLUS-50	go to state 423
	LoopLabel	go to state 95
	Conditional	go to state 112
	SubExpression	go to state 145
	Variable	go to state 114
	VariableModification	go to state 143
	ArrayDereference	go to state 144
	OPTIONAL-45	go to state 109
	PAREN-44	go to state 107
	Expression	go to state 136
	HashDereference	go to state 108
	OperatorVoid	go to state 134
	VariableDeclaration	go to state 106
	Operator	go to state 104
	HashReference	go to state 130

State 400:

	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock . STAR-47 OPTIONAL-49	(Rule 182)

	$default	reduce using rule 178 (STAR-47)

	STAR-47	go to state 424

State 401:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)
	HashEntry -> VarOrLitOrOpStrOrWord OP20_HASH_FATARROW OPTIONAL-56 SubExpression .	(Rule 223)

	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246
	OP15_LOGICAL_AND	shift, and go to state 251
	OP16_LOGICAL_OR	shift, and go to state 248
	OP17_LIST_RANGE	shift, and go to state 257
	OP18_TERNARY	shift, and go to state 253
	OP23_LOGICAL_AND	shift, and go to state 244
	OP24_LOGICAL_OR_XOR	shift, and go to state 247

	'}'	reduce using rule 223 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 223 (HashEntry)

State 402:

	PAREN-57 -> OP21_LIST_COMMA HashEntry .	(Rule 227)

	$default	reduce using rule 227 (PAREN-57)

State 403:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral .	(Rule 124)

	$default	reduce using rule 124 (Operator)

State 404:

	Subroutine -> SUB WORD LBRACE LBRACE MY Type '$RETURN_TYPE' '}' . ';' OPTIONAL-23 STAR-24 '}'	(Rule 60)

	';'	shift, and go to state 425

State 405:

	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN .	(Rule 245)

	$default	reduce using rule 245 (TypeInnerConstant)

State 406:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE . HashEntryProperties STAR-33 '}' ';'	(Rule 81)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE . '}' ';'	(Rule 82)

	'}'	shift, and go to state 426
	OP01_CLOSE	shift, and go to state 237
	OP01_NAMED	shift, and go to state 220
	OP01_NAMED_VOID	shift, and go to state 221
	OP01_OPEN	shift, and go to state 228
	OP01_PRINT	shift, and go to state 235
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 218
	OP07_STRING_REPEAT	shift, and go to state 240
	OP08_MATH_ADD_SUB	shift, and go to state 238
	OP10_NAMED_UNARY	shift, and go to state 234
	OP11_COMPARE_LT_GT	shift, and go to state 232
	OP12_COMPARE_EQ_NE	shift, and go to state 225
	OP19_LOOP_CONTROL	shift, and go to state 226
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 227
	OP22_LOGICAL_NEG	shift, and go to state 224
	OP23_LOGICAL_AND	shift, and go to state 219
	OP24_LOGICAL_OR_XOR	shift, and go to state 216
	WORD	shift, and go to state 233

	OpStringOrWord	go to state 428
	HashEntryProperties	go to state 427

State 407:

	Subroutine -> SUB . WORD LBRACE LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-23 STAR-24 '}'	(Rule 60)
	Method -> SUB . WORD LBRACE LBRACE MY TYPE_METHOD '$RETURN_TYPE' '}' ';' OPTIONAL-34 STAR-35 '}'	(Rule 87)

	WORD	shift, and go to state 429

State 408:

	Class -> UseParent WordScoped ')' ';' Include STAR-27 OPTIONAL-28 STAR-29 STAR-30 Properties STAR-31 LITERAL_NUMBER . ';'	(Rule 75)

	';'	shift, and go to state 430

State 409:

	SubroutineOrMethod -> Method .	(Rule 93)

	$default	reduce using rule 93 (SubroutineOrMethod)

State 410:

	STAR-31 -> STAR-31 SubroutineOrMethod .	(Rule 73)

	$default	reduce using rule 73 (STAR-31)

State 411:

	SubroutineOrMethod -> Subroutine .	(Rule 92)

	$default	reduce using rule 92 (SubroutineOrMethod)

State 412:

	TypeInner -> MY Type '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN .	(Rule 242)

	$default	reduce using rule 242 (TypeInner)

State 413:

	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . SubExpressionOrInput ')' CodeBlock	(Rule 190)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	FHREF_SYMBOL_IN	shift, and go to state 285
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	STDIN	shift, and go to state 287
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	VariableSymbolOrSelf	go to state 125
	Variable	go to state 159
	WordScoped	go to state 127
	SubExpression	go to state 286
	ArrayDereference	go to state 144
	Literal	go to state 122
	HashDereference	go to state 108
	Expression	go to state 157
	SubExpressionOrInput	go to state 431
	ArrayReference	go to state 120
	Operator	go to state 104
	HashReference	go to state 130

State 414:

	LoopWhile -> 'while' LPAREN SubExpression ')' CodeBlock .	(Rule 189)

	$default	reduce using rule 189 (LoopWhile)

State 415:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN . ListElements ')' CodeBlock	(Rule 188)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	ARGV	shift, and go to state 183
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	MY	shift, and go to state 164
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP01_QW	shift, and go to state 181
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	ArrayDereference	go to state 144
	ListElements	go to state 432
	VariableSymbolOrSelf	go to state 125
	Variable	go to state 159
	WordScoped	go to state 127
	SubExpression	go to state 184
	HashDereference	go to state 108
	ArrayReference	go to state 120
	Expression	go to state 157
	Literal	go to state 122
	TypeInner	go to state 185
	ListElement	go to state 182
	HashReference	go to state 130
	Operator	go to state 104

State 416:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 187)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_NAMED_SCOLON	shift, and go to state 433
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 435
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	Literal	go to state 122
	HashDereference	go to state 108
	ArrayReference	go to state 120
	Expression	go to state 157
	WordScoped	go to state 127
	VariableSymbolOrSelf	go to state 125
	Variable	go to state 159
	SubExpression	go to state 436
	ArrayDereference	go to state 144
	Operator	go to state 104
	OpNamedScolonOrSubExp	go to state 434
	HashReference	go to state 130

State 417:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN . SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 186)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	Literal	go to state 122
	HashDereference	go to state 108
	ArrayReference	go to state 120
	Expression	go to state 157
	Variable	go to state 159
	VariableSymbolOrSelf	go to state 125
	WordScoped	go to state 127
	SubExpression	go to state 437
	ArrayDereference	go to state 144
	Operator	go to state 104
	HashReference	go to state 130

State 418:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' .	(Rule 100)

	$default	reduce using rule 100 (Operator)

State 419:

	OpNamedScolonOrSubExpIn -> SubExpressionOrInput ';' .	(Rule 260)

	$default	reduce using rule 260 (OpNamedScolonOrSubExpIn)

State 420:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' . OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 202)

	OP19_VARIABLE_ASSIGN	shift, and go to state 438

State 421:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING . OP21_LIST_COMMA SubExpression	(Rule 101)

	OP21_LIST_COMMA	shift, and go to state 439

State 422:

	PLUS-50 -> Operation .	(Rule 192)

	$default	reduce using rule 192 (PLUS-50)

State 423:

	PLUS-50 -> PLUS-50 . Operation	(Rule 191)
	CodeBlock -> LBRACE PLUS-50 . '}'	(Rule 193)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'if'	shift, and go to state 137
	'undef'	shift, and go to state 126
	'}'	shift, and go to state 440
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	MY	shift, and go to state 121
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 116
	OP01_NAMED_SCOLON	shift, and go to state 100
	OP01_NAMED_VOID	shift, and go to state 138
	OP01_NAMED_VOID_LPAREN	shift, and go to state 119
	OP01_NAMED_VOID_SCOLON	shift, and go to state 128
	OP01_OPEN	shift, and go to state 133
	OP01_PRINT	shift, and go to state 98
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 142
	OP19_LOOP_CONTROL	shift, and go to state 129
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 131
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 139

	'for'	reduce using rule 170 (OPTIONAL-45)
	'foreach'	reduce using rule 170 (OPTIONAL-45)
	'while'	reduce using rule 170 (OPTIONAL-45)

	Operation	go to state 441
	Literal	go to state 122
	ArrayReference	go to state 120
	WordScoped	go to state 127
	VariableSymbolOrSelf	go to state 125
	Statement	go to state 102
	LoopLabel	go to state 95
	OPTIONAL-45	go to state 109
	HashDereference	go to state 108
	PAREN-44	go to state 107
	Expression	go to state 136
	Variable	go to state 114
	SubExpression	go to state 145
	Conditional	go to state 112
	VariableModification	go to state 143
	ArrayDereference	go to state 144
	Operator	go to state 104
	HashReference	go to state 130
	VariableDeclaration	go to state 106
	OperatorVoid	go to state 134

State 424:

	STAR-47 -> STAR-47 . PAREN-46	(Rule 177)
	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-47 . OPTIONAL-49	(Rule 182)

	'else'	shift, and go to state 445
	'elsif'	shift, and go to state 442

	$end	reduce using rule 181 (OPTIONAL-49)
	'%{'	reduce using rule 181 (OPTIONAL-49)
	'@{'	reduce using rule 181 (OPTIONAL-49)
	'for'	reduce using rule 181 (OPTIONAL-49)
	'foreach'	reduce using rule 181 (OPTIONAL-49)
	'if'	reduce using rule 181 (OPTIONAL-49)
	'undef'	reduce using rule 181 (OPTIONAL-49)
	'while'	reduce using rule 181 (OPTIONAL-49)
	'}'	reduce using rule 181 (OPTIONAL-49)
	CONSTANT_CALL_SCOPED	reduce using rule 181 (OPTIONAL-49)
	LBRACE	reduce using rule 181 (OPTIONAL-49)
	LBRACKET	reduce using rule 181 (OPTIONAL-49)
	LITERAL_NUMBER	reduce using rule 181 (OPTIONAL-49)
	LITERAL_STRING	reduce using rule 181 (OPTIONAL-49)
	LPAREN	reduce using rule 181 (OPTIONAL-49)
	MY	reduce using rule 181 (OPTIONAL-49)
	OP01_CLOSE	reduce using rule 181 (OPTIONAL-49)
	OP01_NAMED	reduce using rule 181 (OPTIONAL-49)
	OP01_NAMED_SCOLON	reduce using rule 181 (OPTIONAL-49)
	OP01_NAMED_VOID	reduce using rule 181 (OPTIONAL-49)
	OP01_NAMED_VOID_LPAREN	reduce using rule 181 (OPTIONAL-49)
	OP01_NAMED_VOID_SCOLON	reduce using rule 181 (OPTIONAL-49)
	OP01_OPEN	reduce using rule 181 (OPTIONAL-49)
	OP01_PRINT	reduce using rule 181 (OPTIONAL-49)
	OP03_MATH_INC_DEC	reduce using rule 181 (OPTIONAL-49)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 181 (OPTIONAL-49)
	OP05_LOGICAL_NEG	reduce using rule 181 (OPTIONAL-49)
	OP05_MATH_NEG_LPAREN	reduce using rule 181 (OPTIONAL-49)
	OP10_NAMED_UNARY	reduce using rule 181 (OPTIONAL-49)
	OP10_NAMED_UNARY_SCOLON	reduce using rule 181 (OPTIONAL-49)
	OP19_LOOP_CONTROL	reduce using rule 181 (OPTIONAL-49)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 181 (OPTIONAL-49)
	OP22_LOGICAL_NEG	reduce using rule 181 (OPTIONAL-49)
	OP22_LOGICAL_NEG_LPAREN	reduce using rule 181 (OPTIONAL-49)
	SELF	reduce using rule 181 (OPTIONAL-49)
	VARIABLE_SYMBOL	reduce using rule 181 (OPTIONAL-49)
	WORD	reduce using rule 181 (OPTIONAL-49)
	WORD_SCOPED	reduce using rule 181 (OPTIONAL-49)
	WORD_UPPERCASE	reduce using rule 181 (OPTIONAL-49)

	OPTIONAL-49	go to state 443
	PAREN-46	go to state 444
	PAREN-48	go to state 446

State 425:

	Subroutine -> SUB WORD LBRACE LBRACE MY Type '$RETURN_TYPE' '}' ';' . OPTIONAL-23 STAR-24 '}'	(Rule 60)

	LPAREN_MY	shift, and go to state 448

	'%{'	reduce using rule 57 (OPTIONAL-23)
	'@{'	reduce using rule 57 (OPTIONAL-23)
	'for'	reduce using rule 57 (OPTIONAL-23)
	'foreach'	reduce using rule 57 (OPTIONAL-23)
	'if'	reduce using rule 57 (OPTIONAL-23)
	'undef'	reduce using rule 57 (OPTIONAL-23)
	'while'	reduce using rule 57 (OPTIONAL-23)
	'}'	reduce using rule 57 (OPTIONAL-23)
	CONSTANT_CALL_SCOPED	reduce using rule 57 (OPTIONAL-23)
	LBRACE	reduce using rule 57 (OPTIONAL-23)
	LBRACKET	reduce using rule 57 (OPTIONAL-23)
	LITERAL_NUMBER	reduce using rule 57 (OPTIONAL-23)
	LITERAL_STRING	reduce using rule 57 (OPTIONAL-23)
	LPAREN	reduce using rule 57 (OPTIONAL-23)
	MY	reduce using rule 57 (OPTIONAL-23)
	OP01_CLOSE	reduce using rule 57 (OPTIONAL-23)
	OP01_NAMED	reduce using rule 57 (OPTIONAL-23)
	OP01_NAMED_SCOLON	reduce using rule 57 (OPTIONAL-23)
	OP01_NAMED_VOID	reduce using rule 57 (OPTIONAL-23)
	OP01_NAMED_VOID_LPAREN	reduce using rule 57 (OPTIONAL-23)
	OP01_NAMED_VOID_SCOLON	reduce using rule 57 (OPTIONAL-23)
	OP01_OPEN	reduce using rule 57 (OPTIONAL-23)
	OP01_PRINT	reduce using rule 57 (OPTIONAL-23)
	OP03_MATH_INC_DEC	reduce using rule 57 (OPTIONAL-23)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 57 (OPTIONAL-23)
	OP05_LOGICAL_NEG	reduce using rule 57 (OPTIONAL-23)
	OP05_MATH_NEG_LPAREN	reduce using rule 57 (OPTIONAL-23)
	OP10_NAMED_UNARY	reduce using rule 57 (OPTIONAL-23)
	OP10_NAMED_UNARY_SCOLON	reduce using rule 57 (OPTIONAL-23)
	OP19_LOOP_CONTROL	reduce using rule 57 (OPTIONAL-23)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 57 (OPTIONAL-23)
	OP22_LOGICAL_NEG	reduce using rule 57 (OPTIONAL-23)
	OP22_LOGICAL_NEG_LPAREN	reduce using rule 57 (OPTIONAL-23)
	SELF	reduce using rule 57 (OPTIONAL-23)
	VARIABLE_SYMBOL	reduce using rule 57 (OPTIONAL-23)
	WORD	reduce using rule 57 (OPTIONAL-23)
	WORD_SCOPED	reduce using rule 57 (OPTIONAL-23)
	WORD_UPPERCASE	reduce using rule 57 (OPTIONAL-23)

	OPTIONAL-23	go to state 449
	SubroutineArguments	go to state 447

State 426:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' . ';'	(Rule 82)

	';'	shift, and go to state 450

State 427:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties . STAR-33 '}' ';'	(Rule 81)

	$default	reduce using rule 80 (STAR-33)

	STAR-33	go to state 451

State 428:

	HashEntryProperties -> OpStringOrWord . OP20_HASH_FATARROW TypeInnerProperties	(Rule 226)

	OP20_HASH_FATARROW	shift, and go to state 452

State 429:

	Subroutine -> SUB WORD . LBRACE LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-23 STAR-24 '}'	(Rule 60)
	Method -> SUB WORD . LBRACE LBRACE MY TYPE_METHOD '$RETURN_TYPE' '}' ';' OPTIONAL-34 STAR-35 '}'	(Rule 87)

	LBRACE	shift, and go to state 453

State 430:

	Class -> UseParent WordScoped ')' ';' Include STAR-27 OPTIONAL-28 STAR-29 STAR-30 Properties STAR-31 LITERAL_NUMBER ';' .	(Rule 75)

	$default	reduce using rule 75 (Class)

State 431:

	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrInput . ')' CodeBlock	(Rule 190)

	')'	shift, and go to state 454

State 432:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements . ')' CodeBlock	(Rule 188)

	')'	shift, and go to state 455

State 433:

	OpNamedScolonOrSubExp -> OP01_NAMED_SCOLON .	(Rule 255)

	$default	reduce using rule 255 (OpNamedScolonOrSubExp)

State 434:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp . VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 187)

	VARIABLE_SYMBOL	shift, and go to state 456

State 435:

	OpNamedScolonOrSubExp -> OP10_NAMED_UNARY_SCOLON .	(Rule 256)

	$default	reduce using rule 256 (OpNamedScolonOrSubExp)

State 436:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)
	OpNamedScolonOrSubExp -> SubExpression . ';'	(Rule 257)

	';'	shift, and go to state 457
	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246
	OP15_LOGICAL_AND	shift, and go to state 251
	OP16_LOGICAL_OR	shift, and go to state 248
	OP17_LIST_RANGE	shift, and go to state 257
	OP18_TERNARY	shift, and go to state 253
	OP23_LOGICAL_AND	shift, and go to state 244
	OP24_LOGICAL_OR_XOR	shift, and go to state 247

State 437:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression . OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 186)

	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246
	OP15_LOGICAL_AND	shift, and go to state 251
	OP16_LOGICAL_OR	shift, and go to state 248
	OP17_LIST_RANGE	shift, and go to state 458
	OP18_TERNARY	shift, and go to state 253
	OP23_LOGICAL_AND	shift, and go to state 244
	OP24_LOGICAL_OR_XOR	shift, and go to state 247

State 438:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN . 'undef' ';'	(Rule 202)

	'undef'	shift, and go to state 459

State 439:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA . SubExpression	(Rule 101)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	Operator	go to state 104
	HashReference	go to state 130
	VariableSymbolOrSelf	go to state 125
	WordScoped	go to state 127
	Variable	go to state 159
	SubExpression	go to state 460
	ArrayDereference	go to state 144
	Literal	go to state 122
	HashDereference	go to state 108
	ArrayReference	go to state 120
	Expression	go to state 157

State 440:

	CodeBlock -> LBRACE PLUS-50 '}' .	(Rule 193)

	$default	reduce using rule 193 (CodeBlock)

State 441:

	PLUS-50 -> PLUS-50 Operation .	(Rule 191)

	$default	reduce using rule 191 (PLUS-50)

State 442:

	PAREN-46 -> 'elsif' . LPAREN SubExpression ')' CodeBlock	(Rule 176)

	LPAREN	shift, and go to state 461

State 443:

	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-47 OPTIONAL-49 .	(Rule 182)

	$default	reduce using rule 182 (Conditional)

State 444:

	STAR-47 -> STAR-47 PAREN-46 .	(Rule 177)

	$default	reduce using rule 177 (STAR-47)

State 445:

	PAREN-48 -> 'else' . CodeBlock	(Rule 179)

	LBRACE	shift, and go to state 399

	CodeBlock	go to state 462

State 446:

	OPTIONAL-49 -> PAREN-48 .	(Rule 180)

	$default	reduce using rule 180 (OPTIONAL-49)

State 447:

	OPTIONAL-23 -> SubroutineArguments .	(Rule 56)

	$default	reduce using rule 56 (OPTIONAL-23)

State 448:

	SubroutineArguments -> LPAREN_MY . Type VARIABLE_SYMBOL STAR-26 ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 64)

	TYPE_INTEGER	shift, and go to state 205
	WORD	shift, and go to state 204
	WORD_SCOPED	shift, and go to state 202

	Type	go to state 463

State 449:

	Subroutine -> SUB WORD LBRACE LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-23 . STAR-24 '}'	(Rule 60)

	$default	reduce using rule 59 (STAR-24)

	STAR-24	go to state 464

State 450:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';' .	(Rule 82)

	$default	reduce using rule 82 (Properties)

State 451:

	STAR-33 -> STAR-33 . PAREN-32	(Rule 79)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-33 . '}' ';'	(Rule 81)

	'}'	shift, and go to state 465
	OP21_LIST_COMMA	shift, and go to state 467

	PAREN-32	go to state 466

State 452:

	HashEntryProperties -> OpStringOrWord OP20_HASH_FATARROW . TypeInnerProperties	(Rule 226)

	MY	shift, and go to state 469

	TypeInnerProperties	go to state 468

State 453:

	Subroutine -> SUB WORD LBRACE . LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-23 STAR-24 '}'	(Rule 60)
	Method -> SUB WORD LBRACE . LBRACE MY TYPE_METHOD '$RETURN_TYPE' '}' ';' OPTIONAL-34 STAR-35 '}'	(Rule 87)

	LBRACE	shift, and go to state 470

State 454:

	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrInput ')' . CodeBlock	(Rule 190)

	LBRACE	shift, and go to state 399

	CodeBlock	go to state 471

State 455:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' . CodeBlock	(Rule 188)

	LBRACE	shift, and go to state 399

	CodeBlock	go to state 472

State 456:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL . OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 187)

	OP11_COMPARE_LT_GT	shift, and go to state 473

State 457:

	OpNamedScolonOrSubExp -> SubExpression ';' .	(Rule 257)

	$default	reduce using rule 257 (OpNamedScolonOrSubExp)

State 458:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 123)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE . SubExpression ')' CodeBlock	(Rule 186)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	HashDereference	go to state 108
	ArrayReference	go to state 120
	Expression	go to state 157
	Literal	go to state 122
	ArrayDereference	go to state 144
	VariableSymbolOrSelf	go to state 125
	WordScoped	go to state 127
	Variable	go to state 159
	SubExpression	go to state 474
	HashReference	go to state 130
	Operator	go to state 104

State 459:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' . ';'	(Rule 202)

	';'	shift, and go to state 475

State 460:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression .	(Rule 101)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)

	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246
	OP15_LOGICAL_AND	shift, and go to state 251
	OP16_LOGICAL_OR	shift, and go to state 248
	OP17_LIST_RANGE	shift, and go to state 257
	OP18_TERNARY	shift, and go to state 253

	')'	reduce using rule 101 (Operator)
	';'	reduce using rule 101 (Operator)
	']'	reduce using rule 101 (Operator)
	'}'	reduce using rule 101 (Operator)
	OP21_LIST_COMMA	reduce using rule 101 (Operator)
	OP23_LOGICAL_AND	reduce using rule 101 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 101 (Operator)

State 461:

	PAREN-46 -> 'elsif' LPAREN . SubExpression ')' CodeBlock	(Rule 176)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	Variable	go to state 159
	WordScoped	go to state 127
	VariableSymbolOrSelf	go to state 125
	SubExpression	go to state 476
	ArrayDereference	go to state 144
	Literal	go to state 122
	HashDereference	go to state 108
	ArrayReference	go to state 120
	Expression	go to state 157
	Operator	go to state 104
	HashReference	go to state 130

State 462:

	PAREN-48 -> 'else' CodeBlock .	(Rule 179)

	$default	reduce using rule 179 (PAREN-48)

State 463:

	SubroutineArguments -> LPAREN_MY Type . VARIABLE_SYMBOL STAR-26 ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 64)

	VARIABLE_SYMBOL	shift, and go to state 477

State 464:

	STAR-24 -> STAR-24 . Operation	(Rule 58)
	Subroutine -> SUB WORD LBRACE LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-23 STAR-24 . '}'	(Rule 60)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'if'	shift, and go to state 137
	'undef'	shift, and go to state 126
	'}'	shift, and go to state 478
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	MY	shift, and go to state 121
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 116
	OP01_NAMED_SCOLON	shift, and go to state 100
	OP01_NAMED_VOID	shift, and go to state 138
	OP01_NAMED_VOID_LPAREN	shift, and go to state 119
	OP01_NAMED_VOID_SCOLON	shift, and go to state 128
	OP01_OPEN	shift, and go to state 133
	OP01_PRINT	shift, and go to state 98
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 142
	OP19_LOOP_CONTROL	shift, and go to state 129
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 131
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 139

	'for'	reduce using rule 170 (OPTIONAL-45)
	'foreach'	reduce using rule 170 (OPTIONAL-45)
	'while'	reduce using rule 170 (OPTIONAL-45)

	OperatorVoid	go to state 134
	VariableDeclaration	go to state 106
	HashReference	go to state 130
	Operator	go to state 104
	ArrayDereference	go to state 144
	VariableModification	go to state 143
	Conditional	go to state 112
	SubExpression	go to state 145
	Variable	go to state 114
	PAREN-44	go to state 107
	Expression	go to state 136
	HashDereference	go to state 108
	OPTIONAL-45	go to state 109
	LoopLabel	go to state 95
	Statement	go to state 102
	WordScoped	go to state 127
	VariableSymbolOrSelf	go to state 125
	ArrayReference	go to state 120
	Literal	go to state 122
	Operation	go to state 479

State 465:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-33 '}' . ';'	(Rule 81)

	';'	shift, and go to state 480

State 466:

	STAR-33 -> STAR-33 PAREN-32 .	(Rule 79)

	$default	reduce using rule 79 (STAR-33)

State 467:

	PAREN-32 -> OP21_LIST_COMMA . HashEntryProperties	(Rule 78)

	OP01_CLOSE	shift, and go to state 237
	OP01_NAMED	shift, and go to state 220
	OP01_NAMED_VOID	shift, and go to state 221
	OP01_OPEN	shift, and go to state 228
	OP01_PRINT	shift, and go to state 235
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 218
	OP07_STRING_REPEAT	shift, and go to state 240
	OP08_MATH_ADD_SUB	shift, and go to state 238
	OP10_NAMED_UNARY	shift, and go to state 234
	OP11_COMPARE_LT_GT	shift, and go to state 232
	OP12_COMPARE_EQ_NE	shift, and go to state 225
	OP19_LOOP_CONTROL	shift, and go to state 226
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 227
	OP22_LOGICAL_NEG	shift, and go to state 224
	OP23_LOGICAL_AND	shift, and go to state 219
	OP24_LOGICAL_OR_XOR	shift, and go to state 216
	WORD	shift, and go to state 233

	OpStringOrWord	go to state 428
	HashEntryProperties	go to state 481

State 468:

	HashEntryProperties -> OpStringOrWord OP20_HASH_FATARROW TypeInnerProperties .	(Rule 226)

	$default	reduce using rule 226 (HashEntryProperties)

State 469:

	TypeInnerProperties -> MY . Type '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN SubExpression	(Rule 243)
	TypeInnerProperties -> MY . Type '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 244)

	TYPE_INTEGER	shift, and go to state 205
	WORD	shift, and go to state 204
	WORD_SCOPED	shift, and go to state 202

	Type	go to state 482

State 470:

	Subroutine -> SUB WORD LBRACE LBRACE . MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-23 STAR-24 '}'	(Rule 60)
	Method -> SUB WORD LBRACE LBRACE . MY TYPE_METHOD '$RETURN_TYPE' '}' ';' OPTIONAL-34 STAR-35 '}'	(Rule 87)

	MY	shift, and go to state 483

State 471:

	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrInput ')' CodeBlock .	(Rule 190)

	$default	reduce using rule 190 (LoopWhile)

State 472:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock .	(Rule 188)

	$default	reduce using rule 188 (LoopForEach)

State 473:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT . OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 187)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_NAMED_SCOLON	shift, and go to state 433
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 435
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	ArrayDereference	go to state 144
	Variable	go to state 159
	WordScoped	go to state 127
	VariableSymbolOrSelf	go to state 125
	SubExpression	go to state 436
	HashDereference	go to state 108
	ArrayReference	go to state 120
	Expression	go to state 157
	Literal	go to state 122
	HashReference	go to state 130
	OpNamedScolonOrSubExp	go to state 484
	Operator	go to state 104

State 474:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression . ')' CodeBlock	(Rule 186)

	')'	shift, and go to state 485
	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246
	OP15_LOGICAL_AND	shift, and go to state 251
	OP16_LOGICAL_OR	shift, and go to state 248

	OP17_LIST_RANGE	error (nonassociative)

	OP18_TERNARY	reduce using rule 123 (Operator)
	OP23_LOGICAL_AND	reduce using rule 123 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 123 (Operator)

State 475:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';' .	(Rule 202)

	$default	reduce using rule 202 (VariableDeclaration)

State 476:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)
	PAREN-46 -> 'elsif' LPAREN SubExpression . ')' CodeBlock	(Rule 176)

	')'	shift, and go to state 486
	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246
	OP15_LOGICAL_AND	shift, and go to state 251
	OP16_LOGICAL_OR	shift, and go to state 248
	OP17_LIST_RANGE	shift, and go to state 257
	OP18_TERNARY	shift, and go to state 253
	OP23_LOGICAL_AND	shift, and go to state 244
	OP24_LOGICAL_OR_XOR	shift, and go to state 247

State 477:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL . STAR-26 ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 64)

	$default	reduce using rule 63 (STAR-26)

	STAR-26	go to state 487

State 478:

	Subroutine -> SUB WORD LBRACE LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-23 STAR-24 '}' .	(Rule 60)

	$default	reduce using rule 60 (Subroutine)

State 479:

	STAR-24 -> STAR-24 Operation .	(Rule 58)

	$default	reduce using rule 58 (STAR-24)

State 480:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-33 '}' ';' .	(Rule 81)

	$default	reduce using rule 81 (Properties)

State 481:

	PAREN-32 -> OP21_LIST_COMMA HashEntryProperties .	(Rule 78)

	$default	reduce using rule 78 (PAREN-32)

State 482:

	TypeInnerProperties -> MY Type . '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN SubExpression	(Rule 243)
	TypeInnerProperties -> MY Type . '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 244)

	'$TYPED_'	shift, and go to state 488

State 483:

	Subroutine -> SUB WORD LBRACE LBRACE MY . Type '$RETURN_TYPE' '}' ';' OPTIONAL-23 STAR-24 '}'	(Rule 60)
	Method -> SUB WORD LBRACE LBRACE MY . TYPE_METHOD '$RETURN_TYPE' '}' ';' OPTIONAL-34 STAR-35 '}'	(Rule 87)

	TYPE_INTEGER	shift, and go to state 205
	TYPE_METHOD	shift, and go to state 489
	WORD	shift, and go to state 204
	WORD_SCOPED	shift, and go to state 202

	Type	go to state 333

State 484:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp . SubExpressionOrVarMod ')' CodeBlock	(Rule 187)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	SubExpressionOrVarMod	go to state 492
	Operator	go to state 104
	HashReference	go to state 130
	SubExpression	go to state 491
	Variable	go to state 114
	WordScoped	go to state 127
	VariableSymbolOrSelf	go to state 125
	ArrayDereference	go to state 144
	VariableModification	go to state 490
	Literal	go to state 122
	ArrayReference	go to state 120
	Expression	go to state 157
	HashDereference	go to state 108

State 485:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' . CodeBlock	(Rule 186)

	LBRACE	shift, and go to state 399

	CodeBlock	go to state 493

State 486:

	PAREN-46 -> 'elsif' LPAREN SubExpression ')' . CodeBlock	(Rule 176)

	LBRACE	shift, and go to state 399

	CodeBlock	go to state 494

State 487:

	STAR-26 -> STAR-26 . PAREN-25	(Rule 62)
	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-26 . ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 64)

	')'	shift, and go to state 496
	OP21_LIST_COMMA	shift, and go to state 495

	PAREN-25	go to state 497

State 488:

	TypeInnerProperties -> MY Type '$TYPED_' . OpStringOrWord OP19_VARIABLE_ASSIGN SubExpression	(Rule 243)
	TypeInnerProperties -> MY Type '$TYPED_' . OpStringOrWord OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 244)

	OP01_CLOSE	shift, and go to state 237
	OP01_NAMED	shift, and go to state 220
	OP01_NAMED_VOID	shift, and go to state 221
	OP01_OPEN	shift, and go to state 228
	OP01_PRINT	shift, and go to state 235
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 218
	OP07_STRING_REPEAT	shift, and go to state 240
	OP08_MATH_ADD_SUB	shift, and go to state 238
	OP10_NAMED_UNARY	shift, and go to state 234
	OP11_COMPARE_LT_GT	shift, and go to state 232
	OP12_COMPARE_EQ_NE	shift, and go to state 225
	OP19_LOOP_CONTROL	shift, and go to state 226
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 227
	OP22_LOGICAL_NEG	shift, and go to state 224
	OP23_LOGICAL_AND	shift, and go to state 219
	OP24_LOGICAL_OR_XOR	shift, and go to state 216
	WORD	shift, and go to state 233

	OpStringOrWord	go to state 498

State 489:

	Method -> SUB WORD LBRACE LBRACE MY TYPE_METHOD . '$RETURN_TYPE' '}' ';' OPTIONAL-34 STAR-35 '}'	(Rule 87)

	'$RETURN_TYPE'	shift, and go to state 499

State 490:

	SubExpressionOrVarMod -> VariableModification .	(Rule 167)

	$default	reduce using rule 167 (SubExpressionOrVarMod)

State 491:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)
	SubExpressionOrVarMod -> SubExpression .	(Rule 166)

	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246
	OP15_LOGICAL_AND	shift, and go to state 251
	OP16_LOGICAL_OR	shift, and go to state 248
	OP17_LIST_RANGE	shift, and go to state 257
	OP18_TERNARY	shift, and go to state 253
	OP23_LOGICAL_AND	shift, and go to state 244
	OP24_LOGICAL_OR_XOR	shift, and go to state 247

	')'	reduce using rule 166 (SubExpressionOrVarMod)

State 492:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod . ')' CodeBlock	(Rule 187)

	')'	shift, and go to state 500

State 493:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock .	(Rule 186)

	$default	reduce using rule 186 (LoopFor)

State 494:

	PAREN-46 -> 'elsif' LPAREN SubExpression ')' CodeBlock .	(Rule 176)

	$default	reduce using rule 176 (PAREN-46)

State 495:

	PAREN-25 -> OP21_LIST_COMMA . MY Type VARIABLE_SYMBOL	(Rule 61)

	MY	shift, and go to state 501

State 496:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-26 ')' . OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 64)

	OP19_VARIABLE_ASSIGN	shift, and go to state 502

State 497:

	STAR-26 -> STAR-26 PAREN-25 .	(Rule 62)

	$default	reduce using rule 62 (STAR-26)

State 498:

	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord . OP19_VARIABLE_ASSIGN SubExpression	(Rule 243)
	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord . OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 244)

	OP02_ARRAY_THINARROW	shift, and go to state 504
	OP19_VARIABLE_ASSIGN	shift, and go to state 503

State 499:

	Method -> SUB WORD LBRACE LBRACE MY TYPE_METHOD '$RETURN_TYPE' . '}' ';' OPTIONAL-34 STAR-35 '}'	(Rule 87)

	'}'	shift, and go to state 505

State 500:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' . CodeBlock	(Rule 187)

	LBRACE	shift, and go to state 399

	CodeBlock	go to state 506

State 501:

	PAREN-25 -> OP21_LIST_COMMA MY . Type VARIABLE_SYMBOL	(Rule 61)

	TYPE_INTEGER	shift, and go to state 205
	WORD	shift, and go to state 204
	WORD_SCOPED	shift, and go to state 202

	Type	go to state 507

State 502:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-26 ')' OP19_VARIABLE_ASSIGN . '@ARG;'	(Rule 64)

	'@ARG;'	shift, and go to state 508

State 503:

	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN . SubExpression	(Rule 243)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	HashReference	go to state 130
	Operator	go to state 104
	HashDereference	go to state 108
	Expression	go to state 157
	ArrayReference	go to state 120
	Literal	go to state 122
	ArrayDereference	go to state 144
	Variable	go to state 159
	WordScoped	go to state 127
	VariableSymbolOrSelf	go to state 125
	SubExpression	go to state 509

State 504:

	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW . SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 244)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 126
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 155
	OP01_OPEN	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 156

	Operator	go to state 104
	HashReference	go to state 130
	SubExpression	go to state 510
	WordScoped	go to state 127
	Variable	go to state 159
	VariableSymbolOrSelf	go to state 125
	ArrayDereference	go to state 144
	Literal	go to state 122
	Expression	go to state 157
	ArrayReference	go to state 120
	HashDereference	go to state 108

State 505:

	Method -> SUB WORD LBRACE LBRACE MY TYPE_METHOD '$RETURN_TYPE' '}' . ';' OPTIONAL-34 STAR-35 '}'	(Rule 87)

	';'	shift, and go to state 511

State 506:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock .	(Rule 187)

	$default	reduce using rule 187 (LoopFor)

State 507:

	PAREN-25 -> OP21_LIST_COMMA MY Type . VARIABLE_SYMBOL	(Rule 61)

	VARIABLE_SYMBOL	shift, and go to state 512

State 508:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-26 ')' OP19_VARIABLE_ASSIGN '@ARG;' .	(Rule 64)

	$default	reduce using rule 64 (SubroutineArguments)

State 509:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)
	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN SubExpression .	(Rule 243)

	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246
	OP15_LOGICAL_AND	shift, and go to state 251
	OP16_LOGICAL_OR	shift, and go to state 248
	OP17_LIST_RANGE	shift, and go to state 257
	OP18_TERNARY	shift, and go to state 253
	OP23_LOGICAL_AND	shift, and go to state 244
	OP24_LOGICAL_OR_XOR	shift, and go to state 247

	'}'	reduce using rule 243 (TypeInnerProperties)
	OP21_LIST_COMMA	reduce using rule 243 (TypeInnerProperties)

State 510:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 105)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 109)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 110)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 111)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 112)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 113)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 114)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 117)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 118)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 119)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 120)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 121)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 122)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 123)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 124)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 127)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 128)
	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW SubExpression . ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 244)

	']'	shift, and go to state 513
	OP04_MATH_POW	shift, and go to state 249
	OP06_REGEX_BIND	shift, and go to state 256
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 243
	OP07_STRING_REPEAT	shift, and go to state 259
	OP08_MATH_ADD_SUB	shift, and go to state 255
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 254
	OP11_COMPARE_LT_GT	shift, and go to state 252
	OP12_COMPARE_EQ_NE	shift, and go to state 250
	OP13_BITWISE_AND	shift, and go to state 258
	OP14_BITWISE_OR_XOR	shift, and go to state 246
	OP15_LOGICAL_AND	shift, and go to state 251
	OP16_LOGICAL_OR	shift, and go to state 248
	OP17_LIST_RANGE	shift, and go to state 257
	OP18_TERNARY	shift, and go to state 253
	OP23_LOGICAL_AND	shift, and go to state 244
	OP24_LOGICAL_OR_XOR	shift, and go to state 247

State 511:

	Method -> SUB WORD LBRACE LBRACE MY TYPE_METHOD '$RETURN_TYPE' '}' ';' . OPTIONAL-34 STAR-35 '}'	(Rule 87)

	LPAREN_MY	shift, and go to state 514

	'%{'	reduce using rule 84 (OPTIONAL-34)
	'@{'	reduce using rule 84 (OPTIONAL-34)
	'for'	reduce using rule 84 (OPTIONAL-34)
	'foreach'	reduce using rule 84 (OPTIONAL-34)
	'if'	reduce using rule 84 (OPTIONAL-34)
	'undef'	reduce using rule 84 (OPTIONAL-34)
	'while'	reduce using rule 84 (OPTIONAL-34)
	'}'	reduce using rule 84 (OPTIONAL-34)
	CONSTANT_CALL_SCOPED	reduce using rule 84 (OPTIONAL-34)
	LBRACE	reduce using rule 84 (OPTIONAL-34)
	LBRACKET	reduce using rule 84 (OPTIONAL-34)
	LITERAL_NUMBER	reduce using rule 84 (OPTIONAL-34)
	LITERAL_STRING	reduce using rule 84 (OPTIONAL-34)
	LPAREN	reduce using rule 84 (OPTIONAL-34)
	MY	reduce using rule 84 (OPTIONAL-34)
	OP01_CLOSE	reduce using rule 84 (OPTIONAL-34)
	OP01_NAMED	reduce using rule 84 (OPTIONAL-34)
	OP01_NAMED_SCOLON	reduce using rule 84 (OPTIONAL-34)
	OP01_NAMED_VOID	reduce using rule 84 (OPTIONAL-34)
	OP01_NAMED_VOID_LPAREN	reduce using rule 84 (OPTIONAL-34)
	OP01_NAMED_VOID_SCOLON	reduce using rule 84 (OPTIONAL-34)
	OP01_OPEN	reduce using rule 84 (OPTIONAL-34)
	OP01_PRINT	reduce using rule 84 (OPTIONAL-34)
	OP03_MATH_INC_DEC	reduce using rule 84 (OPTIONAL-34)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 84 (OPTIONAL-34)
	OP05_LOGICAL_NEG	reduce using rule 84 (OPTIONAL-34)
	OP05_MATH_NEG_LPAREN	reduce using rule 84 (OPTIONAL-34)
	OP10_NAMED_UNARY	reduce using rule 84 (OPTIONAL-34)
	OP10_NAMED_UNARY_SCOLON	reduce using rule 84 (OPTIONAL-34)
	OP19_LOOP_CONTROL	reduce using rule 84 (OPTIONAL-34)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 84 (OPTIONAL-34)
	OP22_LOGICAL_NEG	reduce using rule 84 (OPTIONAL-34)
	OP22_LOGICAL_NEG_LPAREN	reduce using rule 84 (OPTIONAL-34)
	SELF	reduce using rule 84 (OPTIONAL-34)
	VARIABLE_SYMBOL	reduce using rule 84 (OPTIONAL-34)
	WORD	reduce using rule 84 (OPTIONAL-34)
	WORD_SCOPED	reduce using rule 84 (OPTIONAL-34)
	WORD_UPPERCASE	reduce using rule 84 (OPTIONAL-34)

	OPTIONAL-34	go to state 516
	MethodArguments	go to state 515

State 512:

	PAREN-25 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL .	(Rule 61)

	$default	reduce using rule 61 (PAREN-25)

State 513:

	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW SubExpression ']' . OP19_VARIABLE_ASSIGN 'undef'	(Rule 244)

	OP19_VARIABLE_ASSIGN	shift, and go to state 517

State 514:

	MethodArguments -> LPAREN_MY . Type SELF STAR-37 ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 91)

	TYPE_INTEGER	shift, and go to state 205
	WORD	shift, and go to state 204
	WORD_SCOPED	shift, and go to state 202

	Type	go to state 518

State 515:

	OPTIONAL-34 -> MethodArguments .	(Rule 83)

	$default	reduce using rule 83 (OPTIONAL-34)

State 516:

	Method -> SUB WORD LBRACE LBRACE MY TYPE_METHOD '$RETURN_TYPE' '}' ';' OPTIONAL-34 . STAR-35 '}'	(Rule 87)

	$default	reduce using rule 86 (STAR-35)

	STAR-35	go to state 519

State 517:

	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN . 'undef'	(Rule 244)

	'undef'	shift, and go to state 520

State 518:

	MethodArguments -> LPAREN_MY Type . SELF STAR-37 ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 91)

	SELF	shift, and go to state 521

State 519:

	STAR-35 -> STAR-35 . Operation	(Rule 85)
	Method -> SUB WORD LBRACE LBRACE MY TYPE_METHOD '$RETURN_TYPE' '}' ';' OPTIONAL-34 STAR-35 . '}'	(Rule 87)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 99
	'if'	shift, and go to state 137
	'undef'	shift, and go to state 126
	'}'	shift, and go to state 523
	CONSTANT_CALL_SCOPED	shift, and go to state 123
	LBRACE	shift, and go to state 140
	LBRACKET	shift, and go to state 113
	LITERAL_NUMBER	shift, and go to state 135
	LITERAL_STRING	shift, and go to state 147
	LPAREN	shift, and go to state 115
	MY	shift, and go to state 121
	OP01_CLOSE	shift, and go to state 111
	OP01_NAMED	shift, and go to state 116
	OP01_NAMED_SCOLON	shift, and go to state 100
	OP01_NAMED_VOID	shift, and go to state 138
	OP01_NAMED_VOID_LPAREN	shift, and go to state 119
	OP01_NAMED_VOID_SCOLON	shift, and go to state 128
	OP01_OPEN	shift, and go to state 133
	OP01_PRINT	shift, and go to state 98
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 141
	OP05_LOGICAL_NEG	shift, and go to state 148
	OP05_MATH_NEG_LPAREN	shift, and go to state 110
	OP10_NAMED_UNARY	shift, and go to state 96
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 142
	OP19_LOOP_CONTROL	shift, and go to state 129
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 131
	OP22_LOGICAL_NEG	shift, and go to state 146
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 117
	SELF	shift, and go to state 132
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 34
	WORD_SCOPED	shift, and go to state 32
	WORD_UPPERCASE	shift, and go to state 139

	'for'	reduce using rule 170 (OPTIONAL-45)
	'foreach'	reduce using rule 170 (OPTIONAL-45)
	'while'	reduce using rule 170 (OPTIONAL-45)

	LoopLabel	go to state 95
	ArrayReference	go to state 120
	Operation	go to state 522
	Literal	go to state 122
	WordScoped	go to state 127
	VariableSymbolOrSelf	go to state 125
	Statement	go to state 102
	HashReference	go to state 130
	Operator	go to state 104
	VariableDeclaration	go to state 106
	OperatorVoid	go to state 134
	HashDereference	go to state 108
	PAREN-44	go to state 107
	Expression	go to state 136
	OPTIONAL-45	go to state 109
	ArrayDereference	go to state 144
	VariableModification	go to state 143
	Variable	go to state 114
	SubExpression	go to state 145
	Conditional	go to state 112

State 520:

	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' .	(Rule 244)

	$default	reduce using rule 244 (TypeInnerProperties)

State 521:

	MethodArguments -> LPAREN_MY Type SELF . STAR-37 ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 91)

	$default	reduce using rule 90 (STAR-37)

	STAR-37	go to state 524

State 522:

	STAR-35 -> STAR-35 Operation .	(Rule 85)

	$default	reduce using rule 85 (STAR-35)

State 523:

	Method -> SUB WORD LBRACE LBRACE MY TYPE_METHOD '$RETURN_TYPE' '}' ';' OPTIONAL-34 STAR-35 '}' .	(Rule 87)

	$default	reduce using rule 87 (Method)

State 524:

	STAR-37 -> STAR-37 . PAREN-36	(Rule 89)
	MethodArguments -> LPAREN_MY Type SELF STAR-37 . ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 91)

	')'	shift, and go to state 527
	OP21_LIST_COMMA	shift, and go to state 526

	PAREN-36	go to state 525

State 525:

	STAR-37 -> STAR-37 PAREN-36 .	(Rule 89)

	$default	reduce using rule 89 (STAR-37)

State 526:

	PAREN-36 -> OP21_LIST_COMMA . MY Type VARIABLE_SYMBOL	(Rule 88)

	MY	shift, and go to state 528

State 527:

	MethodArguments -> LPAREN_MY Type SELF STAR-37 ')' . OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 91)

	OP19_VARIABLE_ASSIGN	shift, and go to state 529

State 528:

	PAREN-36 -> OP21_LIST_COMMA MY . Type VARIABLE_SYMBOL	(Rule 88)

	TYPE_INTEGER	shift, and go to state 205
	WORD	shift, and go to state 204
	WORD_SCOPED	shift, and go to state 202

	Type	go to state 530

State 529:

	MethodArguments -> LPAREN_MY Type SELF STAR-37 ')' OP19_VARIABLE_ASSIGN . '@ARG;'	(Rule 91)

	'@ARG;'	shift, and go to state 531

State 530:

	PAREN-36 -> OP21_LIST_COMMA MY Type . VARIABLE_SYMBOL	(Rule 88)

	VARIABLE_SYMBOL	shift, and go to state 532

State 531:

	MethodArguments -> LPAREN_MY Type SELF STAR-37 ')' OP19_VARIABLE_ASSIGN '@ARG;' .	(Rule 91)

	$default	reduce using rule 91 (MethodArguments)

State 532:

	PAREN-36 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL .	(Rule 88)

	$default	reduce using rule 88 (PAREN-36)


Summary:
--------
Number of rules         : 278
Number of terminals     : 106
Number of non-terminals : 117
Number of states        : 533
