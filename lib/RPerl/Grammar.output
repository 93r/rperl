Conflicts:
----------
Conflict in state 174 between rule 96 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 174 between rule 96 and token OP04_MATH_POW resolved as shift.
Conflict in state 174 between rule 96 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 174 between rule 96 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 174 between rule 96 and token OP18_TERNARY resolved as reduce.
Conflict in state 174 between rule 96 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 174 between rule 96 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 174 between rule 96 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 174 between rule 96 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 174 between rule 96 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 174 between rule 96 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 174 between rule 96 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 174 between rule 96 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 174 between rule 96 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 174 between rule 96 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 174 between rule 96 and token OP08_STRING_CAT resolved as shift.
Conflict in state 174 between rule 96 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 200 between rule 81 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 200 between rule 81 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 200 between rule 81 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 200 between rule 81 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 200 between rule 81 and token OP04_MATH_POW resolved as reduce.
Conflict in state 200 between rule 81 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 200 between rule 81 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 200 between rule 81 and token OP18_TERNARY resolved as reduce.
Conflict in state 200 between rule 81 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 200 between rule 81 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 200 between rule 81 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 200 between rule 81 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 200 between rule 81 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 200 between rule 81 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 200 between rule 81 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 200 between rule 81 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 200 between rule 81 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 201 between rule 88 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 201 between rule 88 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 201 between rule 88 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 201 between rule 88 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 201 between rule 88 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 201 between rule 88 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 201 between rule 88 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 201 between rule 88 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 201 between rule 88 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 201 between rule 88 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 201 between rule 88 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 201 between rule 88 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 201 between rule 88 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 201 between rule 88 and token OP04_MATH_POW resolved as shift.
Conflict in state 201 between rule 88 and token OP18_TERNARY resolved as reduce.
Conflict in state 201 between rule 88 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 201 between rule 88 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 217 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 217 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 217 between rule 106 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 217 between rule 106 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 217 between rule 106 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 217 between rule 106 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 217 between rule 106 and token OP18_TERNARY resolved as shift.
Conflict in state 217 between rule 106 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 217 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 217 between rule 106 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 217 between rule 106 and token OP08_STRING_CAT resolved as shift.
Conflict in state 217 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 217 between rule 106 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 217 between rule 106 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 217 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 217 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 217 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 235 between rule 94 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 235 between rule 94 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 235 between rule 94 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 235 between rule 94 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 235 between rule 94 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 235 between rule 94 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 235 between rule 94 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 235 between rule 94 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 235 between rule 94 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 235 between rule 94 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 235 between rule 94 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 235 between rule 94 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 235 between rule 94 and token OP04_MATH_POW resolved as shift.
Conflict in state 235 between rule 94 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 235 between rule 94 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 235 between rule 94 and token OP18_TERNARY resolved as reduce.
Conflict in state 235 between rule 94 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 236 between rule 102 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 236 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 236 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 236 between rule 102 and token OP08_STRING_CAT resolved as shift.
Conflict in state 236 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 236 between rule 102 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 236 between rule 102 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 236 between rule 102 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 236 between rule 102 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 236 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 236 between rule 102 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 236 between rule 102 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 236 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 236 between rule 102 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 236 between rule 102 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 236 between rule 102 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 236 between rule 102 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 237 between rule 107 and token OP04_MATH_POW resolved as shift.
Conflict in state 237 between rule 107 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 237 between rule 107 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 237 between rule 107 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 237 between rule 107 and token OP18_TERNARY resolved as shift.
Conflict in state 237 between rule 107 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 237 between rule 107 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 237 between rule 107 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 237 between rule 107 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 237 between rule 107 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 237 between rule 107 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 237 between rule 107 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 237 between rule 107 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 237 between rule 107 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 237 between rule 107 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 237 between rule 107 and token OP08_STRING_CAT resolved as shift.
Conflict in state 237 between rule 107 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 238 between rule 98 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 238 between rule 98 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 238 between rule 98 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 238 between rule 98 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 238 between rule 98 and token OP04_MATH_POW resolved as shift.
Conflict in state 238 between rule 98 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 238 between rule 98 and token OP18_TERNARY resolved as reduce.
Conflict in state 238 between rule 98 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 238 between rule 98 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 238 between rule 98 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 238 between rule 98 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 238 between rule 98 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 238 between rule 98 and token OP08_STRING_CAT resolved as shift.
Conflict in state 238 between rule 98 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 238 between rule 98 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 238 between rule 98 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 238 between rule 98 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 239 between rule 103 and token OP04_MATH_POW resolved as shift.
Conflict in state 239 between rule 103 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 239 between rule 103 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 239 between rule 103 and token OP18_TERNARY resolved as reduce.
Conflict in state 239 between rule 103 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 239 between rule 103 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 239 between rule 103 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 239 between rule 103 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 239 between rule 103 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 239 between rule 103 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 239 between rule 103 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 239 between rule 103 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 239 between rule 103 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 239 between rule 103 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 239 between rule 103 and token OP08_STRING_CAT resolved as shift.
Conflict in state 239 between rule 103 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 239 between rule 103 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 241 between rule 101 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 241 between rule 101 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 241 between rule 101 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 241 between rule 101 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 241 between rule 101 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 241 between rule 101 and token OP08_STRING_CAT resolved as shift.
Conflict in state 241 between rule 101 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 241 between rule 101 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 241 between rule 101 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 241 between rule 101 and token OP18_TERNARY resolved as reduce.
Conflict in state 241 between rule 101 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 241 between rule 101 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 241 between rule 101 and token OP04_MATH_POW resolved as shift.
Conflict in state 241 between rule 101 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 241 between rule 101 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 241 between rule 101 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 241 between rule 101 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 242 between rule 91 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 242 between rule 91 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 242 between rule 91 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 242 between rule 91 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 242 between rule 91 and token OP18_TERNARY resolved as reduce.
Conflict in state 242 between rule 91 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 242 between rule 91 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 242 between rule 91 and token OP04_MATH_POW resolved as shift.
Conflict in state 242 between rule 91 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 242 between rule 91 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 242 between rule 91 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 242 between rule 91 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 242 between rule 91 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 242 between rule 91 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 242 between rule 91 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 242 between rule 91 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 242 between rule 91 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 246 between rule 104 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 246 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 246 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 246 between rule 104 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 246 between rule 104 and token OP08_STRING_CAT resolved as shift.
Conflict in state 246 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 246 between rule 104 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 246 between rule 104 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 246 between rule 104 and token OP17_LIST_RANGE resolved as error.
Conflict in state 246 between rule 104 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 246 between rule 104 and token OP18_TERNARY resolved as reduce.
Conflict in state 246 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 246 between rule 104 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 246 between rule 104 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 246 between rule 104 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 246 between rule 104 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 246 between rule 104 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 247 between rule 100 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 247 between rule 100 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 247 between rule 100 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 247 between rule 100 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 247 between rule 100 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 247 between rule 100 and token OP18_TERNARY resolved as reduce.
Conflict in state 247 between rule 100 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 247 between rule 100 and token OP04_MATH_POW resolved as shift.
Conflict in state 247 between rule 100 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 247 between rule 100 and token OP08_STRING_CAT resolved as shift.
Conflict in state 247 between rule 100 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 247 between rule 100 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 247 between rule 100 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 247 between rule 100 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 247 between rule 100 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 247 between rule 100 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 247 between rule 100 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 248 between rule 99 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 248 between rule 99 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 248 between rule 99 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 248 between rule 99 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 248 between rule 99 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 248 between rule 99 and token OP18_TERNARY resolved as reduce.
Conflict in state 248 between rule 99 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 248 between rule 99 and token OP04_MATH_POW resolved as shift.
Conflict in state 248 between rule 99 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 248 between rule 99 and token OP08_STRING_CAT resolved as shift.
Conflict in state 248 between rule 99 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 248 between rule 99 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 248 between rule 99 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 248 between rule 99 and token OP12_COMPARE_EQ_NE resolved as error.
Conflict in state 248 between rule 99 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 248 between rule 99 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 248 between rule 99 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 249 between rule 108 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 249 between rule 108 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 249 between rule 108 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 249 between rule 108 and token OP08_STRING_CAT resolved as shift.
Conflict in state 249 between rule 108 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 249 between rule 108 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 249 between rule 108 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 249 between rule 108 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 249 between rule 108 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 249 between rule 108 and token OP18_TERNARY resolved as shift.
Conflict in state 249 between rule 108 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 249 between rule 108 and token OP04_MATH_POW resolved as shift.
Conflict in state 249 between rule 108 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 249 between rule 108 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 249 between rule 108 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 249 between rule 108 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 249 between rule 108 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 250 between rule 92 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 250 between rule 92 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 250 between rule 92 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 250 between rule 92 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 250 between rule 92 and token OP04_MATH_POW resolved as shift.
Conflict in state 250 between rule 92 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 250 between rule 92 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 250 between rule 92 and token OP18_TERNARY resolved as reduce.
Conflict in state 250 between rule 92 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 250 between rule 92 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 250 between rule 92 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 250 between rule 92 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 250 between rule 92 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 250 between rule 92 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 250 between rule 92 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 250 between rule 92 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 250 between rule 92 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 251 between rule 95 and token OP04_MATH_POW resolved as shift.
Conflict in state 251 between rule 95 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 251 between rule 95 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 251 between rule 95 and token OP18_TERNARY resolved as reduce.
Conflict in state 251 between rule 95 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 251 between rule 95 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 251 between rule 95 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 251 between rule 95 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 251 between rule 95 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 251 between rule 95 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 251 between rule 95 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 251 between rule 95 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 251 between rule 95 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 251 between rule 95 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 251 between rule 95 and token OP08_STRING_CAT resolved as shift.
Conflict in state 251 between rule 95 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 251 between rule 95 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 252 between rule 93 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 252 between rule 93 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 252 between rule 93 and token OP18_TERNARY resolved as reduce.
Conflict in state 252 between rule 93 and token OP04_MATH_POW resolved as shift.
Conflict in state 252 between rule 93 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 252 between rule 93 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 252 between rule 93 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 252 between rule 93 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 252 between rule 93 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 252 between rule 93 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 252 between rule 93 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 252 between rule 93 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 252 between rule 93 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 252 between rule 93 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 252 between rule 93 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 252 between rule 93 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 252 between rule 93 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 253 between rule 87 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 253 between rule 87 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 253 between rule 87 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 253 between rule 87 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 253 between rule 87 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 253 between rule 87 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 253 between rule 87 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 253 between rule 87 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 253 between rule 87 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 253 between rule 87 and token OP04_MATH_POW resolved as shift.
Conflict in state 253 between rule 87 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 253 between rule 87 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 253 between rule 87 and token OP18_TERNARY resolved as reduce.
Conflict in state 253 between rule 87 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 253 between rule 87 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 253 between rule 87 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 253 between rule 87 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 256 between rule 81 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 256 between rule 81 and token OP18_TERNARY resolved as reduce.
Conflict in state 256 between rule 81 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 256 between rule 81 and token OP04_MATH_POW resolved as reduce.
Conflict in state 256 between rule 81 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 256 between rule 81 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 256 between rule 81 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 256 between rule 81 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 256 between rule 81 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 256 between rule 81 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 256 between rule 81 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 256 between rule 81 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 256 between rule 81 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 256 between rule 81 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 256 between rule 81 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 256 between rule 81 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 256 between rule 81 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 417 between rule 83 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 417 between rule 83 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 417 between rule 83 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 417 between rule 83 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 417 between rule 83 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 417 between rule 83 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 417 between rule 83 and token OP08_STRING_CAT resolved as shift.
Conflict in state 417 between rule 83 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 417 between rule 83 and token OP04_MATH_POW resolved as shift.
Conflict in state 417 between rule 83 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 417 between rule 83 and token OP18_TERNARY resolved as shift.
Conflict in state 417 between rule 83 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 417 between rule 83 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 417 between rule 83 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 417 between rule 83 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 417 between rule 83 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 417 between rule 83 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 428 between rule 104 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 428 between rule 104 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 428 between rule 104 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 428 between rule 104 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 428 between rule 104 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 428 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 428 between rule 104 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 428 between rule 104 and token OP18_TERNARY resolved as reduce.
Conflict in state 428 between rule 104 and token OP17_LIST_RANGE resolved as error.
Conflict in state 428 between rule 104 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 428 between rule 104 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 428 between rule 104 and token OP08_STRING_CAT resolved as shift.
Conflict in state 428 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 428 between rule 104 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 428 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 428 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 428 between rule 104 and token OP09_BITWISE_SHIFT resolved as shift.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> Critic
20:	OPTIONAL-9 -> /* empty */
21:	OPTIONAL-10 -> USE_RPERL
22:	OPTIONAL-10 -> /* empty */
23:	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped ';' Header
24:	Module -> Package
25:	Module -> Class
26:	STAR-11 -> STAR-11 Critic
27:	STAR-11 -> /* empty */
28:	STAR-12 -> STAR-12 Include
29:	STAR-12 -> /* empty */
30:	STAR-13 -> STAR-13 Constant
31:	STAR-13 -> /* empty */
32:	PLUS-14 -> PLUS-14 Subroutine
33:	PLUS-14 -> Subroutine
34:	Package -> STAR-11 STAR-12 STAR-13 PLUS-14 LITERAL_NUMBER ';'
35:	OPTIONAL-15 -> USE_RPERL_AFTER
36:	OPTIONAL-15 -> /* empty */
37:	Header -> 'use strict;' 'use warnings;' OPTIONAL-15 'our' VERSION_NUMBER_ASSIGN
38:	PLUS-16 -> PLUS-16 WORD
39:	PLUS-16 -> WORD
40:	Critic -> '## no critic qw(' PLUS-16 ')'
41:	Include -> USE WordScoped ';'
42:	Include -> USE WordScoped OP01_QW ';'
43:	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'
44:	OPTIONAL-17 -> SubroutineArguments
45:	OPTIONAL-17 -> /* empty */
46:	STAR-18 -> STAR-18 Operation
47:	STAR-18 -> /* empty */
48:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-17 STAR-18 '}' ';'
49:	PAREN-19 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL
50:	STAR-20 -> STAR-20 PAREN-19
51:	STAR-20 -> /* empty */
52:	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-20 ')' OP19_VARIABLE_ASSIGN '@_;'
53:	STAR-21 -> STAR-21 Critic
54:	STAR-21 -> /* empty */
55:	STAR-22 -> STAR-22 Include
56:	STAR-22 -> /* empty */
57:	STAR-23 -> STAR-23 Constant
58:	STAR-23 -> /* empty */
59:	STAR-24 -> STAR-24 MethodOrSubroutine
60:	STAR-24 -> /* empty */
61:	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-21 STAR-22 STAR-23 Properties STAR-24 LITERAL_NUMBER ';'
62:	PAREN-25 -> OP21_LIST_COMMA HashEntryProperties
63:	STAR-26 -> STAR-26 PAREN-25
64:	STAR-26 -> /* empty */
65:	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-26 '}' ';'
66:	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';'
67:	OPTIONAL-27 -> MethodArguments
68:	OPTIONAL-27 -> /* empty */
69:	STAR-28 -> STAR-28 Operation
70:	STAR-28 -> /* empty */
71:	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-27 STAR-28 '}' ';'
72:	PAREN-29 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL
73:	STAR-30 -> STAR-30 PAREN-29
74:	STAR-30 -> /* empty */
75:	MethodArguments -> LPAREN_MY Type SELF STAR-30 ')' OP19_VARIABLE_ASSIGN '@_;'
76:	MethodOrSubroutine -> Method
77:	MethodOrSubroutine -> Subroutine
78:	Operation -> Expression ';'
79:	Operation -> Statement
80:	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')'
81:	Operator -> OP01_NAMED SubExpression
82:	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'
83:	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression
84:	Operator -> OP01_CLOSE FHREF_SYMBOL
85:	Operator -> OP03_MATH_INC_DEC Variable
86:	Operator -> Variable OP03_MATH_INC_DEC
87:	Operator -> SubExpression OP04_MATH_POW SubExpression
88:	Operator -> OP05_LOGICAL_NEG SubExpression
89:	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')'
90:	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN
91:	Operator -> SubExpression OP07_STRING_REPEAT SubExpression
92:	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression
93:	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression
94:	Operator -> SubExpression OP08_STRING_CAT SubExpression
95:	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression
96:	Operator -> OP10_NAMED_UNARY SubExpression
97:	Operator -> OP10_NAMED_UNARY
98:	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression
99:	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression
100:	Operator -> SubExpression OP13_BITWISE_AND SubExpression
101:	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression
102:	Operator -> SubExpression OP15_LOGICAL_AND SubExpression
103:	Operator -> SubExpression OP16_LOGICAL_OR SubExpression
104:	Operator -> SubExpression OP17_LIST_RANGE SubExpression
105:	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral
106:	Operator -> OP22_LOGICAL_NEG SubExpression
107:	Operator -> SubExpression OP23_LOGICAL_AND SubExpression
108:	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression
109:	PAREN-31 -> STDOUT_STDERR
110:	OPTIONAL-32 -> PAREN-31
111:	OPTIONAL-32 -> /* empty */
112:	OPTIONAL-33 -> ListElements
113:	OPTIONAL-33 -> /* empty */
114:	OperatorVoid -> OP01_PRINT OPTIONAL-32 ListElements ';'
115:	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements ';'
116:	OperatorVoid -> OP01_NAMED_VOID_SCOLON
117:	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-33 ')' ';'
118:	OperatorVoid -> OP01_NAMED_VOID ListElements ';'
119:	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';'
120:	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON
121:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
122:	OPTIONAL-34 -> ListElements
123:	OPTIONAL-34 -> /* empty */
124:	OPTIONAL-35 -> ListElements
125:	OPTIONAL-35 -> /* empty */
126:	Expression -> Operator
127:	Expression -> WORD_UPPERCASE LPAREN ')'
128:	Expression -> CONSTANT_CALL_SCOPED
129:	Expression -> WordScoped LPAREN OPTIONAL-34 ')'
130:	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-35 ')'
131:	Expression -> WordScoped OP02_METHOD_THINARROW_NEW ')'
132:	SubExpression -> Expression
133:	SubExpression -> 'undef'
134:	SubExpression -> Literal
135:	SubExpression -> Variable
136:	SubExpression -> ArrayReference
137:	SubExpression -> ArrayDereference
138:	SubExpression -> HashReference
139:	SubExpression -> HashDereference
140:	SubExpression -> LPAREN SubExpression ')'
141:	SubExpressionOrStdin -> SubExpression
142:	SubExpressionOrStdin -> STDIN
143:	SubExpressionOrVarMod -> SubExpression
144:	SubExpressionOrVarMod -> VariableModification
145:	PAREN-36 -> LoopLabel COLON
146:	OPTIONAL-37 -> PAREN-36
147:	OPTIONAL-37 -> /* empty */
148:	Statement -> Conditional
149:	Statement -> OPTIONAL-37 Loop
150:	Statement -> OperatorVoid
151:	Statement -> VariableDeclaration
152:	Statement -> VariableModification ';'
153:	PAREN-38 -> 'elsif' LPAREN SubExpression ')' CodeBlock
154:	STAR-39 -> STAR-39 PAREN-38
155:	STAR-39 -> /* empty */
156:	PAREN-40 -> 'else' CodeBlock
157:	OPTIONAL-41 -> PAREN-40
158:	OPTIONAL-41 -> /* empty */
159:	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-39 OPTIONAL-41
160:	Loop -> LoopFor
161:	Loop -> LoopForEach
162:	Loop -> LoopWhile
163:	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock
164:	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpression ';' VARIABLE_SYMBOL OP11_COMPARE_LT_GT SubExpression ';' SubExpressionOrVarMod ')' CodeBlock
165:	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock
166:	LoopWhile -> 'while' LPAREN SubExpression ')' CodeBlock
167:	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ')' CodeBlock
168:	PLUS-42 -> PLUS-42 Operation
169:	PLUS-42 -> Operation
170:	CodeBlock -> LBRACE PLUS-42 '}'
171:	STAR-43 -> STAR-43 VariableRetrieval
172:	STAR-43 -> /* empty */
173:	Variable -> VariableSymbolOrSelf STAR-43
174:	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']'
175:	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}'
176:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
177:	VariableDeclaration -> MY Type VARIABLE_SYMBOL ';'
178:	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
179:	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'
180:	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL ';'
181:	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin
182:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression
183:	PAREN-44 -> OP21_LIST_COMMA ListElement
184:	STAR-45 -> STAR-45 PAREN-44
185:	STAR-45 -> /* empty */
186:	ListElements -> ListElement STAR-45
187:	ListElement -> SubExpression
188:	ListElement -> TypeInner SubExpression
189:	ListElement -> OP01_QW
190:	OPTIONAL-46 -> ListElements
191:	OPTIONAL-46 -> /* empty */
192:	ArrayReference -> LBRACKET OPTIONAL-46 ']'
193:	OPTIONAL-47 -> TypeInner
194:	OPTIONAL-47 -> /* empty */
195:	ArrayDereference -> '@{' Variable '}'
196:	ArrayDereference -> '@{' OPTIONAL-47 ArrayReference '}'
197:	OPTIONAL-48 -> TypeInner
198:	OPTIONAL-48 -> /* empty */
199:	HashEntry -> VariableOrLiteralOrWord OP20_HASH_FATARROW OPTIONAL-48 SubExpression
200:	HashEntry -> HashDereference
201:	HashEntryProperties -> WORD OP20_HASH_FATARROW TypeInnerProperties
202:	PAREN-49 -> OP21_LIST_COMMA HashEntry
203:	STAR-50 -> STAR-50 PAREN-49
204:	STAR-50 -> /* empty */
205:	HashReference -> LBRACE HashEntry STAR-50 '}'
206:	HashReference -> LBRACE '}'
207:	OPTIONAL-51 -> TypeInner
208:	OPTIONAL-51 -> /* empty */
209:	HashDereference -> '%{' Variable '}'
210:	HashDereference -> '%{' OPTIONAL-51 HashReference '}'
211:	WordScoped -> WORD
212:	WordScoped -> WORD_SCOPED
213:	LoopLabel -> WORD_UPPERCASE
214:	Type -> WORD
215:	Type -> WORD_SCOPED
216:	Type -> TYPE_INTEGER
217:	TypeInner -> MY Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
218:	TypeInnerProperties -> MY Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN SubExpression
219:	TypeInnerProperties -> MY Type '$TYPED_' WORD OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'
220:	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN
221:	VariableOrLiteral -> Variable
222:	VariableOrLiteral -> Literal
223:	VariableOrLiteralOrWord -> Variable
224:	VariableOrLiteralOrWord -> Literal
225:	VariableOrLiteralOrWord -> WORD
226:	VariableSymbolOrSelf -> VARIABLE_SYMBOL
227:	VariableSymbolOrSelf -> SELF
228:	Literal -> LITERAL_NUMBER
229:	Literal -> LITERAL_STRING

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'## no critic qw('	shift, and go to state 5
	SHEBANG	shift, and go to state 7

	'package'	reduce using rule 20 (OPTIONAL-9)
	USE_RPERL	reduce using rule 20 (OPTIONAL-9)

	Program	go to state 6
	Critic	go to state 1
	OPTIONAL-9	go to state 2
	ModuleHeader	go to state 3
	CompileUnit	go to state 8
	PAREN-1	go to state 4
	PLUS-2	go to state 9

State 1:

	OPTIONAL-9 -> Critic .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 2:

	ModuleHeader -> OPTIONAL-9 . OPTIONAL-10 'package' WordScoped ';' Header	(Rule 23)

	USE_RPERL	shift, and go to state 11

	'package'	reduce using rule 22 (OPTIONAL-10)

	OPTIONAL-10	go to state 10

State 3:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent qw('	shift, and go to state 15

	'## no critic qw('	reduce using rule 27 (STAR-11)
	'our'	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	USE	reduce using rule 27 (STAR-11)

	STAR-11	go to state 14
	Class	go to state 12
	Package	go to state 16
	Module	go to state 13

State 4:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 5:

	Critic -> '## no critic qw(' . PLUS-16 ')'	(Rule 40)

	WORD	shift, and go to state 18

	PLUS-16	go to state 17

State 6:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 7:

	Program -> SHEBANG . OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 5

	USE_RPERL	reduce using rule 7 (OPTIONAL-3)

	OPTIONAL-3	go to state 20
	Critic	go to state 19

State 8:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 21

State 9:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	'## no critic qw('	shift, and go to state 5

	$end	reduce using rule 5 (CompileUnit)
	'package'	reduce using rule 20 (OPTIONAL-9)
	USE_RPERL	reduce using rule 20 (OPTIONAL-9)

	ModuleHeader	go to state 3
	PAREN-1	go to state 22
	Critic	go to state 1
	OPTIONAL-9	go to state 2

State 10:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 . 'package' WordScoped ';' Header	(Rule 23)

	'package'	shift, and go to state 23

State 11:

	OPTIONAL-10 -> USE_RPERL .	(Rule 21)

	$default	reduce using rule 21 (OPTIONAL-10)

State 12:

	Module -> Class .	(Rule 25)

	$default	reduce using rule 25 (Module)

State 13:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 14:

	STAR-11 -> STAR-11 . Critic	(Rule 26)
	Package -> STAR-11 . STAR-12 STAR-13 PLUS-14 LITERAL_NUMBER ';'	(Rule 34)

	'## no critic qw('	shift, and go to state 5

	'our'	reduce using rule 29 (STAR-12)
	'use constant'	reduce using rule 29 (STAR-12)
	USE	reduce using rule 29 (STAR-12)

	STAR-12	go to state 25
	Critic	go to state 24

State 15:

	Class -> 'use parent qw(' . WordScoped ')' ';' Include STAR-21 STAR-22 STAR-23 Properties STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	WordScoped	go to state 26

State 16:

	Module -> Package .	(Rule 24)

	$default	reduce using rule 24 (Module)

State 17:

	PLUS-16 -> PLUS-16 . WORD	(Rule 38)
	Critic -> '## no critic qw(' PLUS-16 . ')'	(Rule 40)

	')'	shift, and go to state 30
	WORD	shift, and go to state 29

State 18:

	PLUS-16 -> WORD .	(Rule 39)

	$default	reduce using rule 39 (PLUS-16)

State 19:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 20:

	Program -> SHEBANG OPTIONAL-3 . USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	USE_RPERL	shift, and go to state 31

State 21:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 22:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 23:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' . WordScoped ';' Header	(Rule 23)

	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	WordScoped	go to state 32

State 24:

	STAR-11 -> STAR-11 Critic .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 25:

	STAR-12 -> STAR-12 . Include	(Rule 28)
	Package -> STAR-11 STAR-12 . STAR-13 PLUS-14 LITERAL_NUMBER ';'	(Rule 34)

	USE	shift, and go to state 34

	'our'	reduce using rule 31 (STAR-13)
	'use constant'	reduce using rule 31 (STAR-13)

	Include	go to state 35
	STAR-13	go to state 33

State 26:

	Class -> 'use parent qw(' WordScoped . ')' ';' Include STAR-21 STAR-22 STAR-23 Properties STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	')'	shift, and go to state 36

State 27:

	WordScoped -> WORD .	(Rule 211)

	$default	reduce using rule 211 (WordScoped)

State 28:

	WordScoped -> WORD_SCOPED .	(Rule 212)

	$default	reduce using rule 212 (WordScoped)

State 29:

	PLUS-16 -> PLUS-16 WORD .	(Rule 38)

	$default	reduce using rule 38 (PLUS-16)

State 30:

	Critic -> '## no critic qw(' PLUS-16 ')' .	(Rule 40)

	$default	reduce using rule 40 (Critic)

State 31:

	Program -> SHEBANG OPTIONAL-3 USE_RPERL . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 38

	Header	go to state 37

State 32:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped . ';' Header	(Rule 23)

	';'	shift, and go to state 39

State 33:

	STAR-13 -> STAR-13 . Constant	(Rule 30)
	Package -> STAR-11 STAR-12 STAR-13 . PLUS-14 LITERAL_NUMBER ';'	(Rule 34)

	'our'	shift, and go to state 44
	'use constant'	shift, and go to state 43

	PLUS-14	go to state 42
	Subroutine	go to state 41
	Constant	go to state 40

State 34:

	Include -> USE . WordScoped ';'	(Rule 41)
	Include -> USE . WordScoped OP01_QW ';'	(Rule 42)

	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	WordScoped	go to state 45

State 35:

	STAR-12 -> STAR-12 Include .	(Rule 28)

	$default	reduce using rule 28 (STAR-12)

State 36:

	Class -> 'use parent qw(' WordScoped ')' . ';' Include STAR-21 STAR-22 STAR-23 Properties STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	';'	shift, and go to state 46

State 37:

	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 47

State 38:

	Header -> 'use strict;' . 'use warnings;' OPTIONAL-15 'our' VERSION_NUMBER_ASSIGN	(Rule 37)

	'use warnings;'	shift, and go to state 48

State 39:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped ';' . Header	(Rule 23)

	'use strict;'	shift, and go to state 38

	Header	go to state 49

State 40:

	STAR-13 -> STAR-13 Constant .	(Rule 30)

	$default	reduce using rule 30 (STAR-13)

State 41:

	PLUS-14 -> Subroutine .	(Rule 33)

	$default	reduce using rule 33 (PLUS-14)

State 42:

	PLUS-14 -> PLUS-14 . Subroutine	(Rule 32)
	Package -> STAR-11 STAR-12 STAR-13 PLUS-14 . LITERAL_NUMBER ';'	(Rule 34)

	'our'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 51

	Subroutine	go to state 50

State 43:

	Constant -> 'use constant' . WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 43)

	WORD_UPPERCASE	shift, and go to state 52

State 44:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-17 STAR-18 '}' ';'	(Rule 48)

	TYPE_INTEGER	shift, and go to state 54
	WORD	shift, and go to state 53
	WORD_SCOPED	shift, and go to state 55

	Type	go to state 56

State 45:

	Include -> USE WordScoped . ';'	(Rule 41)
	Include -> USE WordScoped . OP01_QW ';'	(Rule 42)

	';'	shift, and go to state 57
	OP01_QW	shift, and go to state 58

State 46:

	Class -> 'use parent qw(' WordScoped ')' ';' . Include STAR-21 STAR-22 STAR-23 Properties STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	USE	shift, and go to state 34

	Include	go to state 59

State 47:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 5

	'%{'	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'for'	reduce using rule 11 (STAR-5)
	'foreach'	reduce using rule 11 (STAR-5)
	'if'	reduce using rule 11 (STAR-5)
	'our'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'while'	reduce using rule 11 (STAR-5)
	CONSTANT_CALL_SCOPED	reduce using rule 11 (STAR-5)
	LBRACE	reduce using rule 11 (STAR-5)
	LBRACKET	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	LPAREN	reduce using rule 11 (STAR-5)
	MY	reduce using rule 11 (STAR-5)
	OP01_CLOSE	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_LPAREN	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_SCOLON	reduce using rule 11 (STAR-5)
	OP01_OPEN	reduce using rule 11 (STAR-5)
	OP01_PRINT	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG_LPAREN	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	SELF	reduce using rule 11 (STAR-5)
	USE	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)
	WORD_UPPERCASE	reduce using rule 11 (STAR-5)

	STAR-5	go to state 60
	Critic	go to state 61

State 48:

	Header -> 'use strict;' 'use warnings;' . OPTIONAL-15 'our' VERSION_NUMBER_ASSIGN	(Rule 37)

	USE_RPERL_AFTER	shift, and go to state 62

	'our'	reduce using rule 36 (OPTIONAL-15)

	OPTIONAL-15	go to state 63

State 49:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped ';' Header .	(Rule 23)

	$default	reduce using rule 23 (ModuleHeader)

State 50:

	PLUS-14 -> PLUS-14 Subroutine .	(Rule 32)

	$default	reduce using rule 32 (PLUS-14)

State 51:

	Package -> STAR-11 STAR-12 STAR-13 PLUS-14 LITERAL_NUMBER . ';'	(Rule 34)

	';'	shift, and go to state 64

State 52:

	Constant -> 'use constant' WORD_UPPERCASE . OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 43)

	OP20_HASH_FATARROW	shift, and go to state 65

State 53:

	Type -> WORD .	(Rule 214)

	$default	reduce using rule 214 (Type)

State 54:

	Type -> TYPE_INTEGER .	(Rule 216)

	$default	reduce using rule 216 (Type)

State 55:

	Type -> WORD_SCOPED .	(Rule 215)

	$default	reduce using rule 215 (Type)

State 56:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-17 STAR-18 '}' ';'	(Rule 48)

	VARIABLE_SYMBOL	shift, and go to state 66

State 57:

	Include -> USE WordScoped ';' .	(Rule 41)

	$default	reduce using rule 41 (Include)

State 58:

	Include -> USE WordScoped OP01_QW . ';'	(Rule 42)

	';'	shift, and go to state 67

State 59:

	Class -> 'use parent qw(' WordScoped ')' ';' Include . STAR-21 STAR-22 STAR-23 Properties STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	$default	reduce using rule 54 (STAR-21)

	STAR-21	go to state 68

State 60:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	USE	shift, and go to state 34

	'%{'	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'for'	reduce using rule 13 (STAR-6)
	'foreach'	reduce using rule 13 (STAR-6)
	'if'	reduce using rule 13 (STAR-6)
	'our'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while'	reduce using rule 13 (STAR-6)
	CONSTANT_CALL_SCOPED	reduce using rule 13 (STAR-6)
	LBRACE	reduce using rule 13 (STAR-6)
	LBRACKET	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	LPAREN	reduce using rule 13 (STAR-6)
	MY	reduce using rule 13 (STAR-6)
	OP01_CLOSE	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_LPAREN	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_SCOLON	reduce using rule 13 (STAR-6)
	OP01_OPEN	reduce using rule 13 (STAR-6)
	OP01_PRINT	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG_LPAREN	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	SELF	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)
	WORD_UPPERCASE	reduce using rule 13 (STAR-6)

	Include	go to state 69
	STAR-6	go to state 70

State 61:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 62:

	OPTIONAL-15 -> USE_RPERL_AFTER .	(Rule 35)

	$default	reduce using rule 35 (OPTIONAL-15)

State 63:

	Header -> 'use strict;' 'use warnings;' OPTIONAL-15 . 'our' VERSION_NUMBER_ASSIGN	(Rule 37)

	'our'	shift, and go to state 71

State 64:

	Package -> STAR-11 STAR-12 STAR-13 PLUS-14 LITERAL_NUMBER ';' .	(Rule 34)

	$default	reduce using rule 34 (Package)

State 65:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW . TypeInnerConstant Literal ';'	(Rule 43)

	MY	shift, and go to state 72

	TypeInnerConstant	go to state 73

State 66:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-17 STAR-18 '}' ';'	(Rule 48)

	'= sub {'	shift, and go to state 74

State 67:

	Include -> USE WordScoped OP01_QW ';' .	(Rule 42)

	$default	reduce using rule 42 (Include)

State 68:

	STAR-21 -> STAR-21 . Critic	(Rule 53)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-21 . STAR-22 STAR-23 Properties STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'## no critic qw('	shift, and go to state 5

	'our hashref $properties'	reduce using rule 56 (STAR-22)
	'use constant'	reduce using rule 56 (STAR-22)
	USE	reduce using rule 56 (STAR-22)

	Critic	go to state 76
	STAR-22	go to state 75

State 69:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 70:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 43

	'%{'	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'for'	reduce using rule 15 (STAR-7)
	'foreach'	reduce using rule 15 (STAR-7)
	'if'	reduce using rule 15 (STAR-7)
	'our'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while'	reduce using rule 15 (STAR-7)
	CONSTANT_CALL_SCOPED	reduce using rule 15 (STAR-7)
	LBRACE	reduce using rule 15 (STAR-7)
	LBRACKET	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	LPAREN	reduce using rule 15 (STAR-7)
	MY	reduce using rule 15 (STAR-7)
	OP01_CLOSE	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_LPAREN	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_SCOLON	reduce using rule 15 (STAR-7)
	OP01_OPEN	reduce using rule 15 (STAR-7)
	OP01_PRINT	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG_LPAREN	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	SELF	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)
	WORD_UPPERCASE	reduce using rule 15 (STAR-7)

	Constant	go to state 77
	STAR-7	go to state 78

State 71:

	Header -> 'use strict;' 'use warnings;' OPTIONAL-15 'our' . VERSION_NUMBER_ASSIGN	(Rule 37)

	VERSION_NUMBER_ASSIGN	shift, and go to state 79

State 72:

	TypeInnerConstant -> MY . Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 220)

	TYPE_INTEGER	shift, and go to state 54
	WORD	shift, and go to state 53
	WORD_SCOPED	shift, and go to state 55

	Type	go to state 80

State 73:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant . Literal ';'	(Rule 43)

	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82

	Literal	go to state 81

State 74:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-17 STAR-18 '}' ';'	(Rule 48)

	LPAREN_MY	shift, and go to state 84

	'%{'	reduce using rule 45 (OPTIONAL-17)
	'@{'	reduce using rule 45 (OPTIONAL-17)
	'for'	reduce using rule 45 (OPTIONAL-17)
	'foreach'	reduce using rule 45 (OPTIONAL-17)
	'if'	reduce using rule 45 (OPTIONAL-17)
	'undef'	reduce using rule 45 (OPTIONAL-17)
	'while'	reduce using rule 45 (OPTIONAL-17)
	'}'	reduce using rule 45 (OPTIONAL-17)
	CONSTANT_CALL_SCOPED	reduce using rule 45 (OPTIONAL-17)
	LBRACE	reduce using rule 45 (OPTIONAL-17)
	LBRACKET	reduce using rule 45 (OPTIONAL-17)
	LITERAL_NUMBER	reduce using rule 45 (OPTIONAL-17)
	LITERAL_STRING	reduce using rule 45 (OPTIONAL-17)
	LPAREN	reduce using rule 45 (OPTIONAL-17)
	MY	reduce using rule 45 (OPTIONAL-17)
	OP01_CLOSE	reduce using rule 45 (OPTIONAL-17)
	OP01_NAMED	reduce using rule 45 (OPTIONAL-17)
	OP01_NAMED_VOID	reduce using rule 45 (OPTIONAL-17)
	OP01_NAMED_VOID_LPAREN	reduce using rule 45 (OPTIONAL-17)
	OP01_NAMED_VOID_SCOLON	reduce using rule 45 (OPTIONAL-17)
	OP01_OPEN	reduce using rule 45 (OPTIONAL-17)
	OP01_PRINT	reduce using rule 45 (OPTIONAL-17)
	OP03_MATH_INC_DEC	reduce using rule 45 (OPTIONAL-17)
	OP05_LOGICAL_NEG	reduce using rule 45 (OPTIONAL-17)
	OP05_MATH_NEG_LPAREN	reduce using rule 45 (OPTIONAL-17)
	OP10_NAMED_UNARY	reduce using rule 45 (OPTIONAL-17)
	OP19_LOOP_CONTROL	reduce using rule 45 (OPTIONAL-17)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 45 (OPTIONAL-17)
	OP22_LOGICAL_NEG	reduce using rule 45 (OPTIONAL-17)
	SELF	reduce using rule 45 (OPTIONAL-17)
	VARIABLE_SYMBOL	reduce using rule 45 (OPTIONAL-17)
	WORD	reduce using rule 45 (OPTIONAL-17)
	WORD_SCOPED	reduce using rule 45 (OPTIONAL-17)
	WORD_UPPERCASE	reduce using rule 45 (OPTIONAL-17)

	OPTIONAL-17	go to state 85
	SubroutineArguments	go to state 86

State 75:

	STAR-22 -> STAR-22 . Include	(Rule 55)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-21 STAR-22 . STAR-23 Properties STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	USE	shift, and go to state 34

	'our hashref $properties'	reduce using rule 58 (STAR-23)
	'use constant'	reduce using rule 58 (STAR-23)

	Include	go to state 88
	STAR-23	go to state 87

State 76:

	STAR-21 -> STAR-21 Critic .	(Rule 53)

	$default	reduce using rule 53 (STAR-21)

State 77:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 78:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'if'	shift, and go to state 90
	'our'	shift, and go to state 44
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	MY	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 117
	OP01_NAMED_VOID	shift, and go to state 114
	OP01_NAMED_VOID_LPAREN	shift, and go to state 133
	OP01_NAMED_VOID_SCOLON	shift, and go to state 97
	OP01_OPEN	shift, and go to state 100
	OP01_PRINT	shift, and go to state 126
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP19_LOOP_CONTROL	shift, and go to state 113
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 110
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 119

	'for'	reduce using rule 147 (OPTIONAL-37)
	'foreach'	reduce using rule 147 (OPTIONAL-37)
	'while'	reduce using rule 147 (OPTIONAL-37)

	WordScoped	go to state 108
	ArrayReference	go to state 127
	Expression	go to state 101
	PLUS-8	go to state 102
	Conditional	go to state 106
	ArrayDereference	go to state 125
	OperatorVoid	go to state 105
	VariableDeclaration	go to state 99
	Variable	go to state 124
	HashDereference	go to state 89
	SubExpression	go to state 92
	Operator	go to state 91
	VariableModification	go to state 93
	Operation	go to state 94
	Literal	go to state 120
	PAREN-36	go to state 96
	VariableSymbolOrSelf	go to state 116
	LoopLabel	go to state 136
	Subroutine	go to state 135
	OPTIONAL-37	go to state 134
	HashReference	go to state 128
	Statement	go to state 130

State 79:

	Header -> 'use strict;' 'use warnings;' OPTIONAL-15 'our' VERSION_NUMBER_ASSIGN .	(Rule 37)

	$default	reduce using rule 37 (Header)

State 80:

	TypeInnerConstant -> MY Type . '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 220)

	'$TYPED_'	shift, and go to state 137

State 81:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal . ';'	(Rule 43)

	';'	shift, and go to state 138

State 82:

	Literal -> LITERAL_STRING .	(Rule 229)

	$default	reduce using rule 229 (Literal)

State 83:

	Literal -> LITERAL_NUMBER .	(Rule 228)

	$default	reduce using rule 228 (Literal)

State 84:

	SubroutineArguments -> LPAREN_MY . Type VARIABLE_SYMBOL STAR-20 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 52)

	TYPE_INTEGER	shift, and go to state 54
	WORD	shift, and go to state 53
	WORD_SCOPED	shift, and go to state 55

	Type	go to state 139

State 85:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-17 . STAR-18 '}' ';'	(Rule 48)

	$default	reduce using rule 47 (STAR-18)

	STAR-18	go to state 140

State 86:

	OPTIONAL-17 -> SubroutineArguments .	(Rule 44)

	$default	reduce using rule 44 (OPTIONAL-17)

State 87:

	STAR-23 -> STAR-23 . Constant	(Rule 57)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-21 STAR-22 STAR-23 . Properties STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'our hashref $properties'	shift, and go to state 141
	'use constant'	shift, and go to state 43

	Properties	go to state 143
	Constant	go to state 142

State 88:

	STAR-22 -> STAR-22 Include .	(Rule 55)

	$default	reduce using rule 55 (STAR-22)

State 89:

	SubExpression -> HashDereference .	(Rule 139)

	$default	reduce using rule 139 (SubExpression)

State 90:

	Conditional -> 'if' . LPAREN SubExpression ')' CodeBlock STAR-39 OPTIONAL-41	(Rule 159)

	LPAREN	shift, and go to state 144

State 91:

	Expression -> Operator .	(Rule 126)

	$default	reduce using rule 126 (Expression)

State 92:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155
	OP14_BITWISE_OR_XOR	shift, and go to state 151
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 153
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

State 93:

	Statement -> VariableModification . ';'	(Rule 152)

	';'	shift, and go to state 162

State 94:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 95:

	HashReference -> LBRACE . HashEntry STAR-50 '}'	(Rule 205)
	HashReference -> LBRACE . '}'	(Rule 206)

	'%{'	shift, and go to state 103
	'}'	shift, and go to state 164
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 163

	Literal	go to state 169
	HashDereference	go to state 166
	VariableOrLiteralOrWord	go to state 167
	Variable	go to state 168
	HashEntry	go to state 165
	VariableSymbolOrSelf	go to state 116

State 96:

	OPTIONAL-37 -> PAREN-36 .	(Rule 146)

	$default	reduce using rule 146 (OPTIONAL-37)

State 97:

	OperatorVoid -> OP01_NAMED_VOID_SCOLON .	(Rule 116)

	$default	reduce using rule 116 (OperatorVoid)

State 98:

	Operator -> OP10_NAMED_UNARY . SubExpression	(Rule 96)
	Operator -> OP10_NAMED_UNARY .	(Rule 97)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	')'	reduce using rule 97 (Operator)
	';'	reduce using rule 97 (Operator)
	']'	reduce using rule 97 (Operator)
	'}'	reduce using rule 97 (Operator)
	OP04_MATH_POW	reduce using rule 97 (Operator)
	OP06_REGEX_MATCH	reduce using rule 97 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 97 (Operator)
	OP07_STRING_REPEAT	reduce using rule 97 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 97 (Operator)
	OP08_STRING_CAT	reduce using rule 97 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 97 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 97 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 97 (Operator)
	OP13_BITWISE_AND	reduce using rule 97 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 97 (Operator)
	OP15_LOGICAL_AND	reduce using rule 97 (Operator)
	OP16_LOGICAL_OR	reduce using rule 97 (Operator)
	OP17_LIST_RANGE	reduce using rule 97 (Operator)
	OP18_TERNARY	reduce using rule 97 (Operator)
	OP21_LIST_COMMA	reduce using rule 97 (Operator)
	OP23_LOGICAL_AND	reduce using rule 97 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 97 (Operator)

	Operator	go to state 91
	HashDereference	go to state 89
	SubExpression	go to state 174
	HashReference	go to state 128
	Literal	go to state 120
	Variable	go to state 171
	Expression	go to state 173
	ArrayDereference	go to state 125
	VariableSymbolOrSelf	go to state 116
	WordScoped	go to state 108
	ArrayReference	go to state 127

State 99:

	Statement -> VariableDeclaration .	(Rule 151)

	$default	reduce using rule 151 (Statement)

State 100:

	Operator -> OP01_OPEN . MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 83)

	MY	shift, and go to state 175

State 101:

	Operation -> Expression . ';'	(Rule 78)
	SubExpression -> Expression .	(Rule 132)

	';'	shift, and go to state 176

	OP04_MATH_POW	reduce using rule 132 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 132 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 132 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 132 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 132 (SubExpression)
	OP08_STRING_CAT	reduce using rule 132 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 132 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 132 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 132 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 132 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 132 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 132 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 132 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 132 (SubExpression)
	OP18_TERNARY	reduce using rule 132 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 132 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 132 (SubExpression)

State 102:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'if'	shift, and go to state 90
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	MY	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 117
	OP01_NAMED_VOID	shift, and go to state 114
	OP01_NAMED_VOID_LPAREN	shift, and go to state 133
	OP01_NAMED_VOID_SCOLON	shift, and go to state 97
	OP01_OPEN	shift, and go to state 100
	OP01_PRINT	shift, and go to state 126
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP19_LOOP_CONTROL	shift, and go to state 113
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 110
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 119

	$end	reduce using rule 18 (Program)
	'for'	reduce using rule 147 (OPTIONAL-37)
	'foreach'	reduce using rule 147 (OPTIONAL-37)
	'while'	reduce using rule 147 (OPTIONAL-37)

	LoopLabel	go to state 136
	VariableSymbolOrSelf	go to state 116
	HashReference	go to state 128
	Statement	go to state 130
	OPTIONAL-37	go to state 134
	Expression	go to state 101
	OperatorVoid	go to state 105
	ArrayDereference	go to state 125
	Conditional	go to state 106
	WordScoped	go to state 108
	ArrayReference	go to state 127
	SubExpression	go to state 92
	HashDereference	go to state 89
	Operator	go to state 91
	VariableModification	go to state 93
	Operation	go to state 177
	PAREN-36	go to state 96
	Literal	go to state 120
	VariableDeclaration	go to state 99
	Variable	go to state 124

State 103:

	HashDereference -> '%{' . Variable '}'	(Rule 209)
	HashDereference -> '%{' . OPTIONAL-51 HashReference '}'	(Rule 210)

	MY	shift, and go to state 179
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131

	LBRACE	reduce using rule 208 (OPTIONAL-51)

	TypeInner	go to state 178
	Variable	go to state 180
	VariableSymbolOrSelf	go to state 116
	OPTIONAL-51	go to state 181

State 104:

	VariableSymbolOrSelf -> SELF .	(Rule 227)

	$default	reduce using rule 227 (VariableSymbolOrSelf)

State 105:

	Statement -> OperatorVoid .	(Rule 150)

	$default	reduce using rule 150 (Statement)

State 106:

	Statement -> Conditional .	(Rule 148)

	$default	reduce using rule 148 (Statement)

State 107:

	Operator -> OP01_CLOSE . FHREF_SYMBOL	(Rule 84)

	FHREF_SYMBOL	shift, and go to state 182

State 108:

	Expression -> WordScoped . LPAREN OPTIONAL-34 ')'	(Rule 129)
	Expression -> WordScoped . OP02_METHOD_THINARROW_NEW ')'	(Rule 131)

	LPAREN	shift, and go to state 183
	OP02_METHOD_THINARROW_NEW	shift, and go to state 184

State 109:

	Operator -> OP05_MATH_NEG_LPAREN . SubExpression ')'	(Rule 89)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	ArrayReference	go to state 127
	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	ArrayDereference	go to state 125
	Expression	go to state 173
	Variable	go to state 171
	Literal	go to state 120
	HashReference	go to state 128
	Operator	go to state 91
	SubExpression	go to state 185
	HashDereference	go to state 89

State 110:

	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON .	(Rule 120)

	$default	reduce using rule 120 (OperatorVoid)

State 111:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 85)

	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131

	Variable	go to state 186
	VariableSymbolOrSelf	go to state 116

State 112:

	ArrayReference -> LBRACKET . OPTIONAL-46 ']'	(Rule 192)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	MY	shift, and go to state 179
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP01_QW	shift, and go to state 191
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	']'	reduce using rule 191 (OPTIONAL-46)

	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	ListElements	go to state 187
	ArrayReference	go to state 127
	OPTIONAL-46	go to state 192
	Expression	go to state 173
	ArrayDereference	go to state 125
	ListElement	go to state 190
	TypeInner	go to state 189
	Variable	go to state 171
	SubExpression	go to state 188
	HashDereference	go to state 89
	Operator	go to state 91
	HashReference	go to state 128
	Literal	go to state 120

State 113:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 121)

	WORD_UPPERCASE	shift, and go to state 194

	LoopLabel	go to state 193

State 114:

	OperatorVoid -> OP01_NAMED_VOID . ListElements ';'	(Rule 118)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	MY	shift, and go to state 179
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP01_QW	shift, and go to state 191
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	ListElements	go to state 195
	ArrayReference	go to state 127
	Expression	go to state 173
	ArrayDereference	go to state 125
	ListElement	go to state 190
	TypeInner	go to state 189
	Variable	go to state 171
	HashDereference	go to state 89
	HashReference	go to state 128
	Operator	go to state 91
	SubExpression	go to state 188
	Literal	go to state 120

State 115:

	VariableDeclaration -> MY . Type VARIABLE_SYMBOL ';'	(Rule 177)
	VariableDeclaration -> MY . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 178)
	VariableDeclaration -> MY . Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 179)
	VariableDeclaration -> MY . TYPE_FHREF FHREF_SYMBOL ';'	(Rule 180)

	TYPE_FHREF	shift, and go to state 197
	TYPE_INTEGER	shift, and go to state 54
	WORD	shift, and go to state 53
	WORD_SCOPED	shift, and go to state 55

	Type	go to state 196

State 116:

	Variable -> VariableSymbolOrSelf . STAR-43	(Rule 173)

	$default	reduce using rule 172 (STAR-43)

	STAR-43	go to state 198

State 117:

	Operator -> OP01_NAMED . SubExpression	(Rule 81)
	OperatorVoid -> OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ';'	(Rule 119)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	MY	shift, and go to state 179
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP01_QW	shift, and go to state 191
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	Expression	go to state 173
	ArrayDereference	go to state 125
	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	ArrayReference	go to state 127
	SubExpression	go to state 200
	Operator	go to state 91
	HashReference	go to state 128
	HashDereference	go to state 89
	Literal	go to state 120
	ListElement	go to state 199
	TypeInner	go to state 189
	Variable	go to state 171

State 118:

	Operator -> OP05_LOGICAL_NEG . SubExpression	(Rule 88)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	ArrayDereference	go to state 125
	Expression	go to state 173
	ArrayReference	go to state 127
	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	Literal	go to state 120
	HashDereference	go to state 89
	SubExpression	go to state 201
	Operator	go to state 91
	HashReference	go to state 128
	Variable	go to state 171

State 119:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 127)
	LoopLabel -> WORD_UPPERCASE .	(Rule 213)

	LPAREN	shift, and go to state 202

	COLON	reduce using rule 213 (LoopLabel)

State 120:

	SubExpression -> Literal .	(Rule 134)

	$default	reduce using rule 134 (SubExpression)

State 121:

	Expression -> CONSTANT_CALL_SCOPED .	(Rule 128)

	$default	reduce using rule 128 (Expression)

State 122:

	ArrayDereference -> '@{' . Variable '}'	(Rule 195)
	ArrayDereference -> '@{' . OPTIONAL-47 ArrayReference '}'	(Rule 196)

	MY	shift, and go to state 179
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131

	LBRACKET	reduce using rule 194 (OPTIONAL-47)

	VariableSymbolOrSelf	go to state 116
	OPTIONAL-47	go to state 204
	Variable	go to state 203
	TypeInner	go to state 205

State 123:

	SubExpression -> 'undef' .	(Rule 133)

	$default	reduce using rule 133 (SubExpression)

State 124:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 86)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-35 ')'	(Rule 130)
	SubExpression -> Variable .	(Rule 135)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN SubExpressionOrStdin	(Rule 181)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY SubExpression	(Rule 182)

	OP02_METHOD_THINARROW	shift, and go to state 209
	OP03_MATH_INC_DEC	shift, and go to state 207
	OP19_VARIABLE_ASSIGN	shift, and go to state 206
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 208

	')'	reduce using rule 135 (SubExpression)
	OP04_MATH_POW	reduce using rule 135 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 135 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 135 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 135 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 135 (SubExpression)
	OP08_STRING_CAT	reduce using rule 135 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 135 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 135 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 135 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 135 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 135 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 135 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 135 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 135 (SubExpression)
	OP18_TERNARY	reduce using rule 135 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 135 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 135 (SubExpression)

State 125:

	SubExpression -> ArrayDereference .	(Rule 137)

	$default	reduce using rule 137 (SubExpression)

State 126:

	OperatorVoid -> OP01_PRINT . OPTIONAL-32 ListElements ';'	(Rule 114)
	OperatorVoid -> OP01_PRINT . FHREF_SYMBOL_BRACES ListElements ';'	(Rule 115)

	FHREF_SYMBOL_BRACES	shift, and go to state 212
	STDOUT_STDERR	shift, and go to state 213

	'%{'	reduce using rule 111 (OPTIONAL-32)
	'@{'	reduce using rule 111 (OPTIONAL-32)
	'undef'	reduce using rule 111 (OPTIONAL-32)
	CONSTANT_CALL_SCOPED	reduce using rule 111 (OPTIONAL-32)
	LBRACE	reduce using rule 111 (OPTIONAL-32)
	LBRACKET	reduce using rule 111 (OPTIONAL-32)
	LITERAL_NUMBER	reduce using rule 111 (OPTIONAL-32)
	LITERAL_STRING	reduce using rule 111 (OPTIONAL-32)
	LPAREN	reduce using rule 111 (OPTIONAL-32)
	MY	reduce using rule 111 (OPTIONAL-32)
	OP01_CLOSE	reduce using rule 111 (OPTIONAL-32)
	OP01_NAMED	reduce using rule 111 (OPTIONAL-32)
	OP01_OPEN	reduce using rule 111 (OPTIONAL-32)
	OP01_QW	reduce using rule 111 (OPTIONAL-32)
	OP03_MATH_INC_DEC	reduce using rule 111 (OPTIONAL-32)
	OP05_LOGICAL_NEG	reduce using rule 111 (OPTIONAL-32)
	OP05_MATH_NEG_LPAREN	reduce using rule 111 (OPTIONAL-32)
	OP10_NAMED_UNARY	reduce using rule 111 (OPTIONAL-32)
	OP22_LOGICAL_NEG	reduce using rule 111 (OPTIONAL-32)
	SELF	reduce using rule 111 (OPTIONAL-32)
	VARIABLE_SYMBOL	reduce using rule 111 (OPTIONAL-32)
	WORD	reduce using rule 111 (OPTIONAL-32)
	WORD_SCOPED	reduce using rule 111 (OPTIONAL-32)
	WORD_UPPERCASE	reduce using rule 111 (OPTIONAL-32)

	PAREN-31	go to state 210
	OPTIONAL-32	go to state 211

State 127:

	SubExpression -> ArrayReference .	(Rule 136)

	$default	reduce using rule 136 (SubExpression)

State 128:

	SubExpression -> HashReference .	(Rule 138)

	$default	reduce using rule 138 (SubExpression)

State 129:

	Operator -> LPAREN . OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')'	(Rule 80)
	Operator -> LPAREN . OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'	(Rule 82)
	SubExpression -> LPAREN . SubExpression ')'	(Rule 140)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 216
	OP01_OPEN	shift, and go to state 100
	OP01_PRINT	shift, and go to state 214
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	Variable	go to state 171
	Literal	go to state 120
	Operator	go to state 91
	SubExpression	go to state 215
	HashDereference	go to state 89
	HashReference	go to state 128
	ArrayReference	go to state 127
	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	ArrayDereference	go to state 125
	Expression	go to state 173

State 130:

	Operation -> Statement .	(Rule 79)

	$default	reduce using rule 79 (Operation)

State 131:

	VariableSymbolOrSelf -> VARIABLE_SYMBOL .	(Rule 226)

	$default	reduce using rule 226 (VariableSymbolOrSelf)

State 132:

	Operator -> OP22_LOGICAL_NEG . SubExpression	(Rule 106)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	SubExpression	go to state 217
	HashDereference	go to state 89
	HashReference	go to state 128
	Operator	go to state 91
	Literal	go to state 120
	Variable	go to state 171
	Expression	go to state 173
	ArrayDereference	go to state 125
	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	ArrayReference	go to state 127

State 133:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN . OPTIONAL-33 ')' ';'	(Rule 117)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	MY	shift, and go to state 179
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP01_QW	shift, and go to state 191
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	')'	reduce using rule 113 (OPTIONAL-33)

	HashReference	go to state 128
	SubExpression	go to state 188
	Operator	go to state 91
	HashDereference	go to state 89
	Literal	go to state 120
	ListElement	go to state 190
	Variable	go to state 171
	TypeInner	go to state 189
	Expression	go to state 173
	ArrayDereference	go to state 125
	VariableSymbolOrSelf	go to state 116
	WordScoped	go to state 108
	OPTIONAL-33	go to state 218
	ArrayReference	go to state 127
	ListElements	go to state 219

State 134:

	Statement -> OPTIONAL-37 . Loop	(Rule 149)

	'for'	shift, and go to state 221
	'foreach'	shift, and go to state 224
	'while'	shift, and go to state 222

	LoopForEach	go to state 223
	LoopFor	go to state 225
	Loop	go to state 226
	LoopWhile	go to state 220

State 135:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 136:

	PAREN-36 -> LoopLabel . COLON	(Rule 145)

	COLON	shift, and go to state 227

State 137:

	TypeInnerConstant -> MY Type '$TYPED_' . WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 220)

	WORD_UPPERCASE	shift, and go to state 228

State 138:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';' .	(Rule 43)

	$default	reduce using rule 43 (Constant)

State 139:

	SubroutineArguments -> LPAREN_MY Type . VARIABLE_SYMBOL STAR-20 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 52)

	VARIABLE_SYMBOL	shift, and go to state 229

State 140:

	STAR-18 -> STAR-18 . Operation	(Rule 46)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-17 STAR-18 . '}' ';'	(Rule 48)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'if'	shift, and go to state 90
	'undef'	shift, and go to state 123
	'}'	shift, and go to state 230
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	MY	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 117
	OP01_NAMED_VOID	shift, and go to state 114
	OP01_NAMED_VOID_LPAREN	shift, and go to state 133
	OP01_NAMED_VOID_SCOLON	shift, and go to state 97
	OP01_OPEN	shift, and go to state 100
	OP01_PRINT	shift, and go to state 126
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP19_LOOP_CONTROL	shift, and go to state 113
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 110
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 119

	'for'	reduce using rule 147 (OPTIONAL-37)
	'foreach'	reduce using rule 147 (OPTIONAL-37)
	'while'	reduce using rule 147 (OPTIONAL-37)

	ArrayReference	go to state 127
	WordScoped	go to state 108
	ArrayDereference	go to state 125
	OperatorVoid	go to state 105
	Conditional	go to state 106
	Expression	go to state 101
	Variable	go to state 124
	VariableDeclaration	go to state 99
	Literal	go to state 120
	PAREN-36	go to state 96
	Operation	go to state 231
	VariableModification	go to state 93
	Operator	go to state 91
	SubExpression	go to state 92
	HashDereference	go to state 89
	VariableSymbolOrSelf	go to state 116
	LoopLabel	go to state 136
	OPTIONAL-37	go to state 134
	Statement	go to state 130
	HashReference	go to state 128

State 141:

	Properties -> 'our hashref $properties' . OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-26 '}' ';'	(Rule 65)
	Properties -> 'our hashref $properties' . OP19_VARIABLE_ASSIGN LBRACE '}' ';'	(Rule 66)

	OP19_VARIABLE_ASSIGN	shift, and go to state 232

State 142:

	STAR-23 -> STAR-23 Constant .	(Rule 57)

	$default	reduce using rule 57 (STAR-23)

State 143:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-21 STAR-22 STAR-23 Properties . STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	$default	reduce using rule 60 (STAR-24)

	STAR-24	go to state 233

State 144:

	Conditional -> 'if' LPAREN . SubExpression ')' CodeBlock STAR-39 OPTIONAL-41	(Rule 159)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	Expression	go to state 173
	ArrayDereference	go to state 125
	VariableSymbolOrSelf	go to state 116
	WordScoped	go to state 108
	ArrayReference	go to state 127
	HashDereference	go to state 89
	SubExpression	go to state 234
	Operator	go to state 91
	HashReference	go to state 128
	Literal	go to state 120
	Variable	go to state 171

State 145:

	Operator -> SubExpression OP08_STRING_CAT . SubExpression	(Rule 94)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	Variable	go to state 171
	Literal	go to state 120
	SubExpression	go to state 235
	HashReference	go to state 128
	Operator	go to state 91
	HashDereference	go to state 89
	ArrayReference	go to state 127
	VariableSymbolOrSelf	go to state 116
	WordScoped	go to state 108
	ArrayDereference	go to state 125
	Expression	go to state 173

State 146:

	Operator -> SubExpression OP15_LOGICAL_AND . SubExpression	(Rule 102)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	Variable	go to state 171
	Literal	go to state 120
	HashDereference	go to state 89
	SubExpression	go to state 236
	HashReference	go to state 128
	Operator	go to state 91
	ArrayReference	go to state 127
	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	ArrayDereference	go to state 125
	Expression	go to state 173

State 147:

	Operator -> SubExpression OP23_LOGICAL_AND . SubExpression	(Rule 107)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	ArrayReference	go to state 127
	Expression	go to state 173
	ArrayDereference	go to state 125
	Variable	go to state 171
	SubExpression	go to state 237
	HashReference	go to state 128
	HashDereference	go to state 89
	Operator	go to state 91
	Literal	go to state 120

State 148:

	Operator -> SubExpression OP11_COMPARE_LT_GT . SubExpression	(Rule 98)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	HashReference	go to state 128
	Operator	go to state 91
	SubExpression	go to state 238
	HashDereference	go to state 89
	Literal	go to state 120
	Variable	go to state 171
	Expression	go to state 173
	ArrayDereference	go to state 125
	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	ArrayReference	go to state 127

State 149:

	Operator -> SubExpression OP16_LOGICAL_OR . SubExpression	(Rule 103)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	Operator	go to state 91
	HashReference	go to state 128
	SubExpression	go to state 239
	HashDereference	go to state 89
	Literal	go to state 120
	Variable	go to state 171
	Expression	go to state 173
	ArrayDereference	go to state 125
	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	ArrayReference	go to state 127

State 150:

	Operator -> SubExpression OP06_REGEX_MATCH . OP06_REGEX_PATTERN	(Rule 90)

	OP06_REGEX_PATTERN	shift, and go to state 240

State 151:

	Operator -> SubExpression OP14_BITWISE_OR_XOR . SubExpression	(Rule 101)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	Literal	go to state 120
	SubExpression	go to state 241
	HashReference	go to state 128
	Operator	go to state 91
	HashDereference	go to state 89
	Variable	go to state 171
	ArrayDereference	go to state 125
	Expression	go to state 173
	ArrayReference	go to state 127
	VariableSymbolOrSelf	go to state 116
	WordScoped	go to state 108

State 152:

	Operator -> SubExpression OP07_STRING_REPEAT . SubExpression	(Rule 91)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	ArrayDereference	go to state 125
	Expression	go to state 173
	ArrayReference	go to state 127
	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	Literal	go to state 120
	SubExpression	go to state 242
	Operator	go to state 91
	HashDereference	go to state 89
	HashReference	go to state 128
	Variable	go to state 171

State 153:

	Operator -> SubExpression OP18_TERNARY . VariableOrLiteral COLON VariableOrLiteral	(Rule 105)

	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131

	VariableSymbolOrSelf	go to state 116
	Variable	go to state 244
	VariableOrLiteral	go to state 243
	Literal	go to state 245

State 154:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 104)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	Expression	go to state 173
	ArrayDereference	go to state 125
	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	ArrayReference	go to state 127
	HashReference	go to state 128
	HashDereference	go to state 89
	Operator	go to state 91
	SubExpression	go to state 246
	Literal	go to state 120
	Variable	go to state 171

State 155:

	Operator -> SubExpression OP13_BITWISE_AND . SubExpression	(Rule 100)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	Expression	go to state 173
	ArrayDereference	go to state 125
	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	ArrayReference	go to state 127
	SubExpression	go to state 247
	Operator	go to state 91
	HashReference	go to state 128
	HashDereference	go to state 89
	Literal	go to state 120
	Variable	go to state 171

State 156:

	Operator -> SubExpression OP12_COMPARE_EQ_NE . SubExpression	(Rule 99)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	Literal	go to state 120
	Operator	go to state 91
	HashReference	go to state 128
	HashDereference	go to state 89
	SubExpression	go to state 248
	Variable	go to state 171
	ArrayDereference	go to state 125
	Expression	go to state 173
	ArrayReference	go to state 127
	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116

State 157:

	Operator -> SubExpression OP24_LOGICAL_OR_XOR . SubExpression	(Rule 108)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	VariableSymbolOrSelf	go to state 116
	WordScoped	go to state 108
	ArrayReference	go to state 127
	Expression	go to state 173
	ArrayDereference	go to state 125
	Variable	go to state 171
	Operator	go to state 91
	SubExpression	go to state 249
	HashDereference	go to state 89
	HashReference	go to state 128
	Literal	go to state 120

State 158:

	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD . SubExpression	(Rule 92)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	Variable	go to state 171
	HashReference	go to state 128
	SubExpression	go to state 250
	HashDereference	go to state 89
	Operator	go to state 91
	Literal	go to state 120
	VariableSymbolOrSelf	go to state 116
	WordScoped	go to state 108
	ArrayReference	go to state 127
	Expression	go to state 173
	ArrayDereference	go to state 125

State 159:

	Operator -> SubExpression OP09_BITWISE_SHIFT . SubExpression	(Rule 95)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	Operator	go to state 91
	HashReference	go to state 128
	SubExpression	go to state 251
	HashDereference	go to state 89
	Literal	go to state 120
	Variable	go to state 171
	Expression	go to state 173
	ArrayDereference	go to state 125
	VariableSymbolOrSelf	go to state 116
	WordScoped	go to state 108
	ArrayReference	go to state 127

State 160:

	Operator -> SubExpression OP08_MATH_ADD_SUB . SubExpression	(Rule 93)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	ArrayReference	go to state 127
	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	ArrayDereference	go to state 125
	Expression	go to state 173
	Variable	go to state 171
	Literal	go to state 120
	HashReference	go to state 128
	HashDereference	go to state 89
	Operator	go to state 91
	SubExpression	go to state 252

State 161:

	Operator -> SubExpression OP04_MATH_POW . SubExpression	(Rule 87)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	ArrayReference	go to state 127
	VariableSymbolOrSelf	go to state 116
	WordScoped	go to state 108
	ArrayDereference	go to state 125
	Expression	go to state 173
	Variable	go to state 171
	Literal	go to state 120
	SubExpression	go to state 253
	HashReference	go to state 128
	Operator	go to state 91
	HashDereference	go to state 89

State 162:

	Statement -> VariableModification ';' .	(Rule 152)

	$default	reduce using rule 152 (Statement)

State 163:

	VariableOrLiteralOrWord -> WORD .	(Rule 225)

	$default	reduce using rule 225 (VariableOrLiteralOrWord)

State 164:

	HashReference -> LBRACE '}' .	(Rule 206)

	$default	reduce using rule 206 (HashReference)

State 165:

	HashReference -> LBRACE HashEntry . STAR-50 '}'	(Rule 205)

	$default	reduce using rule 204 (STAR-50)

	STAR-50	go to state 254

State 166:

	HashEntry -> HashDereference .	(Rule 200)

	$default	reduce using rule 200 (HashEntry)

State 167:

	HashEntry -> VariableOrLiteralOrWord . OP20_HASH_FATARROW OPTIONAL-48 SubExpression	(Rule 199)

	OP20_HASH_FATARROW	shift, and go to state 255

State 168:

	VariableOrLiteralOrWord -> Variable .	(Rule 223)

	$default	reduce using rule 223 (VariableOrLiteralOrWord)

State 169:

	VariableOrLiteralOrWord -> Literal .	(Rule 224)

	$default	reduce using rule 224 (VariableOrLiteralOrWord)

State 170:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 127)

	LPAREN	shift, and go to state 202

State 171:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 86)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-35 ')'	(Rule 130)
	SubExpression -> Variable .	(Rule 135)

	OP02_METHOD_THINARROW	shift, and go to state 209
	OP03_MATH_INC_DEC	shift, and go to state 207

	')'	reduce using rule 135 (SubExpression)
	';'	reduce using rule 135 (SubExpression)
	']'	reduce using rule 135 (SubExpression)
	'}'	reduce using rule 135 (SubExpression)
	OP04_MATH_POW	reduce using rule 135 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 135 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 135 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 135 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 135 (SubExpression)
	OP08_STRING_CAT	reduce using rule 135 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 135 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 135 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 135 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 135 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 135 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 135 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 135 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 135 (SubExpression)
	OP18_TERNARY	reduce using rule 135 (SubExpression)
	OP21_LIST_COMMA	reduce using rule 135 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 135 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 135 (SubExpression)

State 172:

	Operator -> OP01_NAMED . SubExpression	(Rule 81)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	Variable	go to state 171
	SubExpression	go to state 256
	HashDereference	go to state 89
	HashReference	go to state 128
	Operator	go to state 91
	Literal	go to state 120
	VariableSymbolOrSelf	go to state 116
	WordScoped	go to state 108
	ArrayReference	go to state 127
	Expression	go to state 173
	ArrayDereference	go to state 125

State 173:

	SubExpression -> Expression .	(Rule 132)

	$default	reduce using rule 132 (SubExpression)

State 174:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> OP10_NAMED_UNARY SubExpression .	(Rule 96)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159

	')'	reduce using rule 96 (Operator)
	';'	reduce using rule 96 (Operator)
	']'	reduce using rule 96 (Operator)
	'}'	reduce using rule 96 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 96 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 96 (Operator)
	OP13_BITWISE_AND	reduce using rule 96 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 96 (Operator)
	OP15_LOGICAL_AND	reduce using rule 96 (Operator)
	OP16_LOGICAL_OR	reduce using rule 96 (Operator)
	OP17_LIST_RANGE	reduce using rule 96 (Operator)
	OP18_TERNARY	reduce using rule 96 (Operator)
	OP21_LIST_COMMA	reduce using rule 96 (Operator)
	OP23_LOGICAL_AND	reduce using rule 96 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 96 (Operator)

State 175:

	Operator -> OP01_OPEN MY . TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 83)

	TYPE_FHREF	shift, and go to state 257

State 176:

	Operation -> Expression ';' .	(Rule 78)

	$default	reduce using rule 78 (Operation)

State 177:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 178:

	OPTIONAL-51 -> TypeInner .	(Rule 207)

	$default	reduce using rule 207 (OPTIONAL-51)

State 179:

	TypeInner -> MY . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 217)

	TYPE_INTEGER	shift, and go to state 54
	WORD	shift, and go to state 53
	WORD_SCOPED	shift, and go to state 55

	Type	go to state 258

State 180:

	HashDereference -> '%{' Variable . '}'	(Rule 209)

	'}'	shift, and go to state 259

State 181:

	HashDereference -> '%{' OPTIONAL-51 . HashReference '}'	(Rule 210)

	LBRACE	shift, and go to state 95

	HashReference	go to state 260

State 182:

	Operator -> OP01_CLOSE FHREF_SYMBOL .	(Rule 84)

	$default	reduce using rule 84 (Operator)

State 183:

	Expression -> WordScoped LPAREN . OPTIONAL-34 ')'	(Rule 129)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	MY	shift, and go to state 179
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP01_QW	shift, and go to state 191
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	')'	reduce using rule 123 (OPTIONAL-34)

	TypeInner	go to state 189
	Variable	go to state 171
	ListElement	go to state 190
	Literal	go to state 120
	HashDereference	go to state 89
	Operator	go to state 91
	SubExpression	go to state 188
	OPTIONAL-34	go to state 261
	HashReference	go to state 128
	ListElements	go to state 262
	ArrayReference	go to state 127
	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	ArrayDereference	go to state 125
	Expression	go to state 173

State 184:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW . ')'	(Rule 131)

	')'	shift, and go to state 263

State 185:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> OP05_MATH_NEG_LPAREN SubExpression . ')'	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)

	')'	shift, and go to state 264
	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155
	OP14_BITWISE_OR_XOR	shift, and go to state 151
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 153
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

State 186:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 85)

	$default	reduce using rule 85 (Operator)

State 187:

	OPTIONAL-46 -> ListElements .	(Rule 190)

	$default	reduce using rule 190 (OPTIONAL-46)

State 188:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)
	ListElement -> SubExpression .	(Rule 187)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155
	OP14_BITWISE_OR_XOR	shift, and go to state 151
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 153
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

	')'	reduce using rule 187 (ListElement)
	';'	reduce using rule 187 (ListElement)
	']'	reduce using rule 187 (ListElement)
	OP21_LIST_COMMA	reduce using rule 187 (ListElement)

State 189:

	ListElement -> TypeInner . SubExpression	(Rule 188)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	HashReference	go to state 128
	SubExpression	go to state 265
	HashDereference	go to state 89
	Operator	go to state 91
	Literal	go to state 120
	Variable	go to state 171
	Expression	go to state 173
	ArrayDereference	go to state 125
	VariableSymbolOrSelf	go to state 116
	WordScoped	go to state 108
	ArrayReference	go to state 127

State 190:

	ListElements -> ListElement . STAR-45	(Rule 186)

	$default	reduce using rule 185 (STAR-45)

	STAR-45	go to state 266

State 191:

	ListElement -> OP01_QW .	(Rule 189)

	$default	reduce using rule 189 (ListElement)

State 192:

	ArrayReference -> LBRACKET OPTIONAL-46 . ']'	(Rule 192)

	']'	shift, and go to state 267

State 193:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 121)

	';'	shift, and go to state 268

State 194:

	LoopLabel -> WORD_UPPERCASE .	(Rule 213)

	$default	reduce using rule 213 (LoopLabel)

State 195:

	OperatorVoid -> OP01_NAMED_VOID ListElements . ';'	(Rule 118)

	';'	shift, and go to state 269

State 196:

	VariableDeclaration -> MY Type . VARIABLE_SYMBOL ';'	(Rule 177)
	VariableDeclaration -> MY Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 178)
	VariableDeclaration -> MY Type . VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 179)

	VARIABLE_SYMBOL	shift, and go to state 270

State 197:

	VariableDeclaration -> MY TYPE_FHREF . FHREF_SYMBOL ';'	(Rule 180)

	FHREF_SYMBOL	shift, and go to state 271

State 198:

	STAR-43 -> STAR-43 . VariableRetrieval	(Rule 171)
	Variable -> VariableSymbolOrSelf STAR-43 .	(Rule 173)

	OP02_ARRAY_THINARROW	shift, and go to state 274
	OP02_HASH_THINARROW	shift, and go to state 273

	')'	reduce using rule 173 (Variable)
	';'	reduce using rule 173 (Variable)
	']'	reduce using rule 173 (Variable)
	'}'	reduce using rule 173 (Variable)
	COLON	reduce using rule 173 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 173 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 173 (Variable)
	OP04_MATH_POW	reduce using rule 173 (Variable)
	OP06_REGEX_MATCH	reduce using rule 173 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 173 (Variable)
	OP07_STRING_REPEAT	reduce using rule 173 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 173 (Variable)
	OP08_STRING_CAT	reduce using rule 173 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 173 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 173 (Variable)
	OP12_COMPARE_EQ_NE	reduce using rule 173 (Variable)
	OP13_BITWISE_AND	reduce using rule 173 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 173 (Variable)
	OP15_LOGICAL_AND	reduce using rule 173 (Variable)
	OP16_LOGICAL_OR	reduce using rule 173 (Variable)
	OP17_LIST_RANGE	reduce using rule 173 (Variable)
	OP18_TERNARY	reduce using rule 173 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 173 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 173 (Variable)
	OP20_HASH_FATARROW	reduce using rule 173 (Variable)
	OP21_LIST_COMMA	reduce using rule 173 (Variable)
	OP23_LOGICAL_AND	reduce using rule 173 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 173 (Variable)

	VariableRetrieval	go to state 272

State 199:

	OperatorVoid -> OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ';'	(Rule 119)

	OP21_LIST_COMMA	shift, and go to state 275

State 200:

	Operator -> OP01_NAMED SubExpression .	(Rule 81)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)
	ListElement -> SubExpression .	(Rule 187)

	')'	reduce using rule 81 (Operator)
	';'	reduce using rule 81 (Operator)
	OP04_MATH_POW	reduce using rule 81 (Operator)
	OP06_REGEX_MATCH	reduce using rule 81 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 81 (Operator)
	OP07_STRING_REPEAT	reduce using rule 81 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 81 (Operator)
	OP08_STRING_CAT	reduce using rule 81 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 81 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 81 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 81 (Operator)
	OP13_BITWISE_AND	reduce using rule 81 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 81 (Operator)
	OP15_LOGICAL_AND	reduce using rule 81 (Operator)
	OP16_LOGICAL_OR	reduce using rule 81 (Operator)
	OP17_LIST_RANGE	reduce using rule 81 (Operator)
	OP18_TERNARY	reduce using rule 81 (Operator)
	OP21_LIST_COMMA	reduce using rule 187 (ListElement)
	OP23_LOGICAL_AND	reduce using rule 81 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 81 (Operator)

State 201:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> OP05_LOGICAL_NEG SubExpression .	(Rule 88)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)

	OP04_MATH_POW	shift, and go to state 161

	')'	reduce using rule 88 (Operator)
	';'	reduce using rule 88 (Operator)
	']'	reduce using rule 88 (Operator)
	'}'	reduce using rule 88 (Operator)
	OP06_REGEX_MATCH	reduce using rule 88 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 88 (Operator)
	OP07_STRING_REPEAT	reduce using rule 88 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 88 (Operator)
	OP08_STRING_CAT	reduce using rule 88 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 88 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 88 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 88 (Operator)
	OP13_BITWISE_AND	reduce using rule 88 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 88 (Operator)
	OP15_LOGICAL_AND	reduce using rule 88 (Operator)
	OP16_LOGICAL_OR	reduce using rule 88 (Operator)
	OP17_LIST_RANGE	reduce using rule 88 (Operator)
	OP18_TERNARY	reduce using rule 88 (Operator)
	OP21_LIST_COMMA	reduce using rule 88 (Operator)
	OP23_LOGICAL_AND	reduce using rule 88 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 88 (Operator)

State 202:

	Expression -> WORD_UPPERCASE LPAREN . ')'	(Rule 127)

	')'	shift, and go to state 276

State 203:

	ArrayDereference -> '@{' Variable . '}'	(Rule 195)

	'}'	shift, and go to state 277

State 204:

	ArrayDereference -> '@{' OPTIONAL-47 . ArrayReference '}'	(Rule 196)

	LBRACKET	shift, and go to state 112

	ArrayReference	go to state 278

State 205:

	OPTIONAL-47 -> TypeInner .	(Rule 193)

	$default	reduce using rule 193 (OPTIONAL-47)

State 206:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . SubExpressionOrStdin	(Rule 181)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	STDIN	shift, and go to state 281
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	SubExpressionOrStdin	go to state 279
	Variable	go to state 171
	Literal	go to state 120
	Operator	go to state 91
	HashReference	go to state 128
	SubExpression	go to state 280
	HashDereference	go to state 89
	ArrayReference	go to state 127
	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	ArrayDereference	go to state 125
	Expression	go to state 173

State 207:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 86)

	$default	reduce using rule 86 (Operator)

State 208:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . SubExpression	(Rule 182)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	ArrayDereference	go to state 125
	Expression	go to state 173
	ArrayReference	go to state 127
	VariableSymbolOrSelf	go to state 116
	WordScoped	go to state 108
	Literal	go to state 120
	SubExpression	go to state 282
	HashReference	go to state 128
	HashDereference	go to state 89
	Operator	go to state 91
	Variable	go to state 171

State 209:

	Expression -> Variable OP02_METHOD_THINARROW . LPAREN OPTIONAL-35 ')'	(Rule 130)

	LPAREN	shift, and go to state 283

State 210:

	OPTIONAL-32 -> PAREN-31 .	(Rule 110)

	$default	reduce using rule 110 (OPTIONAL-32)

State 211:

	OperatorVoid -> OP01_PRINT OPTIONAL-32 . ListElements ';'	(Rule 114)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	MY	shift, and go to state 179
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP01_QW	shift, and go to state 191
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	ArrayReference	go to state 127
	ListElements	go to state 284
	Expression	go to state 173
	ArrayDereference	go to state 125
	ListElement	go to state 190
	TypeInner	go to state 189
	Variable	go to state 171
	SubExpression	go to state 188
	Operator	go to state 91
	HashDereference	go to state 89
	HashReference	go to state 128
	Literal	go to state 120

State 212:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES . ListElements ';'	(Rule 115)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	MY	shift, and go to state 179
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP01_QW	shift, and go to state 191
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	Expression	go to state 173
	ArrayDereference	go to state 125
	VariableSymbolOrSelf	go to state 116
	WordScoped	go to state 108
	ListElements	go to state 285
	ArrayReference	go to state 127
	SubExpression	go to state 188
	HashReference	go to state 128
	Operator	go to state 91
	HashDereference	go to state 89
	Literal	go to state 120
	ListElement	go to state 190
	Variable	go to state 171
	TypeInner	go to state 189

State 213:

	PAREN-31 -> STDOUT_STDERR .	(Rule 109)

	$default	reduce using rule 109 (PAREN-31)

State 214:

	Operator -> LPAREN OP01_PRINT . FHREF_SYMBOL_BRACES ListElements ')'	(Rule 80)

	FHREF_SYMBOL_BRACES	shift, and go to state 286

State 215:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)
	SubExpression -> LPAREN SubExpression . ')'	(Rule 140)

	')'	shift, and go to state 287
	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155
	OP14_BITWISE_OR_XOR	shift, and go to state 151
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 153
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

State 216:

	Operator -> OP01_NAMED . SubExpression	(Rule 81)
	Operator -> LPAREN OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ')'	(Rule 82)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	MY	shift, and go to state 179
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP01_QW	shift, and go to state 191
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	ArrayReference	go to state 127
	Expression	go to state 173
	ArrayDereference	go to state 125
	ListElement	go to state 288
	TypeInner	go to state 189
	Variable	go to state 171
	Operator	go to state 91
	HashReference	go to state 128
	SubExpression	go to state 200
	HashDereference	go to state 89
	Literal	go to state 120

State 217:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> OP22_LOGICAL_NEG SubExpression .	(Rule 106)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155
	OP14_BITWISE_OR_XOR	shift, and go to state 151
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 153

	')'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 218:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-33 . ')' ';'	(Rule 117)

	')'	shift, and go to state 289

State 219:

	OPTIONAL-33 -> ListElements .	(Rule 112)

	$default	reduce using rule 112 (OPTIONAL-33)

State 220:

	Loop -> LoopWhile .	(Rule 162)

	$default	reduce using rule 162 (Loop)

State 221:

	LoopFor -> 'for' . MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 163)
	LoopFor -> 'for' . LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpression ';' VARIABLE_SYMBOL OP11_COMPARE_LT_GT SubExpression ';' SubExpressionOrVarMod ')' CodeBlock	(Rule 164)

	LPAREN_MY	shift, and go to state 291
	MY	shift, and go to state 290

State 222:

	LoopWhile -> 'while' . LPAREN SubExpression ')' CodeBlock	(Rule 166)
	LoopWhile -> 'while' . LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ')' CodeBlock	(Rule 167)

	LPAREN	shift, and go to state 293
	LPAREN_MY	shift, and go to state 292

State 223:

	Loop -> LoopForEach .	(Rule 161)

	$default	reduce using rule 161 (Loop)

State 224:

	LoopForEach -> 'foreach' . MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 165)

	MY	shift, and go to state 294

State 225:

	Loop -> LoopFor .	(Rule 160)

	$default	reduce using rule 160 (Loop)

State 226:

	Statement -> OPTIONAL-37 Loop .	(Rule 149)

	$default	reduce using rule 149 (Statement)

State 227:

	PAREN-36 -> LoopLabel COLON .	(Rule 145)

	$default	reduce using rule 145 (PAREN-36)

State 228:

	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE . OP19_VARIABLE_ASSIGN	(Rule 220)

	OP19_VARIABLE_ASSIGN	shift, and go to state 295

State 229:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL . STAR-20 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 52)

	$default	reduce using rule 51 (STAR-20)

	STAR-20	go to state 296

State 230:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-17 STAR-18 '}' . ';'	(Rule 48)

	';'	shift, and go to state 297

State 231:

	STAR-18 -> STAR-18 Operation .	(Rule 46)

	$default	reduce using rule 46 (STAR-18)

State 232:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN . LBRACE HashEntryProperties STAR-26 '}' ';'	(Rule 65)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN . LBRACE '}' ';'	(Rule 66)

	LBRACE	shift, and go to state 298

State 233:

	STAR-24 -> STAR-24 . MethodOrSubroutine	(Rule 59)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-21 STAR-22 STAR-23 Properties STAR-24 . LITERAL_NUMBER ';'	(Rule 61)

	'our'	shift, and go to state 303
	LITERAL_NUMBER	shift, and go to state 301

	Method	go to state 299
	MethodOrSubroutine	go to state 302
	Subroutine	go to state 300

State 234:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)
	Conditional -> 'if' LPAREN SubExpression . ')' CodeBlock STAR-39 OPTIONAL-41	(Rule 159)

	')'	shift, and go to state 304
	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155
	OP14_BITWISE_OR_XOR	shift, and go to state 151
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 153
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

State 235:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression OP08_STRING_CAT SubExpression .	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160

	')'	reduce using rule 94 (Operator)
	';'	reduce using rule 94 (Operator)
	']'	reduce using rule 94 (Operator)
	'}'	reduce using rule 94 (Operator)
	OP08_STRING_CAT	reduce using rule 94 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 94 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 94 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 94 (Operator)
	OP13_BITWISE_AND	reduce using rule 94 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 94 (Operator)
	OP15_LOGICAL_AND	reduce using rule 94 (Operator)
	OP16_LOGICAL_OR	reduce using rule 94 (Operator)
	OP17_LIST_RANGE	reduce using rule 94 (Operator)
	OP18_TERNARY	reduce using rule 94 (Operator)
	OP21_LIST_COMMA	reduce using rule 94 (Operator)
	OP23_LOGICAL_AND	reduce using rule 94 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 94 (Operator)

State 236:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression OP15_LOGICAL_AND SubExpression .	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155
	OP14_BITWISE_OR_XOR	shift, and go to state 151

	')'	reduce using rule 102 (Operator)
	';'	reduce using rule 102 (Operator)
	']'	reduce using rule 102 (Operator)
	'}'	reduce using rule 102 (Operator)
	OP15_LOGICAL_AND	reduce using rule 102 (Operator)
	OP16_LOGICAL_OR	reduce using rule 102 (Operator)
	OP17_LIST_RANGE	reduce using rule 102 (Operator)
	OP18_TERNARY	reduce using rule 102 (Operator)
	OP21_LIST_COMMA	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 237:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression OP23_LOGICAL_AND SubExpression .	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155
	OP14_BITWISE_OR_XOR	shift, and go to state 151
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 153

	')'	reduce using rule 107 (Operator)
	';'	reduce using rule 107 (Operator)
	']'	reduce using rule 107 (Operator)
	'}'	reduce using rule 107 (Operator)
	OP21_LIST_COMMA	reduce using rule 107 (Operator)
	OP23_LOGICAL_AND	reduce using rule 107 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 107 (Operator)

State 238:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression .	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 98 (Operator)
	';'	reduce using rule 98 (Operator)
	']'	reduce using rule 98 (Operator)
	'}'	reduce using rule 98 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 98 (Operator)
	OP13_BITWISE_AND	reduce using rule 98 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 98 (Operator)
	OP15_LOGICAL_AND	reduce using rule 98 (Operator)
	OP16_LOGICAL_OR	reduce using rule 98 (Operator)
	OP17_LIST_RANGE	reduce using rule 98 (Operator)
	OP18_TERNARY	reduce using rule 98 (Operator)
	OP21_LIST_COMMA	reduce using rule 98 (Operator)
	OP23_LOGICAL_AND	reduce using rule 98 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 98 (Operator)

State 239:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression OP16_LOGICAL_OR SubExpression .	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155
	OP14_BITWISE_OR_XOR	shift, and go to state 151
	OP15_LOGICAL_AND	shift, and go to state 146

	')'	reduce using rule 103 (Operator)
	';'	reduce using rule 103 (Operator)
	']'	reduce using rule 103 (Operator)
	'}'	reduce using rule 103 (Operator)
	OP16_LOGICAL_OR	reduce using rule 103 (Operator)
	OP17_LIST_RANGE	reduce using rule 103 (Operator)
	OP18_TERNARY	reduce using rule 103 (Operator)
	OP21_LIST_COMMA	reduce using rule 103 (Operator)
	OP23_LOGICAL_AND	reduce using rule 103 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 103 (Operator)

State 240:

	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN .	(Rule 90)

	$default	reduce using rule 90 (Operator)

State 241:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression .	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155

	')'	reduce using rule 101 (Operator)
	';'	reduce using rule 101 (Operator)
	']'	reduce using rule 101 (Operator)
	'}'	reduce using rule 101 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 101 (Operator)
	OP15_LOGICAL_AND	reduce using rule 101 (Operator)
	OP16_LOGICAL_OR	reduce using rule 101 (Operator)
	OP17_LIST_RANGE	reduce using rule 101 (Operator)
	OP18_TERNARY	reduce using rule 101 (Operator)
	OP21_LIST_COMMA	reduce using rule 101 (Operator)
	OP23_LOGICAL_AND	reduce using rule 101 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 101 (Operator)

State 242:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression OP07_STRING_REPEAT SubExpression .	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150

	')'	reduce using rule 91 (Operator)
	';'	reduce using rule 91 (Operator)
	']'	reduce using rule 91 (Operator)
	'}'	reduce using rule 91 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 91 (Operator)
	OP07_STRING_REPEAT	reduce using rule 91 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 91 (Operator)
	OP08_STRING_CAT	reduce using rule 91 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 91 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 91 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 91 (Operator)
	OP13_BITWISE_AND	reduce using rule 91 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 91 (Operator)
	OP15_LOGICAL_AND	reduce using rule 91 (Operator)
	OP16_LOGICAL_OR	reduce using rule 91 (Operator)
	OP17_LIST_RANGE	reduce using rule 91 (Operator)
	OP18_TERNARY	reduce using rule 91 (Operator)
	OP21_LIST_COMMA	reduce using rule 91 (Operator)
	OP23_LOGICAL_AND	reduce using rule 91 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 91 (Operator)

State 243:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral . COLON VariableOrLiteral	(Rule 105)

	COLON	shift, and go to state 305

State 244:

	VariableOrLiteral -> Variable .	(Rule 221)

	$default	reduce using rule 221 (VariableOrLiteral)

State 245:

	VariableOrLiteral -> Literal .	(Rule 222)

	$default	reduce using rule 222 (VariableOrLiteral)

State 246:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155
	OP14_BITWISE_OR_XOR	shift, and go to state 151
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP18_TERNARY	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 247:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression OP13_BITWISE_AND SubExpression .	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156

	')'	reduce using rule 100 (Operator)
	';'	reduce using rule 100 (Operator)
	']'	reduce using rule 100 (Operator)
	'}'	reduce using rule 100 (Operator)
	OP13_BITWISE_AND	reduce using rule 100 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 100 (Operator)
	OP15_LOGICAL_AND	reduce using rule 100 (Operator)
	OP16_LOGICAL_OR	reduce using rule 100 (Operator)
	OP17_LIST_RANGE	reduce using rule 100 (Operator)
	OP18_TERNARY	reduce using rule 100 (Operator)
	OP21_LIST_COMMA	reduce using rule 100 (Operator)
	OP23_LOGICAL_AND	reduce using rule 100 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 100 (Operator)

State 248:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression .	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148

	OP12_COMPARE_EQ_NE	error (nonassociative)

	')'	reduce using rule 99 (Operator)
	';'	reduce using rule 99 (Operator)
	']'	reduce using rule 99 (Operator)
	'}'	reduce using rule 99 (Operator)
	OP13_BITWISE_AND	reduce using rule 99 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 99 (Operator)
	OP15_LOGICAL_AND	reduce using rule 99 (Operator)
	OP16_LOGICAL_OR	reduce using rule 99 (Operator)
	OP17_LIST_RANGE	reduce using rule 99 (Operator)
	OP18_TERNARY	reduce using rule 99 (Operator)
	OP21_LIST_COMMA	reduce using rule 99 (Operator)
	OP23_LOGICAL_AND	reduce using rule 99 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 99 (Operator)

State 249:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)
	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression .	(Rule 108)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155
	OP14_BITWISE_OR_XOR	shift, and go to state 151
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 153
	OP23_LOGICAL_AND	shift, and go to state 147

	')'	reduce using rule 108 (Operator)
	';'	reduce using rule 108 (Operator)
	']'	reduce using rule 108 (Operator)
	'}'	reduce using rule 108 (Operator)
	OP21_LIST_COMMA	reduce using rule 108 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 108 (Operator)

State 250:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression .	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_STRING_REPEAT	shift, and go to state 152

	')'	reduce using rule 92 (Operator)
	';'	reduce using rule 92 (Operator)
	']'	reduce using rule 92 (Operator)
	'}'	reduce using rule 92 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 92 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 92 (Operator)
	OP08_STRING_CAT	reduce using rule 92 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 92 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 92 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 92 (Operator)
	OP13_BITWISE_AND	reduce using rule 92 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 92 (Operator)
	OP15_LOGICAL_AND	reduce using rule 92 (Operator)
	OP16_LOGICAL_OR	reduce using rule 92 (Operator)
	OP17_LIST_RANGE	reduce using rule 92 (Operator)
	OP18_TERNARY	reduce using rule 92 (Operator)
	OP21_LIST_COMMA	reduce using rule 92 (Operator)
	OP23_LOGICAL_AND	reduce using rule 92 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 92 (Operator)

State 251:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression .	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145

	')'	reduce using rule 95 (Operator)
	';'	reduce using rule 95 (Operator)
	']'	reduce using rule 95 (Operator)
	'}'	reduce using rule 95 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 95 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 95 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 95 (Operator)
	OP13_BITWISE_AND	reduce using rule 95 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 95 (Operator)
	OP15_LOGICAL_AND	reduce using rule 95 (Operator)
	OP16_LOGICAL_OR	reduce using rule 95 (Operator)
	OP17_LIST_RANGE	reduce using rule 95 (Operator)
	OP18_TERNARY	reduce using rule 95 (Operator)
	OP21_LIST_COMMA	reduce using rule 95 (Operator)
	OP23_LOGICAL_AND	reduce using rule 95 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 95 (Operator)

State 252:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression .	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152

	')'	reduce using rule 93 (Operator)
	';'	reduce using rule 93 (Operator)
	']'	reduce using rule 93 (Operator)
	'}'	reduce using rule 93 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 93 (Operator)
	OP08_STRING_CAT	reduce using rule 93 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 93 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 93 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 93 (Operator)
	OP13_BITWISE_AND	reduce using rule 93 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 93 (Operator)
	OP15_LOGICAL_AND	reduce using rule 93 (Operator)
	OP16_LOGICAL_OR	reduce using rule 93 (Operator)
	OP17_LIST_RANGE	reduce using rule 93 (Operator)
	OP18_TERNARY	reduce using rule 93 (Operator)
	OP21_LIST_COMMA	reduce using rule 93 (Operator)
	OP23_LOGICAL_AND	reduce using rule 93 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 93 (Operator)

State 253:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression OP04_MATH_POW SubExpression .	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)

	OP04_MATH_POW	shift, and go to state 161

	')'	reduce using rule 87 (Operator)
	';'	reduce using rule 87 (Operator)
	']'	reduce using rule 87 (Operator)
	'}'	reduce using rule 87 (Operator)
	OP06_REGEX_MATCH	reduce using rule 87 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 87 (Operator)
	OP07_STRING_REPEAT	reduce using rule 87 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 87 (Operator)
	OP08_STRING_CAT	reduce using rule 87 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 87 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 87 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 87 (Operator)
	OP13_BITWISE_AND	reduce using rule 87 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 87 (Operator)
	OP15_LOGICAL_AND	reduce using rule 87 (Operator)
	OP16_LOGICAL_OR	reduce using rule 87 (Operator)
	OP17_LIST_RANGE	reduce using rule 87 (Operator)
	OP18_TERNARY	reduce using rule 87 (Operator)
	OP21_LIST_COMMA	reduce using rule 87 (Operator)
	OP23_LOGICAL_AND	reduce using rule 87 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 87 (Operator)

State 254:

	STAR-50 -> STAR-50 . PAREN-49	(Rule 203)
	HashReference -> LBRACE HashEntry STAR-50 . '}'	(Rule 205)

	'}'	shift, and go to state 307
	OP21_LIST_COMMA	shift, and go to state 306

	PAREN-49	go to state 308

State 255:

	HashEntry -> VariableOrLiteralOrWord OP20_HASH_FATARROW . OPTIONAL-48 SubExpression	(Rule 199)

	MY	shift, and go to state 179

	'%{'	reduce using rule 198 (OPTIONAL-48)
	'@{'	reduce using rule 198 (OPTIONAL-48)
	'undef'	reduce using rule 198 (OPTIONAL-48)
	CONSTANT_CALL_SCOPED	reduce using rule 198 (OPTIONAL-48)
	LBRACE	reduce using rule 198 (OPTIONAL-48)
	LBRACKET	reduce using rule 198 (OPTIONAL-48)
	LITERAL_NUMBER	reduce using rule 198 (OPTIONAL-48)
	LITERAL_STRING	reduce using rule 198 (OPTIONAL-48)
	LPAREN	reduce using rule 198 (OPTIONAL-48)
	OP01_CLOSE	reduce using rule 198 (OPTIONAL-48)
	OP01_NAMED	reduce using rule 198 (OPTIONAL-48)
	OP01_OPEN	reduce using rule 198 (OPTIONAL-48)
	OP03_MATH_INC_DEC	reduce using rule 198 (OPTIONAL-48)
	OP05_LOGICAL_NEG	reduce using rule 198 (OPTIONAL-48)
	OP05_MATH_NEG_LPAREN	reduce using rule 198 (OPTIONAL-48)
	OP10_NAMED_UNARY	reduce using rule 198 (OPTIONAL-48)
	OP22_LOGICAL_NEG	reduce using rule 198 (OPTIONAL-48)
	SELF	reduce using rule 198 (OPTIONAL-48)
	VARIABLE_SYMBOL	reduce using rule 198 (OPTIONAL-48)
	WORD	reduce using rule 198 (OPTIONAL-48)
	WORD_SCOPED	reduce using rule 198 (OPTIONAL-48)
	WORD_UPPERCASE	reduce using rule 198 (OPTIONAL-48)

	TypeInner	go to state 309
	OPTIONAL-48	go to state 310

State 256:

	Operator -> OP01_NAMED SubExpression .	(Rule 81)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)

	')'	reduce using rule 81 (Operator)
	';'	reduce using rule 81 (Operator)
	']'	reduce using rule 81 (Operator)
	'}'	reduce using rule 81 (Operator)
	OP04_MATH_POW	reduce using rule 81 (Operator)
	OP06_REGEX_MATCH	reduce using rule 81 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 81 (Operator)
	OP07_STRING_REPEAT	reduce using rule 81 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 81 (Operator)
	OP08_STRING_CAT	reduce using rule 81 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 81 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 81 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 81 (Operator)
	OP13_BITWISE_AND	reduce using rule 81 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 81 (Operator)
	OP15_LOGICAL_AND	reduce using rule 81 (Operator)
	OP16_LOGICAL_OR	reduce using rule 81 (Operator)
	OP17_LIST_RANGE	reduce using rule 81 (Operator)
	OP18_TERNARY	reduce using rule 81 (Operator)
	OP21_LIST_COMMA	reduce using rule 81 (Operator)
	OP23_LOGICAL_AND	reduce using rule 81 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 81 (Operator)

State 257:

	Operator -> OP01_OPEN MY TYPE_FHREF . FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 83)

	FHREF_SYMBOL	shift, and go to state 311

State 258:

	TypeInner -> MY Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 217)

	'$TYPED_'	shift, and go to state 312

State 259:

	HashDereference -> '%{' Variable '}' .	(Rule 209)

	$default	reduce using rule 209 (HashDereference)

State 260:

	HashDereference -> '%{' OPTIONAL-51 HashReference . '}'	(Rule 210)

	'}'	shift, and go to state 313

State 261:

	Expression -> WordScoped LPAREN OPTIONAL-34 . ')'	(Rule 129)

	')'	shift, and go to state 314

State 262:

	OPTIONAL-34 -> ListElements .	(Rule 122)

	$default	reduce using rule 122 (OPTIONAL-34)

State 263:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW ')' .	(Rule 131)

	$default	reduce using rule 131 (Expression)

State 264:

	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')' .	(Rule 89)

	$default	reduce using rule 89 (Operator)

State 265:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)
	ListElement -> TypeInner SubExpression .	(Rule 188)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155
	OP14_BITWISE_OR_XOR	shift, and go to state 151
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 153
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

	')'	reduce using rule 188 (ListElement)
	';'	reduce using rule 188 (ListElement)
	']'	reduce using rule 188 (ListElement)
	OP21_LIST_COMMA	reduce using rule 188 (ListElement)

State 266:

	STAR-45 -> STAR-45 . PAREN-44	(Rule 184)
	ListElements -> ListElement STAR-45 .	(Rule 186)

	OP21_LIST_COMMA	shift, and go to state 316

	')'	reduce using rule 186 (ListElements)
	';'	reduce using rule 186 (ListElements)
	']'	reduce using rule 186 (ListElements)

	PAREN-44	go to state 315

State 267:

	ArrayReference -> LBRACKET OPTIONAL-46 ']' .	(Rule 192)

	$default	reduce using rule 192 (ArrayReference)

State 268:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 121)

	$default	reduce using rule 121 (OperatorVoid)

State 269:

	OperatorVoid -> OP01_NAMED_VOID ListElements ';' .	(Rule 118)

	$default	reduce using rule 118 (OperatorVoid)

State 270:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL . ';'	(Rule 177)
	VariableDeclaration -> MY Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 178)
	VariableDeclaration -> MY Type VARIABLE_SYMBOL . OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 179)

	';'	shift, and go to state 317
	OP02_ARRAY_THINARROW	shift, and go to state 318
	OP19_VARIABLE_ASSIGN	shift, and go to state 319

State 271:

	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL . ';'	(Rule 180)

	';'	shift, and go to state 320

State 272:

	STAR-43 -> STAR-43 VariableRetrieval .	(Rule 171)

	$default	reduce using rule 171 (STAR-43)

State 273:

	VariableRetrieval -> OP02_HASH_THINARROW . SubExpression '}'	(Rule 175)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 176)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 321
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	ArrayReference	go to state 127
	Expression	go to state 173
	ArrayDereference	go to state 125
	Variable	go to state 171
	HashReference	go to state 128
	SubExpression	go to state 322
	HashDereference	go to state 89
	Operator	go to state 91
	Literal	go to state 120

State 274:

	VariableRetrieval -> OP02_ARRAY_THINARROW . SubExpression ']'	(Rule 174)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	ArrayReference	go to state 127
	Expression	go to state 173
	ArrayDereference	go to state 125
	Variable	go to state 171
	SubExpression	go to state 323
	HashDereference	go to state 89
	Operator	go to state 91
	HashReference	go to state 128
	Literal	go to state 120

State 275:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ';'	(Rule 119)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	MY	shift, and go to state 179
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP01_QW	shift, and go to state 191
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	ArrayDereference	go to state 125
	Expression	go to state 173
	ListElements	go to state 324
	ArrayReference	go to state 127
	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	Literal	go to state 120
	Operator	go to state 91
	HashReference	go to state 128
	SubExpression	go to state 188
	HashDereference	go to state 89
	TypeInner	go to state 189
	Variable	go to state 171
	ListElement	go to state 190

State 276:

	Expression -> WORD_UPPERCASE LPAREN ')' .	(Rule 127)

	$default	reduce using rule 127 (Expression)

State 277:

	ArrayDereference -> '@{' Variable '}' .	(Rule 195)

	$default	reduce using rule 195 (ArrayDereference)

State 278:

	ArrayDereference -> '@{' OPTIONAL-47 ArrayReference . '}'	(Rule 196)

	'}'	shift, and go to state 325

State 279:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin .	(Rule 181)

	$default	reduce using rule 181 (VariableModification)

State 280:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)
	SubExpressionOrStdin -> SubExpression .	(Rule 141)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155
	OP14_BITWISE_OR_XOR	shift, and go to state 151
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 153
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

	')'	reduce using rule 141 (SubExpressionOrStdin)
	';'	reduce using rule 141 (SubExpressionOrStdin)

State 281:

	SubExpressionOrStdin -> STDIN .	(Rule 142)

	$default	reduce using rule 142 (SubExpressionOrStdin)

State 282:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression .	(Rule 182)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155
	OP14_BITWISE_OR_XOR	shift, and go to state 151
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 153
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

	')'	reduce using rule 182 (VariableModification)
	';'	reduce using rule 182 (VariableModification)

State 283:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN . OPTIONAL-35 ')'	(Rule 130)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	MY	shift, and go to state 179
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP01_QW	shift, and go to state 191
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	')'	reduce using rule 125 (OPTIONAL-35)

	ListElements	go to state 326
	ArrayReference	go to state 127
	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	ArrayDereference	go to state 125
	Expression	go to state 173
	TypeInner	go to state 189
	OPTIONAL-35	go to state 327
	Variable	go to state 171
	ListElement	go to state 190
	Literal	go to state 120
	HashReference	go to state 128
	Operator	go to state 91
	SubExpression	go to state 188
	HashDereference	go to state 89

State 284:

	OperatorVoid -> OP01_PRINT OPTIONAL-32 ListElements . ';'	(Rule 114)

	';'	shift, and go to state 328

State 285:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements . ';'	(Rule 115)

	';'	shift, and go to state 329

State 286:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES . ListElements ')'	(Rule 80)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	MY	shift, and go to state 179
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP01_QW	shift, and go to state 191
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	TypeInner	go to state 189
	Variable	go to state 171
	ListElement	go to state 190
	Literal	go to state 120
	HashDereference	go to state 89
	Operator	go to state 91
	SubExpression	go to state 188
	HashReference	go to state 128
	ArrayReference	go to state 127
	ListElements	go to state 330
	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	ArrayDereference	go to state 125
	Expression	go to state 173

State 287:

	SubExpression -> LPAREN SubExpression ')' .	(Rule 140)

	$default	reduce using rule 140 (SubExpression)

State 288:

	Operator -> LPAREN OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ')'	(Rule 82)

	OP21_LIST_COMMA	shift, and go to state 331

State 289:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-33 ')' . ';'	(Rule 117)

	';'	shift, and go to state 332

State 290:

	LoopFor -> 'for' MY . TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 163)

	TYPE_INTEGER	shift, and go to state 333

State 291:

	LoopFor -> 'for' LPAREN_MY . TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpression ';' VARIABLE_SYMBOL OP11_COMPARE_LT_GT SubExpression ';' SubExpressionOrVarMod ')' CodeBlock	(Rule 164)

	TYPE_INTEGER	shift, and go to state 334

State 292:

	LoopWhile -> 'while' LPAREN_MY . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ')' CodeBlock	(Rule 167)

	TYPE_INTEGER	shift, and go to state 54
	WORD	shift, and go to state 53
	WORD_SCOPED	shift, and go to state 55

	Type	go to state 335

State 293:

	LoopWhile -> 'while' LPAREN . SubExpression ')' CodeBlock	(Rule 166)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	Variable	go to state 171
	SubExpression	go to state 336
	Operator	go to state 91
	HashDereference	go to state 89
	HashReference	go to state 128
	Literal	go to state 120
	VariableSymbolOrSelf	go to state 116
	WordScoped	go to state 108
	ArrayReference	go to state 127
	Expression	go to state 173
	ArrayDereference	go to state 125

State 294:

	LoopForEach -> 'foreach' MY . Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 165)

	TYPE_INTEGER	shift, and go to state 54
	WORD	shift, and go to state 53
	WORD_SCOPED	shift, and go to state 55

	Type	go to state 337

State 295:

	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN .	(Rule 220)

	$default	reduce using rule 220 (TypeInnerConstant)

State 296:

	STAR-20 -> STAR-20 . PAREN-19	(Rule 50)
	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-20 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 52)

	')'	shift, and go to state 339
	OP21_LIST_COMMA	shift, and go to state 340

	PAREN-19	go to state 338

State 297:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-17 STAR-18 '}' ';' .	(Rule 48)

	$default	reduce using rule 48 (Subroutine)

State 298:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE . HashEntryProperties STAR-26 '}' ';'	(Rule 65)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE . '}' ';'	(Rule 66)

	'}'	shift, and go to state 341
	WORD	shift, and go to state 342

	HashEntryProperties	go to state 343

State 299:

	MethodOrSubroutine -> Method .	(Rule 76)

	$default	reduce using rule 76 (MethodOrSubroutine)

State 300:

	MethodOrSubroutine -> Subroutine .	(Rule 77)

	$default	reduce using rule 77 (MethodOrSubroutine)

State 301:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-21 STAR-22 STAR-23 Properties STAR-24 LITERAL_NUMBER . ';'	(Rule 61)

	';'	shift, and go to state 344

State 302:

	STAR-24 -> STAR-24 MethodOrSubroutine .	(Rule 59)

	$default	reduce using rule 59 (STAR-24)

State 303:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-17 STAR-18 '}' ';'	(Rule 48)
	Method -> 'our' . TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-27 STAR-28 '}' ';'	(Rule 71)

	TYPE_INTEGER	shift, and go to state 54
	TYPE_METHOD	shift, and go to state 345
	WORD	shift, and go to state 53
	WORD_SCOPED	shift, and go to state 55

	Type	go to state 56

State 304:

	Conditional -> 'if' LPAREN SubExpression ')' . CodeBlock STAR-39 OPTIONAL-41	(Rule 159)

	LBRACE	shift, and go to state 346

	CodeBlock	go to state 347

State 305:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON . VariableOrLiteral	(Rule 105)

	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131

	VariableSymbolOrSelf	go to state 116
	Variable	go to state 244
	VariableOrLiteral	go to state 348
	Literal	go to state 245

State 306:

	PAREN-49 -> OP21_LIST_COMMA . HashEntry	(Rule 202)

	'%{'	shift, and go to state 103
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 163

	VariableOrLiteralOrWord	go to state 167
	HashDereference	go to state 166
	Literal	go to state 169
	VariableSymbolOrSelf	go to state 116
	HashEntry	go to state 349
	Variable	go to state 168

State 307:

	HashReference -> LBRACE HashEntry STAR-50 '}' .	(Rule 205)

	$default	reduce using rule 205 (HashReference)

State 308:

	STAR-50 -> STAR-50 PAREN-49 .	(Rule 203)

	$default	reduce using rule 203 (STAR-50)

State 309:

	OPTIONAL-48 -> TypeInner .	(Rule 197)

	$default	reduce using rule 197 (OPTIONAL-48)

State 310:

	HashEntry -> VariableOrLiteralOrWord OP20_HASH_FATARROW OPTIONAL-48 . SubExpression	(Rule 199)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	ArrayDereference	go to state 125
	Expression	go to state 173
	ArrayReference	go to state 127
	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	Literal	go to state 120
	Operator	go to state 91
	HashReference	go to state 128
	SubExpression	go to state 350
	HashDereference	go to state 89
	Variable	go to state 171

State 311:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL . OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 83)

	OP21_LIST_COMMA	shift, and go to state 351

State 312:

	TypeInner -> MY Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 217)

	WORD	shift, and go to state 352

State 313:

	HashDereference -> '%{' OPTIONAL-51 HashReference '}' .	(Rule 210)

	$default	reduce using rule 210 (HashDereference)

State 314:

	Expression -> WordScoped LPAREN OPTIONAL-34 ')' .	(Rule 129)

	$default	reduce using rule 129 (Expression)

State 315:

	STAR-45 -> STAR-45 PAREN-44 .	(Rule 184)

	$default	reduce using rule 184 (STAR-45)

State 316:

	PAREN-44 -> OP21_LIST_COMMA . ListElement	(Rule 183)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	MY	shift, and go to state 179
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP01_QW	shift, and go to state 191
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	Expression	go to state 173
	ArrayDereference	go to state 125
	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	ArrayReference	go to state 127
	HashReference	go to state 128
	SubExpression	go to state 188
	HashDereference	go to state 89
	Operator	go to state 91
	Literal	go to state 120
	ListElement	go to state 353
	TypeInner	go to state 189
	Variable	go to state 171

State 317:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL ';' .	(Rule 177)

	$default	reduce using rule 177 (VariableDeclaration)

State 318:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW . SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 179)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	Variable	go to state 171
	HashReference	go to state 128
	HashDereference	go to state 89
	Operator	go to state 91
	SubExpression	go to state 354
	Literal	go to state 120
	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	ArrayReference	go to state 127
	Expression	go to state 173
	ArrayDereference	go to state 125

State 319:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 178)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	STDIN	shift, and go to state 281
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	ArrayReference	go to state 127
	Expression	go to state 173
	ArrayDereference	go to state 125
	Variable	go to state 171
	SubExpressionOrStdin	go to state 355
	SubExpression	go to state 280
	HashDereference	go to state 89
	HashReference	go to state 128
	Operator	go to state 91
	Literal	go to state 120

State 320:

	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL ';' .	(Rule 180)

	$default	reduce using rule 180 (VariableDeclaration)

State 321:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 176)
	WordScoped -> WORD .	(Rule 211)

	'}'	shift, and go to state 356

	LPAREN	reduce using rule 211 (WordScoped)
	OP02_METHOD_THINARROW_NEW	reduce using rule 211 (WordScoped)

State 322:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)
	VariableRetrieval -> OP02_HASH_THINARROW SubExpression . '}'	(Rule 175)

	'}'	shift, and go to state 357
	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155
	OP14_BITWISE_OR_XOR	shift, and go to state 151
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 153
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

State 323:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)
	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression . ']'	(Rule 174)

	']'	shift, and go to state 358
	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155
	OP14_BITWISE_OR_XOR	shift, and go to state 151
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 153
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

State 324:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ';'	(Rule 119)

	';'	shift, and go to state 359

State 325:

	ArrayDereference -> '@{' OPTIONAL-47 ArrayReference '}' .	(Rule 196)

	$default	reduce using rule 196 (ArrayDereference)

State 326:

	OPTIONAL-35 -> ListElements .	(Rule 124)

	$default	reduce using rule 124 (OPTIONAL-35)

State 327:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-35 . ')'	(Rule 130)

	')'	shift, and go to state 360

State 328:

	OperatorVoid -> OP01_PRINT OPTIONAL-32 ListElements ';' .	(Rule 114)

	$default	reduce using rule 114 (OperatorVoid)

State 329:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements ';' .	(Rule 115)

	$default	reduce using rule 115 (OperatorVoid)

State 330:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements . ')'	(Rule 80)

	')'	shift, and go to state 361

State 331:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ')'	(Rule 82)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	MY	shift, and go to state 179
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP01_QW	shift, and go to state 191
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	Expression	go to state 173
	ArrayDereference	go to state 125
	VariableSymbolOrSelf	go to state 116
	WordScoped	go to state 108
	ArrayReference	go to state 127
	ListElements	go to state 362
	SubExpression	go to state 188
	Operator	go to state 91
	HashDereference	go to state 89
	HashReference	go to state 128
	Literal	go to state 120
	ListElement	go to state 190
	Variable	go to state 171
	TypeInner	go to state 189

State 332:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-33 ')' ';' .	(Rule 117)

	$default	reduce using rule 117 (OperatorVoid)

State 333:

	LoopFor -> 'for' MY TYPE_INTEGER . VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 163)

	VARIABLE_SYMBOL	shift, and go to state 363

State 334:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpression ';' VARIABLE_SYMBOL OP11_COMPARE_LT_GT SubExpression ';' SubExpressionOrVarMod ')' CodeBlock	(Rule 164)

	VARIABLE_SYMBOL	shift, and go to state 364

State 335:

	LoopWhile -> 'while' LPAREN_MY Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ')' CodeBlock	(Rule 167)

	VARIABLE_SYMBOL	shift, and go to state 365

State 336:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)
	LoopWhile -> 'while' LPAREN SubExpression . ')' CodeBlock	(Rule 166)

	')'	shift, and go to state 366
	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155
	OP14_BITWISE_OR_XOR	shift, and go to state 151
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 153
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

State 337:

	LoopForEach -> 'foreach' MY Type . VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 165)

	VARIABLE_SYMBOL	shift, and go to state 367

State 338:

	STAR-20 -> STAR-20 PAREN-19 .	(Rule 50)

	$default	reduce using rule 50 (STAR-20)

State 339:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-20 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 52)

	OP19_VARIABLE_ASSIGN	shift, and go to state 368

State 340:

	PAREN-19 -> OP21_LIST_COMMA . MY Type VARIABLE_SYMBOL	(Rule 49)

	MY	shift, and go to state 369

State 341:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' . ';'	(Rule 66)

	';'	shift, and go to state 370

State 342:

	HashEntryProperties -> WORD . OP20_HASH_FATARROW TypeInnerProperties	(Rule 201)

	OP20_HASH_FATARROW	shift, and go to state 371

State 343:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties . STAR-26 '}' ';'	(Rule 65)

	$default	reduce using rule 64 (STAR-26)

	STAR-26	go to state 372

State 344:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-21 STAR-22 STAR-23 Properties STAR-24 LITERAL_NUMBER ';' .	(Rule 61)

	$default	reduce using rule 61 (Class)

State 345:

	Method -> 'our' TYPE_METHOD . VARIABLE_SYMBOL '= sub {' OPTIONAL-27 STAR-28 '}' ';'	(Rule 71)

	VARIABLE_SYMBOL	shift, and go to state 373

State 346:

	CodeBlock -> LBRACE . PLUS-42 '}'	(Rule 170)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'if'	shift, and go to state 90
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	MY	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 117
	OP01_NAMED_VOID	shift, and go to state 114
	OP01_NAMED_VOID_LPAREN	shift, and go to state 133
	OP01_NAMED_VOID_SCOLON	shift, and go to state 97
	OP01_OPEN	shift, and go to state 100
	OP01_PRINT	shift, and go to state 126
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP19_LOOP_CONTROL	shift, and go to state 113
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 110
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 119

	'for'	reduce using rule 147 (OPTIONAL-37)
	'foreach'	reduce using rule 147 (OPTIONAL-37)
	'while'	reduce using rule 147 (OPTIONAL-37)

	HashReference	go to state 128
	Statement	go to state 130
	OPTIONAL-37	go to state 134
	LoopLabel	go to state 136
	VariableSymbolOrSelf	go to state 116
	Operation	go to state 374
	Literal	go to state 120
	PLUS-42	go to state 375
	PAREN-36	go to state 96
	HashDereference	go to state 89
	Operator	go to state 91
	SubExpression	go to state 92
	VariableModification	go to state 93
	Variable	go to state 124
	VariableDeclaration	go to state 99
	OperatorVoid	go to state 105
	Conditional	go to state 106
	ArrayDereference	go to state 125
	Expression	go to state 101
	ArrayReference	go to state 127
	WordScoped	go to state 108

State 347:

	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock . STAR-39 OPTIONAL-41	(Rule 159)

	$default	reduce using rule 155 (STAR-39)

	STAR-39	go to state 376

State 348:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral .	(Rule 105)

	$default	reduce using rule 105 (Operator)

State 349:

	PAREN-49 -> OP21_LIST_COMMA HashEntry .	(Rule 202)

	$default	reduce using rule 202 (PAREN-49)

State 350:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)
	HashEntry -> VariableOrLiteralOrWord OP20_HASH_FATARROW OPTIONAL-48 SubExpression .	(Rule 199)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155
	OP14_BITWISE_OR_XOR	shift, and go to state 151
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 153
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

	'}'	reduce using rule 199 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 199 (HashEntry)

State 351:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA . LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 83)

	LITERAL_STRING	shift, and go to state 377

State 352:

	TypeInner -> MY Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 217)

	OP19_VARIABLE_ASSIGN	shift, and go to state 378

State 353:

	PAREN-44 -> OP21_LIST_COMMA ListElement .	(Rule 183)

	$default	reduce using rule 183 (PAREN-44)

State 354:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)
	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression . ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 179)

	']'	shift, and go to state 379
	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155
	OP14_BITWISE_OR_XOR	shift, and go to state 151
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 153
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

State 355:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 178)

	';'	shift, and go to state 380

State 356:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 176)

	$default	reduce using rule 176 (VariableRetrieval)

State 357:

	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}' .	(Rule 175)

	$default	reduce using rule 175 (VariableRetrieval)

State 358:

	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']' .	(Rule 174)

	$default	reduce using rule 174 (VariableRetrieval)

State 359:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';' .	(Rule 119)

	$default	reduce using rule 119 (OperatorVoid)

State 360:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-35 ')' .	(Rule 130)

	$default	reduce using rule 130 (Expression)

State 361:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')' .	(Rule 80)

	$default	reduce using rule 80 (Operator)

State 362:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ')'	(Rule 82)

	')'	shift, and go to state 381

State 363:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL . LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 163)

	LPAREN	shift, and go to state 382

State 364:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN SubExpression ';' VARIABLE_SYMBOL OP11_COMPARE_LT_GT SubExpression ';' SubExpressionOrVarMod ')' CodeBlock	(Rule 164)

	OP19_VARIABLE_ASSIGN	shift, and go to state 383

State 365:

	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ')' CodeBlock	(Rule 167)

	OP19_VARIABLE_ASSIGN	shift, and go to state 384

State 366:

	LoopWhile -> 'while' LPAREN SubExpression ')' . CodeBlock	(Rule 166)

	LBRACE	shift, and go to state 346

	CodeBlock	go to state 385

State 367:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL . LPAREN ListElements ')' CodeBlock	(Rule 165)

	LPAREN	shift, and go to state 386

State 368:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-20 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 52)

	'@_;'	shift, and go to state 387

State 369:

	PAREN-19 -> OP21_LIST_COMMA MY . Type VARIABLE_SYMBOL	(Rule 49)

	TYPE_INTEGER	shift, and go to state 54
	WORD	shift, and go to state 53
	WORD_SCOPED	shift, and go to state 55

	Type	go to state 388

State 370:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';' .	(Rule 66)

	$default	reduce using rule 66 (Properties)

State 371:

	HashEntryProperties -> WORD OP20_HASH_FATARROW . TypeInnerProperties	(Rule 201)

	MY	shift, and go to state 389

	TypeInnerProperties	go to state 390

State 372:

	STAR-26 -> STAR-26 . PAREN-25	(Rule 63)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-26 . '}' ';'	(Rule 65)

	'}'	shift, and go to state 393
	OP21_LIST_COMMA	shift, and go to state 392

	PAREN-25	go to state 391

State 373:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL . '= sub {' OPTIONAL-27 STAR-28 '}' ';'	(Rule 71)

	'= sub {'	shift, and go to state 394

State 374:

	PLUS-42 -> Operation .	(Rule 169)

	$default	reduce using rule 169 (PLUS-42)

State 375:

	PLUS-42 -> PLUS-42 . Operation	(Rule 168)
	CodeBlock -> LBRACE PLUS-42 . '}'	(Rule 170)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'if'	shift, and go to state 90
	'undef'	shift, and go to state 123
	'}'	shift, and go to state 396
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	MY	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 117
	OP01_NAMED_VOID	shift, and go to state 114
	OP01_NAMED_VOID_LPAREN	shift, and go to state 133
	OP01_NAMED_VOID_SCOLON	shift, and go to state 97
	OP01_OPEN	shift, and go to state 100
	OP01_PRINT	shift, and go to state 126
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP19_LOOP_CONTROL	shift, and go to state 113
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 110
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 119

	'for'	reduce using rule 147 (OPTIONAL-37)
	'foreach'	reduce using rule 147 (OPTIONAL-37)
	'while'	reduce using rule 147 (OPTIONAL-37)

	WordScoped	go to state 108
	ArrayReference	go to state 127
	Expression	go to state 101
	OperatorVoid	go to state 105
	ArrayDereference	go to state 125
	Conditional	go to state 106
	VariableDeclaration	go to state 99
	Variable	go to state 124
	SubExpression	go to state 92
	Operator	go to state 91
	HashDereference	go to state 89
	VariableModification	go to state 93
	Operation	go to state 395
	Literal	go to state 120
	PAREN-36	go to state 96
	VariableSymbolOrSelf	go to state 116
	LoopLabel	go to state 136
	OPTIONAL-37	go to state 134
	HashReference	go to state 128
	Statement	go to state 130

State 376:

	STAR-39 -> STAR-39 . PAREN-38	(Rule 154)
	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-39 . OPTIONAL-41	(Rule 159)

	'else'	shift, and go to state 399
	'elsif'	shift, and go to state 400

	$end	reduce using rule 158 (OPTIONAL-41)
	'%{'	reduce using rule 158 (OPTIONAL-41)
	'@{'	reduce using rule 158 (OPTIONAL-41)
	'for'	reduce using rule 158 (OPTIONAL-41)
	'foreach'	reduce using rule 158 (OPTIONAL-41)
	'if'	reduce using rule 158 (OPTIONAL-41)
	'undef'	reduce using rule 158 (OPTIONAL-41)
	'while'	reduce using rule 158 (OPTIONAL-41)
	'}'	reduce using rule 158 (OPTIONAL-41)
	CONSTANT_CALL_SCOPED	reduce using rule 158 (OPTIONAL-41)
	LBRACE	reduce using rule 158 (OPTIONAL-41)
	LBRACKET	reduce using rule 158 (OPTIONAL-41)
	LITERAL_NUMBER	reduce using rule 158 (OPTIONAL-41)
	LITERAL_STRING	reduce using rule 158 (OPTIONAL-41)
	LPAREN	reduce using rule 158 (OPTIONAL-41)
	MY	reduce using rule 158 (OPTIONAL-41)
	OP01_CLOSE	reduce using rule 158 (OPTIONAL-41)
	OP01_NAMED	reduce using rule 158 (OPTIONAL-41)
	OP01_NAMED_VOID	reduce using rule 158 (OPTIONAL-41)
	OP01_NAMED_VOID_LPAREN	reduce using rule 158 (OPTIONAL-41)
	OP01_NAMED_VOID_SCOLON	reduce using rule 158 (OPTIONAL-41)
	OP01_OPEN	reduce using rule 158 (OPTIONAL-41)
	OP01_PRINT	reduce using rule 158 (OPTIONAL-41)
	OP03_MATH_INC_DEC	reduce using rule 158 (OPTIONAL-41)
	OP05_LOGICAL_NEG	reduce using rule 158 (OPTIONAL-41)
	OP05_MATH_NEG_LPAREN	reduce using rule 158 (OPTIONAL-41)
	OP10_NAMED_UNARY	reduce using rule 158 (OPTIONAL-41)
	OP19_LOOP_CONTROL	reduce using rule 158 (OPTIONAL-41)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 158 (OPTIONAL-41)
	OP22_LOGICAL_NEG	reduce using rule 158 (OPTIONAL-41)
	SELF	reduce using rule 158 (OPTIONAL-41)
	VARIABLE_SYMBOL	reduce using rule 158 (OPTIONAL-41)
	WORD	reduce using rule 158 (OPTIONAL-41)
	WORD_SCOPED	reduce using rule 158 (OPTIONAL-41)
	WORD_UPPERCASE	reduce using rule 158 (OPTIONAL-41)

	PAREN-40	go to state 401
	OPTIONAL-41	go to state 398
	PAREN-38	go to state 397

State 377:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING . OP21_LIST_COMMA SubExpression	(Rule 83)

	OP21_LIST_COMMA	shift, and go to state 402

State 378:

	TypeInner -> MY Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 217)

	$default	reduce using rule 217 (TypeInner)

State 379:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' . OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 179)

	OP19_VARIABLE_ASSIGN	shift, and go to state 403

State 380:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 178)

	$default	reduce using rule 178 (VariableDeclaration)

State 381:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' .	(Rule 82)

	$default	reduce using rule 82 (Operator)

State 382:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN . SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 163)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	ArrayDereference	go to state 125
	Expression	go to state 173
	ArrayReference	go to state 127
	VariableSymbolOrSelf	go to state 116
	WordScoped	go to state 108
	Literal	go to state 120
	SubExpression	go to state 404
	Operator	go to state 91
	HashReference	go to state 128
	HashDereference	go to state 89
	Variable	go to state 171

State 383:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . SubExpression ';' VARIABLE_SYMBOL OP11_COMPARE_LT_GT SubExpression ';' SubExpressionOrVarMod ')' CodeBlock	(Rule 164)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	Variable	go to state 171
	Literal	go to state 120
	HashDereference	go to state 89
	Operator	go to state 91
	SubExpression	go to state 405
	HashReference	go to state 128
	ArrayReference	go to state 127
	VariableSymbolOrSelf	go to state 116
	WordScoped	go to state 108
	ArrayDereference	go to state 125
	Expression	go to state 173

State 384:

	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ')' CodeBlock	(Rule 167)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	STDIN	shift, and go to state 281
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	Variable	go to state 171
	SubExpressionOrStdin	go to state 406
	Literal	go to state 120
	SubExpression	go to state 280
	HashReference	go to state 128
	HashDereference	go to state 89
	Operator	go to state 91
	ArrayReference	go to state 127
	VariableSymbolOrSelf	go to state 116
	WordScoped	go to state 108
	ArrayDereference	go to state 125
	Expression	go to state 173

State 385:

	LoopWhile -> 'while' LPAREN SubExpression ')' CodeBlock .	(Rule 166)

	$default	reduce using rule 166 (LoopWhile)

State 386:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN . ListElements ')' CodeBlock	(Rule 165)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	MY	shift, and go to state 179
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP01_QW	shift, and go to state 191
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	TypeInner	go to state 189
	Variable	go to state 171
	ListElement	go to state 190
	Literal	go to state 120
	HashReference	go to state 128
	Operator	go to state 91
	SubExpression	go to state 188
	HashDereference	go to state 89
	ListElements	go to state 407
	ArrayReference	go to state 127
	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	ArrayDereference	go to state 125
	Expression	go to state 173

State 387:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-20 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 52)

	$default	reduce using rule 52 (SubroutineArguments)

State 388:

	PAREN-19 -> OP21_LIST_COMMA MY Type . VARIABLE_SYMBOL	(Rule 49)

	VARIABLE_SYMBOL	shift, and go to state 408

State 389:

	TypeInnerProperties -> MY . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN SubExpression	(Rule 218)
	TypeInnerProperties -> MY . Type '$TYPED_' WORD OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 219)

	TYPE_INTEGER	shift, and go to state 54
	WORD	shift, and go to state 53
	WORD_SCOPED	shift, and go to state 55

	Type	go to state 409

State 390:

	HashEntryProperties -> WORD OP20_HASH_FATARROW TypeInnerProperties .	(Rule 201)

	$default	reduce using rule 201 (HashEntryProperties)

State 391:

	STAR-26 -> STAR-26 PAREN-25 .	(Rule 63)

	$default	reduce using rule 63 (STAR-26)

State 392:

	PAREN-25 -> OP21_LIST_COMMA . HashEntryProperties	(Rule 62)

	WORD	shift, and go to state 342

	HashEntryProperties	go to state 410

State 393:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-26 '}' . ';'	(Rule 65)

	';'	shift, and go to state 411

State 394:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' . OPTIONAL-27 STAR-28 '}' ';'	(Rule 71)

	LPAREN_MY	shift, and go to state 412

	'%{'	reduce using rule 68 (OPTIONAL-27)
	'@{'	reduce using rule 68 (OPTIONAL-27)
	'for'	reduce using rule 68 (OPTIONAL-27)
	'foreach'	reduce using rule 68 (OPTIONAL-27)
	'if'	reduce using rule 68 (OPTIONAL-27)
	'undef'	reduce using rule 68 (OPTIONAL-27)
	'while'	reduce using rule 68 (OPTIONAL-27)
	'}'	reduce using rule 68 (OPTIONAL-27)
	CONSTANT_CALL_SCOPED	reduce using rule 68 (OPTIONAL-27)
	LBRACE	reduce using rule 68 (OPTIONAL-27)
	LBRACKET	reduce using rule 68 (OPTIONAL-27)
	LITERAL_NUMBER	reduce using rule 68 (OPTIONAL-27)
	LITERAL_STRING	reduce using rule 68 (OPTIONAL-27)
	LPAREN	reduce using rule 68 (OPTIONAL-27)
	MY	reduce using rule 68 (OPTIONAL-27)
	OP01_CLOSE	reduce using rule 68 (OPTIONAL-27)
	OP01_NAMED	reduce using rule 68 (OPTIONAL-27)
	OP01_NAMED_VOID	reduce using rule 68 (OPTIONAL-27)
	OP01_NAMED_VOID_LPAREN	reduce using rule 68 (OPTIONAL-27)
	OP01_NAMED_VOID_SCOLON	reduce using rule 68 (OPTIONAL-27)
	OP01_OPEN	reduce using rule 68 (OPTIONAL-27)
	OP01_PRINT	reduce using rule 68 (OPTIONAL-27)
	OP03_MATH_INC_DEC	reduce using rule 68 (OPTIONAL-27)
	OP05_LOGICAL_NEG	reduce using rule 68 (OPTIONAL-27)
	OP05_MATH_NEG_LPAREN	reduce using rule 68 (OPTIONAL-27)
	OP10_NAMED_UNARY	reduce using rule 68 (OPTIONAL-27)
	OP19_LOOP_CONTROL	reduce using rule 68 (OPTIONAL-27)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 68 (OPTIONAL-27)
	OP22_LOGICAL_NEG	reduce using rule 68 (OPTIONAL-27)
	SELF	reduce using rule 68 (OPTIONAL-27)
	VARIABLE_SYMBOL	reduce using rule 68 (OPTIONAL-27)
	WORD	reduce using rule 68 (OPTIONAL-27)
	WORD_SCOPED	reduce using rule 68 (OPTIONAL-27)
	WORD_UPPERCASE	reduce using rule 68 (OPTIONAL-27)

	OPTIONAL-27	go to state 413
	MethodArguments	go to state 414

State 395:

	PLUS-42 -> PLUS-42 Operation .	(Rule 168)

	$default	reduce using rule 168 (PLUS-42)

State 396:

	CodeBlock -> LBRACE PLUS-42 '}' .	(Rule 170)

	$default	reduce using rule 170 (CodeBlock)

State 397:

	STAR-39 -> STAR-39 PAREN-38 .	(Rule 154)

	$default	reduce using rule 154 (STAR-39)

State 398:

	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-39 OPTIONAL-41 .	(Rule 159)

	$default	reduce using rule 159 (Conditional)

State 399:

	PAREN-40 -> 'else' . CodeBlock	(Rule 156)

	LBRACE	shift, and go to state 346

	CodeBlock	go to state 415

State 400:

	PAREN-38 -> 'elsif' . LPAREN SubExpression ')' CodeBlock	(Rule 153)

	LPAREN	shift, and go to state 416

State 401:

	OPTIONAL-41 -> PAREN-40 .	(Rule 157)

	$default	reduce using rule 157 (OPTIONAL-41)

State 402:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA . SubExpression	(Rule 83)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	Variable	go to state 171
	HashReference	go to state 128
	SubExpression	go to state 417
	Operator	go to state 91
	HashDereference	go to state 89
	Literal	go to state 120
	VariableSymbolOrSelf	go to state 116
	WordScoped	go to state 108
	ArrayReference	go to state 127
	Expression	go to state 173
	ArrayDereference	go to state 125

State 403:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN . 'undef' ';'	(Rule 179)

	'undef'	shift, and go to state 418

State 404:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression . OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 163)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155
	OP14_BITWISE_OR_XOR	shift, and go to state 151
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 419
	OP18_TERNARY	shift, and go to state 153
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

State 405:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)
	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpression . ';' VARIABLE_SYMBOL OP11_COMPARE_LT_GT SubExpression ';' SubExpressionOrVarMod ')' CodeBlock	(Rule 164)

	';'	shift, and go to state 420
	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155
	OP14_BITWISE_OR_XOR	shift, and go to state 151
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 153
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

State 406:

	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ')' CodeBlock	(Rule 167)

	')'	shift, and go to state 421

State 407:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements . ')' CodeBlock	(Rule 165)

	')'	shift, and go to state 422

State 408:

	PAREN-19 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL .	(Rule 49)

	$default	reduce using rule 49 (PAREN-19)

State 409:

	TypeInnerProperties -> MY Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN SubExpression	(Rule 218)
	TypeInnerProperties -> MY Type . '$TYPED_' WORD OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 219)

	'$TYPED_'	shift, and go to state 423

State 410:

	PAREN-25 -> OP21_LIST_COMMA HashEntryProperties .	(Rule 62)

	$default	reduce using rule 62 (PAREN-25)

State 411:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-26 '}' ';' .	(Rule 65)

	$default	reduce using rule 65 (Properties)

State 412:

	MethodArguments -> LPAREN_MY . Type SELF STAR-30 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 75)

	TYPE_INTEGER	shift, and go to state 54
	WORD	shift, and go to state 53
	WORD_SCOPED	shift, and go to state 55

	Type	go to state 424

State 413:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-27 . STAR-28 '}' ';'	(Rule 71)

	$default	reduce using rule 70 (STAR-28)

	STAR-28	go to state 425

State 414:

	OPTIONAL-27 -> MethodArguments .	(Rule 67)

	$default	reduce using rule 67 (OPTIONAL-27)

State 415:

	PAREN-40 -> 'else' CodeBlock .	(Rule 156)

	$default	reduce using rule 156 (PAREN-40)

State 416:

	PAREN-38 -> 'elsif' LPAREN . SubExpression ')' CodeBlock	(Rule 153)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	Variable	go to state 171
	HashReference	go to state 128
	HashDereference	go to state 89
	Operator	go to state 91
	SubExpression	go to state 426
	Literal	go to state 120
	VariableSymbolOrSelf	go to state 116
	WordScoped	go to state 108
	ArrayReference	go to state 127
	Expression	go to state 173
	ArrayDereference	go to state 125

State 417:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression .	(Rule 83)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155
	OP14_BITWISE_OR_XOR	shift, and go to state 151
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 153

	')'	reduce using rule 83 (Operator)
	';'	reduce using rule 83 (Operator)
	']'	reduce using rule 83 (Operator)
	'}'	reduce using rule 83 (Operator)
	OP21_LIST_COMMA	reduce using rule 83 (Operator)
	OP23_LOGICAL_AND	reduce using rule 83 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 83 (Operator)

State 418:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' . ';'	(Rule 179)

	';'	shift, and go to state 427

State 419:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 104)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE . SubExpression ')' CodeBlock	(Rule 163)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	ArrayReference	go to state 127
	Expression	go to state 173
	ArrayDereference	go to state 125
	Variable	go to state 171
	SubExpression	go to state 428
	HashReference	go to state 128
	Operator	go to state 91
	HashDereference	go to state 89
	Literal	go to state 120

State 420:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpression ';' . VARIABLE_SYMBOL OP11_COMPARE_LT_GT SubExpression ';' SubExpressionOrVarMod ')' CodeBlock	(Rule 164)

	VARIABLE_SYMBOL	shift, and go to state 429

State 421:

	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ')' . CodeBlock	(Rule 167)

	LBRACE	shift, and go to state 346

	CodeBlock	go to state 430

State 422:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' . CodeBlock	(Rule 165)

	LBRACE	shift, and go to state 346

	CodeBlock	go to state 431

State 423:

	TypeInnerProperties -> MY Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN SubExpression	(Rule 218)
	TypeInnerProperties -> MY Type '$TYPED_' . WORD OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 219)

	WORD	shift, and go to state 432

State 424:

	MethodArguments -> LPAREN_MY Type . SELF STAR-30 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 75)

	SELF	shift, and go to state 433

State 425:

	STAR-28 -> STAR-28 . Operation	(Rule 69)
	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-27 STAR-28 . '}' ';'	(Rule 71)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'if'	shift, and go to state 90
	'undef'	shift, and go to state 123
	'}'	shift, and go to state 435
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	MY	shift, and go to state 115
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 117
	OP01_NAMED_VOID	shift, and go to state 114
	OP01_NAMED_VOID_LPAREN	shift, and go to state 133
	OP01_NAMED_VOID_SCOLON	shift, and go to state 97
	OP01_OPEN	shift, and go to state 100
	OP01_PRINT	shift, and go to state 126
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP19_LOOP_CONTROL	shift, and go to state 113
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 110
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 119

	'for'	reduce using rule 147 (OPTIONAL-37)
	'foreach'	reduce using rule 147 (OPTIONAL-37)
	'while'	reduce using rule 147 (OPTIONAL-37)

	VariableDeclaration	go to state 99
	Variable	go to state 124
	HashDereference	go to state 89
	SubExpression	go to state 92
	Operator	go to state 91
	VariableModification	go to state 93
	Operation	go to state 434
	Literal	go to state 120
	PAREN-36	go to state 96
	WordScoped	go to state 108
	ArrayReference	go to state 127
	Expression	go to state 101
	ArrayDereference	go to state 125
	Conditional	go to state 106
	OperatorVoid	go to state 105
	OPTIONAL-37	go to state 134
	HashReference	go to state 128
	Statement	go to state 130
	LoopLabel	go to state 136
	VariableSymbolOrSelf	go to state 116

State 426:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)
	PAREN-38 -> 'elsif' LPAREN SubExpression . ')' CodeBlock	(Rule 153)

	')'	shift, and go to state 436
	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155
	OP14_BITWISE_OR_XOR	shift, and go to state 151
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 153
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

State 427:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';' .	(Rule 179)

	$default	reduce using rule 179 (VariableDeclaration)

State 428:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression . ')' CodeBlock	(Rule 163)

	')'	shift, and go to state 437
	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155
	OP14_BITWISE_OR_XOR	shift, and go to state 151
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149

	OP17_LIST_RANGE	error (nonassociative)

	OP18_TERNARY	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 429:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpression ';' VARIABLE_SYMBOL . OP11_COMPARE_LT_GT SubExpression ';' SubExpressionOrVarMod ')' CodeBlock	(Rule 164)

	OP11_COMPARE_LT_GT	shift, and go to state 438

State 430:

	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ')' CodeBlock .	(Rule 167)

	$default	reduce using rule 167 (LoopWhile)

State 431:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock .	(Rule 165)

	$default	reduce using rule 165 (LoopForEach)

State 432:

	TypeInnerProperties -> MY Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN SubExpression	(Rule 218)
	TypeInnerProperties -> MY Type '$TYPED_' WORD . OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 219)

	OP02_ARRAY_THINARROW	shift, and go to state 439
	OP19_VARIABLE_ASSIGN	shift, and go to state 440

State 433:

	MethodArguments -> LPAREN_MY Type SELF . STAR-30 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 75)

	$default	reduce using rule 74 (STAR-30)

	STAR-30	go to state 441

State 434:

	STAR-28 -> STAR-28 Operation .	(Rule 69)

	$default	reduce using rule 69 (STAR-28)

State 435:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-27 STAR-28 '}' . ';'	(Rule 71)

	';'	shift, and go to state 442

State 436:

	PAREN-38 -> 'elsif' LPAREN SubExpression ')' . CodeBlock	(Rule 153)

	LBRACE	shift, and go to state 346

	CodeBlock	go to state 443

State 437:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' . CodeBlock	(Rule 163)

	LBRACE	shift, and go to state 346

	CodeBlock	go to state 444

State 438:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpression ';' VARIABLE_SYMBOL OP11_COMPARE_LT_GT . SubExpression ';' SubExpressionOrVarMod ')' CodeBlock	(Rule 164)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	Variable	go to state 171
	Literal	go to state 120
	HashDereference	go to state 89
	SubExpression	go to state 445
	Operator	go to state 91
	HashReference	go to state 128
	ArrayReference	go to state 127
	WordScoped	go to state 108
	VariableSymbolOrSelf	go to state 116
	ArrayDereference	go to state 125
	Expression	go to state 173

State 439:

	TypeInnerProperties -> MY Type '$TYPED_' WORD OP02_ARRAY_THINARROW . SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 219)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	ArrayDereference	go to state 125
	Expression	go to state 173
	ArrayReference	go to state 127
	VariableSymbolOrSelf	go to state 116
	WordScoped	go to state 108
	Literal	go to state 120
	SubExpression	go to state 446
	Operator	go to state 91
	HashDereference	go to state 89
	HashReference	go to state 128
	Variable	go to state 171

State 440:

	TypeInnerProperties -> MY Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN . SubExpression	(Rule 218)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	Literal	go to state 120
	HashReference	go to state 128
	HashDereference	go to state 89
	Operator	go to state 91
	SubExpression	go to state 447
	Variable	go to state 171
	ArrayDereference	go to state 125
	Expression	go to state 173
	ArrayReference	go to state 127
	VariableSymbolOrSelf	go to state 116
	WordScoped	go to state 108

State 441:

	STAR-30 -> STAR-30 . PAREN-29	(Rule 73)
	MethodArguments -> LPAREN_MY Type SELF STAR-30 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 75)

	')'	shift, and go to state 449
	OP21_LIST_COMMA	shift, and go to state 448

	PAREN-29	go to state 450

State 442:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-27 STAR-28 '}' ';' .	(Rule 71)

	$default	reduce using rule 71 (Method)

State 443:

	PAREN-38 -> 'elsif' LPAREN SubExpression ')' CodeBlock .	(Rule 153)

	$default	reduce using rule 153 (PAREN-38)

State 444:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock .	(Rule 163)

	$default	reduce using rule 163 (LoopFor)

State 445:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)
	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpression ';' VARIABLE_SYMBOL OP11_COMPARE_LT_GT SubExpression . ';' SubExpressionOrVarMod ')' CodeBlock	(Rule 164)

	';'	shift, and go to state 451
	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155
	OP14_BITWISE_OR_XOR	shift, and go to state 151
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 153
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

State 446:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)
	TypeInnerProperties -> MY Type '$TYPED_' WORD OP02_ARRAY_THINARROW SubExpression . ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 219)

	']'	shift, and go to state 452
	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155
	OP14_BITWISE_OR_XOR	shift, and go to state 151
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 153
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

State 447:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)
	TypeInnerProperties -> MY Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN SubExpression .	(Rule 218)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155
	OP14_BITWISE_OR_XOR	shift, and go to state 151
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 153
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

	'}'	reduce using rule 218 (TypeInnerProperties)
	OP21_LIST_COMMA	reduce using rule 218 (TypeInnerProperties)

State 448:

	PAREN-29 -> OP21_LIST_COMMA . MY Type VARIABLE_SYMBOL	(Rule 72)

	MY	shift, and go to state 453

State 449:

	MethodArguments -> LPAREN_MY Type SELF STAR-30 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 75)

	OP19_VARIABLE_ASSIGN	shift, and go to state 454

State 450:

	STAR-30 -> STAR-30 PAREN-29 .	(Rule 73)

	$default	reduce using rule 73 (STAR-30)

State 451:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpression ';' VARIABLE_SYMBOL OP11_COMPARE_LT_GT SubExpression ';' . SubExpressionOrVarMod ')' CodeBlock	(Rule 164)

	'%{'	shift, and go to state 103
	'@{'	shift, and go to state 122
	'undef'	shift, and go to state 123
	CONSTANT_CALL_SCOPED	shift, and go to state 121
	LBRACE	shift, and go to state 95
	LBRACKET	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 83
	LITERAL_STRING	shift, and go to state 82
	LPAREN	shift, and go to state 129
	OP01_CLOSE	shift, and go to state 107
	OP01_NAMED	shift, and go to state 172
	OP01_OPEN	shift, and go to state 100
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP05_LOGICAL_NEG	shift, and go to state 118
	OP05_MATH_NEG_LPAREN	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 98
	OP22_LOGICAL_NEG	shift, and go to state 132
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 131
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28
	WORD_UPPERCASE	shift, and go to state 170

	VariableSymbolOrSelf	go to state 116
	WordScoped	go to state 108
	ArrayReference	go to state 127
	Expression	go to state 173
	ArrayDereference	go to state 125
	Variable	go to state 124
	SubExpressionOrVarMod	go to state 457
	VariableModification	go to state 456
	HashReference	go to state 128
	SubExpression	go to state 455
	Operator	go to state 91
	HashDereference	go to state 89
	Literal	go to state 120

State 452:

	TypeInnerProperties -> MY Type '$TYPED_' WORD OP02_ARRAY_THINARROW SubExpression ']' . OP19_VARIABLE_ASSIGN 'undef'	(Rule 219)

	OP19_VARIABLE_ASSIGN	shift, and go to state 458

State 453:

	PAREN-29 -> OP21_LIST_COMMA MY . Type VARIABLE_SYMBOL	(Rule 72)

	TYPE_INTEGER	shift, and go to state 54
	WORD	shift, and go to state 53
	WORD_SCOPED	shift, and go to state 55

	Type	go to state 459

State 454:

	MethodArguments -> LPAREN_MY Type SELF STAR-30 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 75)

	'@_;'	shift, and go to state 460

State 455:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 90)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 92)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 93)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 94)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 95)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 98)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 99)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 101)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 103)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 104)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 108)
	SubExpressionOrVarMod -> SubExpression .	(Rule 143)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 150
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 158
	OP07_STRING_REPEAT	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 160
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 159
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NE	shift, and go to state 156
	OP13_BITWISE_AND	shift, and go to state 155
	OP14_BITWISE_OR_XOR	shift, and go to state 151
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 154
	OP18_TERNARY	shift, and go to state 153
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 157

	')'	reduce using rule 143 (SubExpressionOrVarMod)

State 456:

	SubExpressionOrVarMod -> VariableModification .	(Rule 144)

	$default	reduce using rule 144 (SubExpressionOrVarMod)

State 457:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpression ';' VARIABLE_SYMBOL OP11_COMPARE_LT_GT SubExpression ';' SubExpressionOrVarMod . ')' CodeBlock	(Rule 164)

	')'	shift, and go to state 461

State 458:

	TypeInnerProperties -> MY Type '$TYPED_' WORD OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN . 'undef'	(Rule 219)

	'undef'	shift, and go to state 462

State 459:

	PAREN-29 -> OP21_LIST_COMMA MY Type . VARIABLE_SYMBOL	(Rule 72)

	VARIABLE_SYMBOL	shift, and go to state 463

State 460:

	MethodArguments -> LPAREN_MY Type SELF STAR-30 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 75)

	$default	reduce using rule 75 (MethodArguments)

State 461:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpression ';' VARIABLE_SYMBOL OP11_COMPARE_LT_GT SubExpression ';' SubExpressionOrVarMod ')' . CodeBlock	(Rule 164)

	LBRACE	shift, and go to state 346

	CodeBlock	go to state 464

State 462:

	TypeInnerProperties -> MY Type '$TYPED_' WORD OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' .	(Rule 219)

	$default	reduce using rule 219 (TypeInnerProperties)

State 463:

	PAREN-29 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL .	(Rule 72)

	$default	reduce using rule 72 (PAREN-29)

State 464:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpression ';' VARIABLE_SYMBOL OP11_COMPARE_LT_GT SubExpression ';' SubExpressionOrVarMod ')' CodeBlock .	(Rule 164)

	$default	reduce using rule 164 (LoopFor)


Summary:
--------
Number of rules         : 230
Number of terminals     : 92
Number of non-terminals : 104
Number of states        : 465
