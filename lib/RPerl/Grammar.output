Conflicts:
----------
Conflict in state 155 between rule 98 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 155 between rule 98 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 155 between rule 98 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 155 between rule 98 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 155 between rule 98 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 155 between rule 98 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 155 between rule 98 and token OP18_TERNARY resolved as reduce.
Conflict in state 155 between rule 98 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 155 between rule 98 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 155 between rule 98 and token OP08_STRING_CAT resolved as shift.
Conflict in state 155 between rule 98 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 155 between rule 98 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 155 between rule 98 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 155 between rule 98 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 155 between rule 98 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 155 between rule 98 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 155 between rule 98 and token OP04_MATH_POW resolved as shift.
Conflict in state 202 between rule 108 and token OP18_TERNARY resolved as shift.
Conflict in state 202 between rule 108 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 202 between rule 108 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 202 between rule 108 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 202 between rule 108 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 202 between rule 108 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 202 between rule 108 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 202 between rule 108 and token OP04_MATH_POW resolved as shift.
Conflict in state 202 between rule 108 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 202 between rule 108 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 202 between rule 108 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 202 between rule 108 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 202 between rule 108 and token OP08_STRING_CAT resolved as shift.
Conflict in state 202 between rule 108 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 202 between rule 108 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 202 between rule 108 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 202 between rule 108 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 209 between rule 83 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 209 between rule 83 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 209 between rule 83 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 209 between rule 83 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 209 between rule 83 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 209 between rule 83 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 209 between rule 83 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 209 between rule 83 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 209 between rule 83 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 209 between rule 83 and token OP04_MATH_POW resolved as reduce.
Conflict in state 209 between rule 83 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 209 between rule 83 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 209 between rule 83 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 209 between rule 83 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 209 between rule 83 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 209 between rule 83 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 209 between rule 83 and token OP18_TERNARY resolved as reduce.
Conflict in state 223 between rule 90 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 223 between rule 90 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 223 between rule 90 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 223 between rule 90 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 223 between rule 90 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 223 between rule 90 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 223 between rule 90 and token OP18_TERNARY resolved as reduce.
Conflict in state 223 between rule 90 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 223 between rule 90 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 223 between rule 90 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 223 between rule 90 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 223 between rule 90 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 223 between rule 90 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 223 between rule 90 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 223 between rule 90 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 223 between rule 90 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 223 between rule 90 and token OP04_MATH_POW resolved as shift.
Conflict in state 237 between rule 83 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 237 between rule 83 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 237 between rule 83 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 237 between rule 83 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 237 between rule 83 and token OP18_TERNARY resolved as reduce.
Conflict in state 237 between rule 83 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 237 between rule 83 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 237 between rule 83 and token OP04_MATH_POW resolved as reduce.
Conflict in state 237 between rule 83 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 237 between rule 83 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 237 between rule 83 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 237 between rule 83 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 237 between rule 83 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 237 between rule 83 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 237 between rule 83 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 237 between rule 83 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 237 between rule 83 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 258 between rule 104 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 258 between rule 104 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 258 between rule 104 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 258 between rule 104 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 258 between rule 104 and token OP18_TERNARY resolved as reduce.
Conflict in state 258 between rule 104 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 258 between rule 104 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 258 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 258 between rule 104 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 258 between rule 104 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 258 between rule 104 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 258 between rule 104 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 258 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 258 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 258 between rule 104 and token OP08_STRING_CAT resolved as shift.
Conflict in state 258 between rule 104 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 258 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 259 between rule 105 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 259 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 259 between rule 105 and token OP08_STRING_CAT resolved as shift.
Conflict in state 259 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 259 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 259 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 259 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 259 between rule 105 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 259 between rule 105 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 259 between rule 105 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 259 between rule 105 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 259 between rule 105 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 259 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 259 between rule 105 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 259 between rule 105 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 259 between rule 105 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 259 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 260 between rule 109 and token OP08_STRING_CAT resolved as shift.
Conflict in state 260 between rule 109 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 260 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 260 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 260 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 260 between rule 109 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 260 between rule 109 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 260 between rule 109 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 260 between rule 109 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 260 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 260 between rule 109 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 260 between rule 109 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 260 between rule 109 and token OP18_TERNARY resolved as shift.
Conflict in state 260 between rule 109 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 260 between rule 109 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 260 between rule 109 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 260 between rule 109 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 262 between rule 102 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 262 between rule 102 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 262 between rule 102 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 262 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 262 between rule 102 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 262 between rule 102 and token OP08_STRING_CAT resolved as shift.
Conflict in state 262 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 262 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 262 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 262 between rule 102 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 262 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 262 between rule 102 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 262 between rule 102 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 262 between rule 102 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 262 between rule 102 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 262 between rule 102 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 262 between rule 102 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 263 between rule 100 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 263 between rule 100 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 263 between rule 100 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 263 between rule 100 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 263 between rule 100 and token OP08_STRING_CAT resolved as shift.
Conflict in state 263 between rule 100 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 263 between rule 100 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 263 between rule 100 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 263 between rule 100 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 263 between rule 100 and token OP04_MATH_POW resolved as shift.
Conflict in state 263 between rule 100 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 263 between rule 100 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 263 between rule 100 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 263 between rule 100 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 263 between rule 100 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 263 between rule 100 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 263 between rule 100 and token OP18_TERNARY resolved as reduce.
Conflict in state 264 between rule 95 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 264 between rule 95 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 264 between rule 95 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 264 between rule 95 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 264 between rule 95 and token OP18_TERNARY resolved as reduce.
Conflict in state 264 between rule 95 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 264 between rule 95 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 264 between rule 95 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 264 between rule 95 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 264 between rule 95 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 264 between rule 95 and token OP04_MATH_POW resolved as shift.
Conflict in state 264 between rule 95 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 264 between rule 95 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 264 between rule 95 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 264 between rule 95 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 264 between rule 95 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 264 between rule 95 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 265 between rule 96 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 265 between rule 96 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 265 between rule 96 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 265 between rule 96 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 265 between rule 96 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 265 between rule 96 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 265 between rule 96 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 265 between rule 96 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 265 between rule 96 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 265 between rule 96 and token OP04_MATH_POW resolved as shift.
Conflict in state 265 between rule 96 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 265 between rule 96 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 265 between rule 96 and token OP18_TERNARY resolved as reduce.
Conflict in state 265 between rule 96 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 265 between rule 96 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 265 between rule 96 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 265 between rule 96 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 266 between rule 110 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 266 between rule 110 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 266 between rule 110 and token OP18_TERNARY resolved as shift.
Conflict in state 266 between rule 110 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 266 between rule 110 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 266 between rule 110 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 266 between rule 110 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 266 between rule 110 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 266 between rule 110 and token OP08_STRING_CAT resolved as shift.
Conflict in state 266 between rule 110 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 266 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 266 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 266 between rule 110 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 266 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 266 between rule 110 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 266 between rule 110 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 266 between rule 110 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 267 between rule 94 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 267 between rule 94 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 267 between rule 94 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 267 between rule 94 and token OP04_MATH_POW resolved as shift.
Conflict in state 267 between rule 94 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 267 between rule 94 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 267 between rule 94 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 267 between rule 94 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 267 between rule 94 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 267 between rule 94 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 267 between rule 94 and token OP18_TERNARY resolved as reduce.
Conflict in state 267 between rule 94 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 267 between rule 94 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 267 between rule 94 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 267 between rule 94 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 267 between rule 94 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 267 between rule 94 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 268 between rule 89 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 268 between rule 89 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 268 between rule 89 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 268 between rule 89 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 268 between rule 89 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 268 between rule 89 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 268 between rule 89 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 268 between rule 89 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 268 between rule 89 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 268 between rule 89 and token OP04_MATH_POW resolved as shift.
Conflict in state 268 between rule 89 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 268 between rule 89 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 268 between rule 89 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 268 between rule 89 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 268 between rule 89 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 268 between rule 89 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 268 between rule 89 and token OP18_TERNARY resolved as reduce.
Conflict in state 269 between rule 101 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 269 between rule 101 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 269 between rule 101 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 269 between rule 101 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 269 between rule 101 and token OP18_TERNARY resolved as reduce.
Conflict in state 269 between rule 101 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 269 between rule 101 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 269 between rule 101 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 269 between rule 101 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 269 between rule 101 and token OP12_COMPARE_EQ_NE resolved as error.
Conflict in state 269 between rule 101 and token OP04_MATH_POW resolved as shift.
Conflict in state 269 between rule 101 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 269 between rule 101 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 269 between rule 101 and token OP08_STRING_CAT resolved as shift.
Conflict in state 269 between rule 101 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 269 between rule 101 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 269 between rule 101 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 270 between rule 97 and token OP04_MATH_POW resolved as shift.
Conflict in state 270 between rule 97 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 270 between rule 97 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 270 between rule 97 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 270 between rule 97 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 270 between rule 97 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 270 between rule 97 and token OP08_STRING_CAT resolved as shift.
Conflict in state 270 between rule 97 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 270 between rule 97 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 270 between rule 97 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 270 between rule 97 and token OP18_TERNARY resolved as reduce.
Conflict in state 270 between rule 97 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 270 between rule 97 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 270 between rule 97 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 270 between rule 97 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 270 between rule 97 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 270 between rule 97 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 274 between rule 106 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 274 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 274 between rule 106 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 274 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 274 between rule 106 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 274 between rule 106 and token OP08_STRING_CAT resolved as shift.
Conflict in state 274 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 274 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 274 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 274 between rule 106 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 274 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 274 between rule 106 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 274 between rule 106 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 274 between rule 106 and token OP17_LIST_RANGE resolved as error.
Conflict in state 274 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 274 between rule 106 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 274 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 275 between rule 103 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 275 between rule 103 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 275 between rule 103 and token OP08_STRING_CAT resolved as shift.
Conflict in state 275 between rule 103 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 275 between rule 103 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 275 between rule 103 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 275 between rule 103 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 275 between rule 103 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 275 between rule 103 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 275 between rule 103 and token OP04_MATH_POW resolved as shift.
Conflict in state 275 between rule 103 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 275 between rule 103 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 275 between rule 103 and token OP18_TERNARY resolved as reduce.
Conflict in state 275 between rule 103 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 275 between rule 103 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 275 between rule 103 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 275 between rule 103 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 276 between rule 93 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 276 between rule 93 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 276 between rule 93 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 276 between rule 93 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 276 between rule 93 and token OP18_TERNARY resolved as reduce.
Conflict in state 276 between rule 93 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 276 between rule 93 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 276 between rule 93 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 276 between rule 93 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 276 between rule 93 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 276 between rule 93 and token OP04_MATH_POW resolved as shift.
Conflict in state 276 between rule 93 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 276 between rule 93 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 276 between rule 93 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 276 between rule 93 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 276 between rule 93 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 276 between rule 93 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 410 between rule 85 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 410 between rule 85 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 410 between rule 85 and token OP18_TERNARY resolved as shift.
Conflict in state 410 between rule 85 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 410 between rule 85 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 410 between rule 85 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 410 between rule 85 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 410 between rule 85 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 410 between rule 85 and token OP08_STRING_CAT resolved as shift.
Conflict in state 410 between rule 85 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 410 between rule 85 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 410 between rule 85 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 410 between rule 85 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 410 between rule 85 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 410 between rule 85 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 410 between rule 85 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 410 between rule 85 and token OP04_MATH_POW resolved as shift.
Conflict in state 418 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 418 between rule 106 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 418 between rule 106 and token OP17_LIST_RANGE resolved as error.
Conflict in state 418 between rule 106 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 418 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 418 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 418 between rule 106 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 418 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 418 between rule 106 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 418 between rule 106 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 418 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 418 between rule 106 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 418 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 418 between rule 106 and token OP08_STRING_CAT resolved as shift.
Conflict in state 418 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 418 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 418 between rule 106 and token OP15_LOGICAL_AND resolved as shift.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> Critic
20:	OPTIONAL-9 -> /* empty */
21:	OPTIONAL-10 -> USE_RPERL
22:	OPTIONAL-10 -> /* empty */
23:	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped ';' Header
24:	Module -> Package
25:	Module -> Class
26:	STAR-11 -> STAR-11 Critic
27:	STAR-11 -> /* empty */
28:	STAR-12 -> STAR-12 Include
29:	STAR-12 -> /* empty */
30:	STAR-13 -> STAR-13 Constant
31:	STAR-13 -> /* empty */
32:	PLUS-14 -> PLUS-14 Subroutine
33:	PLUS-14 -> Subroutine
34:	Package -> STAR-11 STAR-12 STAR-13 PLUS-14 LITERAL_NUMBER ';'
35:	OPTIONAL-15 -> USE_RPERL_AFTER
36:	OPTIONAL-15 -> /* empty */
37:	Header -> 'use strict;' 'use warnings;' OPTIONAL-15 'our' VERSION_NUMBER_ASSIGN
38:	PLUS-16 -> PLUS-16 WORD
39:	PLUS-16 -> WORD
40:	Critic -> '## no critic qw(' PLUS-16 ')'
41:	PLUS-17 -> PLUS-17 WORD
42:	PLUS-17 -> WORD
43:	Include -> USE WordScoped ';'
44:	Include -> USE WordScoped OP01_QW PLUS-17 ')' ';'
45:	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'
46:	OPTIONAL-18 -> SubroutineArguments
47:	OPTIONAL-18 -> /* empty */
48:	STAR-19 -> STAR-19 Operation
49:	STAR-19 -> /* empty */
50:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 STAR-19 '}' ';'
51:	PAREN-20 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL
52:	STAR-21 -> STAR-21 PAREN-20
53:	STAR-21 -> /* empty */
54:	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;'
55:	STAR-22 -> STAR-22 Critic
56:	STAR-22 -> /* empty */
57:	STAR-23 -> STAR-23 Include
58:	STAR-23 -> /* empty */
59:	STAR-24 -> STAR-24 Constant
60:	STAR-24 -> /* empty */
61:	STAR-25 -> STAR-25 MethodOrSubroutine
62:	STAR-25 -> /* empty */
63:	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';'
64:	PAREN-26 -> OP21_LIST_COMMA HashEntryTyped
65:	STAR-27 -> STAR-27 PAREN-26
66:	STAR-27 -> /* empty */
67:	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-27 '}' ';'
68:	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';'
69:	OPTIONAL-28 -> MethodArguments
70:	OPTIONAL-28 -> /* empty */
71:	STAR-29 -> STAR-29 Operation
72:	STAR-29 -> /* empty */
73:	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-28 STAR-29 '}' ';'
74:	PAREN-30 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL
75:	STAR-31 -> STAR-31 PAREN-30
76:	STAR-31 -> /* empty */
77:	MethodArguments -> LPAREN_MY Type SELF STAR-31 ')' OP19_VARIABLE_ASSIGN '@_;'
78:	MethodOrSubroutine -> Method
79:	MethodOrSubroutine -> Subroutine
80:	Operation -> Expression ';'
81:	Operation -> Statement
82:	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')'
83:	Operator -> OP01_NAMED SubExpression
84:	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'
85:	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression
86:	Operator -> OP01_CLOSE FHREF_SYMBOL
87:	Operator -> OP03_MATH_INC_DEC Variable
88:	Operator -> Variable OP03_MATH_INC_DEC
89:	Operator -> SubExpression OP04_MATH_POW SubExpression
90:	Operator -> OP05_LOGICAL_NEG SubExpression
91:	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')'
92:	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN
93:	Operator -> SubExpression OP07_STRING_REPEAT SubExpression
94:	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression
95:	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression
96:	Operator -> SubExpression OP08_STRING_CAT SubExpression
97:	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression
98:	Operator -> OP10_NAMED_UNARY SubExpression
99:	Operator -> OP10_NAMED_UNARY
100:	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression
101:	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression
102:	Operator -> SubExpression OP13_BITWISE_AND SubExpression
103:	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression
104:	Operator -> SubExpression OP15_LOGICAL_AND SubExpression
105:	Operator -> SubExpression OP16_LOGICAL_OR SubExpression
106:	Operator -> SubExpression OP17_LIST_RANGE SubExpression
107:	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral
108:	Operator -> OP22_LOGICAL_NEG SubExpression
109:	Operator -> SubExpression OP23_LOGICAL_AND SubExpression
110:	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression
111:	PAREN-32 -> STDOUT_STDERR
112:	OPTIONAL-33 -> PAREN-32
113:	OPTIONAL-33 -> /* empty */
114:	OPTIONAL-34 -> ListElements
115:	OPTIONAL-34 -> /* empty */
116:	OperatorVoid -> OP01_PRINT OPTIONAL-33 ListElements ';'
117:	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements ';'
118:	OperatorVoid -> OP01_NAMED_VOID_SCOLON
119:	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-34 ')' ';'
120:	OperatorVoid -> OP01_NAMED_VOID ListElements ';'
121:	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';'
122:	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON
123:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
124:	OPTIONAL-35 -> ListElements
125:	OPTIONAL-35 -> /* empty */
126:	OPTIONAL-36 -> ListElements
127:	OPTIONAL-36 -> /* empty */
128:	Expression -> Operator
129:	Expression -> WordScoped LPAREN OPTIONAL-35 ')'
130:	Expression -> WORD_UPPERCASE LPAREN ')'
131:	Expression -> WordScoped SCOPE WORD_UPPERCASE LPAREN ')'
132:	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-36 ')'
133:	Expression -> WordScoped OP02_METHOD_THINARROW_NEW ')'
134:	SubExpression -> Expression
135:	SubExpression -> 'undef'
136:	SubExpression -> Literal
137:	SubExpression -> Variable
138:	SubExpression -> ArrayReference
139:	SubExpression -> ArrayDereference
140:	SubExpression -> HashReference
141:	SubExpression -> HashDereference
142:	SubExpression -> LPAREN SubExpression ')'
143:	SubExpressionOrStdin -> SubExpression
144:	SubExpressionOrStdin -> STDIN
145:	PAREN-37 -> LoopLabel COLON
146:	OPTIONAL-38 -> PAREN-37
147:	OPTIONAL-38 -> /* empty */
148:	Statement -> Conditional
149:	Statement -> OPTIONAL-38 Loop
150:	Statement -> OperatorVoid
151:	Statement -> VariableDeclaration
152:	Statement -> VariableModification
153:	PAREN-39 -> 'elsif' LPAREN SubExpression ')' CodeBlock
154:	STAR-40 -> STAR-40 PAREN-39
155:	STAR-40 -> /* empty */
156:	PAREN-41 -> 'else' CodeBlock
157:	OPTIONAL-42 -> PAREN-41
158:	OPTIONAL-42 -> /* empty */
159:	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-40 OPTIONAL-42
160:	Loop -> LoopFor
161:	Loop -> LoopForEach
162:	Loop -> LoopWhile
163:	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock
164:	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock
165:	LoopWhile -> 'while' LPAREN SubExpression ')' CodeBlock
166:	PLUS-43 -> PLUS-43 Operation
167:	PLUS-43 -> Operation
168:	CodeBlock -> LBRACE PLUS-43 '}'
169:	STAR-44 -> STAR-44 VariableRetrieval
170:	STAR-44 -> /* empty */
171:	Variable -> VariableSymbolOrSelf STAR-44
172:	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']'
173:	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}'
174:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
175:	VariableDeclaration -> MY Type VARIABLE_SYMBOL ';'
176:	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
177:	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL ';'
178:	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
179:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';'
180:	PAREN-45 -> OP21_LIST_COMMA ListElement
181:	STAR-46 -> STAR-46 PAREN-45
182:	STAR-46 -> /* empty */
183:	ListElements -> ListElement STAR-46
184:	PLUS-47 -> PLUS-47 WORD
185:	PLUS-47 -> WORD
186:	ListElement -> SubExpression
187:	ListElement -> TypeInner SubExpression
188:	ListElement -> OP01_QW PLUS-47 ')'
189:	OPTIONAL-48 -> ListElements
190:	OPTIONAL-48 -> /* empty */
191:	ArrayReference -> LBRACKET OPTIONAL-48 ']'
192:	OPTIONAL-49 -> TypeInner
193:	OPTIONAL-49 -> /* empty */
194:	ArrayDereference -> '@{' Variable '}'
195:	ArrayDereference -> '@{' OPTIONAL-49 ArrayReference '}'
196:	OPTIONAL-50 -> TypeInner
197:	OPTIONAL-50 -> /* empty */
198:	HashEntry -> VariableOrLiteralOrWord OP20_HASH_FATARROW OPTIONAL-50 SubExpression
199:	HashEntry -> HashDereference
200:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression
201:	HashEntryTyped -> HashDereference
202:	PAREN-51 -> OP21_LIST_COMMA HashEntry
203:	STAR-52 -> STAR-52 PAREN-51
204:	STAR-52 -> /* empty */
205:	HashReference -> LBRACE HashEntry STAR-52 '}'
206:	HashReference -> LBRACE '}'
207:	OPTIONAL-53 -> TypeInner
208:	OPTIONAL-53 -> /* empty */
209:	HashDereference -> '%{' Variable '}'
210:	HashDereference -> '%{' OPTIONAL-53 HashReference '}'
211:	WordScoped -> WORD
212:	WordScoped -> WORD_SCOPED
213:	LoopLabel -> WORD_UPPERCASE
214:	Type -> WORD
215:	Type -> WORD_SCOPED
216:	Type -> TYPE_INTEGER
217:	TypeInner -> MY Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
218:	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN
219:	VariableOrLiteral -> Variable
220:	VariableOrLiteral -> Literal
221:	VariableOrLiteralOrWord -> Variable
222:	VariableOrLiteralOrWord -> Literal
223:	VariableOrLiteralOrWord -> WORD
224:	VariableSymbolOrSelf -> VARIABLE_SYMBOL
225:	VariableSymbolOrSelf -> SELF
226:	Literal -> LITERAL_NUMBER
227:	Literal -> LITERAL_STRING

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'## no critic qw('	shift, and go to state 3
	SHEBANG	shift, and go to state 7

	'package'	reduce using rule 20 (OPTIONAL-9)
	USE_RPERL	reduce using rule 20 (OPTIONAL-9)

	Critic	go to state 2
	OPTIONAL-9	go to state 4
	Program	go to state 1
	ModuleHeader	go to state 9
	PLUS-2	go to state 8
	PAREN-1	go to state 5
	CompileUnit	go to state 6

State 1:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 2:

	OPTIONAL-9 -> Critic .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 3:

	Critic -> '## no critic qw(' . PLUS-16 ')'	(Rule 40)

	WORD	shift, and go to state 10

	PLUS-16	go to state 11

State 4:

	ModuleHeader -> OPTIONAL-9 . OPTIONAL-10 'package' WordScoped ';' Header	(Rule 23)

	USE_RPERL	shift, and go to state 13

	'package'	reduce using rule 22 (OPTIONAL-10)

	OPTIONAL-10	go to state 12

State 5:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 6:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 14

State 7:

	Program -> SHEBANG . OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 3

	USE_RPERL	reduce using rule 7 (OPTIONAL-3)

	Critic	go to state 16
	OPTIONAL-3	go to state 15

State 8:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	'## no critic qw('	shift, and go to state 3

	$end	reduce using rule 5 (CompileUnit)
	'package'	reduce using rule 20 (OPTIONAL-9)
	USE_RPERL	reduce using rule 20 (OPTIONAL-9)

	Critic	go to state 2
	OPTIONAL-9	go to state 4
	ModuleHeader	go to state 9
	PAREN-1	go to state 17

State 9:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent qw('	shift, and go to state 21

	'## no critic qw('	reduce using rule 27 (STAR-11)
	'our'	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	USE	reduce using rule 27 (STAR-11)

	Package	go to state 19
	Module	go to state 18
	STAR-11	go to state 20
	Class	go to state 22

State 10:

	PLUS-16 -> WORD .	(Rule 39)

	$default	reduce using rule 39 (PLUS-16)

State 11:

	PLUS-16 -> PLUS-16 . WORD	(Rule 38)
	Critic -> '## no critic qw(' PLUS-16 . ')'	(Rule 40)

	')'	shift, and go to state 23
	WORD	shift, and go to state 24

State 12:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 . 'package' WordScoped ';' Header	(Rule 23)

	'package'	shift, and go to state 25

State 13:

	OPTIONAL-10 -> USE_RPERL .	(Rule 21)

	$default	reduce using rule 21 (OPTIONAL-10)

State 14:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 15:

	Program -> SHEBANG OPTIONAL-3 . USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	USE_RPERL	shift, and go to state 26

State 16:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 17:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 18:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 19:

	Module -> Package .	(Rule 24)

	$default	reduce using rule 24 (Module)

State 20:

	STAR-11 -> STAR-11 . Critic	(Rule 26)
	Package -> STAR-11 . STAR-12 STAR-13 PLUS-14 LITERAL_NUMBER ';'	(Rule 34)

	'## no critic qw('	shift, and go to state 3

	'our'	reduce using rule 29 (STAR-12)
	'use constant'	reduce using rule 29 (STAR-12)
	USE	reduce using rule 29 (STAR-12)

	Critic	go to state 27
	STAR-12	go to state 28

State 21:

	Class -> 'use parent qw(' . WordScoped ')' ';' Include STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29

	WordScoped	go to state 30

State 22:

	Module -> Class .	(Rule 25)

	$default	reduce using rule 25 (Module)

State 23:

	Critic -> '## no critic qw(' PLUS-16 ')' .	(Rule 40)

	$default	reduce using rule 40 (Critic)

State 24:

	PLUS-16 -> PLUS-16 WORD .	(Rule 38)

	$default	reduce using rule 38 (PLUS-16)

State 25:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' . WordScoped ';' Header	(Rule 23)

	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29

	WordScoped	go to state 32

State 26:

	Program -> SHEBANG OPTIONAL-3 USE_RPERL . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 33

	Header	go to state 34

State 27:

	STAR-11 -> STAR-11 Critic .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 28:

	STAR-12 -> STAR-12 . Include	(Rule 28)
	Package -> STAR-11 STAR-12 . STAR-13 PLUS-14 LITERAL_NUMBER ';'	(Rule 34)

	USE	shift, and go to state 37

	'our'	reduce using rule 31 (STAR-13)
	'use constant'	reduce using rule 31 (STAR-13)

	Include	go to state 36
	STAR-13	go to state 35

State 29:

	WordScoped -> WORD_SCOPED .	(Rule 212)

	$default	reduce using rule 212 (WordScoped)

State 30:

	Class -> 'use parent qw(' WordScoped . ')' ';' Include STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	')'	shift, and go to state 38

State 31:

	WordScoped -> WORD .	(Rule 211)

	$default	reduce using rule 211 (WordScoped)

State 32:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped . ';' Header	(Rule 23)

	';'	shift, and go to state 39

State 33:

	Header -> 'use strict;' . 'use warnings;' OPTIONAL-15 'our' VERSION_NUMBER_ASSIGN	(Rule 37)

	'use warnings;'	shift, and go to state 40

State 34:

	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 41

State 35:

	STAR-13 -> STAR-13 . Constant	(Rule 30)
	Package -> STAR-11 STAR-12 STAR-13 . PLUS-14 LITERAL_NUMBER ';'	(Rule 34)

	'our'	shift, and go to state 42
	'use constant'	shift, and go to state 45

	Subroutine	go to state 44
	PLUS-14	go to state 46
	Constant	go to state 43

State 36:

	STAR-12 -> STAR-12 Include .	(Rule 28)

	$default	reduce using rule 28 (STAR-12)

State 37:

	Include -> USE . WordScoped ';'	(Rule 43)
	Include -> USE . WordScoped OP01_QW PLUS-17 ')' ';'	(Rule 44)

	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29

	WordScoped	go to state 47

State 38:

	Class -> 'use parent qw(' WordScoped ')' . ';' Include STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	';'	shift, and go to state 48

State 39:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped ';' . Header	(Rule 23)

	'use strict;'	shift, and go to state 33

	Header	go to state 49

State 40:

	Header -> 'use strict;' 'use warnings;' . OPTIONAL-15 'our' VERSION_NUMBER_ASSIGN	(Rule 37)

	USE_RPERL_AFTER	shift, and go to state 51

	'our'	reduce using rule 36 (OPTIONAL-15)

	OPTIONAL-15	go to state 50

State 41:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 3

	'%{'	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'for'	reduce using rule 11 (STAR-5)
	'foreach'	reduce using rule 11 (STAR-5)
	'if'	reduce using rule 11 (STAR-5)
	'our'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'while'	reduce using rule 11 (STAR-5)
	LBRACE	reduce using rule 11 (STAR-5)
	LBRACKET	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	LPAREN	reduce using rule 11 (STAR-5)
	MY	reduce using rule 11 (STAR-5)
	OP01_CLOSE	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_LPAREN	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_SCOLON	reduce using rule 11 (STAR-5)
	OP01_OPEN	reduce using rule 11 (STAR-5)
	OP01_PRINT	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG_LPAREN	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	SELF	reduce using rule 11 (STAR-5)
	USE	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)
	WORD_UPPERCASE	reduce using rule 11 (STAR-5)

	Critic	go to state 53
	STAR-5	go to state 52

State 42:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 STAR-19 '}' ';'	(Rule 50)

	TYPE_INTEGER	shift, and go to state 57
	WORD	shift, and go to state 55
	WORD_SCOPED	shift, and go to state 56

	Type	go to state 54

State 43:

	STAR-13 -> STAR-13 Constant .	(Rule 30)

	$default	reduce using rule 30 (STAR-13)

State 44:

	PLUS-14 -> Subroutine .	(Rule 33)

	$default	reduce using rule 33 (PLUS-14)

State 45:

	Constant -> 'use constant' . WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 45)

	WORD_UPPERCASE	shift, and go to state 58

State 46:

	PLUS-14 -> PLUS-14 . Subroutine	(Rule 32)
	Package -> STAR-11 STAR-12 STAR-13 PLUS-14 . LITERAL_NUMBER ';'	(Rule 34)

	'our'	shift, and go to state 42
	LITERAL_NUMBER	shift, and go to state 60

	Subroutine	go to state 59

State 47:

	Include -> USE WordScoped . ';'	(Rule 43)
	Include -> USE WordScoped . OP01_QW PLUS-17 ')' ';'	(Rule 44)

	';'	shift, and go to state 62
	OP01_QW	shift, and go to state 61

State 48:

	Class -> 'use parent qw(' WordScoped ')' ';' . Include STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	USE	shift, and go to state 37

	Include	go to state 63

State 49:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped ';' Header .	(Rule 23)

	$default	reduce using rule 23 (ModuleHeader)

State 50:

	Header -> 'use strict;' 'use warnings;' OPTIONAL-15 . 'our' VERSION_NUMBER_ASSIGN	(Rule 37)

	'our'	shift, and go to state 64

State 51:

	OPTIONAL-15 -> USE_RPERL_AFTER .	(Rule 35)

	$default	reduce using rule 35 (OPTIONAL-15)

State 52:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	USE	shift, and go to state 37

	'%{'	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'for'	reduce using rule 13 (STAR-6)
	'foreach'	reduce using rule 13 (STAR-6)
	'if'	reduce using rule 13 (STAR-6)
	'our'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while'	reduce using rule 13 (STAR-6)
	LBRACE	reduce using rule 13 (STAR-6)
	LBRACKET	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	LPAREN	reduce using rule 13 (STAR-6)
	MY	reduce using rule 13 (STAR-6)
	OP01_CLOSE	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_LPAREN	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_SCOLON	reduce using rule 13 (STAR-6)
	OP01_OPEN	reduce using rule 13 (STAR-6)
	OP01_PRINT	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG_LPAREN	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	SELF	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)
	WORD_UPPERCASE	reduce using rule 13 (STAR-6)

	STAR-6	go to state 65
	Include	go to state 66

State 53:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 54:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-18 STAR-19 '}' ';'	(Rule 50)

	VARIABLE_SYMBOL	shift, and go to state 67

State 55:

	Type -> WORD .	(Rule 214)

	$default	reduce using rule 214 (Type)

State 56:

	Type -> WORD_SCOPED .	(Rule 215)

	$default	reduce using rule 215 (Type)

State 57:

	Type -> TYPE_INTEGER .	(Rule 216)

	$default	reduce using rule 216 (Type)

State 58:

	Constant -> 'use constant' WORD_UPPERCASE . OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 45)

	OP20_HASH_FATARROW	shift, and go to state 68

State 59:

	PLUS-14 -> PLUS-14 Subroutine .	(Rule 32)

	$default	reduce using rule 32 (PLUS-14)

State 60:

	Package -> STAR-11 STAR-12 STAR-13 PLUS-14 LITERAL_NUMBER . ';'	(Rule 34)

	';'	shift, and go to state 69

State 61:

	Include -> USE WordScoped OP01_QW . PLUS-17 ')' ';'	(Rule 44)

	WORD	shift, and go to state 70

	PLUS-17	go to state 71

State 62:

	Include -> USE WordScoped ';' .	(Rule 43)

	$default	reduce using rule 43 (Include)

State 63:

	Class -> 'use parent qw(' WordScoped ')' ';' Include . STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	$default	reduce using rule 56 (STAR-22)

	STAR-22	go to state 72

State 64:

	Header -> 'use strict;' 'use warnings;' OPTIONAL-15 'our' . VERSION_NUMBER_ASSIGN	(Rule 37)

	VERSION_NUMBER_ASSIGN	shift, and go to state 73

State 65:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 45

	'%{'	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'for'	reduce using rule 15 (STAR-7)
	'foreach'	reduce using rule 15 (STAR-7)
	'if'	reduce using rule 15 (STAR-7)
	'our'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while'	reduce using rule 15 (STAR-7)
	LBRACE	reduce using rule 15 (STAR-7)
	LBRACKET	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	LPAREN	reduce using rule 15 (STAR-7)
	MY	reduce using rule 15 (STAR-7)
	OP01_CLOSE	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_LPAREN	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_SCOLON	reduce using rule 15 (STAR-7)
	OP01_OPEN	reduce using rule 15 (STAR-7)
	OP01_PRINT	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG_LPAREN	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	SELF	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)
	WORD_UPPERCASE	reduce using rule 15 (STAR-7)

	Constant	go to state 75
	STAR-7	go to state 74

State 66:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 67:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-18 STAR-19 '}' ';'	(Rule 50)

	'= sub {'	shift, and go to state 76

State 68:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW . TypeInnerConstant Literal ';'	(Rule 45)

	MY	shift, and go to state 78

	TypeInnerConstant	go to state 77

State 69:

	Package -> STAR-11 STAR-12 STAR-13 PLUS-14 LITERAL_NUMBER ';' .	(Rule 34)

	$default	reduce using rule 34 (Package)

State 70:

	PLUS-17 -> WORD .	(Rule 42)

	$default	reduce using rule 42 (PLUS-17)

State 71:

	PLUS-17 -> PLUS-17 . WORD	(Rule 41)
	Include -> USE WordScoped OP01_QW PLUS-17 . ')' ';'	(Rule 44)

	')'	shift, and go to state 80
	WORD	shift, and go to state 79

State 72:

	STAR-22 -> STAR-22 . Critic	(Rule 55)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 . STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	'## no critic qw('	shift, and go to state 3

	'our hashref $properties'	reduce using rule 58 (STAR-23)
	'use constant'	reduce using rule 58 (STAR-23)
	USE	reduce using rule 58 (STAR-23)

	STAR-23	go to state 82
	Critic	go to state 81

State 73:

	Header -> 'use strict;' 'use warnings;' OPTIONAL-15 'our' VERSION_NUMBER_ASSIGN .	(Rule 37)

	$default	reduce using rule 37 (Header)

State 74:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'if'	shift, and go to state 105
	'our'	shift, and go to state 42
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 124
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 122
	OP01_NAMED_VOID	shift, and go to state 91
	OP01_NAMED_VOID_LPAREN	shift, and go to state 98
	OP01_NAMED_VOID_SCOLON	shift, and go to state 125
	OP01_OPEN	shift, and go to state 116
	OP01_PRINT	shift, and go to state 126
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP19_LOOP_CONTROL	shift, and go to state 129
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 85
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 111

	'for'	reduce using rule 147 (OPTIONAL-38)
	'foreach'	reduce using rule 147 (OPTIONAL-38)
	'while'	reduce using rule 147 (OPTIONAL-38)

	Statement	go to state 101
	ArrayDereference	go to state 103
	Operator	go to state 123
	VariableDeclaration	go to state 121
	OPTIONAL-38	go to state 97
	Conditional	go to state 119
	HashDereference	go to state 100
	Literal	go to state 108
	SubExpression	go to state 107
	WordScoped	go to state 87
	OperatorVoid	go to state 113
	ArrayReference	go to state 112
	HashReference	go to state 84
	Expression	go to state 86
	PAREN-37	go to state 110
	PLUS-8	go to state 94
	LoopLabel	go to state 93
	Variable	go to state 95
	VariableSymbolOrSelf	go to state 115
	VariableModification	go to state 117
	Subroutine	go to state 90
	Operation	go to state 89

State 75:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 76:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-18 STAR-19 '}' ';'	(Rule 50)

	LPAREN_MY	shift, and go to state 132

	'%{'	reduce using rule 47 (OPTIONAL-18)
	'@{'	reduce using rule 47 (OPTIONAL-18)
	'for'	reduce using rule 47 (OPTIONAL-18)
	'foreach'	reduce using rule 47 (OPTIONAL-18)
	'if'	reduce using rule 47 (OPTIONAL-18)
	'undef'	reduce using rule 47 (OPTIONAL-18)
	'while'	reduce using rule 47 (OPTIONAL-18)
	'}'	reduce using rule 47 (OPTIONAL-18)
	LBRACE	reduce using rule 47 (OPTIONAL-18)
	LBRACKET	reduce using rule 47 (OPTIONAL-18)
	LITERAL_NUMBER	reduce using rule 47 (OPTIONAL-18)
	LITERAL_STRING	reduce using rule 47 (OPTIONAL-18)
	LPAREN	reduce using rule 47 (OPTIONAL-18)
	MY	reduce using rule 47 (OPTIONAL-18)
	OP01_CLOSE	reduce using rule 47 (OPTIONAL-18)
	OP01_NAMED	reduce using rule 47 (OPTIONAL-18)
	OP01_NAMED_VOID	reduce using rule 47 (OPTIONAL-18)
	OP01_NAMED_VOID_LPAREN	reduce using rule 47 (OPTIONAL-18)
	OP01_NAMED_VOID_SCOLON	reduce using rule 47 (OPTIONAL-18)
	OP01_OPEN	reduce using rule 47 (OPTIONAL-18)
	OP01_PRINT	reduce using rule 47 (OPTIONAL-18)
	OP03_MATH_INC_DEC	reduce using rule 47 (OPTIONAL-18)
	OP05_LOGICAL_NEG	reduce using rule 47 (OPTIONAL-18)
	OP05_MATH_NEG_LPAREN	reduce using rule 47 (OPTIONAL-18)
	OP10_NAMED_UNARY	reduce using rule 47 (OPTIONAL-18)
	OP19_LOOP_CONTROL	reduce using rule 47 (OPTIONAL-18)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 47 (OPTIONAL-18)
	OP22_LOGICAL_NEG	reduce using rule 47 (OPTIONAL-18)
	SELF	reduce using rule 47 (OPTIONAL-18)
	VARIABLE_SYMBOL	reduce using rule 47 (OPTIONAL-18)
	WORD	reduce using rule 47 (OPTIONAL-18)
	WORD_SCOPED	reduce using rule 47 (OPTIONAL-18)
	WORD_UPPERCASE	reduce using rule 47 (OPTIONAL-18)

	OPTIONAL-18	go to state 134
	SubroutineArguments	go to state 133

State 77:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant . Literal ';'	(Rule 45)

	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127

	Literal	go to state 135

State 78:

	TypeInnerConstant -> MY . Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 218)

	TYPE_INTEGER	shift, and go to state 57
	WORD	shift, and go to state 55
	WORD_SCOPED	shift, and go to state 56

	Type	go to state 136

State 79:

	PLUS-17 -> PLUS-17 WORD .	(Rule 41)

	$default	reduce using rule 41 (PLUS-17)

State 80:

	Include -> USE WordScoped OP01_QW PLUS-17 ')' . ';'	(Rule 44)

	';'	shift, and go to state 137

State 81:

	STAR-22 -> STAR-22 Critic .	(Rule 55)

	$default	reduce using rule 55 (STAR-22)

State 82:

	STAR-23 -> STAR-23 . Include	(Rule 57)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 STAR-23 . STAR-24 Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	USE	shift, and go to state 37

	'our hashref $properties'	reduce using rule 60 (STAR-24)
	'use constant'	reduce using rule 60 (STAR-24)

	Include	go to state 138
	STAR-24	go to state 139

State 83:

	HashReference -> LBRACE . HashEntry STAR-52 '}'	(Rule 205)
	HashReference -> LBRACE . '}'	(Rule 206)

	'%{'	shift, and go to state 96
	'}'	shift, and go to state 145
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 142

	Literal	go to state 144
	Variable	go to state 140
	HashEntry	go to state 141
	HashDereference	go to state 146
	VariableOrLiteralOrWord	go to state 143
	VariableSymbolOrSelf	go to state 115

State 84:

	SubExpression -> HashReference .	(Rule 140)

	$default	reduce using rule 140 (SubExpression)

State 85:

	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON .	(Rule 122)

	$default	reduce using rule 122 (OperatorVoid)

State 86:

	Operation -> Expression . ';'	(Rule 80)
	SubExpression -> Expression .	(Rule 134)

	';'	shift, and go to state 147

	OP04_MATH_POW	reduce using rule 134 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 134 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 134 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 134 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 134 (SubExpression)
	OP08_STRING_CAT	reduce using rule 134 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 134 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 134 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 134 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 134 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 134 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 134 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 134 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 134 (SubExpression)
	OP18_TERNARY	reduce using rule 134 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 134 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 134 (SubExpression)

State 87:

	Expression -> WordScoped . LPAREN OPTIONAL-35 ')'	(Rule 129)
	Expression -> WordScoped . SCOPE WORD_UPPERCASE LPAREN ')'	(Rule 131)
	Expression -> WordScoped . OP02_METHOD_THINARROW_NEW ')'	(Rule 133)

	LPAREN	shift, and go to state 150
	OP02_METHOD_THINARROW_NEW	shift, and go to state 148
	SCOPE	shift, and go to state 149

State 88:

	Operator -> OP10_NAMED_UNARY . SubExpression	(Rule 98)
	Operator -> OP10_NAMED_UNARY .	(Rule 99)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	')'	reduce using rule 99 (Operator)
	';'	reduce using rule 99 (Operator)
	']'	reduce using rule 99 (Operator)
	'}'	reduce using rule 99 (Operator)
	OP04_MATH_POW	reduce using rule 99 (Operator)
	OP06_REGEX_MATCH	reduce using rule 99 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 99 (Operator)
	OP07_STRING_REPEAT	reduce using rule 99 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 99 (Operator)
	OP08_STRING_CAT	reduce using rule 99 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 99 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 99 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 99 (Operator)
	OP13_BITWISE_AND	reduce using rule 99 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 99 (Operator)
	OP15_LOGICAL_AND	reduce using rule 99 (Operator)
	OP16_LOGICAL_OR	reduce using rule 99 (Operator)
	OP17_LIST_RANGE	reduce using rule 99 (Operator)
	OP18_TERNARY	reduce using rule 99 (Operator)
	OP21_LIST_COMMA	reduce using rule 99 (Operator)
	OP23_LOGICAL_AND	reduce using rule 99 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 99 (Operator)

	SubExpression	go to state 155
	Literal	go to state 108
	Variable	go to state 153
	VariableSymbolOrSelf	go to state 115
	ArrayDereference	go to state 103
	Operator	go to state 123
	WordScoped	go to state 87
	ArrayReference	go to state 112
	HashDereference	go to state 100
	Expression	go to state 154
	HashReference	go to state 84

State 89:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 90:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 91:

	OperatorVoid -> OP01_NAMED_VOID . ListElements ';'	(Rule 120)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 161
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP01_QW	shift, and go to state 159
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	HashDereference	go to state 100
	ListElement	go to state 156
	Expression	go to state 154
	HashReference	go to state 84
	ArrayDereference	go to state 103
	Operator	go to state 123
	TypeInner	go to state 160
	WordScoped	go to state 87
	ArrayReference	go to state 112
	ListElements	go to state 157
	VariableSymbolOrSelf	go to state 115
	SubExpression	go to state 158
	Literal	go to state 108
	Variable	go to state 153

State 92:

	ArrayReference -> LBRACKET . OPTIONAL-48 ']'	(Rule 191)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 161
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP01_QW	shift, and go to state 159
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	']'	reduce using rule 190 (OPTIONAL-48)

	ArrayReference	go to state 112
	TypeInner	go to state 160
	WordScoped	go to state 87
	Operator	go to state 123
	ArrayDereference	go to state 103
	HashReference	go to state 84
	ListElement	go to state 156
	Expression	go to state 154
	HashDereference	go to state 100
	OPTIONAL-48	go to state 163
	Variable	go to state 153
	SubExpression	go to state 158
	Literal	go to state 108
	VariableSymbolOrSelf	go to state 115
	ListElements	go to state 162

State 93:

	PAREN-37 -> LoopLabel . COLON	(Rule 145)

	COLON	shift, and go to state 164

State 94:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'if'	shift, and go to state 105
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 124
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 122
	OP01_NAMED_VOID	shift, and go to state 91
	OP01_NAMED_VOID_LPAREN	shift, and go to state 98
	OP01_NAMED_VOID_SCOLON	shift, and go to state 125
	OP01_OPEN	shift, and go to state 116
	OP01_PRINT	shift, and go to state 126
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP19_LOOP_CONTROL	shift, and go to state 129
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 85
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 111

	$end	reduce using rule 18 (Program)
	'for'	reduce using rule 147 (OPTIONAL-38)
	'foreach'	reduce using rule 147 (OPTIONAL-38)
	'while'	reduce using rule 147 (OPTIONAL-38)

	HashDereference	go to state 100
	OPTIONAL-38	go to state 97
	VariableDeclaration	go to state 121
	Conditional	go to state 119
	ArrayDereference	go to state 103
	Operator	go to state 123
	Statement	go to state 101
	SubExpression	go to state 107
	Literal	go to state 108
	PAREN-37	go to state 110
	Expression	go to state 86
	HashReference	go to state 84
	OperatorVoid	go to state 113
	WordScoped	go to state 87
	ArrayReference	go to state 112
	VariableModification	go to state 117
	Operation	go to state 165
	VariableSymbolOrSelf	go to state 115
	Variable	go to state 95
	LoopLabel	go to state 93

State 95:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 88)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-36 ')'	(Rule 132)
	SubExpression -> Variable .	(Rule 137)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 178)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY SubExpression ';'	(Rule 179)

	OP02_METHOD_THINARROW	shift, and go to state 167
	OP03_MATH_INC_DEC	shift, and go to state 168
	OP19_VARIABLE_ASSIGN	shift, and go to state 166
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 169

	OP04_MATH_POW	reduce using rule 137 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 137 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 137 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 137 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 137 (SubExpression)
	OP08_STRING_CAT	reduce using rule 137 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 137 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 137 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 137 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 137 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 137 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 137 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 137 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 137 (SubExpression)
	OP18_TERNARY	reduce using rule 137 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 137 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 137 (SubExpression)

State 96:

	HashDereference -> '%{' . Variable '}'	(Rule 209)
	HashDereference -> '%{' . OPTIONAL-53 HashReference '}'	(Rule 210)

	MY	shift, and go to state 161
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109

	LBRACE	reduce using rule 208 (OPTIONAL-53)

	OPTIONAL-53	go to state 171
	VariableSymbolOrSelf	go to state 115
	Variable	go to state 172
	TypeInner	go to state 170

State 97:

	Statement -> OPTIONAL-38 . Loop	(Rule 149)

	'for'	shift, and go to state 175
	'foreach'	shift, and go to state 178
	'while'	shift, and go to state 179

	LoopFor	go to state 177
	LoopForEach	go to state 176
	LoopWhile	go to state 173
	Loop	go to state 174

State 98:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN . OPTIONAL-34 ')' ';'	(Rule 119)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 161
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP01_QW	shift, and go to state 159
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	')'	reduce using rule 115 (OPTIONAL-34)

	VariableSymbolOrSelf	go to state 115
	ListElements	go to state 180
	Variable	go to state 153
	Literal	go to state 108
	SubExpression	go to state 158
	ListElement	go to state 156
	Expression	go to state 154
	HashDereference	go to state 100
	HashReference	go to state 84
	OPTIONAL-34	go to state 181
	Operator	go to state 123
	ArrayDereference	go to state 103
	ArrayReference	go to state 112
	WordScoped	go to state 87
	TypeInner	go to state 160

State 99:

	Literal -> LITERAL_NUMBER .	(Rule 226)

	$default	reduce using rule 226 (Literal)

State 100:

	SubExpression -> HashDereference .	(Rule 141)

	$default	reduce using rule 141 (SubExpression)

State 101:

	Operation -> Statement .	(Rule 81)

	$default	reduce using rule 81 (Operation)

State 102:

	Operator -> OP05_MATH_NEG_LPAREN . SubExpression ')'	(Rule 91)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	VariableSymbolOrSelf	go to state 115
	Variable	go to state 153
	SubExpression	go to state 182
	Literal	go to state 108
	Expression	go to state 154
	HashDereference	go to state 100
	HashReference	go to state 84
	Operator	go to state 123
	ArrayDereference	go to state 103
	ArrayReference	go to state 112
	WordScoped	go to state 87

State 103:

	SubExpression -> ArrayDereference .	(Rule 139)

	$default	reduce using rule 139 (SubExpression)

State 104:

	VariableSymbolOrSelf -> SELF .	(Rule 225)

	$default	reduce using rule 225 (VariableSymbolOrSelf)

State 105:

	Conditional -> 'if' . LPAREN SubExpression ')' CodeBlock STAR-40 OPTIONAL-42	(Rule 159)

	LPAREN	shift, and go to state 183

State 106:

	SubExpression -> 'undef' .	(Rule 135)

	$default	reduce using rule 135 (SubExpression)

State 107:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191
	OP09_BITWISE_SHIFT	shift, and go to state 196
	OP11_COMPARE_LT_GT	shift, and go to state 189
	OP12_COMPARE_EQ_NE	shift, and go to state 195
	OP13_BITWISE_AND	shift, and go to state 188
	OP14_BITWISE_OR_XOR	shift, and go to state 199
	OP15_LOGICAL_AND	shift, and go to state 184
	OP16_LOGICAL_OR	shift, and go to state 185
	OP17_LIST_RANGE	shift, and go to state 198
	OP18_TERNARY	shift, and go to state 197
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 192

State 108:

	SubExpression -> Literal .	(Rule 136)

	$default	reduce using rule 136 (SubExpression)

State 109:

	VariableSymbolOrSelf -> VARIABLE_SYMBOL .	(Rule 224)

	$default	reduce using rule 224 (VariableSymbolOrSelf)

State 110:

	OPTIONAL-38 -> PAREN-37 .	(Rule 146)

	$default	reduce using rule 146 (OPTIONAL-38)

State 111:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 130)
	LoopLabel -> WORD_UPPERCASE .	(Rule 213)

	LPAREN	shift, and go to state 201

	COLON	reduce using rule 213 (LoopLabel)

State 112:

	SubExpression -> ArrayReference .	(Rule 138)

	$default	reduce using rule 138 (SubExpression)

State 113:

	Statement -> OperatorVoid .	(Rule 150)

	$default	reduce using rule 150 (Statement)

State 114:

	Operator -> OP22_LOGICAL_NEG . SubExpression	(Rule 108)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	Variable	go to state 153
	Literal	go to state 108
	SubExpression	go to state 202
	VariableSymbolOrSelf	go to state 115
	ArrayReference	go to state 112
	WordScoped	go to state 87
	Operator	go to state 123
	ArrayDereference	go to state 103
	HashReference	go to state 84
	Expression	go to state 154
	HashDereference	go to state 100

State 115:

	Variable -> VariableSymbolOrSelf . STAR-44	(Rule 171)

	$default	reduce using rule 170 (STAR-44)

	STAR-44	go to state 203

State 116:

	Operator -> OP01_OPEN . MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 85)

	MY	shift, and go to state 204

State 117:

	Statement -> VariableModification .	(Rule 152)

	$default	reduce using rule 152 (Statement)

State 118:

	Operator -> OP01_CLOSE . FHREF_SYMBOL	(Rule 86)

	FHREF_SYMBOL	shift, and go to state 205

State 119:

	Statement -> Conditional .	(Rule 148)

	$default	reduce using rule 148 (Statement)

State 120:

	ArrayDereference -> '@{' . Variable '}'	(Rule 194)
	ArrayDereference -> '@{' . OPTIONAL-49 ArrayReference '}'	(Rule 195)

	MY	shift, and go to state 161
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109

	LBRACKET	reduce using rule 193 (OPTIONAL-49)

	VariableSymbolOrSelf	go to state 115
	Variable	go to state 207
	TypeInner	go to state 206
	OPTIONAL-49	go to state 208

State 121:

	Statement -> VariableDeclaration .	(Rule 151)

	$default	reduce using rule 151 (Statement)

State 122:

	Operator -> OP01_NAMED . SubExpression	(Rule 83)
	OperatorVoid -> OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ';'	(Rule 121)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 161
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP01_QW	shift, and go to state 159
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	VariableSymbolOrSelf	go to state 115
	Literal	go to state 108
	SubExpression	go to state 209
	Variable	go to state 153
	HashDereference	go to state 100
	Expression	go to state 154
	ListElement	go to state 210
	HashReference	go to state 84
	ArrayDereference	go to state 103
	Operator	go to state 123
	WordScoped	go to state 87
	TypeInner	go to state 160
	ArrayReference	go to state 112

State 123:

	Expression -> Operator .	(Rule 128)

	$default	reduce using rule 128 (Expression)

State 124:

	VariableDeclaration -> MY . Type VARIABLE_SYMBOL ';'	(Rule 175)
	VariableDeclaration -> MY . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 176)
	VariableDeclaration -> MY . TYPE_FHREF FHREF_SYMBOL ';'	(Rule 177)

	TYPE_FHREF	shift, and go to state 211
	TYPE_INTEGER	shift, and go to state 57
	WORD	shift, and go to state 55
	WORD_SCOPED	shift, and go to state 56

	Type	go to state 212

State 125:

	OperatorVoid -> OP01_NAMED_VOID_SCOLON .	(Rule 118)

	$default	reduce using rule 118 (OperatorVoid)

State 126:

	OperatorVoid -> OP01_PRINT . OPTIONAL-33 ListElements ';'	(Rule 116)
	OperatorVoid -> OP01_PRINT . FHREF_SYMBOL_BRACES ListElements ';'	(Rule 117)

	FHREF_SYMBOL_BRACES	shift, and go to state 215
	STDOUT_STDERR	shift, and go to state 213

	'%{'	reduce using rule 113 (OPTIONAL-33)
	'@{'	reduce using rule 113 (OPTIONAL-33)
	'undef'	reduce using rule 113 (OPTIONAL-33)
	LBRACE	reduce using rule 113 (OPTIONAL-33)
	LBRACKET	reduce using rule 113 (OPTIONAL-33)
	LITERAL_NUMBER	reduce using rule 113 (OPTIONAL-33)
	LITERAL_STRING	reduce using rule 113 (OPTIONAL-33)
	LPAREN	reduce using rule 113 (OPTIONAL-33)
	MY	reduce using rule 113 (OPTIONAL-33)
	OP01_CLOSE	reduce using rule 113 (OPTIONAL-33)
	OP01_NAMED	reduce using rule 113 (OPTIONAL-33)
	OP01_OPEN	reduce using rule 113 (OPTIONAL-33)
	OP01_QW	reduce using rule 113 (OPTIONAL-33)
	OP03_MATH_INC_DEC	reduce using rule 113 (OPTIONAL-33)
	OP05_LOGICAL_NEG	reduce using rule 113 (OPTIONAL-33)
	OP05_MATH_NEG_LPAREN	reduce using rule 113 (OPTIONAL-33)
	OP10_NAMED_UNARY	reduce using rule 113 (OPTIONAL-33)
	OP22_LOGICAL_NEG	reduce using rule 113 (OPTIONAL-33)
	SELF	reduce using rule 113 (OPTIONAL-33)
	VARIABLE_SYMBOL	reduce using rule 113 (OPTIONAL-33)
	WORD	reduce using rule 113 (OPTIONAL-33)
	WORD_SCOPED	reduce using rule 113 (OPTIONAL-33)
	WORD_UPPERCASE	reduce using rule 113 (OPTIONAL-33)

	PAREN-32	go to state 214
	OPTIONAL-33	go to state 216

State 127:

	Literal -> LITERAL_STRING .	(Rule 227)

	$default	reduce using rule 227 (Literal)

State 128:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 87)

	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109

	Variable	go to state 217
	VariableSymbolOrSelf	go to state 115

State 129:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 123)

	WORD_UPPERCASE	shift, and go to state 219

	LoopLabel	go to state 218

State 130:

	Operator -> LPAREN . OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')'	(Rule 82)
	Operator -> LPAREN . OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'	(Rule 84)
	SubExpression -> LPAREN . SubExpression ')'	(Rule 142)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 221
	OP01_OPEN	shift, and go to state 116
	OP01_PRINT	shift, and go to state 220
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	VariableSymbolOrSelf	go to state 115
	Literal	go to state 108
	SubExpression	go to state 222
	Variable	go to state 153
	HashReference	go to state 84
	HashDereference	go to state 100
	Expression	go to state 154
	WordScoped	go to state 87
	ArrayReference	go to state 112
	ArrayDereference	go to state 103
	Operator	go to state 123

State 131:

	Operator -> OP05_LOGICAL_NEG . SubExpression	(Rule 90)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	ArrayDereference	go to state 103
	Operator	go to state 123
	WordScoped	go to state 87
	ArrayReference	go to state 112
	HashDereference	go to state 100
	Expression	go to state 154
	HashReference	go to state 84
	Literal	go to state 108
	SubExpression	go to state 223
	Variable	go to state 153
	VariableSymbolOrSelf	go to state 115

State 132:

	SubroutineArguments -> LPAREN_MY . Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 54)

	TYPE_INTEGER	shift, and go to state 57
	WORD	shift, and go to state 55
	WORD_SCOPED	shift, and go to state 56

	Type	go to state 224

State 133:

	OPTIONAL-18 -> SubroutineArguments .	(Rule 46)

	$default	reduce using rule 46 (OPTIONAL-18)

State 134:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 . STAR-19 '}' ';'	(Rule 50)

	$default	reduce using rule 49 (STAR-19)

	STAR-19	go to state 225

State 135:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal . ';'	(Rule 45)

	';'	shift, and go to state 226

State 136:

	TypeInnerConstant -> MY Type . '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 218)

	'$TYPED_'	shift, and go to state 227

State 137:

	Include -> USE WordScoped OP01_QW PLUS-17 ')' ';' .	(Rule 44)

	$default	reduce using rule 44 (Include)

State 138:

	STAR-23 -> STAR-23 Include .	(Rule 57)

	$default	reduce using rule 57 (STAR-23)

State 139:

	STAR-24 -> STAR-24 . Constant	(Rule 59)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 STAR-23 STAR-24 . Properties STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	'our hashref $properties'	shift, and go to state 230
	'use constant'	shift, and go to state 45

	Constant	go to state 229
	Properties	go to state 228

State 140:

	VariableOrLiteralOrWord -> Variable .	(Rule 221)

	$default	reduce using rule 221 (VariableOrLiteralOrWord)

State 141:

	HashReference -> LBRACE HashEntry . STAR-52 '}'	(Rule 205)

	$default	reduce using rule 204 (STAR-52)

	STAR-52	go to state 231

State 142:

	VariableOrLiteralOrWord -> WORD .	(Rule 223)

	$default	reduce using rule 223 (VariableOrLiteralOrWord)

State 143:

	HashEntry -> VariableOrLiteralOrWord . OP20_HASH_FATARROW OPTIONAL-50 SubExpression	(Rule 198)

	OP20_HASH_FATARROW	shift, and go to state 232

State 144:

	VariableOrLiteralOrWord -> Literal .	(Rule 222)

	$default	reduce using rule 222 (VariableOrLiteralOrWord)

State 145:

	HashReference -> LBRACE '}' .	(Rule 206)

	$default	reduce using rule 206 (HashReference)

State 146:

	HashEntry -> HashDereference .	(Rule 199)

	$default	reduce using rule 199 (HashEntry)

State 147:

	Operation -> Expression ';' .	(Rule 80)

	$default	reduce using rule 80 (Operation)

State 148:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW . ')'	(Rule 133)

	')'	shift, and go to state 233

State 149:

	Expression -> WordScoped SCOPE . WORD_UPPERCASE LPAREN ')'	(Rule 131)

	WORD_UPPERCASE	shift, and go to state 234

State 150:

	Expression -> WordScoped LPAREN . OPTIONAL-35 ')'	(Rule 129)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 161
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP01_QW	shift, and go to state 159
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	')'	reduce using rule 125 (OPTIONAL-35)

	HashDereference	go to state 100
	Expression	go to state 154
	ListElement	go to state 156
	HashReference	go to state 84
	ArrayDereference	go to state 103
	Operator	go to state 123
	WordScoped	go to state 87
	TypeInner	go to state 160
	ArrayReference	go to state 112
	OPTIONAL-35	go to state 235
	ListElements	go to state 236
	VariableSymbolOrSelf	go to state 115
	SubExpression	go to state 158
	Literal	go to state 108
	Variable	go to state 153

State 151:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 130)

	LPAREN	shift, and go to state 201

State 152:

	Operator -> OP01_NAMED . SubExpression	(Rule 83)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	VariableSymbolOrSelf	go to state 115
	SubExpression	go to state 237
	Literal	go to state 108
	Variable	go to state 153
	HashReference	go to state 84
	HashDereference	go to state 100
	Expression	go to state 154
	WordScoped	go to state 87
	ArrayReference	go to state 112
	ArrayDereference	go to state 103
	Operator	go to state 123

State 153:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 88)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-36 ')'	(Rule 132)
	SubExpression -> Variable .	(Rule 137)

	OP02_METHOD_THINARROW	shift, and go to state 167
	OP03_MATH_INC_DEC	shift, and go to state 168

	')'	reduce using rule 137 (SubExpression)
	';'	reduce using rule 137 (SubExpression)
	']'	reduce using rule 137 (SubExpression)
	'}'	reduce using rule 137 (SubExpression)
	OP04_MATH_POW	reduce using rule 137 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 137 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 137 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 137 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 137 (SubExpression)
	OP08_STRING_CAT	reduce using rule 137 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 137 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 137 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 137 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 137 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 137 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 137 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 137 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 137 (SubExpression)
	OP18_TERNARY	reduce using rule 137 (SubExpression)
	OP21_LIST_COMMA	reduce using rule 137 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 137 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 137 (SubExpression)

State 154:

	SubExpression -> Expression .	(Rule 134)

	$default	reduce using rule 134 (SubExpression)

State 155:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> OP10_NAMED_UNARY SubExpression .	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191
	OP09_BITWISE_SHIFT	shift, and go to state 196

	')'	reduce using rule 98 (Operator)
	';'	reduce using rule 98 (Operator)
	']'	reduce using rule 98 (Operator)
	'}'	reduce using rule 98 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 98 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 98 (Operator)
	OP13_BITWISE_AND	reduce using rule 98 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 98 (Operator)
	OP15_LOGICAL_AND	reduce using rule 98 (Operator)
	OP16_LOGICAL_OR	reduce using rule 98 (Operator)
	OP17_LIST_RANGE	reduce using rule 98 (Operator)
	OP18_TERNARY	reduce using rule 98 (Operator)
	OP21_LIST_COMMA	reduce using rule 98 (Operator)
	OP23_LOGICAL_AND	reduce using rule 98 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 98 (Operator)

State 156:

	ListElements -> ListElement . STAR-46	(Rule 183)

	$default	reduce using rule 182 (STAR-46)

	STAR-46	go to state 238

State 157:

	OperatorVoid -> OP01_NAMED_VOID ListElements . ';'	(Rule 120)

	';'	shift, and go to state 239

State 158:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	ListElement -> SubExpression .	(Rule 186)

	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191
	OP09_BITWISE_SHIFT	shift, and go to state 196
	OP11_COMPARE_LT_GT	shift, and go to state 189
	OP12_COMPARE_EQ_NE	shift, and go to state 195
	OP13_BITWISE_AND	shift, and go to state 188
	OP14_BITWISE_OR_XOR	shift, and go to state 199
	OP15_LOGICAL_AND	shift, and go to state 184
	OP16_LOGICAL_OR	shift, and go to state 185
	OP17_LIST_RANGE	shift, and go to state 198
	OP18_TERNARY	shift, and go to state 197
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 192

	')'	reduce using rule 186 (ListElement)
	';'	reduce using rule 186 (ListElement)
	']'	reduce using rule 186 (ListElement)
	OP21_LIST_COMMA	reduce using rule 186 (ListElement)

State 159:

	ListElement -> OP01_QW . PLUS-47 ')'	(Rule 188)

	WORD	shift, and go to state 240

	PLUS-47	go to state 241

State 160:

	ListElement -> TypeInner . SubExpression	(Rule 187)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	ArrayReference	go to state 112
	WordScoped	go to state 87
	Operator	go to state 123
	ArrayDereference	go to state 103
	HashReference	go to state 84
	Expression	go to state 154
	HashDereference	go to state 100
	Variable	go to state 153
	Literal	go to state 108
	SubExpression	go to state 242
	VariableSymbolOrSelf	go to state 115

State 161:

	TypeInner -> MY . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 217)

	TYPE_INTEGER	shift, and go to state 57
	WORD	shift, and go to state 55
	WORD_SCOPED	shift, and go to state 56

	Type	go to state 243

State 162:

	OPTIONAL-48 -> ListElements .	(Rule 189)

	$default	reduce using rule 189 (OPTIONAL-48)

State 163:

	ArrayReference -> LBRACKET OPTIONAL-48 . ']'	(Rule 191)

	']'	shift, and go to state 244

State 164:

	PAREN-37 -> LoopLabel COLON .	(Rule 145)

	$default	reduce using rule 145 (PAREN-37)

State 165:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 166:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 178)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	STDIN	shift, and go to state 245
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	SubExpressionOrStdin	go to state 247
	Variable	go to state 153
	SubExpression	go to state 246
	Literal	go to state 108
	VariableSymbolOrSelf	go to state 115
	ArrayReference	go to state 112
	WordScoped	go to state 87
	Operator	go to state 123
	ArrayDereference	go to state 103
	HashReference	go to state 84
	Expression	go to state 154
	HashDereference	go to state 100

State 167:

	Expression -> Variable OP02_METHOD_THINARROW . LPAREN OPTIONAL-36 ')'	(Rule 132)

	LPAREN	shift, and go to state 248

State 168:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 88)

	$default	reduce using rule 88 (Operator)

State 169:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . SubExpression ';'	(Rule 179)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	HashDereference	go to state 100
	Expression	go to state 154
	HashReference	go to state 84
	ArrayDereference	go to state 103
	Operator	go to state 123
	WordScoped	go to state 87
	ArrayReference	go to state 112
	VariableSymbolOrSelf	go to state 115
	Literal	go to state 108
	SubExpression	go to state 249
	Variable	go to state 153

State 170:

	OPTIONAL-53 -> TypeInner .	(Rule 207)

	$default	reduce using rule 207 (OPTIONAL-53)

State 171:

	HashDereference -> '%{' OPTIONAL-53 . HashReference '}'	(Rule 210)

	LBRACE	shift, and go to state 83

	HashReference	go to state 250

State 172:

	HashDereference -> '%{' Variable . '}'	(Rule 209)

	'}'	shift, and go to state 251

State 173:

	Loop -> LoopWhile .	(Rule 162)

	$default	reduce using rule 162 (Loop)

State 174:

	Statement -> OPTIONAL-38 Loop .	(Rule 149)

	$default	reduce using rule 149 (Statement)

State 175:

	LoopFor -> 'for' . MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 163)

	MY	shift, and go to state 252

State 176:

	Loop -> LoopForEach .	(Rule 161)

	$default	reduce using rule 161 (Loop)

State 177:

	Loop -> LoopFor .	(Rule 160)

	$default	reduce using rule 160 (Loop)

State 178:

	LoopForEach -> 'foreach' . MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 164)

	MY	shift, and go to state 253

State 179:

	LoopWhile -> 'while' . LPAREN SubExpression ')' CodeBlock	(Rule 165)

	LPAREN	shift, and go to state 254

State 180:

	OPTIONAL-34 -> ListElements .	(Rule 114)

	$default	reduce using rule 114 (OPTIONAL-34)

State 181:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-34 . ')' ';'	(Rule 119)

	')'	shift, and go to state 255

State 182:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> OP05_MATH_NEG_LPAREN SubExpression . ')'	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	')'	shift, and go to state 256
	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191
	OP09_BITWISE_SHIFT	shift, and go to state 196
	OP11_COMPARE_LT_GT	shift, and go to state 189
	OP12_COMPARE_EQ_NE	shift, and go to state 195
	OP13_BITWISE_AND	shift, and go to state 188
	OP14_BITWISE_OR_XOR	shift, and go to state 199
	OP15_LOGICAL_AND	shift, and go to state 184
	OP16_LOGICAL_OR	shift, and go to state 185
	OP17_LIST_RANGE	shift, and go to state 198
	OP18_TERNARY	shift, and go to state 197
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 192

State 183:

	Conditional -> 'if' LPAREN . SubExpression ')' CodeBlock STAR-40 OPTIONAL-42	(Rule 159)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	WordScoped	go to state 87
	ArrayReference	go to state 112
	ArrayDereference	go to state 103
	Operator	go to state 123
	HashReference	go to state 84
	HashDereference	go to state 100
	Expression	go to state 154
	Literal	go to state 108
	SubExpression	go to state 257
	Variable	go to state 153
	VariableSymbolOrSelf	go to state 115

State 184:

	Operator -> SubExpression OP15_LOGICAL_AND . SubExpression	(Rule 104)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	VariableSymbolOrSelf	go to state 115
	Variable	go to state 153
	Literal	go to state 108
	SubExpression	go to state 258
	HashReference	go to state 84
	Expression	go to state 154
	HashDereference	go to state 100
	ArrayReference	go to state 112
	WordScoped	go to state 87
	Operator	go to state 123
	ArrayDereference	go to state 103

State 185:

	Operator -> SubExpression OP16_LOGICAL_OR . SubExpression	(Rule 105)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	HashReference	go to state 84
	HashDereference	go to state 100
	Expression	go to state 154
	WordScoped	go to state 87
	ArrayReference	go to state 112
	ArrayDereference	go to state 103
	Operator	go to state 123
	VariableSymbolOrSelf	go to state 115
	SubExpression	go to state 259
	Literal	go to state 108
	Variable	go to state 153

State 186:

	Operator -> SubExpression OP23_LOGICAL_AND . SubExpression	(Rule 109)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	HashReference	go to state 84
	Expression	go to state 154
	HashDereference	go to state 100
	ArrayReference	go to state 112
	WordScoped	go to state 87
	Operator	go to state 123
	ArrayDereference	go to state 103
	VariableSymbolOrSelf	go to state 115
	Variable	go to state 153
	Literal	go to state 108
	SubExpression	go to state 260

State 187:

	Operator -> SubExpression OP06_REGEX_MATCH . OP06_REGEX_PATTERN	(Rule 92)

	OP06_REGEX_PATTERN	shift, and go to state 261

State 188:

	Operator -> SubExpression OP13_BITWISE_AND . SubExpression	(Rule 102)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	Variable	go to state 153
	Literal	go to state 108
	SubExpression	go to state 262
	VariableSymbolOrSelf	go to state 115
	ArrayReference	go to state 112
	WordScoped	go to state 87
	Operator	go to state 123
	ArrayDereference	go to state 103
	HashReference	go to state 84
	Expression	go to state 154
	HashDereference	go to state 100

State 189:

	Operator -> SubExpression OP11_COMPARE_LT_GT . SubExpression	(Rule 100)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	Expression	go to state 154
	HashDereference	go to state 100
	HashReference	go to state 84
	Operator	go to state 123
	ArrayDereference	go to state 103
	ArrayReference	go to state 112
	WordScoped	go to state 87
	VariableSymbolOrSelf	go to state 115
	Variable	go to state 153
	Literal	go to state 108
	SubExpression	go to state 263

State 190:

	Operator -> SubExpression OP08_MATH_ADD_SUB . SubExpression	(Rule 95)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	HashReference	go to state 84
	Expression	go to state 154
	HashDereference	go to state 100
	ArrayReference	go to state 112
	WordScoped	go to state 87
	Operator	go to state 123
	ArrayDereference	go to state 103
	VariableSymbolOrSelf	go to state 115
	Variable	go to state 153
	SubExpression	go to state 264
	Literal	go to state 108

State 191:

	Operator -> SubExpression OP08_STRING_CAT . SubExpression	(Rule 96)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	Operator	go to state 123
	ArrayDereference	go to state 103
	ArrayReference	go to state 112
	WordScoped	go to state 87
	Expression	go to state 154
	HashDereference	go to state 100
	HashReference	go to state 84
	Variable	go to state 153
	SubExpression	go to state 265
	Literal	go to state 108
	VariableSymbolOrSelf	go to state 115

State 192:

	Operator -> SubExpression OP24_LOGICAL_OR_XOR . SubExpression	(Rule 110)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	SubExpression	go to state 266
	Literal	go to state 108
	Variable	go to state 153
	VariableSymbolOrSelf	go to state 115
	WordScoped	go to state 87
	ArrayReference	go to state 112
	ArrayDereference	go to state 103
	Operator	go to state 123
	HashReference	go to state 84
	HashDereference	go to state 100
	Expression	go to state 154

State 193:

	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD . SubExpression	(Rule 94)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	VariableSymbolOrSelf	go to state 115
	SubExpression	go to state 267
	Literal	go to state 108
	Variable	go to state 153
	HashReference	go to state 84
	HashDereference	go to state 100
	Expression	go to state 154
	WordScoped	go to state 87
	ArrayReference	go to state 112
	ArrayDereference	go to state 103
	Operator	go to state 123

State 194:

	Operator -> SubExpression OP04_MATH_POW . SubExpression	(Rule 89)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	Variable	go to state 153
	SubExpression	go to state 268
	Literal	go to state 108
	VariableSymbolOrSelf	go to state 115
	Operator	go to state 123
	ArrayDereference	go to state 103
	ArrayReference	go to state 112
	WordScoped	go to state 87
	Expression	go to state 154
	HashDereference	go to state 100
	HashReference	go to state 84

State 195:

	Operator -> SubExpression OP12_COMPARE_EQ_NE . SubExpression	(Rule 101)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	HashDereference	go to state 100
	Expression	go to state 154
	HashReference	go to state 84
	ArrayDereference	go to state 103
	Operator	go to state 123
	WordScoped	go to state 87
	ArrayReference	go to state 112
	VariableSymbolOrSelf	go to state 115
	SubExpression	go to state 269
	Literal	go to state 108
	Variable	go to state 153

State 196:

	Operator -> SubExpression OP09_BITWISE_SHIFT . SubExpression	(Rule 97)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	HashReference	go to state 84
	Expression	go to state 154
	HashDereference	go to state 100
	ArrayReference	go to state 112
	WordScoped	go to state 87
	Operator	go to state 123
	ArrayDereference	go to state 103
	VariableSymbolOrSelf	go to state 115
	Variable	go to state 153
	Literal	go to state 108
	SubExpression	go to state 270

State 197:

	Operator -> SubExpression OP18_TERNARY . VariableOrLiteral COLON VariableOrLiteral	(Rule 107)

	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109

	Literal	go to state 273
	VariableOrLiteral	go to state 272
	Variable	go to state 271
	VariableSymbolOrSelf	go to state 115

State 198:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 106)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	Expression	go to state 154
	HashDereference	go to state 100
	HashReference	go to state 84
	Operator	go to state 123
	ArrayDereference	go to state 103
	ArrayReference	go to state 112
	WordScoped	go to state 87
	VariableSymbolOrSelf	go to state 115
	Variable	go to state 153
	Literal	go to state 108
	SubExpression	go to state 274

State 199:

	Operator -> SubExpression OP14_BITWISE_OR_XOR . SubExpression	(Rule 103)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	Variable	go to state 153
	SubExpression	go to state 275
	Literal	go to state 108
	VariableSymbolOrSelf	go to state 115
	Operator	go to state 123
	ArrayDereference	go to state 103
	ArrayReference	go to state 112
	WordScoped	go to state 87
	Expression	go to state 154
	HashDereference	go to state 100
	HashReference	go to state 84

State 200:

	Operator -> SubExpression OP07_STRING_REPEAT . SubExpression	(Rule 93)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	VariableSymbolOrSelf	go to state 115
	Variable	go to state 153
	Literal	go to state 108
	SubExpression	go to state 276
	HashReference	go to state 84
	Expression	go to state 154
	HashDereference	go to state 100
	ArrayReference	go to state 112
	WordScoped	go to state 87
	Operator	go to state 123
	ArrayDereference	go to state 103

State 201:

	Expression -> WORD_UPPERCASE LPAREN . ')'	(Rule 130)

	')'	shift, and go to state 277

State 202:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> OP22_LOGICAL_NEG SubExpression .	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191
	OP09_BITWISE_SHIFT	shift, and go to state 196
	OP11_COMPARE_LT_GT	shift, and go to state 189
	OP12_COMPARE_EQ_NE	shift, and go to state 195
	OP13_BITWISE_AND	shift, and go to state 188
	OP14_BITWISE_OR_XOR	shift, and go to state 199
	OP15_LOGICAL_AND	shift, and go to state 184
	OP16_LOGICAL_OR	shift, and go to state 185
	OP17_LIST_RANGE	shift, and go to state 198
	OP18_TERNARY	shift, and go to state 197

	')'	reduce using rule 108 (Operator)
	';'	reduce using rule 108 (Operator)
	']'	reduce using rule 108 (Operator)
	'}'	reduce using rule 108 (Operator)
	OP21_LIST_COMMA	reduce using rule 108 (Operator)
	OP23_LOGICAL_AND	reduce using rule 108 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 108 (Operator)

State 203:

	STAR-44 -> STAR-44 . VariableRetrieval	(Rule 169)
	Variable -> VariableSymbolOrSelf STAR-44 .	(Rule 171)

	OP02_ARRAY_THINARROW	shift, and go to state 279
	OP02_HASH_THINARROW	shift, and go to state 280

	')'	reduce using rule 171 (Variable)
	';'	reduce using rule 171 (Variable)
	']'	reduce using rule 171 (Variable)
	'}'	reduce using rule 171 (Variable)
	COLON	reduce using rule 171 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 171 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 171 (Variable)
	OP04_MATH_POW	reduce using rule 171 (Variable)
	OP06_REGEX_MATCH	reduce using rule 171 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 171 (Variable)
	OP07_STRING_REPEAT	reduce using rule 171 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 171 (Variable)
	OP08_STRING_CAT	reduce using rule 171 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 171 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 171 (Variable)
	OP12_COMPARE_EQ_NE	reduce using rule 171 (Variable)
	OP13_BITWISE_AND	reduce using rule 171 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 171 (Variable)
	OP15_LOGICAL_AND	reduce using rule 171 (Variable)
	OP16_LOGICAL_OR	reduce using rule 171 (Variable)
	OP17_LIST_RANGE	reduce using rule 171 (Variable)
	OP18_TERNARY	reduce using rule 171 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 171 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 171 (Variable)
	OP20_HASH_FATARROW	reduce using rule 171 (Variable)
	OP21_LIST_COMMA	reduce using rule 171 (Variable)
	OP23_LOGICAL_AND	reduce using rule 171 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 171 (Variable)

	VariableRetrieval	go to state 278

State 204:

	Operator -> OP01_OPEN MY . TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 85)

	TYPE_FHREF	shift, and go to state 281

State 205:

	Operator -> OP01_CLOSE FHREF_SYMBOL .	(Rule 86)

	$default	reduce using rule 86 (Operator)

State 206:

	OPTIONAL-49 -> TypeInner .	(Rule 192)

	$default	reduce using rule 192 (OPTIONAL-49)

State 207:

	ArrayDereference -> '@{' Variable . '}'	(Rule 194)

	'}'	shift, and go to state 282

State 208:

	ArrayDereference -> '@{' OPTIONAL-49 . ArrayReference '}'	(Rule 195)

	LBRACKET	shift, and go to state 92

	ArrayReference	go to state 283

State 209:

	Operator -> OP01_NAMED SubExpression .	(Rule 83)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	ListElement -> SubExpression .	(Rule 186)

	')'	reduce using rule 83 (Operator)
	';'	reduce using rule 83 (Operator)
	OP04_MATH_POW	reduce using rule 83 (Operator)
	OP06_REGEX_MATCH	reduce using rule 83 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 83 (Operator)
	OP07_STRING_REPEAT	reduce using rule 83 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 83 (Operator)
	OP08_STRING_CAT	reduce using rule 83 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 83 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 83 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 83 (Operator)
	OP13_BITWISE_AND	reduce using rule 83 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 83 (Operator)
	OP15_LOGICAL_AND	reduce using rule 83 (Operator)
	OP16_LOGICAL_OR	reduce using rule 83 (Operator)
	OP17_LIST_RANGE	reduce using rule 83 (Operator)
	OP18_TERNARY	reduce using rule 83 (Operator)
	OP21_LIST_COMMA	reduce using rule 186 (ListElement)
	OP23_LOGICAL_AND	reduce using rule 83 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 83 (Operator)

State 210:

	OperatorVoid -> OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ';'	(Rule 121)

	OP21_LIST_COMMA	shift, and go to state 284

State 211:

	VariableDeclaration -> MY TYPE_FHREF . FHREF_SYMBOL ';'	(Rule 177)

	FHREF_SYMBOL	shift, and go to state 285

State 212:

	VariableDeclaration -> MY Type . VARIABLE_SYMBOL ';'	(Rule 175)
	VariableDeclaration -> MY Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 176)

	VARIABLE_SYMBOL	shift, and go to state 286

State 213:

	PAREN-32 -> STDOUT_STDERR .	(Rule 111)

	$default	reduce using rule 111 (PAREN-32)

State 214:

	OPTIONAL-33 -> PAREN-32 .	(Rule 112)

	$default	reduce using rule 112 (OPTIONAL-33)

State 215:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES . ListElements ';'	(Rule 117)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 161
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP01_QW	shift, and go to state 159
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	SubExpression	go to state 158
	Literal	go to state 108
	Variable	go to state 153
	ListElements	go to state 287
	VariableSymbolOrSelf	go to state 115
	ArrayDereference	go to state 103
	Operator	go to state 123
	TypeInner	go to state 160
	WordScoped	go to state 87
	ArrayReference	go to state 112
	HashDereference	go to state 100
	Expression	go to state 154
	ListElement	go to state 156
	HashReference	go to state 84

State 216:

	OperatorVoid -> OP01_PRINT OPTIONAL-33 . ListElements ';'	(Rule 116)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 161
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP01_QW	shift, and go to state 159
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	Literal	go to state 108
	SubExpression	go to state 158
	Variable	go to state 153
	ListElements	go to state 288
	VariableSymbolOrSelf	go to state 115
	ArrayDereference	go to state 103
	Operator	go to state 123
	TypeInner	go to state 160
	WordScoped	go to state 87
	ArrayReference	go to state 112
	HashDereference	go to state 100
	Expression	go to state 154
	ListElement	go to state 156
	HashReference	go to state 84

State 217:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 87)

	$default	reduce using rule 87 (Operator)

State 218:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 123)

	';'	shift, and go to state 289

State 219:

	LoopLabel -> WORD_UPPERCASE .	(Rule 213)

	$default	reduce using rule 213 (LoopLabel)

State 220:

	Operator -> LPAREN OP01_PRINT . FHREF_SYMBOL_BRACES ListElements ')'	(Rule 82)

	FHREF_SYMBOL_BRACES	shift, and go to state 290

State 221:

	Operator -> OP01_NAMED . SubExpression	(Rule 83)
	Operator -> LPAREN OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ')'	(Rule 84)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 161
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP01_QW	shift, and go to state 159
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	VariableSymbolOrSelf	go to state 115
	Variable	go to state 153
	Literal	go to state 108
	SubExpression	go to state 209
	ListElement	go to state 291
	Expression	go to state 154
	HashDereference	go to state 100
	HashReference	go to state 84
	Operator	go to state 123
	ArrayDereference	go to state 103
	ArrayReference	go to state 112
	TypeInner	go to state 160
	WordScoped	go to state 87

State 222:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	SubExpression -> LPAREN SubExpression . ')'	(Rule 142)

	')'	shift, and go to state 292
	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191
	OP09_BITWISE_SHIFT	shift, and go to state 196
	OP11_COMPARE_LT_GT	shift, and go to state 189
	OP12_COMPARE_EQ_NE	shift, and go to state 195
	OP13_BITWISE_AND	shift, and go to state 188
	OP14_BITWISE_OR_XOR	shift, and go to state 199
	OP15_LOGICAL_AND	shift, and go to state 184
	OP16_LOGICAL_OR	shift, and go to state 185
	OP17_LIST_RANGE	shift, and go to state 198
	OP18_TERNARY	shift, and go to state 197
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 192

State 223:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> OP05_LOGICAL_NEG SubExpression .	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 194

	')'	reduce using rule 90 (Operator)
	';'	reduce using rule 90 (Operator)
	']'	reduce using rule 90 (Operator)
	'}'	reduce using rule 90 (Operator)
	OP06_REGEX_MATCH	reduce using rule 90 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 90 (Operator)
	OP07_STRING_REPEAT	reduce using rule 90 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 90 (Operator)
	OP08_STRING_CAT	reduce using rule 90 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 90 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 90 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 90 (Operator)
	OP13_BITWISE_AND	reduce using rule 90 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 90 (Operator)
	OP15_LOGICAL_AND	reduce using rule 90 (Operator)
	OP16_LOGICAL_OR	reduce using rule 90 (Operator)
	OP17_LIST_RANGE	reduce using rule 90 (Operator)
	OP18_TERNARY	reduce using rule 90 (Operator)
	OP21_LIST_COMMA	reduce using rule 90 (Operator)
	OP23_LOGICAL_AND	reduce using rule 90 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 90 (Operator)

State 224:

	SubroutineArguments -> LPAREN_MY Type . VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 54)

	VARIABLE_SYMBOL	shift, and go to state 293

State 225:

	STAR-19 -> STAR-19 . Operation	(Rule 48)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 STAR-19 . '}' ';'	(Rule 50)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'if'	shift, and go to state 105
	'undef'	shift, and go to state 106
	'}'	shift, and go to state 294
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 124
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 122
	OP01_NAMED_VOID	shift, and go to state 91
	OP01_NAMED_VOID_LPAREN	shift, and go to state 98
	OP01_NAMED_VOID_SCOLON	shift, and go to state 125
	OP01_OPEN	shift, and go to state 116
	OP01_PRINT	shift, and go to state 126
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP19_LOOP_CONTROL	shift, and go to state 129
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 85
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 111

	'for'	reduce using rule 147 (OPTIONAL-38)
	'foreach'	reduce using rule 147 (OPTIONAL-38)
	'while'	reduce using rule 147 (OPTIONAL-38)

	OperatorVoid	go to state 113
	WordScoped	go to state 87
	ArrayReference	go to state 112
	Expression	go to state 86
	PAREN-37	go to state 110
	HashReference	go to state 84
	Variable	go to state 95
	LoopLabel	go to state 93
	VariableModification	go to state 117
	Operation	go to state 295
	VariableSymbolOrSelf	go to state 115
	ArrayDereference	go to state 103
	Operator	go to state 123
	Statement	go to state 101
	HashDereference	go to state 100
	VariableDeclaration	go to state 121
	OPTIONAL-38	go to state 97
	Conditional	go to state 119
	SubExpression	go to state 107
	Literal	go to state 108

State 226:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';' .	(Rule 45)

	$default	reduce using rule 45 (Constant)

State 227:

	TypeInnerConstant -> MY Type '$TYPED_' . WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 218)

	WORD_UPPERCASE	shift, and go to state 296

State 228:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 STAR-23 STAR-24 Properties . STAR-25 LITERAL_NUMBER ';'	(Rule 63)

	$default	reduce using rule 62 (STAR-25)

	STAR-25	go to state 297

State 229:

	STAR-24 -> STAR-24 Constant .	(Rule 59)

	$default	reduce using rule 59 (STAR-24)

State 230:

	Properties -> 'our hashref $properties' . OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-27 '}' ';'	(Rule 67)
	Properties -> 'our hashref $properties' . OP19_VARIABLE_ASSIGN LBRACE '}' ';'	(Rule 68)

	OP19_VARIABLE_ASSIGN	shift, and go to state 298

State 231:

	STAR-52 -> STAR-52 . PAREN-51	(Rule 203)
	HashReference -> LBRACE HashEntry STAR-52 . '}'	(Rule 205)

	'}'	shift, and go to state 299
	OP21_LIST_COMMA	shift, and go to state 300

	PAREN-51	go to state 301

State 232:

	HashEntry -> VariableOrLiteralOrWord OP20_HASH_FATARROW . OPTIONAL-50 SubExpression	(Rule 198)

	MY	shift, and go to state 161

	'%{'	reduce using rule 197 (OPTIONAL-50)
	'@{'	reduce using rule 197 (OPTIONAL-50)
	'undef'	reduce using rule 197 (OPTIONAL-50)
	LBRACE	reduce using rule 197 (OPTIONAL-50)
	LBRACKET	reduce using rule 197 (OPTIONAL-50)
	LITERAL_NUMBER	reduce using rule 197 (OPTIONAL-50)
	LITERAL_STRING	reduce using rule 197 (OPTIONAL-50)
	LPAREN	reduce using rule 197 (OPTIONAL-50)
	OP01_CLOSE	reduce using rule 197 (OPTIONAL-50)
	OP01_NAMED	reduce using rule 197 (OPTIONAL-50)
	OP01_OPEN	reduce using rule 197 (OPTIONAL-50)
	OP03_MATH_INC_DEC	reduce using rule 197 (OPTIONAL-50)
	OP05_LOGICAL_NEG	reduce using rule 197 (OPTIONAL-50)
	OP05_MATH_NEG_LPAREN	reduce using rule 197 (OPTIONAL-50)
	OP10_NAMED_UNARY	reduce using rule 197 (OPTIONAL-50)
	OP22_LOGICAL_NEG	reduce using rule 197 (OPTIONAL-50)
	SELF	reduce using rule 197 (OPTIONAL-50)
	VARIABLE_SYMBOL	reduce using rule 197 (OPTIONAL-50)
	WORD	reduce using rule 197 (OPTIONAL-50)
	WORD_SCOPED	reduce using rule 197 (OPTIONAL-50)
	WORD_UPPERCASE	reduce using rule 197 (OPTIONAL-50)

	OPTIONAL-50	go to state 302
	TypeInner	go to state 303

State 233:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW ')' .	(Rule 133)

	$default	reduce using rule 133 (Expression)

State 234:

	Expression -> WordScoped SCOPE WORD_UPPERCASE . LPAREN ')'	(Rule 131)

	LPAREN	shift, and go to state 304

State 235:

	Expression -> WordScoped LPAREN OPTIONAL-35 . ')'	(Rule 129)

	')'	shift, and go to state 305

State 236:

	OPTIONAL-35 -> ListElements .	(Rule 124)

	$default	reduce using rule 124 (OPTIONAL-35)

State 237:

	Operator -> OP01_NAMED SubExpression .	(Rule 83)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	')'	reduce using rule 83 (Operator)
	';'	reduce using rule 83 (Operator)
	']'	reduce using rule 83 (Operator)
	'}'	reduce using rule 83 (Operator)
	OP04_MATH_POW	reduce using rule 83 (Operator)
	OP06_REGEX_MATCH	reduce using rule 83 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 83 (Operator)
	OP07_STRING_REPEAT	reduce using rule 83 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 83 (Operator)
	OP08_STRING_CAT	reduce using rule 83 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 83 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 83 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 83 (Operator)
	OP13_BITWISE_AND	reduce using rule 83 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 83 (Operator)
	OP15_LOGICAL_AND	reduce using rule 83 (Operator)
	OP16_LOGICAL_OR	reduce using rule 83 (Operator)
	OP17_LIST_RANGE	reduce using rule 83 (Operator)
	OP18_TERNARY	reduce using rule 83 (Operator)
	OP21_LIST_COMMA	reduce using rule 83 (Operator)
	OP23_LOGICAL_AND	reduce using rule 83 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 83 (Operator)

State 238:

	STAR-46 -> STAR-46 . PAREN-45	(Rule 181)
	ListElements -> ListElement STAR-46 .	(Rule 183)

	OP21_LIST_COMMA	shift, and go to state 306

	')'	reduce using rule 183 (ListElements)
	';'	reduce using rule 183 (ListElements)
	']'	reduce using rule 183 (ListElements)

	PAREN-45	go to state 307

State 239:

	OperatorVoid -> OP01_NAMED_VOID ListElements ';' .	(Rule 120)

	$default	reduce using rule 120 (OperatorVoid)

State 240:

	PLUS-47 -> WORD .	(Rule 185)

	$default	reduce using rule 185 (PLUS-47)

State 241:

	PLUS-47 -> PLUS-47 . WORD	(Rule 184)
	ListElement -> OP01_QW PLUS-47 . ')'	(Rule 188)

	')'	shift, and go to state 308
	WORD	shift, and go to state 309

State 242:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	ListElement -> TypeInner SubExpression .	(Rule 187)

	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191
	OP09_BITWISE_SHIFT	shift, and go to state 196
	OP11_COMPARE_LT_GT	shift, and go to state 189
	OP12_COMPARE_EQ_NE	shift, and go to state 195
	OP13_BITWISE_AND	shift, and go to state 188
	OP14_BITWISE_OR_XOR	shift, and go to state 199
	OP15_LOGICAL_AND	shift, and go to state 184
	OP16_LOGICAL_OR	shift, and go to state 185
	OP17_LIST_RANGE	shift, and go to state 198
	OP18_TERNARY	shift, and go to state 197
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 192

	')'	reduce using rule 187 (ListElement)
	';'	reduce using rule 187 (ListElement)
	']'	reduce using rule 187 (ListElement)
	OP21_LIST_COMMA	reduce using rule 187 (ListElement)

State 243:

	TypeInner -> MY Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 217)

	'$TYPED_'	shift, and go to state 310

State 244:

	ArrayReference -> LBRACKET OPTIONAL-48 ']' .	(Rule 191)

	$default	reduce using rule 191 (ArrayReference)

State 245:

	SubExpressionOrStdin -> STDIN .	(Rule 144)

	$default	reduce using rule 144 (SubExpressionOrStdin)

State 246:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	SubExpressionOrStdin -> SubExpression .	(Rule 143)

	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191
	OP09_BITWISE_SHIFT	shift, and go to state 196
	OP11_COMPARE_LT_GT	shift, and go to state 189
	OP12_COMPARE_EQ_NE	shift, and go to state 195
	OP13_BITWISE_AND	shift, and go to state 188
	OP14_BITWISE_OR_XOR	shift, and go to state 199
	OP15_LOGICAL_AND	shift, and go to state 184
	OP16_LOGICAL_OR	shift, and go to state 185
	OP17_LIST_RANGE	shift, and go to state 198
	OP18_TERNARY	shift, and go to state 197
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 192

	';'	reduce using rule 143 (SubExpressionOrStdin)

State 247:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 178)

	';'	shift, and go to state 311

State 248:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN . OPTIONAL-36 ')'	(Rule 132)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 161
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP01_QW	shift, and go to state 159
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	')'	reduce using rule 127 (OPTIONAL-36)

	HashReference	go to state 84
	OPTIONAL-36	go to state 313
	ListElement	go to state 156
	Expression	go to state 154
	HashDereference	go to state 100
	ArrayReference	go to state 112
	TypeInner	go to state 160
	WordScoped	go to state 87
	Operator	go to state 123
	ArrayDereference	go to state 103
	VariableSymbolOrSelf	go to state 115
	ListElements	go to state 312
	Variable	go to state 153
	Literal	go to state 108
	SubExpression	go to state 158

State 249:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression . ';'	(Rule 179)

	';'	shift, and go to state 314
	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191
	OP09_BITWISE_SHIFT	shift, and go to state 196
	OP11_COMPARE_LT_GT	shift, and go to state 189
	OP12_COMPARE_EQ_NE	shift, and go to state 195
	OP13_BITWISE_AND	shift, and go to state 188
	OP14_BITWISE_OR_XOR	shift, and go to state 199
	OP15_LOGICAL_AND	shift, and go to state 184
	OP16_LOGICAL_OR	shift, and go to state 185
	OP17_LIST_RANGE	shift, and go to state 198
	OP18_TERNARY	shift, and go to state 197
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 192

State 250:

	HashDereference -> '%{' OPTIONAL-53 HashReference . '}'	(Rule 210)

	'}'	shift, and go to state 315

State 251:

	HashDereference -> '%{' Variable '}' .	(Rule 209)

	$default	reduce using rule 209 (HashDereference)

State 252:

	LoopFor -> 'for' MY . TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 163)

	TYPE_INTEGER	shift, and go to state 316

State 253:

	LoopForEach -> 'foreach' MY . Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 164)

	TYPE_INTEGER	shift, and go to state 57
	WORD	shift, and go to state 55
	WORD_SCOPED	shift, and go to state 56

	Type	go to state 317

State 254:

	LoopWhile -> 'while' LPAREN . SubExpression ')' CodeBlock	(Rule 165)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	Variable	go to state 153
	Literal	go to state 108
	SubExpression	go to state 318
	VariableSymbolOrSelf	go to state 115
	ArrayReference	go to state 112
	WordScoped	go to state 87
	Operator	go to state 123
	ArrayDereference	go to state 103
	HashReference	go to state 84
	Expression	go to state 154
	HashDereference	go to state 100

State 255:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-34 ')' . ';'	(Rule 119)

	';'	shift, and go to state 319

State 256:

	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')' .	(Rule 91)

	$default	reduce using rule 91 (Operator)

State 257:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	Conditional -> 'if' LPAREN SubExpression . ')' CodeBlock STAR-40 OPTIONAL-42	(Rule 159)

	')'	shift, and go to state 320
	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191
	OP09_BITWISE_SHIFT	shift, and go to state 196
	OP11_COMPARE_LT_GT	shift, and go to state 189
	OP12_COMPARE_EQ_NE	shift, and go to state 195
	OP13_BITWISE_AND	shift, and go to state 188
	OP14_BITWISE_OR_XOR	shift, and go to state 199
	OP15_LOGICAL_AND	shift, and go to state 184
	OP16_LOGICAL_OR	shift, and go to state 185
	OP17_LIST_RANGE	shift, and go to state 198
	OP18_TERNARY	shift, and go to state 197
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 192

State 258:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression OP15_LOGICAL_AND SubExpression .	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191
	OP09_BITWISE_SHIFT	shift, and go to state 196
	OP11_COMPARE_LT_GT	shift, and go to state 189
	OP12_COMPARE_EQ_NE	shift, and go to state 195
	OP13_BITWISE_AND	shift, and go to state 188
	OP14_BITWISE_OR_XOR	shift, and go to state 199

	')'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP15_LOGICAL_AND	reduce using rule 104 (Operator)
	OP16_LOGICAL_OR	reduce using rule 104 (Operator)
	OP17_LIST_RANGE	reduce using rule 104 (Operator)
	OP18_TERNARY	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 259:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression OP16_LOGICAL_OR SubExpression .	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191
	OP09_BITWISE_SHIFT	shift, and go to state 196
	OP11_COMPARE_LT_GT	shift, and go to state 189
	OP12_COMPARE_EQ_NE	shift, and go to state 195
	OP13_BITWISE_AND	shift, and go to state 188
	OP14_BITWISE_OR_XOR	shift, and go to state 199
	OP15_LOGICAL_AND	shift, and go to state 184

	')'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 260:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression OP23_LOGICAL_AND SubExpression .	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191
	OP09_BITWISE_SHIFT	shift, and go to state 196
	OP11_COMPARE_LT_GT	shift, and go to state 189
	OP12_COMPARE_EQ_NE	shift, and go to state 195
	OP13_BITWISE_AND	shift, and go to state 188
	OP14_BITWISE_OR_XOR	shift, and go to state 199
	OP15_LOGICAL_AND	shift, and go to state 184
	OP16_LOGICAL_OR	shift, and go to state 185
	OP17_LIST_RANGE	shift, and go to state 198
	OP18_TERNARY	shift, and go to state 197

	')'	reduce using rule 109 (Operator)
	';'	reduce using rule 109 (Operator)
	']'	reduce using rule 109 (Operator)
	'}'	reduce using rule 109 (Operator)
	OP21_LIST_COMMA	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 261:

	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN .	(Rule 92)

	$default	reduce using rule 92 (Operator)

State 262:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression OP13_BITWISE_AND SubExpression .	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191
	OP09_BITWISE_SHIFT	shift, and go to state 196
	OP11_COMPARE_LT_GT	shift, and go to state 189
	OP12_COMPARE_EQ_NE	shift, and go to state 195

	')'	reduce using rule 102 (Operator)
	';'	reduce using rule 102 (Operator)
	']'	reduce using rule 102 (Operator)
	'}'	reduce using rule 102 (Operator)
	OP13_BITWISE_AND	reduce using rule 102 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 102 (Operator)
	OP15_LOGICAL_AND	reduce using rule 102 (Operator)
	OP16_LOGICAL_OR	reduce using rule 102 (Operator)
	OP17_LIST_RANGE	reduce using rule 102 (Operator)
	OP18_TERNARY	reduce using rule 102 (Operator)
	OP21_LIST_COMMA	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 263:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression .	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191
	OP09_BITWISE_SHIFT	shift, and go to state 196

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 100 (Operator)
	';'	reduce using rule 100 (Operator)
	']'	reduce using rule 100 (Operator)
	'}'	reduce using rule 100 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 100 (Operator)
	OP13_BITWISE_AND	reduce using rule 100 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 100 (Operator)
	OP15_LOGICAL_AND	reduce using rule 100 (Operator)
	OP16_LOGICAL_OR	reduce using rule 100 (Operator)
	OP17_LIST_RANGE	reduce using rule 100 (Operator)
	OP18_TERNARY	reduce using rule 100 (Operator)
	OP21_LIST_COMMA	reduce using rule 100 (Operator)
	OP23_LOGICAL_AND	reduce using rule 100 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 100 (Operator)

State 264:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression .	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200

	')'	reduce using rule 95 (Operator)
	';'	reduce using rule 95 (Operator)
	']'	reduce using rule 95 (Operator)
	'}'	reduce using rule 95 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 95 (Operator)
	OP08_STRING_CAT	reduce using rule 95 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 95 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 95 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 95 (Operator)
	OP13_BITWISE_AND	reduce using rule 95 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 95 (Operator)
	OP15_LOGICAL_AND	reduce using rule 95 (Operator)
	OP16_LOGICAL_OR	reduce using rule 95 (Operator)
	OP17_LIST_RANGE	reduce using rule 95 (Operator)
	OP18_TERNARY	reduce using rule 95 (Operator)
	OP21_LIST_COMMA	reduce using rule 95 (Operator)
	OP23_LOGICAL_AND	reduce using rule 95 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 95 (Operator)

State 265:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression OP08_STRING_CAT SubExpression .	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190

	')'	reduce using rule 96 (Operator)
	';'	reduce using rule 96 (Operator)
	']'	reduce using rule 96 (Operator)
	'}'	reduce using rule 96 (Operator)
	OP08_STRING_CAT	reduce using rule 96 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 96 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 96 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 96 (Operator)
	OP13_BITWISE_AND	reduce using rule 96 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 96 (Operator)
	OP15_LOGICAL_AND	reduce using rule 96 (Operator)
	OP16_LOGICAL_OR	reduce using rule 96 (Operator)
	OP17_LIST_RANGE	reduce using rule 96 (Operator)
	OP18_TERNARY	reduce using rule 96 (Operator)
	OP21_LIST_COMMA	reduce using rule 96 (Operator)
	OP23_LOGICAL_AND	reduce using rule 96 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 96 (Operator)

State 266:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression .	(Rule 110)

	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191
	OP09_BITWISE_SHIFT	shift, and go to state 196
	OP11_COMPARE_LT_GT	shift, and go to state 189
	OP12_COMPARE_EQ_NE	shift, and go to state 195
	OP13_BITWISE_AND	shift, and go to state 188
	OP14_BITWISE_OR_XOR	shift, and go to state 199
	OP15_LOGICAL_AND	shift, and go to state 184
	OP16_LOGICAL_OR	shift, and go to state 185
	OP17_LIST_RANGE	shift, and go to state 198
	OP18_TERNARY	shift, and go to state 197
	OP23_LOGICAL_AND	shift, and go to state 186

	')'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 267:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression .	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_STRING_REPEAT	shift, and go to state 200

	')'	reduce using rule 94 (Operator)
	';'	reduce using rule 94 (Operator)
	']'	reduce using rule 94 (Operator)
	'}'	reduce using rule 94 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 94 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 94 (Operator)
	OP08_STRING_CAT	reduce using rule 94 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 94 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 94 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 94 (Operator)
	OP13_BITWISE_AND	reduce using rule 94 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 94 (Operator)
	OP15_LOGICAL_AND	reduce using rule 94 (Operator)
	OP16_LOGICAL_OR	reduce using rule 94 (Operator)
	OP17_LIST_RANGE	reduce using rule 94 (Operator)
	OP18_TERNARY	reduce using rule 94 (Operator)
	OP21_LIST_COMMA	reduce using rule 94 (Operator)
	OP23_LOGICAL_AND	reduce using rule 94 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 94 (Operator)

State 268:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression OP04_MATH_POW SubExpression .	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 194

	')'	reduce using rule 89 (Operator)
	';'	reduce using rule 89 (Operator)
	']'	reduce using rule 89 (Operator)
	'}'	reduce using rule 89 (Operator)
	OP06_REGEX_MATCH	reduce using rule 89 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 89 (Operator)
	OP07_STRING_REPEAT	reduce using rule 89 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 89 (Operator)
	OP08_STRING_CAT	reduce using rule 89 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 89 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 89 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 89 (Operator)
	OP13_BITWISE_AND	reduce using rule 89 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 89 (Operator)
	OP15_LOGICAL_AND	reduce using rule 89 (Operator)
	OP16_LOGICAL_OR	reduce using rule 89 (Operator)
	OP17_LIST_RANGE	reduce using rule 89 (Operator)
	OP18_TERNARY	reduce using rule 89 (Operator)
	OP21_LIST_COMMA	reduce using rule 89 (Operator)
	OP23_LOGICAL_AND	reduce using rule 89 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 89 (Operator)

State 269:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression .	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191
	OP09_BITWISE_SHIFT	shift, and go to state 196
	OP11_COMPARE_LT_GT	shift, and go to state 189

	OP12_COMPARE_EQ_NE	error (nonassociative)

	')'	reduce using rule 101 (Operator)
	';'	reduce using rule 101 (Operator)
	']'	reduce using rule 101 (Operator)
	'}'	reduce using rule 101 (Operator)
	OP13_BITWISE_AND	reduce using rule 101 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 101 (Operator)
	OP15_LOGICAL_AND	reduce using rule 101 (Operator)
	OP16_LOGICAL_OR	reduce using rule 101 (Operator)
	OP17_LIST_RANGE	reduce using rule 101 (Operator)
	OP18_TERNARY	reduce using rule 101 (Operator)
	OP21_LIST_COMMA	reduce using rule 101 (Operator)
	OP23_LOGICAL_AND	reduce using rule 101 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 101 (Operator)

State 270:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression .	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191

	')'	reduce using rule 97 (Operator)
	';'	reduce using rule 97 (Operator)
	']'	reduce using rule 97 (Operator)
	'}'	reduce using rule 97 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 97 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 97 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 97 (Operator)
	OP13_BITWISE_AND	reduce using rule 97 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 97 (Operator)
	OP15_LOGICAL_AND	reduce using rule 97 (Operator)
	OP16_LOGICAL_OR	reduce using rule 97 (Operator)
	OP17_LIST_RANGE	reduce using rule 97 (Operator)
	OP18_TERNARY	reduce using rule 97 (Operator)
	OP21_LIST_COMMA	reduce using rule 97 (Operator)
	OP23_LOGICAL_AND	reduce using rule 97 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 97 (Operator)

State 271:

	VariableOrLiteral -> Variable .	(Rule 219)

	$default	reduce using rule 219 (VariableOrLiteral)

State 272:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral . COLON VariableOrLiteral	(Rule 107)

	COLON	shift, and go to state 321

State 273:

	VariableOrLiteral -> Literal .	(Rule 220)

	$default	reduce using rule 220 (VariableOrLiteral)

State 274:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191
	OP09_BITWISE_SHIFT	shift, and go to state 196
	OP11_COMPARE_LT_GT	shift, and go to state 189
	OP12_COMPARE_EQ_NE	shift, and go to state 195
	OP13_BITWISE_AND	shift, and go to state 188
	OP14_BITWISE_OR_XOR	shift, and go to state 199
	OP15_LOGICAL_AND	shift, and go to state 184
	OP16_LOGICAL_OR	shift, and go to state 185

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 275:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression .	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191
	OP09_BITWISE_SHIFT	shift, and go to state 196
	OP11_COMPARE_LT_GT	shift, and go to state 189
	OP12_COMPARE_EQ_NE	shift, and go to state 195
	OP13_BITWISE_AND	shift, and go to state 188

	')'	reduce using rule 103 (Operator)
	';'	reduce using rule 103 (Operator)
	']'	reduce using rule 103 (Operator)
	'}'	reduce using rule 103 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 103 (Operator)
	OP15_LOGICAL_AND	reduce using rule 103 (Operator)
	OP16_LOGICAL_OR	reduce using rule 103 (Operator)
	OP17_LIST_RANGE	reduce using rule 103 (Operator)
	OP18_TERNARY	reduce using rule 103 (Operator)
	OP21_LIST_COMMA	reduce using rule 103 (Operator)
	OP23_LOGICAL_AND	reduce using rule 103 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 103 (Operator)

State 276:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression OP07_STRING_REPEAT SubExpression .	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187

	')'	reduce using rule 93 (Operator)
	';'	reduce using rule 93 (Operator)
	']'	reduce using rule 93 (Operator)
	'}'	reduce using rule 93 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 93 (Operator)
	OP07_STRING_REPEAT	reduce using rule 93 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 93 (Operator)
	OP08_STRING_CAT	reduce using rule 93 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 93 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 93 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 93 (Operator)
	OP13_BITWISE_AND	reduce using rule 93 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 93 (Operator)
	OP15_LOGICAL_AND	reduce using rule 93 (Operator)
	OP16_LOGICAL_OR	reduce using rule 93 (Operator)
	OP17_LIST_RANGE	reduce using rule 93 (Operator)
	OP18_TERNARY	reduce using rule 93 (Operator)
	OP21_LIST_COMMA	reduce using rule 93 (Operator)
	OP23_LOGICAL_AND	reduce using rule 93 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 93 (Operator)

State 277:

	Expression -> WORD_UPPERCASE LPAREN ')' .	(Rule 130)

	$default	reduce using rule 130 (Expression)

State 278:

	STAR-44 -> STAR-44 VariableRetrieval .	(Rule 169)

	$default	reduce using rule 169 (STAR-44)

State 279:

	VariableRetrieval -> OP02_ARRAY_THINARROW . SubExpression ']'	(Rule 172)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	ArrayDereference	go to state 103
	Operator	go to state 123
	WordScoped	go to state 87
	ArrayReference	go to state 112
	HashDereference	go to state 100
	Expression	go to state 154
	HashReference	go to state 84
	Literal	go to state 108
	SubExpression	go to state 322
	Variable	go to state 153
	VariableSymbolOrSelf	go to state 115

State 280:

	VariableRetrieval -> OP02_HASH_THINARROW . SubExpression '}'	(Rule 173)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 174)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 323
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	VariableSymbolOrSelf	go to state 115
	Variable	go to state 153
	SubExpression	go to state 324
	Literal	go to state 108
	Expression	go to state 154
	HashDereference	go to state 100
	HashReference	go to state 84
	Operator	go to state 123
	ArrayDereference	go to state 103
	ArrayReference	go to state 112
	WordScoped	go to state 87

State 281:

	Operator -> OP01_OPEN MY TYPE_FHREF . FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 85)

	FHREF_SYMBOL	shift, and go to state 325

State 282:

	ArrayDereference -> '@{' Variable '}' .	(Rule 194)

	$default	reduce using rule 194 (ArrayDereference)

State 283:

	ArrayDereference -> '@{' OPTIONAL-49 ArrayReference . '}'	(Rule 195)

	'}'	shift, and go to state 326

State 284:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ';'	(Rule 121)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 161
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP01_QW	shift, and go to state 159
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	Variable	go to state 153
	SubExpression	go to state 158
	Literal	go to state 108
	VariableSymbolOrSelf	go to state 115
	ListElements	go to state 327
	ArrayReference	go to state 112
	WordScoped	go to state 87
	TypeInner	go to state 160
	Operator	go to state 123
	ArrayDereference	go to state 103
	HashReference	go to state 84
	ListElement	go to state 156
	Expression	go to state 154
	HashDereference	go to state 100

State 285:

	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL . ';'	(Rule 177)

	';'	shift, and go to state 328

State 286:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL . ';'	(Rule 175)
	VariableDeclaration -> MY Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 176)

	';'	shift, and go to state 329
	OP19_VARIABLE_ASSIGN	shift, and go to state 330

State 287:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements . ';'	(Rule 117)

	';'	shift, and go to state 331

State 288:

	OperatorVoid -> OP01_PRINT OPTIONAL-33 ListElements . ';'	(Rule 116)

	';'	shift, and go to state 332

State 289:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 123)

	$default	reduce using rule 123 (OperatorVoid)

State 290:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES . ListElements ')'	(Rule 82)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 161
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP01_QW	shift, and go to state 159
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	Operator	go to state 123
	ArrayDereference	go to state 103
	ArrayReference	go to state 112
	TypeInner	go to state 160
	WordScoped	go to state 87
	Expression	go to state 154
	ListElement	go to state 156
	HashDereference	go to state 100
	HashReference	go to state 84
	Variable	go to state 153
	SubExpression	go to state 158
	Literal	go to state 108
	VariableSymbolOrSelf	go to state 115
	ListElements	go to state 333

State 291:

	Operator -> LPAREN OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ')'	(Rule 84)

	OP21_LIST_COMMA	shift, and go to state 334

State 292:

	SubExpression -> LPAREN SubExpression ')' .	(Rule 142)

	$default	reduce using rule 142 (SubExpression)

State 293:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL . STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 54)

	$default	reduce using rule 53 (STAR-21)

	STAR-21	go to state 335

State 294:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 STAR-19 '}' . ';'	(Rule 50)

	';'	shift, and go to state 336

State 295:

	STAR-19 -> STAR-19 Operation .	(Rule 48)

	$default	reduce using rule 48 (STAR-19)

State 296:

	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE . OP19_VARIABLE_ASSIGN	(Rule 218)

	OP19_VARIABLE_ASSIGN	shift, and go to state 337

State 297:

	STAR-25 -> STAR-25 . MethodOrSubroutine	(Rule 61)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 STAR-23 STAR-24 Properties STAR-25 . LITERAL_NUMBER ';'	(Rule 63)

	'our'	shift, and go to state 341
	LITERAL_NUMBER	shift, and go to state 340

	Method	go to state 338
	MethodOrSubroutine	go to state 339
	Subroutine	go to state 342

State 298:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN . LBRACE HashEntryTyped STAR-27 '}' ';'	(Rule 67)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN . LBRACE '}' ';'	(Rule 68)

	LBRACE	shift, and go to state 343

State 299:

	HashReference -> LBRACE HashEntry STAR-52 '}' .	(Rule 205)

	$default	reduce using rule 205 (HashReference)

State 300:

	PAREN-51 -> OP21_LIST_COMMA . HashEntry	(Rule 202)

	'%{'	shift, and go to state 96
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 142

	Literal	go to state 144
	Variable	go to state 140
	HashEntry	go to state 344
	HashDereference	go to state 146
	VariableOrLiteralOrWord	go to state 143
	VariableSymbolOrSelf	go to state 115

State 301:

	STAR-52 -> STAR-52 PAREN-51 .	(Rule 203)

	$default	reduce using rule 203 (STAR-52)

State 302:

	HashEntry -> VariableOrLiteralOrWord OP20_HASH_FATARROW OPTIONAL-50 . SubExpression	(Rule 198)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	SubExpression	go to state 345
	Literal	go to state 108
	Variable	go to state 153
	VariableSymbolOrSelf	go to state 115
	WordScoped	go to state 87
	ArrayReference	go to state 112
	ArrayDereference	go to state 103
	Operator	go to state 123
	HashReference	go to state 84
	HashDereference	go to state 100
	Expression	go to state 154

State 303:

	OPTIONAL-50 -> TypeInner .	(Rule 196)

	$default	reduce using rule 196 (OPTIONAL-50)

State 304:

	Expression -> WordScoped SCOPE WORD_UPPERCASE LPAREN . ')'	(Rule 131)

	')'	shift, and go to state 346

State 305:

	Expression -> WordScoped LPAREN OPTIONAL-35 ')' .	(Rule 129)

	$default	reduce using rule 129 (Expression)

State 306:

	PAREN-45 -> OP21_LIST_COMMA . ListElement	(Rule 180)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 161
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP01_QW	shift, and go to state 159
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	Variable	go to state 153
	Literal	go to state 108
	SubExpression	go to state 158
	VariableSymbolOrSelf	go to state 115
	Operator	go to state 123
	ArrayDereference	go to state 103
	ArrayReference	go to state 112
	TypeInner	go to state 160
	WordScoped	go to state 87
	Expression	go to state 154
	ListElement	go to state 347
	HashDereference	go to state 100
	HashReference	go to state 84

State 307:

	STAR-46 -> STAR-46 PAREN-45 .	(Rule 181)

	$default	reduce using rule 181 (STAR-46)

State 308:

	ListElement -> OP01_QW PLUS-47 ')' .	(Rule 188)

	$default	reduce using rule 188 (ListElement)

State 309:

	PLUS-47 -> PLUS-47 WORD .	(Rule 184)

	$default	reduce using rule 184 (PLUS-47)

State 310:

	TypeInner -> MY Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 217)

	WORD	shift, and go to state 348

State 311:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 178)

	$default	reduce using rule 178 (VariableModification)

State 312:

	OPTIONAL-36 -> ListElements .	(Rule 126)

	$default	reduce using rule 126 (OPTIONAL-36)

State 313:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-36 . ')'	(Rule 132)

	')'	shift, and go to state 349

State 314:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';' .	(Rule 179)

	$default	reduce using rule 179 (VariableModification)

State 315:

	HashDereference -> '%{' OPTIONAL-53 HashReference '}' .	(Rule 210)

	$default	reduce using rule 210 (HashDereference)

State 316:

	LoopFor -> 'for' MY TYPE_INTEGER . VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 163)

	VARIABLE_SYMBOL	shift, and go to state 350

State 317:

	LoopForEach -> 'foreach' MY Type . VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 164)

	VARIABLE_SYMBOL	shift, and go to state 351

State 318:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	LoopWhile -> 'while' LPAREN SubExpression . ')' CodeBlock	(Rule 165)

	')'	shift, and go to state 352
	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191
	OP09_BITWISE_SHIFT	shift, and go to state 196
	OP11_COMPARE_LT_GT	shift, and go to state 189
	OP12_COMPARE_EQ_NE	shift, and go to state 195
	OP13_BITWISE_AND	shift, and go to state 188
	OP14_BITWISE_OR_XOR	shift, and go to state 199
	OP15_LOGICAL_AND	shift, and go to state 184
	OP16_LOGICAL_OR	shift, and go to state 185
	OP17_LIST_RANGE	shift, and go to state 198
	OP18_TERNARY	shift, and go to state 197
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 192

State 319:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-34 ')' ';' .	(Rule 119)

	$default	reduce using rule 119 (OperatorVoid)

State 320:

	Conditional -> 'if' LPAREN SubExpression ')' . CodeBlock STAR-40 OPTIONAL-42	(Rule 159)

	LBRACE	shift, and go to state 353

	CodeBlock	go to state 354

State 321:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON . VariableOrLiteral	(Rule 107)

	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109

	VariableSymbolOrSelf	go to state 115
	Variable	go to state 271
	VariableOrLiteral	go to state 355
	Literal	go to state 273

State 322:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression . ']'	(Rule 172)

	']'	shift, and go to state 356
	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191
	OP09_BITWISE_SHIFT	shift, and go to state 196
	OP11_COMPARE_LT_GT	shift, and go to state 189
	OP12_COMPARE_EQ_NE	shift, and go to state 195
	OP13_BITWISE_AND	shift, and go to state 188
	OP14_BITWISE_OR_XOR	shift, and go to state 199
	OP15_LOGICAL_AND	shift, and go to state 184
	OP16_LOGICAL_OR	shift, and go to state 185
	OP17_LIST_RANGE	shift, and go to state 198
	OP18_TERNARY	shift, and go to state 197
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 192

State 323:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 174)
	WordScoped -> WORD .	(Rule 211)

	'}'	shift, and go to state 357

	LPAREN	reduce using rule 211 (WordScoped)
	OP02_METHOD_THINARROW_NEW	reduce using rule 211 (WordScoped)
	SCOPE	reduce using rule 211 (WordScoped)

State 324:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	VariableRetrieval -> OP02_HASH_THINARROW SubExpression . '}'	(Rule 173)

	'}'	shift, and go to state 358
	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191
	OP09_BITWISE_SHIFT	shift, and go to state 196
	OP11_COMPARE_LT_GT	shift, and go to state 189
	OP12_COMPARE_EQ_NE	shift, and go to state 195
	OP13_BITWISE_AND	shift, and go to state 188
	OP14_BITWISE_OR_XOR	shift, and go to state 199
	OP15_LOGICAL_AND	shift, and go to state 184
	OP16_LOGICAL_OR	shift, and go to state 185
	OP17_LIST_RANGE	shift, and go to state 198
	OP18_TERNARY	shift, and go to state 197
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 192

State 325:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL . OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 85)

	OP21_LIST_COMMA	shift, and go to state 359

State 326:

	ArrayDereference -> '@{' OPTIONAL-49 ArrayReference '}' .	(Rule 195)

	$default	reduce using rule 195 (ArrayDereference)

State 327:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ';'	(Rule 121)

	';'	shift, and go to state 360

State 328:

	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL ';' .	(Rule 177)

	$default	reduce using rule 177 (VariableDeclaration)

State 329:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL ';' .	(Rule 175)

	$default	reduce using rule 175 (VariableDeclaration)

State 330:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 176)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	STDIN	shift, and go to state 245
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	SubExpressionOrStdin	go to state 361
	Literal	go to state 108
	SubExpression	go to state 246
	Variable	go to state 153
	VariableSymbolOrSelf	go to state 115
	WordScoped	go to state 87
	ArrayReference	go to state 112
	ArrayDereference	go to state 103
	Operator	go to state 123
	HashReference	go to state 84
	HashDereference	go to state 100
	Expression	go to state 154

State 331:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements ';' .	(Rule 117)

	$default	reduce using rule 117 (OperatorVoid)

State 332:

	OperatorVoid -> OP01_PRINT OPTIONAL-33 ListElements ';' .	(Rule 116)

	$default	reduce using rule 116 (OperatorVoid)

State 333:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements . ')'	(Rule 82)

	')'	shift, and go to state 362

State 334:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ')'	(Rule 84)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 161
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP01_QW	shift, and go to state 159
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	Variable	go to state 153
	Literal	go to state 108
	SubExpression	go to state 158
	VariableSymbolOrSelf	go to state 115
	ListElements	go to state 363
	ArrayReference	go to state 112
	TypeInner	go to state 160
	WordScoped	go to state 87
	Operator	go to state 123
	ArrayDereference	go to state 103
	HashReference	go to state 84
	ListElement	go to state 156
	Expression	go to state 154
	HashDereference	go to state 100

State 335:

	STAR-21 -> STAR-21 . PAREN-20	(Rule 52)
	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-21 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 54)

	')'	shift, and go to state 366
	OP21_LIST_COMMA	shift, and go to state 365

	PAREN-20	go to state 364

State 336:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 STAR-19 '}' ';' .	(Rule 50)

	$default	reduce using rule 50 (Subroutine)

State 337:

	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN .	(Rule 218)

	$default	reduce using rule 218 (TypeInnerConstant)

State 338:

	MethodOrSubroutine -> Method .	(Rule 78)

	$default	reduce using rule 78 (MethodOrSubroutine)

State 339:

	STAR-25 -> STAR-25 MethodOrSubroutine .	(Rule 61)

	$default	reduce using rule 61 (STAR-25)

State 340:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER . ';'	(Rule 63)

	';'	shift, and go to state 367

State 341:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 STAR-19 '}' ';'	(Rule 50)
	Method -> 'our' . TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-28 STAR-29 '}' ';'	(Rule 73)

	TYPE_INTEGER	shift, and go to state 57
	TYPE_METHOD	shift, and go to state 368
	WORD	shift, and go to state 55
	WORD_SCOPED	shift, and go to state 56

	Type	go to state 54

State 342:

	MethodOrSubroutine -> Subroutine .	(Rule 79)

	$default	reduce using rule 79 (MethodOrSubroutine)

State 343:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE . HashEntryTyped STAR-27 '}' ';'	(Rule 67)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE . '}' ';'	(Rule 68)

	'%{'	shift, and go to state 96
	'}'	shift, and go to state 371
	WORD	shift, and go to state 369

	HashDereference	go to state 372
	HashEntryTyped	go to state 370

State 344:

	PAREN-51 -> OP21_LIST_COMMA HashEntry .	(Rule 202)

	$default	reduce using rule 202 (PAREN-51)

State 345:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	HashEntry -> VariableOrLiteralOrWord OP20_HASH_FATARROW OPTIONAL-50 SubExpression .	(Rule 198)

	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191
	OP09_BITWISE_SHIFT	shift, and go to state 196
	OP11_COMPARE_LT_GT	shift, and go to state 189
	OP12_COMPARE_EQ_NE	shift, and go to state 195
	OP13_BITWISE_AND	shift, and go to state 188
	OP14_BITWISE_OR_XOR	shift, and go to state 199
	OP15_LOGICAL_AND	shift, and go to state 184
	OP16_LOGICAL_OR	shift, and go to state 185
	OP17_LIST_RANGE	shift, and go to state 198
	OP18_TERNARY	shift, and go to state 197
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 192

	'}'	reduce using rule 198 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 198 (HashEntry)

State 346:

	Expression -> WordScoped SCOPE WORD_UPPERCASE LPAREN ')' .	(Rule 131)

	$default	reduce using rule 131 (Expression)

State 347:

	PAREN-45 -> OP21_LIST_COMMA ListElement .	(Rule 180)

	$default	reduce using rule 180 (PAREN-45)

State 348:

	TypeInner -> MY Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 217)

	OP19_VARIABLE_ASSIGN	shift, and go to state 373

State 349:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-36 ')' .	(Rule 132)

	$default	reduce using rule 132 (Expression)

State 350:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL . LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 163)

	LPAREN	shift, and go to state 374

State 351:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL . LPAREN ListElements ')' CodeBlock	(Rule 164)

	LPAREN	shift, and go to state 375

State 352:

	LoopWhile -> 'while' LPAREN SubExpression ')' . CodeBlock	(Rule 165)

	LBRACE	shift, and go to state 353

	CodeBlock	go to state 376

State 353:

	CodeBlock -> LBRACE . PLUS-43 '}'	(Rule 168)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'if'	shift, and go to state 105
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 124
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 122
	OP01_NAMED_VOID	shift, and go to state 91
	OP01_NAMED_VOID_LPAREN	shift, and go to state 98
	OP01_NAMED_VOID_SCOLON	shift, and go to state 125
	OP01_OPEN	shift, and go to state 116
	OP01_PRINT	shift, and go to state 126
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP19_LOOP_CONTROL	shift, and go to state 129
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 85
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 111

	'for'	reduce using rule 147 (OPTIONAL-38)
	'foreach'	reduce using rule 147 (OPTIONAL-38)
	'while'	reduce using rule 147 (OPTIONAL-38)

	PLUS-43	go to state 377
	Literal	go to state 108
	SubExpression	go to state 107
	OPTIONAL-38	go to state 97
	VariableDeclaration	go to state 121
	Conditional	go to state 119
	HashDereference	go to state 100
	Statement	go to state 101
	ArrayDereference	go to state 103
	Operator	go to state 123
	VariableSymbolOrSelf	go to state 115
	VariableModification	go to state 117
	Operation	go to state 378
	LoopLabel	go to state 93
	Variable	go to state 95
	HashReference	go to state 84
	Expression	go to state 86
	PAREN-37	go to state 110
	WordScoped	go to state 87
	OperatorVoid	go to state 113
	ArrayReference	go to state 112

State 354:

	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock . STAR-40 OPTIONAL-42	(Rule 159)

	$default	reduce using rule 155 (STAR-40)

	STAR-40	go to state 379

State 355:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral .	(Rule 107)

	$default	reduce using rule 107 (Operator)

State 356:

	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']' .	(Rule 172)

	$default	reduce using rule 172 (VariableRetrieval)

State 357:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 174)

	$default	reduce using rule 174 (VariableRetrieval)

State 358:

	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}' .	(Rule 173)

	$default	reduce using rule 173 (VariableRetrieval)

State 359:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA . LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 85)

	LITERAL_STRING	shift, and go to state 380

State 360:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';' .	(Rule 121)

	$default	reduce using rule 121 (OperatorVoid)

State 361:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 176)

	';'	shift, and go to state 381

State 362:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')' .	(Rule 82)

	$default	reduce using rule 82 (Operator)

State 363:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ')'	(Rule 84)

	')'	shift, and go to state 382

State 364:

	STAR-21 -> STAR-21 PAREN-20 .	(Rule 52)

	$default	reduce using rule 52 (STAR-21)

State 365:

	PAREN-20 -> OP21_LIST_COMMA . MY Type VARIABLE_SYMBOL	(Rule 51)

	MY	shift, and go to state 383

State 366:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-21 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 54)

	OP19_VARIABLE_ASSIGN	shift, and go to state 384

State 367:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-22 STAR-23 STAR-24 Properties STAR-25 LITERAL_NUMBER ';' .	(Rule 63)

	$default	reduce using rule 63 (Class)

State 368:

	Method -> 'our' TYPE_METHOD . VARIABLE_SYMBOL '= sub {' OPTIONAL-28 STAR-29 '}' ';'	(Rule 73)

	VARIABLE_SYMBOL	shift, and go to state 385

State 369:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner SubExpression	(Rule 200)

	OP20_HASH_FATARROW	shift, and go to state 386

State 370:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped . STAR-27 '}' ';'	(Rule 67)

	$default	reduce using rule 66 (STAR-27)

	STAR-27	go to state 387

State 371:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' . ';'	(Rule 68)

	';'	shift, and go to state 388

State 372:

	HashEntryTyped -> HashDereference .	(Rule 201)

	$default	reduce using rule 201 (HashEntryTyped)

State 373:

	TypeInner -> MY Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 217)

	$default	reduce using rule 217 (TypeInner)

State 374:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN . SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 163)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	HashReference	go to state 84
	Expression	go to state 154
	HashDereference	go to state 100
	ArrayReference	go to state 112
	WordScoped	go to state 87
	Operator	go to state 123
	ArrayDereference	go to state 103
	VariableSymbolOrSelf	go to state 115
	Variable	go to state 153
	SubExpression	go to state 389
	Literal	go to state 108

State 375:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN . ListElements ')' CodeBlock	(Rule 164)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 161
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP01_QW	shift, and go to state 159
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	Variable	go to state 153
	Literal	go to state 108
	SubExpression	go to state 158
	VariableSymbolOrSelf	go to state 115
	ListElements	go to state 390
	ArrayReference	go to state 112
	WordScoped	go to state 87
	TypeInner	go to state 160
	Operator	go to state 123
	ArrayDereference	go to state 103
	HashReference	go to state 84
	ListElement	go to state 156
	Expression	go to state 154
	HashDereference	go to state 100

State 376:

	LoopWhile -> 'while' LPAREN SubExpression ')' CodeBlock .	(Rule 165)

	$default	reduce using rule 165 (LoopWhile)

State 377:

	PLUS-43 -> PLUS-43 . Operation	(Rule 166)
	CodeBlock -> LBRACE PLUS-43 . '}'	(Rule 168)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'if'	shift, and go to state 105
	'undef'	shift, and go to state 106
	'}'	shift, and go to state 391
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 124
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 122
	OP01_NAMED_VOID	shift, and go to state 91
	OP01_NAMED_VOID_LPAREN	shift, and go to state 98
	OP01_NAMED_VOID_SCOLON	shift, and go to state 125
	OP01_OPEN	shift, and go to state 116
	OP01_PRINT	shift, and go to state 126
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP19_LOOP_CONTROL	shift, and go to state 129
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 85
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 111

	'for'	reduce using rule 147 (OPTIONAL-38)
	'foreach'	reduce using rule 147 (OPTIONAL-38)
	'while'	reduce using rule 147 (OPTIONAL-38)

	VariableSymbolOrSelf	go to state 115
	Operation	go to state 392
	VariableModification	go to state 117
	LoopLabel	go to state 93
	Variable	go to state 95
	HashReference	go to state 84
	PAREN-37	go to state 110
	Expression	go to state 86
	ArrayReference	go to state 112
	WordScoped	go to state 87
	OperatorVoid	go to state 113
	SubExpression	go to state 107
	Literal	go to state 108
	Conditional	go to state 119
	VariableDeclaration	go to state 121
	OPTIONAL-38	go to state 97
	HashDereference	go to state 100
	Statement	go to state 101
	Operator	go to state 123
	ArrayDereference	go to state 103

State 378:

	PLUS-43 -> Operation .	(Rule 167)

	$default	reduce using rule 167 (PLUS-43)

State 379:

	STAR-40 -> STAR-40 . PAREN-39	(Rule 154)
	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-40 . OPTIONAL-42	(Rule 159)

	'else'	shift, and go to state 397
	'elsif'	shift, and go to state 393

	$end	reduce using rule 158 (OPTIONAL-42)
	'%{'	reduce using rule 158 (OPTIONAL-42)
	'@{'	reduce using rule 158 (OPTIONAL-42)
	'for'	reduce using rule 158 (OPTIONAL-42)
	'foreach'	reduce using rule 158 (OPTIONAL-42)
	'if'	reduce using rule 158 (OPTIONAL-42)
	'undef'	reduce using rule 158 (OPTIONAL-42)
	'while'	reduce using rule 158 (OPTIONAL-42)
	'}'	reduce using rule 158 (OPTIONAL-42)
	LBRACE	reduce using rule 158 (OPTIONAL-42)
	LBRACKET	reduce using rule 158 (OPTIONAL-42)
	LITERAL_NUMBER	reduce using rule 158 (OPTIONAL-42)
	LITERAL_STRING	reduce using rule 158 (OPTIONAL-42)
	LPAREN	reduce using rule 158 (OPTIONAL-42)
	MY	reduce using rule 158 (OPTIONAL-42)
	OP01_CLOSE	reduce using rule 158 (OPTIONAL-42)
	OP01_NAMED	reduce using rule 158 (OPTIONAL-42)
	OP01_NAMED_VOID	reduce using rule 158 (OPTIONAL-42)
	OP01_NAMED_VOID_LPAREN	reduce using rule 158 (OPTIONAL-42)
	OP01_NAMED_VOID_SCOLON	reduce using rule 158 (OPTIONAL-42)
	OP01_OPEN	reduce using rule 158 (OPTIONAL-42)
	OP01_PRINT	reduce using rule 158 (OPTIONAL-42)
	OP03_MATH_INC_DEC	reduce using rule 158 (OPTIONAL-42)
	OP05_LOGICAL_NEG	reduce using rule 158 (OPTIONAL-42)
	OP05_MATH_NEG_LPAREN	reduce using rule 158 (OPTIONAL-42)
	OP10_NAMED_UNARY	reduce using rule 158 (OPTIONAL-42)
	OP19_LOOP_CONTROL	reduce using rule 158 (OPTIONAL-42)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 158 (OPTIONAL-42)
	OP22_LOGICAL_NEG	reduce using rule 158 (OPTIONAL-42)
	SELF	reduce using rule 158 (OPTIONAL-42)
	VARIABLE_SYMBOL	reduce using rule 158 (OPTIONAL-42)
	WORD	reduce using rule 158 (OPTIONAL-42)
	WORD_SCOPED	reduce using rule 158 (OPTIONAL-42)
	WORD_UPPERCASE	reduce using rule 158 (OPTIONAL-42)

	PAREN-41	go to state 395
	OPTIONAL-42	go to state 396
	PAREN-39	go to state 394

State 380:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING . OP21_LIST_COMMA SubExpression	(Rule 85)

	OP21_LIST_COMMA	shift, and go to state 398

State 381:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 176)

	$default	reduce using rule 176 (VariableDeclaration)

State 382:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' .	(Rule 84)

	$default	reduce using rule 84 (Operator)

State 383:

	PAREN-20 -> OP21_LIST_COMMA MY . Type VARIABLE_SYMBOL	(Rule 51)

	TYPE_INTEGER	shift, and go to state 57
	WORD	shift, and go to state 55
	WORD_SCOPED	shift, and go to state 56

	Type	go to state 399

State 384:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 54)

	'@_;'	shift, and go to state 400

State 385:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL . '= sub {' OPTIONAL-28 STAR-29 '}' ';'	(Rule 73)

	'= sub {'	shift, and go to state 401

State 386:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner SubExpression	(Rule 200)

	MY	shift, and go to state 161

	TypeInner	go to state 402

State 387:

	STAR-27 -> STAR-27 . PAREN-26	(Rule 65)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-27 . '}' ';'	(Rule 67)

	'}'	shift, and go to state 404
	OP21_LIST_COMMA	shift, and go to state 405

	PAREN-26	go to state 403

State 388:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';' .	(Rule 68)

	$default	reduce using rule 68 (Properties)

State 389:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression . OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 163)

	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191
	OP09_BITWISE_SHIFT	shift, and go to state 196
	OP11_COMPARE_LT_GT	shift, and go to state 189
	OP12_COMPARE_EQ_NE	shift, and go to state 195
	OP13_BITWISE_AND	shift, and go to state 188
	OP14_BITWISE_OR_XOR	shift, and go to state 199
	OP15_LOGICAL_AND	shift, and go to state 184
	OP16_LOGICAL_OR	shift, and go to state 185
	OP17_LIST_RANGE	shift, and go to state 406
	OP18_TERNARY	shift, and go to state 197
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 192

State 390:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements . ')' CodeBlock	(Rule 164)

	')'	shift, and go to state 407

State 391:

	CodeBlock -> LBRACE PLUS-43 '}' .	(Rule 168)

	$default	reduce using rule 168 (CodeBlock)

State 392:

	PLUS-43 -> PLUS-43 Operation .	(Rule 166)

	$default	reduce using rule 166 (PLUS-43)

State 393:

	PAREN-39 -> 'elsif' . LPAREN SubExpression ')' CodeBlock	(Rule 153)

	LPAREN	shift, and go to state 408

State 394:

	STAR-40 -> STAR-40 PAREN-39 .	(Rule 154)

	$default	reduce using rule 154 (STAR-40)

State 395:

	OPTIONAL-42 -> PAREN-41 .	(Rule 157)

	$default	reduce using rule 157 (OPTIONAL-42)

State 396:

	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-40 OPTIONAL-42 .	(Rule 159)

	$default	reduce using rule 159 (Conditional)

State 397:

	PAREN-41 -> 'else' . CodeBlock	(Rule 156)

	LBRACE	shift, and go to state 353

	CodeBlock	go to state 409

State 398:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA . SubExpression	(Rule 85)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	WordScoped	go to state 87
	ArrayReference	go to state 112
	ArrayDereference	go to state 103
	Operator	go to state 123
	HashReference	go to state 84
	HashDereference	go to state 100
	Expression	go to state 154
	SubExpression	go to state 410
	Literal	go to state 108
	Variable	go to state 153
	VariableSymbolOrSelf	go to state 115

State 399:

	PAREN-20 -> OP21_LIST_COMMA MY Type . VARIABLE_SYMBOL	(Rule 51)

	VARIABLE_SYMBOL	shift, and go to state 411

State 400:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 54)

	$default	reduce using rule 54 (SubroutineArguments)

State 401:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' . OPTIONAL-28 STAR-29 '}' ';'	(Rule 73)

	LPAREN_MY	shift, and go to state 412

	'%{'	reduce using rule 70 (OPTIONAL-28)
	'@{'	reduce using rule 70 (OPTIONAL-28)
	'for'	reduce using rule 70 (OPTIONAL-28)
	'foreach'	reduce using rule 70 (OPTIONAL-28)
	'if'	reduce using rule 70 (OPTIONAL-28)
	'undef'	reduce using rule 70 (OPTIONAL-28)
	'while'	reduce using rule 70 (OPTIONAL-28)
	'}'	reduce using rule 70 (OPTIONAL-28)
	LBRACE	reduce using rule 70 (OPTIONAL-28)
	LBRACKET	reduce using rule 70 (OPTIONAL-28)
	LITERAL_NUMBER	reduce using rule 70 (OPTIONAL-28)
	LITERAL_STRING	reduce using rule 70 (OPTIONAL-28)
	LPAREN	reduce using rule 70 (OPTIONAL-28)
	MY	reduce using rule 70 (OPTIONAL-28)
	OP01_CLOSE	reduce using rule 70 (OPTIONAL-28)
	OP01_NAMED	reduce using rule 70 (OPTIONAL-28)
	OP01_NAMED_VOID	reduce using rule 70 (OPTIONAL-28)
	OP01_NAMED_VOID_LPAREN	reduce using rule 70 (OPTIONAL-28)
	OP01_NAMED_VOID_SCOLON	reduce using rule 70 (OPTIONAL-28)
	OP01_OPEN	reduce using rule 70 (OPTIONAL-28)
	OP01_PRINT	reduce using rule 70 (OPTIONAL-28)
	OP03_MATH_INC_DEC	reduce using rule 70 (OPTIONAL-28)
	OP05_LOGICAL_NEG	reduce using rule 70 (OPTIONAL-28)
	OP05_MATH_NEG_LPAREN	reduce using rule 70 (OPTIONAL-28)
	OP10_NAMED_UNARY	reduce using rule 70 (OPTIONAL-28)
	OP19_LOOP_CONTROL	reduce using rule 70 (OPTIONAL-28)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 70 (OPTIONAL-28)
	OP22_LOGICAL_NEG	reduce using rule 70 (OPTIONAL-28)
	SELF	reduce using rule 70 (OPTIONAL-28)
	VARIABLE_SYMBOL	reduce using rule 70 (OPTIONAL-28)
	WORD	reduce using rule 70 (OPTIONAL-28)
	WORD_SCOPED	reduce using rule 70 (OPTIONAL-28)
	WORD_UPPERCASE	reduce using rule 70 (OPTIONAL-28)

	OPTIONAL-28	go to state 413
	MethodArguments	go to state 414

State 402:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . SubExpression	(Rule 200)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	ArrayDereference	go to state 103
	Operator	go to state 123
	WordScoped	go to state 87
	ArrayReference	go to state 112
	HashDereference	go to state 100
	Expression	go to state 154
	HashReference	go to state 84
	Literal	go to state 108
	SubExpression	go to state 415
	Variable	go to state 153
	VariableSymbolOrSelf	go to state 115

State 403:

	STAR-27 -> STAR-27 PAREN-26 .	(Rule 65)

	$default	reduce using rule 65 (STAR-27)

State 404:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-27 '}' . ';'	(Rule 67)

	';'	shift, and go to state 416

State 405:

	PAREN-26 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 64)

	'%{'	shift, and go to state 96
	WORD	shift, and go to state 369

	HashEntryTyped	go to state 417
	HashDereference	go to state 372

State 406:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 106)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE . SubExpression ')' CodeBlock	(Rule 163)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	Variable	go to state 153
	SubExpression	go to state 418
	Literal	go to state 108
	VariableSymbolOrSelf	go to state 115
	ArrayReference	go to state 112
	WordScoped	go to state 87
	Operator	go to state 123
	ArrayDereference	go to state 103
	HashReference	go to state 84
	Expression	go to state 154
	HashDereference	go to state 100

State 407:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' . CodeBlock	(Rule 164)

	LBRACE	shift, and go to state 353

	CodeBlock	go to state 419

State 408:

	PAREN-39 -> 'elsif' LPAREN . SubExpression ')' CodeBlock	(Rule 153)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'undef'	shift, and go to state 106
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 152
	OP01_OPEN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 151

	WordScoped	go to state 87
	ArrayReference	go to state 112
	ArrayDereference	go to state 103
	Operator	go to state 123
	HashReference	go to state 84
	HashDereference	go to state 100
	Expression	go to state 154
	Literal	go to state 108
	SubExpression	go to state 420
	Variable	go to state 153
	VariableSymbolOrSelf	go to state 115

State 409:

	PAREN-41 -> 'else' CodeBlock .	(Rule 156)

	$default	reduce using rule 156 (PAREN-41)

State 410:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression .	(Rule 85)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191
	OP09_BITWISE_SHIFT	shift, and go to state 196
	OP11_COMPARE_LT_GT	shift, and go to state 189
	OP12_COMPARE_EQ_NE	shift, and go to state 195
	OP13_BITWISE_AND	shift, and go to state 188
	OP14_BITWISE_OR_XOR	shift, and go to state 199
	OP15_LOGICAL_AND	shift, and go to state 184
	OP16_LOGICAL_OR	shift, and go to state 185
	OP17_LIST_RANGE	shift, and go to state 198
	OP18_TERNARY	shift, and go to state 197

	')'	reduce using rule 85 (Operator)
	';'	reduce using rule 85 (Operator)
	']'	reduce using rule 85 (Operator)
	'}'	reduce using rule 85 (Operator)
	OP21_LIST_COMMA	reduce using rule 85 (Operator)
	OP23_LOGICAL_AND	reduce using rule 85 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 85 (Operator)

State 411:

	PAREN-20 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL .	(Rule 51)

	$default	reduce using rule 51 (PAREN-20)

State 412:

	MethodArguments -> LPAREN_MY . Type SELF STAR-31 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 77)

	TYPE_INTEGER	shift, and go to state 57
	WORD	shift, and go to state 55
	WORD_SCOPED	shift, and go to state 56

	Type	go to state 421

State 413:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-28 . STAR-29 '}' ';'	(Rule 73)

	$default	reduce using rule 72 (STAR-29)

	STAR-29	go to state 422

State 414:

	OPTIONAL-28 -> MethodArguments .	(Rule 69)

	$default	reduce using rule 69 (OPTIONAL-28)

State 415:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression .	(Rule 200)

	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191
	OP09_BITWISE_SHIFT	shift, and go to state 196
	OP11_COMPARE_LT_GT	shift, and go to state 189
	OP12_COMPARE_EQ_NE	shift, and go to state 195
	OP13_BITWISE_AND	shift, and go to state 188
	OP14_BITWISE_OR_XOR	shift, and go to state 199
	OP15_LOGICAL_AND	shift, and go to state 184
	OP16_LOGICAL_OR	shift, and go to state 185
	OP17_LIST_RANGE	shift, and go to state 198
	OP18_TERNARY	shift, and go to state 197
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 192

	'}'	reduce using rule 200 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 200 (HashEntryTyped)

State 416:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-27 '}' ';' .	(Rule 67)

	$default	reduce using rule 67 (Properties)

State 417:

	PAREN-26 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 64)

	$default	reduce using rule 64 (PAREN-26)

State 418:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression . ')' CodeBlock	(Rule 163)

	')'	shift, and go to state 423
	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191
	OP09_BITWISE_SHIFT	shift, and go to state 196
	OP11_COMPARE_LT_GT	shift, and go to state 189
	OP12_COMPARE_EQ_NE	shift, and go to state 195
	OP13_BITWISE_AND	shift, and go to state 188
	OP14_BITWISE_OR_XOR	shift, and go to state 199
	OP15_LOGICAL_AND	shift, and go to state 184
	OP16_LOGICAL_OR	shift, and go to state 185

	OP17_LIST_RANGE	error (nonassociative)

	OP18_TERNARY	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 419:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock .	(Rule 164)

	$default	reduce using rule 164 (LoopForEach)

State 420:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 89)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 92)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	PAREN-39 -> 'elsif' LPAREN SubExpression . ')' CodeBlock	(Rule 153)

	')'	shift, and go to state 424
	OP04_MATH_POW	shift, and go to state 194
	OP06_REGEX_MATCH	shift, and go to state 187
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 193
	OP07_STRING_REPEAT	shift, and go to state 200
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 191
	OP09_BITWISE_SHIFT	shift, and go to state 196
	OP11_COMPARE_LT_GT	shift, and go to state 189
	OP12_COMPARE_EQ_NE	shift, and go to state 195
	OP13_BITWISE_AND	shift, and go to state 188
	OP14_BITWISE_OR_XOR	shift, and go to state 199
	OP15_LOGICAL_AND	shift, and go to state 184
	OP16_LOGICAL_OR	shift, and go to state 185
	OP17_LIST_RANGE	shift, and go to state 198
	OP18_TERNARY	shift, and go to state 197
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 192

State 421:

	MethodArguments -> LPAREN_MY Type . SELF STAR-31 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 77)

	SELF	shift, and go to state 425

State 422:

	STAR-29 -> STAR-29 . Operation	(Rule 71)
	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-28 STAR-29 . '}' ';'	(Rule 73)

	'%{'	shift, and go to state 96
	'@{'	shift, and go to state 120
	'if'	shift, and go to state 105
	'undef'	shift, and go to state 106
	'}'	shift, and go to state 427
	LBRACE	shift, and go to state 83
	LBRACKET	shift, and go to state 92
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 127
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 124
	OP01_CLOSE	shift, and go to state 118
	OP01_NAMED	shift, and go to state 122
	OP01_NAMED_VOID	shift, and go to state 91
	OP01_NAMED_VOID_LPAREN	shift, and go to state 98
	OP01_NAMED_VOID_SCOLON	shift, and go to state 125
	OP01_OPEN	shift, and go to state 116
	OP01_PRINT	shift, and go to state 126
	OP03_MATH_INC_DEC	shift, and go to state 128
	OP05_LOGICAL_NEG	shift, and go to state 131
	OP05_MATH_NEG_LPAREN	shift, and go to state 102
	OP10_NAMED_UNARY	shift, and go to state 88
	OP19_LOOP_CONTROL	shift, and go to state 129
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 85
	OP22_LOGICAL_NEG	shift, and go to state 114
	SELF	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 109
	WORD	shift, and go to state 31
	WORD_SCOPED	shift, and go to state 29
	WORD_UPPERCASE	shift, and go to state 111

	'for'	reduce using rule 147 (OPTIONAL-38)
	'foreach'	reduce using rule 147 (OPTIONAL-38)
	'while'	reduce using rule 147 (OPTIONAL-38)

	VariableDeclaration	go to state 121
	Conditional	go to state 119
	OPTIONAL-38	go to state 97
	HashDereference	go to state 100
	Statement	go to state 101
	ArrayDereference	go to state 103
	Operator	go to state 123
	Literal	go to state 108
	SubExpression	go to state 107
	HashReference	go to state 84
	Expression	go to state 86
	PAREN-37	go to state 110
	OperatorVoid	go to state 113
	WordScoped	go to state 87
	ArrayReference	go to state 112
	VariableSymbolOrSelf	go to state 115
	VariableModification	go to state 117
	Operation	go to state 426
	LoopLabel	go to state 93
	Variable	go to state 95

State 423:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' . CodeBlock	(Rule 163)

	LBRACE	shift, and go to state 353

	CodeBlock	go to state 428

State 424:

	PAREN-39 -> 'elsif' LPAREN SubExpression ')' . CodeBlock	(Rule 153)

	LBRACE	shift, and go to state 353

	CodeBlock	go to state 429

State 425:

	MethodArguments -> LPAREN_MY Type SELF . STAR-31 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 77)

	$default	reduce using rule 76 (STAR-31)

	STAR-31	go to state 430

State 426:

	STAR-29 -> STAR-29 Operation .	(Rule 71)

	$default	reduce using rule 71 (STAR-29)

State 427:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-28 STAR-29 '}' . ';'	(Rule 73)

	';'	shift, and go to state 431

State 428:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock .	(Rule 163)

	$default	reduce using rule 163 (LoopFor)

State 429:

	PAREN-39 -> 'elsif' LPAREN SubExpression ')' CodeBlock .	(Rule 153)

	$default	reduce using rule 153 (PAREN-39)

State 430:

	STAR-31 -> STAR-31 . PAREN-30	(Rule 75)
	MethodArguments -> LPAREN_MY Type SELF STAR-31 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 77)

	')'	shift, and go to state 433
	OP21_LIST_COMMA	shift, and go to state 432

	PAREN-30	go to state 434

State 431:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-28 STAR-29 '}' ';' .	(Rule 73)

	$default	reduce using rule 73 (Method)

State 432:

	PAREN-30 -> OP21_LIST_COMMA . MY Type VARIABLE_SYMBOL	(Rule 74)

	MY	shift, and go to state 435

State 433:

	MethodArguments -> LPAREN_MY Type SELF STAR-31 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 77)

	OP19_VARIABLE_ASSIGN	shift, and go to state 436

State 434:

	STAR-31 -> STAR-31 PAREN-30 .	(Rule 75)

	$default	reduce using rule 75 (STAR-31)

State 435:

	PAREN-30 -> OP21_LIST_COMMA MY . Type VARIABLE_SYMBOL	(Rule 74)

	TYPE_INTEGER	shift, and go to state 57
	WORD	shift, and go to state 55
	WORD_SCOPED	shift, and go to state 56

	Type	go to state 437

State 436:

	MethodArguments -> LPAREN_MY Type SELF STAR-31 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 77)

	'@_;'	shift, and go to state 438

State 437:

	PAREN-30 -> OP21_LIST_COMMA MY Type . VARIABLE_SYMBOL	(Rule 74)

	VARIABLE_SYMBOL	shift, and go to state 439

State 438:

	MethodArguments -> LPAREN_MY Type SELF STAR-31 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 77)

	$default	reduce using rule 77 (MethodArguments)

State 439:

	PAREN-30 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL .	(Rule 74)

	$default	reduce using rule 74 (PAREN-30)


Summary:
--------
Number of rules         : 228
Number of terminals     : 92
Number of non-terminals : 104
Number of states        : 440
