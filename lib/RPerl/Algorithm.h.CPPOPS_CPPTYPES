// [[[ HEADER ]]]
using std::cout;  using std::cerr;  using std::endl;

#ifndef __CPP__INCLUDED__RPerl__Algorithm_h
#define __CPP__INCLUDED__RPerl__Algorithm_h 0.006_200

// [[[ INCLUDES & OO INHERITANCE INCLUDES ]]]
#include <RPerl.cpp>  // -> RPerl.h -> (rperltypes_mode.h; rperloperations.h; rperltypes.h; HelperFunctions.cpp)
#include <RPerl/CompileUnit/Module/Class.cpp>

# ifdef __PERL__TYPES

Purposefully_die_from_a_compile-time_error,_due_to____PERL__TYPES_being_defined.__We_need_to_define_only___CPP__TYPES_in_this_file!

# elif defined __CPP__TYPES

// [[[<<< BEGIN CPP TYPES >>>]]]
// [[[<<< BEGIN CPP TYPES >>>]]]
// [[[<<< BEGIN CPP TYPES >>>]]]

// [[[ OO INHERITANCE ]]]
class RPerl__Algorithm : public RPerl__CompileUnit__Module__Class__CPP {
public:
    // [[[ OO PROPERTIES ]]]
    string complexity;

    // [[[ OO METHODS ]]]

    // <<< OO PROPERTIES, ACCESSORS & MUTATORS >>>
    string get_complexity() { return this->complexity; }
    void set_complexity(string complexity_new) { this->complexity = complexity_new; }

    // <<< CONSTRUCTOR & DESTRUCTOR >>>
    RPerl__Algorithm() {}
    ~RPerl__Algorithm() {}

    // <<< CLASS NAME REPORTER >>>
    virtual string myclassname() { return (const string) "RPerl::Algorithm"; }

    // <<< USER-DEFINED METHODS >>>
    void inherited__Algorithm(string person);
    void inherited__Algorithm_complexity_modify(string complexity_new);
};  // end of class

// [[[ OO SUBCLASSES ]]]
#define RPerl__Algorithm_rawptr RPerl__Algorithm*
typedef std::unique_ptr<RPerl__Algorithm> RPerl__Algorithm_ptr;
typedef std::vector<RPerl__Algorithm_ptr> RPerl__Algorithm_arrayref;
typedef std::unordered_map<string, RPerl__Algorithm_ptr> RPerl__Algorithm_hashref;
typedef std::unordered_map<string, RPerl__Algorithm_ptr>::iterator RPerl__Algorithm_hashref_iterator;

// [[[ SUBROUTINES ]]]
string RPerl__Algorithm__uninherited__Algorithm(string person);

// <<< SHIM MACROS >>>
#define uninherited__Algorithm(person) RPerl__Algorithm__uninherited__Algorithm(person)

// <<< OPERATIONS & DATA TYPES REPORTER >>>
integer RPerl__Algorithm__MODE_ID() { return 2; }  // CPPOPS_CPPTYPES is 2

// [[[<<< END CPP TYPES >>>]]]
// [[[<<< END CPP TYPES >>>]]]
// [[[<<< END CPP TYPES >>>]]]

# else

Purposefully_die_from_a_compile-time_error,_due_to_neither___PERL__TYPES_nor___CPP__TYPES_being_defined.__We_need_to_define_only___CPP__TYPES_in_this_file!

# endif

#endif

// end of class
