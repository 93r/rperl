# DEV NOTE: all code originally in RPerl.pm, moved here when filter() added, now called in code generated by filter()

use RPerl::CompileUnit::Module::Class;

package RPerl::AfterFilter;
use strict;
use warnings;
our $VERSION = 0.001_000;
1;

package RPerl;
use strict;
use warnings;

# [[[ INCLUDES SPECIAL ]]]
require RPerl::Config;
#use RPerl::Config;

#BEGIN { use Data::Dumper; print 'in RPerl::AfterFilter, have @INC = ' . "\n" . Dumper(\@INC) . "\n"; }

#no magic;  # require data types, full declarations, other non-magic
# DEV NOTE, CORRELATION #08: circular dependency causes "subroutine FOO redefined" errors, solved by replacing use with require below
#use rperltypes;
require rperltypes;
#require rperloperations;
#require rperlrules;
require rperlnames;
#require rperlnamespaces;

# NEED ADD: use/require HelperFunctions*.pm here (not just in rperltypes.pm) to match dependency path of C++ code?

# [[[ CONSTANTS ]]]
#use constant TEST_CONSTANT => my string $TYPED_TEST_CONSTANT = 'Hello, world!';
use constant TEST_CONSTANT => 'Hello, world!';

1;